{
  "swagger": "2.0",
  "info": {
    "version": "0",
    "title": "Meraki Dashboard API",
    "description": "The Cisco Meraki Dashboard API is a modern REST API based on the [OpenAPI](https://swagger.io/docs/specification/about/) specification.\n\n## What can the API be used for?\nThe dashboard API can be used for many purposes. It’s meant to be an open-ended tool. Here are some examples of use cases:\n\n* Add new organizations, admins, networks, devices, VLANs, and more\n* Configure networks at scale\n* Automatically on-board and off-board new employees’ teleworker setup\n* Build your own dashboard for store managers, field techs, or unique use cases\n\n## Enabling the Dashboard API\n1. Begin by logging into [Meraki Dashboard](https://dashboard.meraki.com) and navigating to **Organization > Settings**\n\n2. Locate the section titled **Dashboard API access** and select **Enable Access**, then **Save** your changes\n\n3. After enabling the API, choose your username at the top-right of the Meraki Dashboard and select **my profile**\n\n4. Locate the section titled **Dashboard API access** and select **Generate new API key**\n\n *Note: The API key is associated with a Dashboard administrator account. You can generate, revoke, and regenerate your API key on your profile.*\n\n**Keep your API key safe as it provides authentication to all of your organizations with the API enabled. If your API key is shared, you can regenerate your API key at any time. This will revoke the existing API key.**\n\n Copy and store your API key in a safe place. Dashboard does not store API keys in plaintext for security reasons, so this is the only time you will be able to record it. If you lose or forget your API key, you will have to revoke it and generate a new one.\n \nEvery request must specify an API key via a request header.\n\nThe API key must be specified in the URL header. The API will return 404 (rather than a 403) in response to a request with a missing or incorrect API key in order to prevent leaking the existence of resources to unauthorized users.\n\n`X-Cisco-Meraki-API-Key: <secret key>`\n\nRead more about API [authorization](../api/#/python/getting-started/authorizing-your-client)\n \n\n## Versioning\nOnce an API version is released, we will make only backwards-compatible changes to it. Backwards-compatible changes include:\n\n* Adding new API resources\nAdding new optional request parameters to existing API methods\n\n* Adding new properties to existing API responses\n\n* Changing the order of properties in existing API responses\n\n## Rate Limit\n* The Dashboard API is limited to **5 calls per second**, per organization. \n* A burst of 5 additional calls are allowed in the first second, so a maximum of 15 calls in the first 2 seconds.\n* The rate limiting technique is based off of the [token bucket model](https://en.wikipedia.org/wiki/Token_bucket).\n* An error with a `429` status code will be returned when the rate limit has been exceeded.\n* Expect to backoff for 1 - 2 seconds if the limit has been exceeded. You may have to wait potentially longer if a large number of requests were made within this timeframe.. \n \n\n## Additional Details\nIdentifiers in the API are opaque strings. A `<network_id>`, for example, might be the string “126043”, whereas an `<order_id>` might contain characters, such as “4S1234567”. Client applications must not try to parse them as numbers. Even identifiers that look like numbers might be too long to encode without loss of precision in Javascript, where the only numeric type is IEEE 754 floating point.\n\nVerbs in the API follow the usual REST conventions: \n\n`GET` returns the value of a resource or a list of resources, depending on whether an identifier is specified. For example, a `GET` of `/v0/organizations` returns a list of organizations, whereas a `GET` of `/v0/organizations/<org_id>` returns a particular organization. \n\n`POST` adds a new resource, as in a `POST` to `/v0/organizations/<org_id>/admins`, or performs some other non-idempotent change.\n\n `PUT` updates a resource. `PUTs` are idempotent; they update a resource, creating it first if it does not already exist. A `PUT` should specify all the fields of a resource; the API will revert omitted fields to their default value. \n\n`DELETE` removes a resource. Call volume is limited to 5 calls per second (per organization).",
    "contact": {
      "url": "https://meraki.io"
    }
  },
  "host": "api.meraki.com",
  "basePath": "/api/v0",
  "securityDefinitions": {
    "Cisco-Meraki-API-Key": {
      "type": "apiKey",
      "description": "",
      "name": "X-Cisco-Meraki-API-Key",
      "in": "header"
    }
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/organizations/{organizationId}/admins": {
      "get": {
        "description": "List the dashboard administrators in this organization\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/organizations/{organizationId}/admins'\n```",
        "summary": "getOrganizationAdmins",
        "tags": [
          "Admins"
        ],
        "operationId": "OrganizationsAdminsByOrganizationIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "id": "212406",
                  "name": "Miles Meraki",
                  "email": "miles@meraki.com",
                  "orgAccess": "none",
                  "accountStatus": "ok",
                  "twoFactorAuthEnabled": false,
                  "hasApiKey": true,
                  "lastActive": "2019-01-28 14:58:56 -0800",
                  "tags": [
                    {
                      "tag": "west",
                      "access": "read-only"
                    }
                  ],
                  "networks": [
                    {
                      "id": "N_24329156",
                      "access": "full"
                    }
                  ]
                }
              ]
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a new dashboard administrator\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST --data-binary '{\"name\":\"Miles Meraki\",\"email\":\"miles@meraki.com\",\"orgAccess\":\"none\",\"tags\":[{\"tag\":\"west\",\"access\":\"read-only\"}]}' 'https://api.meraki.com/api/v0/organizations/{organizationId}/admins'\n```",
        "summary": "createOrganizationAdmins",
        "tags": [
          "Admins"
        ],
        "operationId": "OrganizationsAdminsByOrganizationIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "createOrganizationAdmins",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/createOrganizationAdmins"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "id": "212406",
                "name": "Miles Meraki",
                "email": "miles@meraki.com",
                "orgAccess": "none",
                "accountStatus": "ok",
                "twoFactorAuthEnabled": false,
                "hasApiKey": true,
                "lastActive": "2019-01-28 14:58:56 -0800",
                "tags": [
                  {
                    "tag": "west",
                    "access": "read-only"
                  }
                ],
                "networks": [
                  {
                    "id": "N_24329156",
                    "access": "full"
                  }
                ]
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/organizations/{organizationId}/admins/{id}": {
      "put": {
        "description": "Update an administrator\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"name\":\"Miles Meraki\",\"email\":\"miles@meraki.com\",\"orgAccess\":\"none\",\"tags\":[{\"tag\":\"west\",\"access\":\"read-only\"}]}' 'https://api.meraki.com/api/v0/organizations/{organizationId}/admins/{id}'\n```",
        "summary": "updateOrganizationAdmin",
        "tags": [
          "Admins"
        ],
        "operationId": "OrganizationsAdminsByOrganizationIdAndIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "updateOrganizationAdmin",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateOrganizationAdmin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "id": "212406",
                "name": "Miles Meraki",
                "email": "miles@meraki.com",
                "orgAccess": "none",
                "accountStatus": "ok",
                "twoFactorAuthEnabled": false,
                "hasApiKey": true,
                "lastActive": "2019-01-28 14:58:56 -0800",
                "tags": [
                  {
                    "tag": "west",
                    "access": "read-only"
                  }
                ],
                "networks": [
                  {
                    "id": "N_24329156",
                    "access": "full"
                  }
                ]
              }
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Revoke all access for a dashboard administrator within this organization\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X DELETE 'https://api.meraki.com/api/v0/organizations/{organizationId}/admins/{id}'\n```",
        "summary": "deleteOrganizationAdmin",
        "tags": [
          "Admins"
        ],
        "operationId": "OrganizationsAdminsByOrganizationIdAndIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation",
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/alertSettings": {
      "get": {
        "description": "Return the alert configuration for this network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/alertSettings'\n```",
        "summary": "getNetworkAlertSettings",
        "tags": [
          "Alert settings"
        ],
        "operationId": "NetworksAlertSettingsByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "defaultDestinations": {
                  "emails": [
                    "miles@meraki.com"
                  ],
                  "allAdmins": true,
                  "snmp": true
                },
                "alerts": [
                  {
                    "type": "gatewayDown",
                    "enabled": true,
                    "alertDestinations": {
                      "emails": [
                        "miles@meraki.com"
                      ],
                      "allAdmins": false,
                      "snmp": false
                    },
                    "filters": {
                      "timeout": 60
                    }
                  }
                ]
              }
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update the alert configuration for this network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"defaultDestinations\":{\"emails\":[\"miles@meraki.com\"],\"allAdmins\":true,\"snmp\":true},\"alerts\":[{\"type\":\"gatewayDown\",\"enabled\":true,\"alertDestinations\":{\"emails\":[\"miles@meraki.com\"],\"allAdmins\":false,\"snmp\":false},\"filters\":{\"timeout\":60}}]}' 'https://api.meraki.com/api/v0/networks/[networkId]/alertSettings'\n```",
        "summary": "updateNetworkAlertSettings",
        "tags": [
          "Alert settings"
        ],
        "operationId": "NetworksAlertSettingsByNetworkIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "updateNetworkAlertSettings",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateNetworkAlertSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "defaultDestinations": {
                  "emails": [
                    "miles@meraki.com"
                  ],
                  "allAdmins": true,
                  "snmp": true
                },
                "alerts": [
                  {
                    "type": "gatewayDown",
                    "enabled": true,
                    "alertDestinations": {
                      "emails": [
                        "miles@meraki.com"
                      ],
                      "allAdmins": false,
                      "snmp": false
                    },
                    "filters": {
                      "timeout": 60
                    }
                  }
                ]
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/devices/{serial}/camera/analytics/zones": {
      "get": {
        "description": "Returns all configured analytic zones for this camera\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/devices/[serial]/camera/analytics/zones'\n```",
        "summary": "getDeviceCameraAnalyticsZones",
        "tags": [
          "MV Sense"
        ],
        "operationId": "DevicesCameraAnalyticsZonesBySerialGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "id": "0",
                  "type": "occupancy",
                  "label": "Full Frame"
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/devices/{serial}/camera/analytics/recent": {
      "get": {
        "description": "Returns most recent record for analytics zones\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/devices/[serial]/camera/analytics/recent'\n```",
        "summary": "getDeviceCameraAnalyticsRecent",
        "tags": [
          "MV Sense"
        ],
        "operationId": "DevicesCameraAnalyticsRecentBySerialGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "startTs": "2018-08-15T18:32:38.123Z",
                  "endTs": "2018-08-15T18:33:38.123Z",
                  "zoneId": 0,
                  "entrances": 10,
                  "averageCount": 2.54
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/devices/{serial}/camera/analytics/live": {
      "get": {
        "description": "Returns live state from camera of analytics zones\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/devices/[serial]/camera/analytics/live'\n```",
        "summary": "getDeviceCameraAnalyticsLive",
        "tags": [
          "MV Sense"
        ],
        "operationId": "DevicesCameraAnalyticsLiveBySerialGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "ts": "2018-08-15T18:32:38.123Z",
                  "zones": {
                    "0": {
                      "person": 0
                    }
                  }
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/devices/{serial}/camera/analytics/overview": {
      "get": {
        "description": "Returns an overview of aggregate analytics data for a timespan\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/devices/{serial}/camera/analytics/overview'\n```",
        "summary": "getDeviceCameraAnalyticsOverview",
        "tags": [
          "MV Sense"
        ],
        "operationId": "DevicesCameraAnalyticsOverviewBySerialGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "t0",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
          },
          {
            "name": "t1",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
          },
          {
            "name": "timespan",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. The default is 1 hour."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "startTs": "2018-08-15T18:32:38.123Z",
                  "endTs": "2018-08-15T18:33:38.123Z",
                  "zoneId": 0,
                  "entrances": 254,
                  "averageCount": 5
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/devices/{serial}/camera/analytics/zones/{zoneId}/history": {
      "get": {
        "description": "Return historical records for analytic zones\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/devices/{serial}/camera/analytics/zones/{zoneId}/history'\n```",
        "summary": "getDeviceCameraAnalyticsZoneHistory",
        "tags": [
          "MV Sense"
        ],
        "operationId": "DevicesCameraAnalyticsZonesHistoryBySerialAndZoneIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "zoneId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "t0",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
          },
          {
            "name": "t1",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The end of the timespan for the data. t1 can be a maximum of 14 hours after t0."
          },
          {
            "name": "timespan",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 14 hours. The default is 1 hour."
          },
          {
            "name": "resolution",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The time resolution in seconds for returned data. The valid resolutions are: 60. The default is 60."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "startTs": "2018-08-15T18:32:38.123Z",
                  "endTs": "2018-08-15T18:33:38.123Z",
                  "entrances": 5,
                  "averageCount": 1.5
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/organizations/{organizationId}/apiRequests": {
      "get": {
        "description": "List the API requests made by an organization\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/organizations/{organizationId}/apiRequests'\n```",
        "summary": "getOrganizationApiRequests",
        "tags": [
          "API usage"
        ],
        "operationId": "OrganizationsApiRequestsByOrganizationIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "t0",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
          },
          {
            "name": "t1",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
          },
          {
            "name": "timespan",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days."
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50."
          },
          {
            "name": "startingAfter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "name": "endingBefore",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "name": "adminId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter the results by the ID of the admin who made the API requests"
          },
          {
            "name": "path",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter the results by the path of the API requests"
          },
          {
            "name": "method",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter the results by the method of the API requests (must be 'GET', 'PUT', 'POST' or 'DELETE')"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "adminId": "212406",
                  "method": "GET",
                  "host": "api.meraki.com",
                  "path": "/api/v0/organizations/33349/apiRequests",
                  "queryString": "timespan=604800",
                  "userAgent": "PostmanRuntime/7.6.0",
                  "ts": "2019-02-20T17:31:23Z"
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/bluetoothClients/{id}": {
      "get": {
        "description": "Return a Bluetooth client\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/bluetoothClients/[id]'\n```",
        "summary": "getNetworkBluetoothClient",
        "tags": [
          "Bluetooth clients"
        ],
        "operationId": "NetworksBluetoothClientsByNetworkIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "includeConnectivityHistory",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Include the connectivity history for this client"
          },
          {
            "name": "connectivityHistoryTimespan",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The timespan, in seconds, for the connectivityHistory data. By default 1 day, 86400, will be used."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "mac": "00:11:22:33:44:55",
                "networkId": "N_24329156"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/bluetoothClients": {
      "get": {
        "description": "List the Bluetooth clients seen by APs in this network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/{networkId}/bluetoothClients'\n```",
        "summary": "getNetworkBluetoothClients",
        "tags": [
          "Bluetooth clients"
        ],
        "operationId": "NetworksBluetoothClientsByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of entries per page returned. Acceptable range is 5 - 1000. Default is 10."
          },
          {
            "name": "startingAfter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "name": "endingBefore",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "name": "timespan",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The timespan, in seconds, used to look back from now for bluetooth clients"
          },
          {
            "name": "includeConnectivityHistory",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Include the connectivity history for this client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "mac": "00:11:22:33:44:55",
                  "networkId": "N_24329156"
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/bluetoothSettings": {
      "get": {
        "description": "Return the Bluetooth settings for a network. <a href=\"https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)\">Bluetooth settings</a> must be enabled on the network.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/{networkId}/bluetoothSettings'\n```",
        "summary": "getNetworkBluetoothSettings",
        "tags": [
          "Networks"
        ],
        "operationId": "NetworksBluetoothSettingsByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "scanningEnabled": true,
                "advertisingEnabled": true,
                "uuid": "00000000-0000-0000-000-000000000000",
                "majorMinorAssignmentMode": "Non-unique",
                "major": 1
              }
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update the Bluetooth settings for a network. See the docs page for <a href=\"https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)\">Bluetooth settings</a>.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"scanningEnabled\":true,\"advertisingEnabled\":true,\"uuid\":\"00000000-0000-0000-000-000000000000\",\"majorMinorAssignmentMode\":\"Non-unique\",\"major\":1}' 'https://api.meraki.com/api/v0/networks/{networkId}/bluetoothSettings'\n```",
        "summary": "updateNetworkBluetoothSettings",
        "tags": [
          "Networks"
        ],
        "operationId": "NetworksBluetoothSettingsByNetworkIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "updateNetworkBluetoothSettings",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateNetworkBluetoothSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "scanningEnabled": true,
                "advertisingEnabled": true,
                "uuid": "00000000-0000-0000-000-000000000000",
                "majorMinorAssignmentMode": "Non-unique",
                "major": 1
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/organizations/{organizationId}/networks": {
      "get": {
        "description": "List the networks in an organization\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/organizations/{organizationId}/networks'\n```",
        "summary": "getOrganizationNetworks",
        "tags": [
          "Networks"
        ],
        "operationId": "OrganizationsNetworksByOrganizationIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "configTemplateId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "An optional parameter that is the ID of a config template. Will return all networks bound to that template."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "id": "L_123456",
                  "organizationId": 2930418,
                  "name": "Long Island Office",
                  "timeZone": "America/Los_Angeles",
                  "tags": " tag1 tag2 ",
                  "type": "combined",
                  "disableMyMerakiCom": false
                }
              ]
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST --data-binary '{\"name\":\"Long Island Office\",\"timeZone\":\"America/Los_Angeles\",\"tags\":\" tag1 tag2 \",\"disableMyMerakiCom\":false,\"type\":\"appliance switch camera\"}' 'https://api.meraki.com/api/v0/organizations/{organizationId}/networks'\n```",
        "summary": "createOrganizationNetworks",
        "tags": [
          "Networks"
        ],
        "operationId": "OrganizationsNetworksByOrganizationIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "createOrganizationNetworks",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/createOrganizationNetworks"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "id": "L_123456",
                "organizationId": 2930418,
                "name": "Long Island Office",
                "timeZone": "America/Los_Angeles",
                "tags": " tag1 tag2 ",
                "type": "combined",
                "disableMyMerakiCom": false
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}": {
      "get": {
        "description": "Return a network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/{networkId}'\n```",
        "summary": "getNetwork",
        "tags": [
          "Networks"
        ],
        "operationId": "NetworksByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "id": "L_123456",
                "organizationId": 2930418,
                "name": "Long Island Office",
                "timeZone": "America/Los_Angeles",
                "tags": " tag1 tag2 ",
                "type": "combined",
                "disableMyMerakiCom": false
              }
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"name\":\"Long Island Office\",\"timeZone\":\"America/Los_Angeles\",\"tags\":\" tag1 tag2 \",\"disableMyMerakiCom\":false}' 'https://api.meraki.com/api/v0/networks/{networkId}'\n```",
        "summary": "updateNetwork",
        "tags": [
          "Networks"
        ],
        "operationId": "NetworksByNetworkIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "updateNetwork",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateNetwork"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "id": "L_123456",
                "organizationId": 2930418,
                "name": "Long Island Office",
                "timeZone": "America/Los_Angeles",
                "tags": " tag1 tag2 ",
                "type": "combined",
                "disableMyMerakiCom": false
              }
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X DELETE 'https://api.meraki.com/api/v0/networks/{networkId}'\n```",
        "summary": "deleteNetwork",
        "tags": [
          "Networks"
        ],
        "operationId": "NetworksByNetworkIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation",
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/bind": {
      "post": {
        "description": "Bind a network to a template.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST --data-binary '{\"configTemplateId\":\"N_23952905\",\"autoBind\":false}' 'https://api.meraki.com/api/v0/networks/{networkId}/bind'\n```",
        "summary": "bindNetwork",
        "tags": [
          "Networks"
        ],
        "operationId": "NetworksBindByNetworkIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "bindNetwork",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/bindNetwork"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/unbind": {
      "post": {
        "description": "Unbind a network from a template.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST 'https://api.meraki.com/api/v0/networks/{networkId}/unbind'\n```",
        "summary": "unbindNetwork",
        "tags": [
          "Networks"
        ],
        "operationId": "NetworksUnbindByNetworkIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/traffic": {
      "get": {
        "description": "The traffic analysis data for this network.\n<a href=\"https://documentation.meraki.com/MR/Monitoring_and_Reporting/Hostname_Visibility\">Traffic Analysis with Hostname Visibility</a> must be enabled on the network.\n\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/{networkId}/traffic'\n```",
        "summary": "getNetworkTraffic",
        "tags": [
          "Networks"
        ],
        "operationId": "NetworksTrafficByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "timespan",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The timespan for the data. Must be an integer representing a duration in seconds between two hours and one month. (Mandatory.)"
          },
          {
            "name": "deviceType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter the data by device type: combined (default), wireless, switch, appliance. When using combined, for each rule the data will come from the device type with the most usage."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "application": "Gmail",
                  "destination": null,
                  "protocol": "TCP",
                  "port": 443,
                  "sent": 138.0,
                  "recv": 61.0,
                  "numClients": 7,
                  "activeTime": 77000,
                  "flows": 300
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/accessPolicies": {
      "get": {
        "description": "List the access policies for this network. Only valid for MS networks.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/{networkId}/accessPolicies'\n```",
        "summary": "getNetworkAccessPolicies",
        "tags": [
          "Networks"
        ],
        "operationId": "NetworksAccessPoliciesByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "number": 1,
                  "name": "My access policy",
                  "accessType": "8021.x",
                  "guestVlan": 3700,
                  "radiusServers": [
                    {
                      "ip": "1.2.3.4",
                      "port": 1337
                    },
                    {
                      "ip": "2.3.4.5",
                      "port": 1337
                    }
                  ]
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/airMarshal": {
      "get": {
        "description": "List Air Marshal scan results from a network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/{networkId}/airMarshal'\n```",
        "summary": "getNetworkAirMarshal",
        "tags": [
          "Networks"
        ],
        "operationId": "NetworksAirMarshalByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "t0",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
          },
          {
            "name": "timespan",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 7 days."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "ssid": "linksys",
                  "bssids": [
                    {
                      "bssid": "00:11:22:33:44:55",
                      "contained": false,
                      "detectedBy": [
                        {
                          "device": "Q234-ABCD-5678",
                          "rssi": 17
                        }
                      ]
                    }
                  ],
                  "channels": [
                    36,
                    40
                  ],
                  "firstSeen": 1518365681,
                  "lastSeen": 1526087474,
                  "wiredMacs": [
                    "00:11:22:33:44:55"
                  ],
                  "wiredVlans": [
                    0,
                    108
                  ],
                  "wiredLastSeen": 1526087474
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/siteToSiteVpn": {
      "get": {
        "description": "Return the site-to-site VPN settings of a network. Only valid for MX networks.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/{networkId}/siteToSiteVpn'\n```",
        "summary": "getNetworkSiteToSiteVpn",
        "tags": [
          "Networks"
        ],
        "operationId": "NetworksSiteToSiteVpnByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "mode": "spoke",
                "hubs": [
                  {
                    "hubId": "N_4901849",
                    "useDefaultRoute": true
                  },
                  {
                    "hubId": "N_1892489",
                    "useDefaultRoute": false
                  }
                ],
                "subnets": [
                  {
                    "localSubnet": "192.168.1.0/24",
                    "useVpn": true
                  },
                  {
                    "localSubnet": "192.168.128.0/24",
                    "useVpn": true
                  }
                ]
              }
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update the site-to-site VPN settings of a network. Only valid for MX networks in NAT mode.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"mode\":\"spoke\",\"hubs\":[{\"hubId\":\"N_4901849\",\"useDefaultRoute\":true},{\"hubId\":\"N_1892489\",\"useDefaultRoute\":false}],\"subnets\":[{\"localSubnet\":\"192.168.1.0/24\",\"useVpn\":true},{\"localSubnet\":\"192.168.128.0/24\",\"useVpn\":true}]}' 'https://api.meraki.com/api/v0/networks/{networkId}/siteToSiteVpn'\n```",
        "summary": "updateNetworkSiteToSiteVpn",
        "tags": [
          "Networks"
        ],
        "operationId": "NetworksSiteToSiteVpnByNetworkIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "updateNetworkSiteToSiteVpn",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateNetworkSiteToSiteVpn"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "mode": "spoke",
                "hubs": [
                  {
                    "hubId": "N_4901849",
                    "useDefaultRoute": true
                  },
                  {
                    "hubId": "N_1892489",
                    "useDefaultRoute": false
                  }
                ],
                "subnets": [
                  {
                    "localSubnet": "192.168.1.0/24",
                    "useVpn": true
                  },
                  {
                    "localSubnet": "192.168.128.0/24",
                    "useVpn": true
                  }
                ]
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/cameras/{serial}/videoLink": {
      "get": {
        "description": "Returns video link for the specified camera. If a timestamp supplied, it links to that time.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/cameras/[serial]/videoLink'\n```",
        "summary": "getNetworkCameraVideoLink",
        "tags": [
          "Cameras"
        ],
        "operationId": "NetworksCamerasVideoLinkByNetworkIdAndSerialGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "serial",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "timestamp",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The video link will start at this timestamp. The timestamp is in UNIX Epoch time (milliseconds)."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "url": "https://nxx.meraki.com/office-cameras/n/bs0a1k/manage/nodes/new_list/29048243992402?timestamp=1535732570077"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/cameras/{serial}/snapshot": {
      "post": {
        "description": "Generate a snapshot of what the camera sees at the specified time and return a link to that image.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST 'https://api.meraki.com/api/v0/networks/[networkId]/cameras/[serial]/snapshot'\n```",
        "summary": "snapshotNetworkCamera",
        "tags": [
          "Cameras"
        ],
        "operationId": "NetworksCamerasSnapshotByNetworkIdAndSerialPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "serial",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "snapshotNetworkCamera",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/snapshotNetworkCamera"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "url": "https://spn4.meraki.com/stream/jpeg/snapshot/b2d123asdf423qd22d2",
                "expiry": "Access to the image will expire at 2018-12-11T03:12:39Z."
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/clients/{idOrMacOrIp}": {
      "get": {
        "description": "Return the client associated with the given identifier. This endpoint will lookup by client ID or either the MAC or IP depending on whether the network uses Track-by-IP.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/clients/[idOrMacOrIp]'\n```",
        "summary": "getNetworkClient",
        "tags": [
          "Clients"
        ],
        "operationId": "NetworksClientsByNetworkIdAndIdOrMacOrIpGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "idOrMacOrIp",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "id": "k74272e",
                "description": "Miles's phone",
                "mac": "00:11:22:33:44:55",
                "ip": "1.2.3.4",
                "user": "null",
                "vlan": "255",
                "switchport": null,
                "ip6": "",
                "firstSeen": 1518365681,
                "lastSeen": 1526087474,
                "manufacturer": "Apple",
                "os": "iOS",
                "ssid": "My SSID",
                "wirelessCapabilities": "802.11ac - 2.4 and 5 GHz",
                "smInstalled": true,
                "recentDeviceMac": "00:11:22:33:44:55",
                "clientVpnConnections": [
                  {
                    "remoteIp": "1.2.3.4",
                    "connectedAt": 1522613355,
                    "disconnectedAt": 1522613360
                  }
                ],
                "lldp": [
                  [
                    "System name",
                    "Some system name"
                  ],
                  [
                    "System description",
                    "Some system description"
                  ],
                  [
                    "Port ID",
                    "1"
                  ],
                  [
                    "Chassis ID",
                    "00:18:0a:00:00:00"
                  ],
                  [
                    "Port description",
                    "eth0"
                  ],
                  [
                    "System capabilities",
                    "Two-port MAC Relay"
                  ]
                ],
                "cdp": null
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/clients/provision": {
      "post": {
        "description": "Provisions a client with a name and policy. Clients can be provisioned before they associate to the network.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST --data-binary '{\"mac\":\"00:11:22:33:44:55\",\"name\":\"Miles's phone\",\"devicePolicy\":\"Group policy\",\"groupPolicyId\":\"101\"}' 'https://api.meraki.com/api/v0/networks/[networkId]/clients/provision'\n```",
        "summary": "provisionNetworkClients",
        "tags": [
          "Clients"
        ],
        "operationId": "NetworksClientsProvisionByNetworkIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "provisionNetworkClients",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/provisionNetworkClients"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "mac": "00:11:22:33:44:55",
                "clientId": "k74272e",
                "name": "Miles's phone",
                "devicePolicy": "Group policy",
                "groupPolicyId": "101"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/clients/{idOrMacOrIp}/usageHistory": {
      "get": {
        "description": "Return the client's daily usage history. Usage data is in kilobytes.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/clients/[idOrMacOrIp]/usageHistory'\n```",
        "summary": "getNetworkClientUsageHistory",
        "tags": [
          "Clients"
        ],
        "operationId": "NetworksClientsUsageHistoryByNetworkIdAndIdOrMacOrIpGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "idOrMacOrIp",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "sent": 500,
                  "received": 680,
                  "ts": 1518365681
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/clients/{mac}/policy": {
      "get": {
        "description": "Return the policy assigned to a client on the network.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/clients/[mac]/policy?timespan=7200'\n```",
        "summary": "getNetworkClientPolicy",
        "tags": [
          "Clients"
        ],
        "operationId": "NetworksClientsPolicyByNetworkIdAndMacGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "mac",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "timespan",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The timespan for which clients will be fetched. Must be in seconds and less than or equal to a month (2592000 seconds)."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "mac": "00:11:22:33:44:55",
                "type": "Group policy",
                "groupPolicyId": "101"
              }
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update the policy assigned to a client on the network.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"mac\":\"00:11:22:33:44:55\",\"type\":\"Group policy\",\"groupPolicyId\":\"101\"}' 'https://api.meraki.com/api/v0/networks/[networkId]/clients/[mac]/policy'\n```",
        "summary": "updateNetworkClientPolicy",
        "tags": [
          "Clients"
        ],
        "operationId": "NetworksClientsPolicyByNetworkIdAndMacPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "mac",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "updateNetworkClientPolicy",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateNetworkClientPolicy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "mac": "00:11:22:33:44:55",
                "type": "Group policy",
                "groupPolicyId": "101"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{id}/clients/{mac}/splashAuthorizationStatus": {
      "get": {
        "description": "Return the splash authorization for a client, for each SSID they've associated with through splash.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[id]/clients/[mac]/splashAuthorizationStatus'\n```",
        "summary": "getNetworkClientSplashAuthorizationStatus",
        "tags": [
          "Clients"
        ],
        "operationId": "NetworksClientsSplashAuthorizationStatusByIdAndMacGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "mac",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "ssids": {
                  "0": {
                    "isAuthorized": true,
                    "authorizedAt": "2017-07-19 16:24:13 UTC",
                    "expiresAt": "2017-07-20 16:24:13 UTC"
                  },
                  "2": {
                    "isAuthorized": false
                  }
                }
              }
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a client's splash authorization.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"ssids\":{\"0\":{\"isAuthorized\":true,\"authorizedAt\":\"2017-07-19 16:24:13 UTC\",\"expiresAt\":\"2017-07-20 16:24:13 UTC\"},\"2\":{\"isAuthorized\":false}}}' 'https://api.meraki.com/api/v0/networks/[id]/clients/[mac]/splashAuthorizationStatus'\n```",
        "summary": "updateNetworkClientSplashAuthorizationStatus",
        "tags": [
          "Clients"
        ],
        "operationId": "NetworksClientsSplashAuthorizationStatusByIdAndMacPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "mac",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "updateNetworkClientSplashAuthorizationStatus",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateNetworkClientSplashAuthorizationStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "ssids": {
                  "0": {
                    "isAuthorized": true,
                    "authorizedAt": "2017-07-19 16:24:13 UTC",
                    "expiresAt": "2017-07-20 16:24:13 UTC"
                  },
                  "2": {
                    "isAuthorized": false
                  }
                }
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/devices/{serial}/clients": {
      "get": {
        "description": "List the clients of a device, up to a maximum of a month ago. The usage of each client is returned in kilobytes. If the device is a switch, the switchport is returned; otherwise the switchport field is null.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/devices/{serial}/clients'\n```",
        "summary": "getDeviceClients",
        "tags": [
          "Clients"
        ],
        "operationId": "DevicesClientsBySerialGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "t0",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
          },
          {
            "name": "timespan",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "usage": {
                  "sent": 138.0,
                  "recv": 61.0
                },
                "id": "k74272e",
                "description": "Miles's phone",
                "mac": "00:11:22:33:44:55",
                "ip": "1.2.3.4",
                "user": "milesmeraki",
                "vlan": 255,
                "switchport": null,
                "mdnsName": "Miles's phone",
                "dhcpHostname": "MilesPhone"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/clients/{idOrMacOrIp}/trafficHistory": {
      "get": {
        "description": "Return the client's network traffic data over time. Usage data is in kilobytes. This endpoint requires detailed traffic analysis to be enabled on the Network-wide > General page.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/{networkId}/clients/{idOrMacOrIp}/trafficHistory'\n```",
        "summary": "getNetworkClientTrafficHistory",
        "tags": [
          "Clients"
        ],
        "operationId": "NetworksClientsTrafficHistoryByNetworkIdAndIdOrMacOrIpGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "idOrMacOrIp",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of entries per page returned. Acceptable range is 3 - 1000."
          },
          {
            "name": "startingAfter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "name": "endingBefore",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "ts": 1518365681,
                  "application": "Google",
                  "destination": "www.google.com",
                  "protocol": "UDP",
                  "port": 443,
                  "recv": 383,
                  "sent": 56,
                  "numFlows": 5,
                  "activeSeconds": 240
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/clients/{idOrMacOrIp}/events": {
      "get": {
        "description": "Return the events associated with this client\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/{networkId}/clients/{idOrMacOrIp}/events'\n```",
        "summary": "getNetworkClientEvents",
        "tags": [
          "Clients"
        ],
        "operationId": "NetworksClientsEventsByNetworkIdAndIdOrMacOrIpGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "idOrMacOrIp",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of entries per page returned. Acceptable range is 3 - 100. Default is 100."
          },
          {
            "name": "startingAfter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "name": "endingBefore",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "deviceSerial": "Q234-ABCD-5678",
                  "occurredAt": 1518365681,
                  "type": "l3roaming_assoc_start",
                  "details": {
                    "vap": "1",
                    "on_packet": "true"
                  }
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/clients/{idOrMacOrIp}/latencyHistory": {
      "get": {
        "description": "Return the latency history for a client. The latency data is from a sample of 2% of packets and is grouped into 4 traffic categories: background, best effort, video, voice. Within these categories the sampled packet counters are bucketed by latency in milliseconds.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/{networkId}/clients/{idOrMacOrIp}/latencyHistory?timespan=7200'\n```",
        "summary": "getNetworkClientLatencyHistory",
        "tags": [
          "Clients"
        ],
        "operationId": "NetworksClientsLatencyHistoryByNetworkIdAndIdOrMacOrIpGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "idOrMacOrIp",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "t0",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 791 days from today."
          },
          {
            "name": "t1",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The end of the timespan for the data. t1 can be a maximum of 791 days after t0."
          },
          {
            "name": "timespan",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 791 days. The default is 1 day."
          },
          {
            "name": "resolution",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The time resolution in seconds for returned data. The valid resolutions are: 86400. The default is 86400."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "t0": 1550534400,
                  "t1": 1550620800,
                  "latencyBinsByCategory": {
                    "backgroundTraffic": {
                      "0.5": 41750,
                      "1.0": 21552,
                      "2.0": 59940,
                      "4.0": 146622,
                      "8.0": 57354,
                      "16.0": 0,
                      "32.0": 9954,
                      "64.0": 0,
                      "128.0": 0,
                      "256.0": 1896,
                      "512.0": 0,
                      "1024.0": 0,
                      "2048.0": 0
                    },
                    "bestEffortTraffic": {
                      "0.5": 1840899,
                      "1.0": 1644506,
                      "2.0": 629958,
                      "4.0": 449564,
                      "8.0": 2009658,
                      "16.0": 1329568,
                      "32.0": 282168,
                      "64.0": 97573,
                      "128.0": 191977,
                      "256.0": 30560,
                      "512.0": 26032,
                      "1024.0": 4943,
                      "2048.0": 12072
                    },
                    "videoTraffic": {
                      "0.5": 0,
                      "1.0": 0,
                      "2.0": 0,
                      "4.0": 0,
                      "8.0": 0,
                      "16.0": 0,
                      "32.0": 0,
                      "64.0": 0,
                      "128.0": 0,
                      "256.0": 0,
                      "512.0": 0,
                      "1024.0": 0,
                      "2048.0": 0
                    },
                    "voiceTraffic": {
                      "0.5": 716,
                      "1.0": 948,
                      "2.0": 474,
                      "4.0": 78,
                      "8.0": 0,
                      "16.0": 0,
                      "32.0": 0,
                      "64.0": 0,
                      "128.0": 0,
                      "256.0": 0,
                      "512.0": 0,
                      "1024.0": 0,
                      "2048.0": 0
                    }
                  }
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/organizations/{organizationId}/configTemplates": {
      "get": {
        "description": "List the configuration templates for this organization\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/organizations/[organizationId]/configTemplates'\n```",
        "summary": "getOrganizationConfigTemplates",
        "tags": [
          "Config templates"
        ],
        "operationId": "OrganizationsConfigTemplatesByOrganizationIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "id": "N_24329156",
                  "name": "My config template"
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/organizations/{organizationId}/configTemplates/{id}": {
      "delete": {
        "description": "Remove a configuration template\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X DELETE 'https://api.meraki.com/api/v0/organizations/[organizationId]/configTemplates/[id]'\n```",
        "summary": "deleteOrganizationConfigTemplate",
        "tags": [
          "Config templates"
        ],
        "operationId": "OrganizationsConfigTemplatesByOrganizationIdAndIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/devices": {
      "get": {
        "description": "List the devices in a network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/devices'\n```",
        "summary": "getNetworkDevices",
        "tags": [
          "Devices"
        ],
        "operationId": "NetworksDevicesByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "name": "My AP",
                  "lat": 37.4180951010362,
                  "lng": -122.098531723022,
                  "serial": "Q234-ABCD-5678",
                  "mac": "00:11:22:33:44:55",
                  "model": "MR34",
                  "address": "1600 Pennsylvania Ave",
                  "notes": "My AP's note",
                  "lanIp": "1.2.3.4",
                  "tags": " recently-added ",
                  "networkId": "N_24329156",
                  "beaconIdParams": {
                    "uuid": "00000000-0000-0000-0000-000000000000",
                    "major": 5,
                    "minor": 3
                  }
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/devices/{serial}": {
      "get": {
        "description": "Return a single device\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/devices/[serial]'\n```",
        "summary": "getNetworkDevice",
        "tags": [
          "Devices"
        ],
        "operationId": "NetworksDevicesByNetworkIdAndSerialGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "serial",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "name": "My AP",
                "lat": 37.4180951010362,
                "lng": -122.098531723022,
                "serial": "Q234-ABCD-5678",
                "mac": "00:11:22:33:44:55",
                "model": "MR34",
                "address": "1600 Pennsylvania Ave",
                "notes": "My AP's note",
                "lanIp": "1.2.3.4",
                "tags": " recently-added ",
                "networkId": "N_24329156",
                "beaconIdParams": {
                  "uuid": "00000000-0000-0000-0000-000000000000",
                  "major": 5,
                  "minor": 3
                }
              }
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update the attributes of a device\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"name\":\"My AP\",\"lat\":37.4180951010362,\"lng\":-122.098531723022,\"serial\":\"Q234-ABCD-5678\",\"mac\":\"00:11:22:33:44:55\",\"tags\":\" recently-added \"}' 'https://api.meraki.com/api/v0/networks/[networkId]/devices/[serial]'\n```",
        "summary": "updateNetworkDevice",
        "tags": [
          "Devices"
        ],
        "operationId": "NetworksDevicesByNetworkIdAndSerialPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "serial",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "updateNetworkDevice",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateNetworkDevice"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "name": "My AP",
                "lat": 37.4180951010362,
                "lng": -122.098531723022,
                "serial": "Q234-ABCD-5678",
                "mac": "00:11:22:33:44:55",
                "model": "MR34",
                "address": "1600 Pennsylvania Ave",
                "notes": "My AP's note",
                "lanIp": "1.2.3.4",
                "tags": " recently-added ",
                "networkId": "N_24329156",
                "beaconIdParams": {
                  "uuid": "00000000-0000-0000-0000-000000000000",
                  "major": 5,
                  "minor": 3
                }
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/devices/{serial}/performance": {
      "get": {
        "description": "Return the performance score for a single device. Only primary MX devices supported. If no data is available, a 204 error code is returned.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/devices/[serial]/performance'\n```",
        "summary": "getNetworkDevicePerformance",
        "tags": [
          "Devices"
        ],
        "operationId": "NetworksDevicesPerformanceByNetworkIdAndSerialGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "serial",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "perfScore": 10
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/devices/{serial}/uplink": {
      "get": {
        "description": "Return the uplink information for a device.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/devices/[serial]/uplink'\n```",
        "summary": "getNetworkDeviceUplink",
        "tags": [
          "Devices"
        ],
        "operationId": "NetworksDevicesUplinkByNetworkIdAndSerialGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "serial",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "interface": "WAN 1",
                  "status": "Active",
                  "ip": "1.2.3.4",
                  "gateway": "1.2.3.5",
                  "publicIp": "123.123.123.1",
                  "dns": "8.8.8.8, 8.8.4.4",
                  "usingStaticIp": false
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/devices/{serial}/lldp_cdp": {
      "get": {
        "description": "List LLDP and CDP information for a device\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/devices/[serial]/lldp_cdp?timespan=7200'\n```",
        "summary": "getNetworkDeviceLldp_cdp",
        "tags": [
          "Devices"
        ],
        "operationId": "NetworksDevicesLldpCdpByNetworkIdAndSerialGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "serial",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "timespan",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The timespan for which LLDP and CDP information will be fetched. Must be in seconds and less than or equal to a month (2592000 seconds). LLDP and CDP information is sent to the Meraki dashboard every 10 minutes. In instances where this LLDP and CDP information matches an existing entry in the Meraki dashboard, the data is updated once every two hours. Meraki recommends querying LLDP and CDP information at an interval slightly greater than two hours, to ensure that unchanged CDP / LLDP information can be queried consistently."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "sourceMac": "00:11:22:33:44:55",
                "ports": {
                  "8": {
                    "cdp": {
                      "deviceId": "e0553d8cdf53",
                      "portId": "Port 10",
                      "address": "00:11:22:33:44:55",
                      "sourcePort": "8"
                    }
                  },
                  "12": {
                    "cdp": {
                      "deviceId": "e0553d8cdf53",
                      "portId": "Port 11",
                      "address": "00:11:22:33:44:55",
                      "sourcePort": "12"
                    },
                    "lldp": {
                      "systemName": "Meraki MS350-24X - Phineas",
                      "portId": "11",
                      "managementAddress": "00:11:22:33:44:55",
                      "sourcePort": "12"
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/devices/claim": {
      "post": {
        "description": "Claim a device into a network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST --data-binary '{\"serial\":\"Q234-ABCD-5678\"}' 'https://api.meraki.com/api/v0/networks/{networkId}/devices/claim'\n```",
        "summary": "claimNetworkDevices",
        "tags": [
          "Devices"
        ],
        "operationId": "NetworksDevicesClaimByNetworkIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "claimNetworkDevices",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/claimNetworkDevices"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/devices/{serial}/remove": {
      "post": {
        "description": "Remove a single device\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST 'https://api.meraki.com/api/v0/networks/{networkId}/devices/{serial}/remove'\n```",
        "summary": "removeNetworkDevice",
        "tags": [
          "Devices"
        ],
        "operationId": "NetworksDevicesRemoveByNetworkIdAndSerialPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "serial",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/devices/{serial}/lossAndLatencyHistory": {
      "get": {
        "description": "Get the uplink loss percentage and latency in milliseconds for a wired network device.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/{networkId}/devices/{serial}/lossAndLatencyHistory?uplink=wan1&ip=1.2.3.4&timespan=7200'\n```",
        "summary": "getNetworkDeviceLossAndLatencyHistory",
        "tags": [
          "Devices"
        ],
        "operationId": "NetworksDevicesLossAndLatencyHistoryByNetworkIdAndSerialGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "serial",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "ip",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The destination IP used to obtain the requested stats. This is required."
          },
          {
            "name": "t0",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
          },
          {
            "name": "t1",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
          },
          {
            "name": "timespan",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
          },
          {
            "name": "resolution",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The time resolution in seconds for returned data. The valid resolutions are: 60, 600, 3600, 86400. The default is 60."
          },
          {
            "name": "uplink",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The WAN uplink used to obtain the requested stats. Valid uplinks are wan1, wan2, cellular. The default is wan1."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "startTime": "2018-10-09T22:18:27Z",
                  "endTime": "2018-10-09T22:19:27Z",
                  "lossPercent": 5,
                  "latencyMs": 324
                },
                {
                  "startTime": "2018-10-09T22:19:27Z",
                  "endTime": "2018-10-09T22:20:27Z",
                  "lossPercent": 1,
                  "latencyMs": 43
                },
                {
                  "startTime": "2018-10-09T22:20:27Z",
                  "endTime": "2018-10-09T22:21:27Z",
                  "lossPercent": 0,
                  "latencyMs": 44
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/devices/{serial}/reboot": {
      "post": {
        "description": "Reboot a device\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST 'https://api.meraki.com/api/v0/networks/{networkId}/devices/{serial}/reboot'\n```",
        "summary": "rebootNetworkDevice",
        "tags": [
          "Devices"
        ],
        "operationId": "NetworksDevicesRebootByNetworkIdAndSerialPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "serial",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "success": true
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/devices/{serial}/blinkLeds": {
      "post": {
        "description": "Blink the LEDs on a device\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST --data-binary '{\"duration\":20,\"period\":160,\"duty\":50}' 'https://api.meraki.com/api/v0/networks/{networkId}/devices/{serial}/blinkLeds'\n```",
        "summary": "blinkLedsNetworkDevice",
        "tags": [
          "Devices"
        ],
        "operationId": "NetworksDevicesBlinkLedsByNetworkIdAndSerialPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "serial",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "blinkLedsNetworkDevice",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/blinkLedsNetworkDevice"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "sentToDevice": true
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/cellularFirewallRules": {
      "get": {
        "description": "Return the cellular firewall rules for an MX network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/{networkId}/cellularFirewallRules'\n```",
        "summary": "getNetworkCellularFirewallRules",
        "tags": [
          "MX cellular firewall"
        ],
        "operationId": "NetworksCellularFirewallRulesByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "comment": "Allow TCP traffic to subnet with HTTP servers.",
                  "policy": "allow",
                  "protocol": "tcp",
                  "destPort": 443,
                  "destCidr": "192.168.1.0/24",
                  "srcPort": "Any",
                  "srcCidr": "Any",
                  "syslogEnabled": false
                }
              ]
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update the cellular firewall rules of an MX network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"rules\":[{\"comment\":\"Allow TCP traffic to subnet with HTTP servers.\",\"policy\":\"allow\",\"protocol\":\"tcp\",\"destPort\":443,\"destCidr\":\"192.168.1.0/24\",\"srcPort\":\"Any\",\"srcCidr\":\"Any\",\"syslogEnabled\":false}]}' 'https://api.meraki.com/api/v0/networks/{networkId}/cellularFirewallRules'\n```",
        "summary": "updateNetworkCellularFirewallRules",
        "tags": [
          "MX cellular firewall"
        ],
        "operationId": "NetworksCellularFirewallRulesByNetworkIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "updateNetworkCellularFirewallRules",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateNetworkCellularFirewallRules"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "comment": "Allow TCP traffic to subnet with HTTP servers.",
                  "policy": "allow",
                  "protocol": "tcp",
                  "destPort": 443,
                  "destCidr": "192.168.1.0/24",
                  "srcPort": "Any",
                  "srcCidr": "Any",
                  "syslogEnabled": false
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/l3FirewallRules": {
      "get": {
        "description": "Return the L3 firewall rules for an MX network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/{networkId}/l3FirewallRules'\n```",
        "summary": "getNetworkL3FirewallRules",
        "tags": [
          "MX L3 firewall"
        ],
        "operationId": "NetworksL3FirewallRulesByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "comment": "Allow TCP traffic to subnet with HTTP servers.",
                  "policy": "allow",
                  "protocol": "tcp",
                  "destPort": 443,
                  "destCidr": "192.168.1.0/24",
                  "srcPort": "Any",
                  "srcCidr": "Any",
                  "syslogEnabled": false
                }
              ]
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update the L3 firewall rules of an MX network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"rules\":[{\"comment\":\"Allow TCP traffic to subnet with HTTP servers.\",\"policy\":\"allow\",\"protocol\":\"tcp\",\"destPort\":443,\"destCidr\":\"192.168.1.0/24\",\"srcPort\":\"Any\",\"srcCidr\":\"Any\",\"syslogEnabled\":false}]}' 'https://api.meraki.com/api/v0/networks/{networkId}/l3FirewallRules'\n```",
        "summary": "updateNetworkL3FirewallRules",
        "tags": [
          "MX L3 firewall"
        ],
        "operationId": "NetworksL3FirewallRulesByNetworkIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "updateNetworkL3FirewallRules",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateNetworkL3FirewallRules"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "comment": "Allow TCP traffic to subnet with HTTP servers.",
                  "policy": "allow",
                  "protocol": "tcp",
                  "destPort": 443,
                  "destCidr": "192.168.1.0/24",
                  "srcPort": "Any",
                  "srcCidr": "Any",
                  "syslogEnabled": false
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/l7FirewallRules/applicationCategories": {
      "get": {
        "description": "Return the L7 firewall application categories and their associated applications for an MX network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/l7FirewallRules/applicationCategories'\n```",
        "summary": "getNetworkL7FirewallRulesApplicationCategories",
        "tags": [
          "MX L7 application categories"
        ],
        "operationId": "NetworksL7FirewallRulesApplicationCategoriesByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "applicationCategories": [
                    {
                      "id": "meraki:layer7/category/24",
                      "name": "Advertising",
                      "applications": [
                        {
                          "id": "meraki:layer7/application/5",
                          "name": "Advertising.com"
                        },
                        {
                          "id": "meraki:layer7/application/0",
                          "name": "AppNexus"
                        },
                        {
                          "id": "meraki:layer7/application/1",
                          "name": "Brightroll"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/l7FirewallRules": {
      "get": {
        "description": "List the MX L7 firewall rules for an MX network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/l7FirewallRules'\n```",
        "summary": "getNetworkL7FirewallRules",
        "tags": [
          "MX L7 firewall"
        ],
        "operationId": "NetworksL7FirewallRulesByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "rules": [
                  {
                    "policy": "deny",
                    "type": "application",
                    "value": {
                      "id": "meraki:layer7/application/67",
                      "name": "Xbox LIVE"
                    }
                  },
                  {
                    "policy": "deny",
                    "type": "applicationCategory",
                    "value": {
                      "id": "meraki:layer7/category/2",
                      "name": "Blogging"
                    }
                  },
                  {
                    "policy": "deny",
                    "type": "host",
                    "value": "google.com"
                  },
                  {
                    "policy": "deny",
                    "type": "port",
                    "value": "23"
                  },
                  {
                    "policy": "deny",
                    "type": "ipRange",
                    "value": "10.11.12.00/24"
                  },
                  {
                    "policy": "deny",
                    "type": "ipRange",
                    "value": "10.11.12.00/24:5555"
                  },
                  {
                    "policy": "deny",
                    "type": "blacklistedCountries",
                    "value": [
                      "AX",
                      "CA"
                    ]
                  },
                  {
                    "policy": "deny",
                    "type": "whitelistedCountries",
                    "value": [
                      "US"
                    ]
                  }
                ]
              }
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update the MX L7 firewall rules for an MX network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"rules\":[{\"policy\":\"deny\",\"type\":\"application\",\"value\":{\"id\":\"meraki:layer7/application/67\"}},{\"policy\":\"deny\",\"type\":\"applicationCategory\",\"value\":{\"id\":\"meraki:layer7/category/2\"}},{\"policy\":\"deny\",\"type\":\"host\",\"value\":\"google.com\"},{\"policy\":\"deny\",\"type\":\"port\",\"value\":\"23\"},{\"policy\":\"deny\",\"type\":\"ipRange\",\"value\":\"10.11.12.00/24\"},{\"policy\":\"deny\",\"type\":\"ipRange\",\"value\":\"10.11.12.00/24:5555\"},{\"policy\":\"deny\",\"type\":\"blacklistedCountries\",\"value\":[\"AX\",\"CA\"]},{\"policy\":\"deny\",\"type\":\"whitelistedCountries\",\"value\":[\"US\"]}]}' 'https://api.meraki.com/api/v0/networks/[networkId]/l7FirewallRules'\n```",
        "summary": "updateNetworkL7FirewallRules",
        "tags": [
          "MX L7 firewall"
        ],
        "operationId": "NetworksL7FirewallRulesByNetworkIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "updateNetworkL7FirewallRules",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateNetworkL7FirewallRules"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "rules": [
                  {
                    "policy": "deny",
                    "type": "application",
                    "value": {
                      "id": "meraki:layer7/application/67",
                      "name": "Xbox LIVE"
                    }
                  },
                  {
                    "policy": "deny",
                    "type": "applicationCategory",
                    "value": {
                      "id": "meraki:layer7/category/2",
                      "name": "Blogging"
                    }
                  },
                  {
                    "policy": "deny",
                    "type": "host",
                    "value": "google.com"
                  },
                  {
                    "policy": "deny",
                    "type": "port",
                    "value": "23"
                  },
                  {
                    "policy": "deny",
                    "type": "ipRange",
                    "value": "10.11.12.00/24"
                  },
                  {
                    "policy": "deny",
                    "type": "ipRange",
                    "value": "10.11.12.00/24:5555"
                  },
                  {
                    "policy": "deny",
                    "type": "blacklistedCountries",
                    "value": [
                      "AX",
                      "CA"
                    ]
                  },
                  {
                    "policy": "deny",
                    "type": "whitelistedCountries",
                    "value": [
                      "US"
                    ]
                  }
                ]
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/organizations/{organizationId}/vpnFirewallRules": {
      "get": {
        "description": "Return the firewall rules for an organization's site-to-site VPN\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/organizations/{organizationId}/vpnFirewallRules'\n```",
        "summary": "getOrganizationVpnFirewallRules",
        "tags": [
          "MX VPN firewall"
        ],
        "operationId": "OrganizationsVpnFirewallRulesByOrganizationIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "comment": "Allow TCP traffic to subnet with HTTP servers.",
                  "policy": "allow",
                  "protocol": "tcp",
                  "destPort": 443,
                  "destCidr": "192.168.1.0/24",
                  "srcPort": "Any",
                  "srcCidr": "Any",
                  "syslogEnabled": false
                }
              ]
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update the firewall rules of an organization's site-to-site VPN\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"rules\":[{\"comment\":\"Allow TCP traffic to subnet with HTTP servers.\",\"policy\":\"allow\",\"protocol\":\"tcp\",\"destPort\":443,\"destCidr\":\"192.168.1.0/24\",\"srcPort\":\"Any\",\"srcCidr\":\"Any\",\"syslogEnabled\":false}]}' 'https://api.meraki.com/api/v0/organizations/{organizationId}/vpnFirewallRules'\n```",
        "summary": "updateOrganizationVpnFirewallRules",
        "tags": [
          "MX VPN firewall"
        ],
        "operationId": "OrganizationsVpnFirewallRulesByOrganizationIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "updateOrganizationVpnFirewallRules",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateOrganizationVpnFirewallRules"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "comment": "Allow TCP traffic to subnet with HTTP servers.",
                  "policy": "allow",
                  "protocol": "tcp",
                  "destPort": 443,
                  "destCidr": "192.168.1.0/24",
                  "srcPort": "Any",
                  "srcCidr": "Any",
                  "syslogEnabled": false
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/ssids/{number}/l3FirewallRules": {
      "get": {
        "description": "Return the L3 firewall rules for an SSID on an MR network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/{networkId}/ssids/{number}/l3FirewallRules'\n```",
        "summary": "getNetworkSsidL3FirewallRules",
        "tags": [
          "MR L3 firewall"
        ],
        "operationId": "NetworksSsidsL3FirewallRulesByNetworkIdAndNumberGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "number",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "comment": "Allow TCP traffic to subnet with HTTP servers.",
                  "policy": "allow",
                  "protocol": "tcp",
                  "destPort": 443,
                  "destCidr": "192.168.1.0/24"
                }
              ]
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update the L3 firewall rules of an SSID on an MR network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"rules\":[{\"comment\":\"Allow TCP traffic to subnet with HTTP servers.\",\"policy\":\"allow\",\"protocol\":\"tcp\",\"destPort\":443,\"destCidr\":\"192.168.1.0/24\"}]}' 'https://api.meraki.com/api/v0/networks/{networkId}/ssids/{number}/l3FirewallRules'\n```",
        "summary": "updateNetworkSsidL3FirewallRules",
        "tags": [
          "MR L3 firewall"
        ],
        "operationId": "NetworksSsidsL3FirewallRulesByNetworkIdAndNumberPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "number",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "updateNetworkSsidL3FirewallRules",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateNetworkSsidL3FirewallRules"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "comment": "Allow TCP traffic to subnet with HTTP servers.",
                  "policy": "allow",
                  "protocol": "tcp",
                  "destPort": 443,
                  "destCidr": "192.168.1.0/24"
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/groupPolicies": {
      "get": {
        "description": "List the group policies in a network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/{networkId}/groupPolicies'\n```",
        "summary": "getNetworkGroupPolicies",
        "tags": [
          "Group policies"
        ],
        "operationId": "NetworksGroupPoliciesByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "name": "No video streaming",
                  "groupPolicyId": "101",
                  "scheduling": {
                    "enabled": true,
                    "monday": {
                      "active": true,
                      "from": "9:00",
                      "to": "17:00"
                    },
                    "tuesday": {
                      "active": true,
                      "from": "9:00",
                      "to": "17:00"
                    },
                    "wednesday": {
                      "active": true,
                      "from": "9:00",
                      "to": "17:00"
                    },
                    "thursday": {
                      "active": true,
                      "from": "9:00",
                      "to": "17:00"
                    },
                    "friday": {
                      "active": true,
                      "from": "9:00",
                      "to": "17:00"
                    },
                    "saturday": {
                      "active": false,
                      "from": "0:00",
                      "to": "24:00"
                    },
                    "sunday": {
                      "active": false,
                      "from": "0:00",
                      "to": "24:00"
                    }
                  },
                  "bandwidth": {
                    "settings": "custom",
                    "bandwidthLimits": {
                      "limitUp": 1000000,
                      "limitDown": 1000000
                    }
                  }
                }
              ]
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a group policy\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST --data-binary '{\"name\":\"No video streaming\",\"scheduling\":{\"enabled\":true,\"monday\":{\"active\":true,\"from\":\"9:00\",\"to\":\"17:00\"},\"tuesday\":{\"active\":true,\"from\":\"9:00\",\"to\":\"17:00\"},\"wednesday\":{\"active\":true,\"from\":\"9:00\",\"to\":\"17:00\"},\"thursday\":{\"active\":true,\"from\":\"9:00\",\"to\":\"17:00\"},\"friday\":{\"active\":true,\"from\":\"9:00\",\"to\":\"17:00\"},\"saturday\":{\"active\":false,\"from\":\"0:00\",\"to\":\"24:00\"},\"sunday\":{\"active\":false,\"from\":\"0:00\",\"to\":\"24:00\"}},\"bandwidth\":{\"settings\":\"custom\",\"bandwidthLimits\":{\"limitUp\":1000000,\"limitDown\":1000000}}}' 'https://api.meraki.com/api/v0/networks/{networkId}/groupPolicies'\n```",
        "summary": "createNetworkGroupPolicies",
        "tags": [
          "Group policies"
        ],
        "operationId": "NetworksGroupPoliciesByNetworkIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "createNetworkGroupPolicies",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/createNetworkGroupPolicies"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "name": "No video streaming",
                "groupPolicyId": "101",
                "scheduling": {
                  "enabled": true,
                  "monday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "tuesday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "wednesday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "thursday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "friday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "saturday": {
                    "active": false,
                    "from": "0:00",
                    "to": "24:00"
                  },
                  "sunday": {
                    "active": false,
                    "from": "0:00",
                    "to": "24:00"
                  }
                },
                "bandwidth": {
                  "settings": "custom",
                  "bandwidthLimits": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  }
                }
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/groupPolicies/{groupPolicyId}": {
      "get": {
        "description": "Display a group policy\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/{networkId}/groupPolicies/{groupPolicyId}'\n```",
        "summary": "getNetworkGroupPolicy",
        "tags": [
          "Group policies"
        ],
        "operationId": "NetworksGroupPoliciesByNetworkIdAndGroupPolicyIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "groupPolicyId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "name": "No video streaming",
                "groupPolicyId": "101",
                "scheduling": {
                  "enabled": true,
                  "monday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "tuesday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "wednesday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "thursday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "friday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "saturday": {
                    "active": false,
                    "from": "0:00",
                    "to": "24:00"
                  },
                  "sunday": {
                    "active": false,
                    "from": "0:00",
                    "to": "24:00"
                  }
                },
                "bandwidth": {
                  "settings": "custom",
                  "bandwidthLimits": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  }
                }
              }
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a group policy\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"name\":\"No video streaming\",\"scheduling\":{\"enabled\":true,\"monday\":{\"active\":true,\"from\":\"9:00\",\"to\":\"17:00\"},\"tuesday\":{\"active\":true,\"from\":\"9:00\",\"to\":\"17:00\"},\"wednesday\":{\"active\":true,\"from\":\"9:00\",\"to\":\"17:00\"},\"thursday\":{\"active\":true,\"from\":\"9:00\",\"to\":\"17:00\"},\"friday\":{\"active\":true,\"from\":\"9:00\",\"to\":\"17:00\"},\"saturday\":{\"active\":false,\"from\":\"0:00\",\"to\":\"24:00\"},\"sunday\":{\"active\":false,\"from\":\"0:00\",\"to\":\"24:00\"}},\"bandwidth\":{\"settings\":\"custom\",\"bandwidthLimits\":{\"limitUp\":1000000,\"limitDown\":1000000}}}' 'https://api.meraki.com/api/v0/networks/{networkId}/groupPolicies/{groupPolicyId}'\n```",
        "summary": "updateNetworkGroupPolicy",
        "tags": [
          "Group policies"
        ],
        "operationId": "NetworksGroupPoliciesByNetworkIdAndGroupPolicyIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "groupPolicyId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "updateNetworkGroupPolicy",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateNetworkGroupPolicy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "name": "No video streaming",
                "groupPolicyId": "101",
                "scheduling": {
                  "enabled": true,
                  "monday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "tuesday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "wednesday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "thursday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "friday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "saturday": {
                    "active": false,
                    "from": "0:00",
                    "to": "24:00"
                  },
                  "sunday": {
                    "active": false,
                    "from": "0:00",
                    "to": "24:00"
                  }
                },
                "bandwidth": {
                  "settings": "custom",
                  "bandwidthLimits": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  }
                }
              }
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a group policy\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X DELETE 'https://api.meraki.com/api/v0/networks/{networkId}/groupPolicies/{groupPolicyId}'\n```",
        "summary": "deleteNetworkGroupPolicy",
        "tags": [
          "Group policies"
        ],
        "operationId": "NetworksGroupPoliciesByNetworkIdAndGroupPolicyIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "groupPolicyId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation",
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/httpServers": {
      "get": {
        "description": "List the HTTP servers for a network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/httpServers'\n```",
        "summary": "getNetworkHttpServers",
        "tags": [
          "HTTP servers"
        ],
        "operationId": "NetworksHttpServersByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "id": "ABC123",
                  "networkId": "N_123",
                  "name": "My HTTP server",
                  "url": "https://www.example.com/webhooks",
                  "sharedSecret": "foobar"
                }
              ]
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Add an HTTP server\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST --data-binary '{\"name\":\"My HTTP server\",\"url\":\"https://www.example.com/webhooks\",\"sharedSecret\":\"foobar\"}' 'https://api.meraki.com/api/v0/networks/[networkId]/httpServers'\n```",
        "summary": "createNetworkHttpServers",
        "tags": [
          "HTTP servers"
        ],
        "operationId": "NetworksHttpServersByNetworkIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "createNetworkHttpServers",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/createNetworkHttpServers"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "id": "ABC123",
                "networkId": "N_123",
                "name": "My HTTP server",
                "url": "https://www.example.com/webhooks",
                "sharedSecret": "foobar"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/httpServers/{id}": {
      "get": {
        "description": "Return an HTTP server\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/httpServers/[id]'\n```",
        "summary": "getNetworkHttpServer",
        "tags": [
          "HTTP servers"
        ],
        "operationId": "NetworksHttpServersByNetworkIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "id": "ABC123",
                "networkId": "N_123",
                "name": "My HTTP server",
                "url": "https://www.example.com/webhooks",
                "sharedSecret": "foobar"
              }
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update an HTTP server\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"name\":\"My HTTP server\",\"url\":\"https://www.example.com/webhooks\",\"sharedSecret\":\"foobar\"}' 'https://api.meraki.com/api/v0/networks/[networkId]/httpServers/[id]'\n```",
        "summary": "updateNetworkHttpServer",
        "tags": [
          "HTTP servers"
        ],
        "operationId": "NetworksHttpServersByNetworkIdAndIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "updateNetworkHttpServer",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateNetworkHttpServer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "id": "ABC123",
                "networkId": "N_123",
                "name": "My HTTP server",
                "url": "https://www.example.com/webhooks",
                "sharedSecret": "foobar"
              }
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete an HTTP server\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X DELETE 'https://api.meraki.com/api/v0/networks/[networkId]/httpServers/[id]'\n```",
        "summary": "deleteNetworkHttpServer",
        "tags": [
          "HTTP servers"
        ],
        "operationId": "NetworksHttpServersByNetworkIdAndIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation",
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/httpServers/webhookTests": {
      "post": {
        "description": "Send a test webhook\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST 'https://api.meraki.com/api/v0/networks/[networkId]/httpServers/webhookTests'\n```",
        "summary": "createNetworkHttpServersWebhookTests",
        "tags": [
          "HTTP servers"
        ],
        "operationId": "NetworksHttpServersWebhookTestsByNetworkIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "createNetworkHttpServersWebhookTests",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/createNetworkHttpServersWebhookTests"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "id": "1234",
                "url": "https://www.example.com/path",
                "status": "enqueued"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/httpServers/webhookTests/{id}": {
      "get": {
        "description": "Return the status of a webhook test\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/httpServers/webhookTests/[id]'\n```",
        "summary": "getNetworkHttpServersWebhookTest",
        "tags": [
          "HTTP servers"
        ],
        "operationId": "NetworksHttpServersWebhookTestsByNetworkIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "id": "1234",
                "url": "https://www.example.com/path",
                "status": "delivered"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/merakiAuthUsers": {
      "get": {
        "description": "List the splash or RADIUS users configured under Meraki Authentication for a network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/merakiAuthUsers'\n```",
        "summary": "getNetworkMerakiAuthUsers",
        "tags": [
          "Meraki auth users"
        ],
        "operationId": "NetworksMerakiAuthUsersByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "id": "aGlAaGkuY29t",
                  "email": "miles@meraki.com",
                  "name": "Miles Meraki",
                  "createdAt": 1518365681,
                  "accountType": "Guest",
                  "authorizations": [
                    {
                      "authorizedZone": "Store WiFi",
                      "expiresAt": 1526087474,
                      "authorizedByName": "Miles Meraki",
                      "authorizedByEmail": "miles@meraki.com"
                    }
                  ]
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/merakiAuthUsers/{id}": {
      "get": {
        "description": "Return the Meraki Auth splash or RADIUS user\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/merakiAuthUsers/[id]'\n```",
        "summary": "getNetworkMerakiAuthUser",
        "tags": [
          "Meraki auth users"
        ],
        "operationId": "NetworksMerakiAuthUsersByNetworkIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "id": "aGlAaGkuY29t",
                "email": "miles@meraki.com",
                "name": "Miles Meraki",
                "createdAt": 1518365681,
                "accountType": "Guest",
                "authorizations": [
                  {
                    "authorizedZone": "Store WiFi",
                    "expiresAt": 1526087474,
                    "authorizedByName": "Miles Meraki",
                    "authorizedByEmail": "miles@meraki.com"
                  }
                ]
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/organizations": {
      "get": {
        "description": "List the organizations that the user has privileges on\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/organizations'\n```",
        "summary": "getOrganizations",
        "tags": [
          "Organizations"
        ],
        "operationId": "OrganizationsGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "id": 2930418,
                  "name": "My organization"
                }
              ]
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a new organization\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST --data-binary '{\"name\":\"My organization\"}' 'https://api.meraki.com/api/v0/organizations'\n```",
        "summary": "createOrganizations",
        "tags": [
          "Organizations"
        ],
        "operationId": "OrganizationsPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "createOrganizations",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/createOrganizations"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "id": 2930418,
                "name": "My organization"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/organizations/{id}": {
      "get": {
        "description": "Return an organization\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/organizations/[id]'\n```",
        "summary": "getOrganization",
        "tags": [
          "Organizations"
        ],
        "operationId": "OrganizationsByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "id": 2930418,
                "name": "My organization"
              }
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update an organization\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"name\":\"My organization\"}' 'https://api.meraki.com/api/v0/organizations/[id]'\n```",
        "summary": "updateOrganization",
        "tags": [
          "Organizations"
        ],
        "operationId": "OrganizationsByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "updateOrganization",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateOrganization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "id": 2930418,
                "name": "My organization"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/organizations/{id}/clone": {
      "post": {
        "description": "Create a new organization by cloning the addressed organization\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST --data-binary '{\"name\":\"My organization\"}' 'https://api.meraki.com/api/v0/organizations/[id]/clone'\n```",
        "summary": "cloneOrganization",
        "tags": [
          "Organizations"
        ],
        "operationId": "OrganizationsCloneByIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "cloneOrganization",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/cloneOrganization"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "id": 2930418,
                "name": "My organization"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/organizations/{id}/licenseState": {
      "get": {
        "description": "Return the license state for an organization\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/organizations/[id]/licenseState'\n```",
        "summary": "getOrganizationLicenseState",
        "tags": [
          "Organizations"
        ],
        "operationId": "OrganizationsLicenseStateByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "status": "OK",
                "expirationDate": "Feb 8, 2020 UTC",
                "licensedDeviceCounts": {
                  "MS": 100
                }
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/organizations/{id}/inventory": {
      "get": {
        "description": "Return the inventory for an organization\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/organizations/[id]/inventory'\n```",
        "summary": "getOrganizationInventory",
        "tags": [
          "Organizations"
        ],
        "operationId": "OrganizationsInventoryByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "mac": "00:11:22:33:44:55",
                  "serial": "Q234-ABCD-5678",
                  "networkId": "N_24329156",
                  "model": "MR34",
                  "claimedAt": 1518365681.0,
                  "publicIp": "123.123.123.1",
                  "name": "My AP"
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/organizations/{id}/deviceStatuses": {
      "get": {
        "description": "List the status of every Meraki device in the organization\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/organizations/[id]/deviceStatuses'\n```",
        "summary": "getOrganizationDeviceStatuses",
        "tags": [
          "Organizations"
        ],
        "operationId": "OrganizationsDeviceStatusesByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "name": "My AP",
                  "serial": "Q234-ABCD-5678",
                  "mac": "00:11:22:33:44:55",
                  "status": "online",
                  "lanIp": "1.2.3.4",
                  "publicIp": "123.123.123.1",
                  "networkId": "N_24329156"
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/organizations/{id}/snmp": {
      "get": {
        "description": "Return the SNMP settings for an organization\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/organizations/[id]/snmp'\n```",
        "summary": "getOrganizationSnmp",
        "tags": [
          "Organizations"
        ],
        "operationId": "OrganizationsSnmpByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "v2cEnabled": false,
                "v3Enabled": false,
                "v3AuthMode": "SHA",
                "v3PrivMode": "AES128",
                "peerIps": "123.123.123.1",
                "hostname": "n1.meraki.com",
                "port": 443
              }
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update the SNMP settings for an organization\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"v2cEnabled\":false,\"v3Enabled\":false}' 'https://api.meraki.com/api/v0/organizations/[id]/snmp'\n```",
        "summary": "updateOrganizationSnmp",
        "tags": [
          "Organizations"
        ],
        "operationId": "OrganizationsSnmpByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "updateOrganizationSnmp",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateOrganizationSnmp"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "v2cEnabled": false,
                "v3Enabled": false,
                "v3AuthMode": "SHA",
                "v3PrivMode": "AES128",
                "peerIps": "123.123.123.1",
                "hostname": "n1.meraki.com",
                "port": 443
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/organizations/{id}/thirdPartyVPNPeers": {
      "get": {
        "description": "Return the third party VPN peers for an organization\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/organizations/[id]/thirdPartyVPNPeers'\n```",
        "summary": "getOrganizationThirdPartyVPNPeers",
        "tags": [
          "Organizations"
        ],
        "operationId": "OrganizationsThirdPartyVPNPeersByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                [
                  {
                    "name": "My peer 1",
                    "publicIp": "123.123.123.1",
                    "privateSubnets": [
                      "192.168.1.0/24",
                      "192.168.128.0/24"
                    ],
                    "secret": "asdf1234",
                    "ipsecPolicies": {
                      "ikeCipherAlgo": [
                        "tripledes"
                      ],
                      "ikeAuthAlgo": [
                        "sha1"
                      ],
                      "ikeDiffieHellmanGroup": [
                        "group2"
                      ],
                      "ikeLifetime": "28800",
                      "childCipherAlgo": [
                        "aes128"
                      ],
                      "childAuthAlgo": [
                        "sha1"
                      ],
                      "childPfsGroup": [
                        "disabled"
                      ],
                      "childLifetime": "28800"
                    }
                  },
                  {
                    "name": "My peer 2",
                    "publicIp": "123.123.123.2",
                    "privateSubnets": [
                      "192.168.2.0/24",
                      "192.168.129.0/24"
                    ],
                    "secret": "asdf56785678567856785678",
                    "ipsecPoliciesPreset": "default"
                  }
                ]
              ]
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update the third party VPN peers for an organization\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '[[{\"name\":\"My peer 1\",\"publicIp\":\"123.123.123.1\",\"privateSubnets\":[\"192.168.1.0/24\",\"192.168.128.0/24\"],\"secret\":\"asdf1234\",\"ipsecPolicies\":{\"ikeCipherAlgo\":[\"tripledes\"],\"ikeAuthAlgo\":[\"sha1\"],\"ikeDiffieHellmanGroup\":[\"group2\"],\"ikeLifetime\":\"28800\",\"childCipherAlgo\":[\"aes128\"],\"childAuthAlgo\":[\"sha1\"],\"childPfsGroup\":[\"disabled\"],\"childLifetime\":\"28800\"}},{\"name\":\"My peer 2\",\"publicIp\":\"123.123.123.2\",\"privateSubnets\":[\"192.168.2.0/24\",\"192.168.129.0/24\"],\"secret\":\"asdf56785678567856785678\",\"ipsecPoliciesPreset\":\"default\"}]]' 'https://api.meraki.com/api/v0/organizations/[id]/thirdPartyVPNPeers'\n```",
        "summary": "updateOrganizationThirdPartyVPNPeers",
        "tags": [
          "Organizations"
        ],
        "operationId": "OrganizationsThirdPartyVPNPeersByIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "updateOrganizationThirdPartyVPNPeers",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateOrganizationThirdPartyVPNPeers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                [
                  {
                    "name": "My peer 1",
                    "publicIp": "123.123.123.1",
                    "privateSubnets": [
                      "192.168.1.0/24",
                      "192.168.128.0/24"
                    ],
                    "secret": "asdf1234",
                    "ipsecPolicies": {
                      "ikeCipherAlgo": [
                        "tripledes"
                      ],
                      "ikeAuthAlgo": [
                        "sha1"
                      ],
                      "ikeDiffieHellmanGroup": [
                        "group2"
                      ],
                      "ikeLifetime": "28800",
                      "childCipherAlgo": [
                        "aes128"
                      ],
                      "childAuthAlgo": [
                        "sha1"
                      ],
                      "childPfsGroup": [
                        "disabled"
                      ],
                      "childLifetime": "28800"
                    }
                  },
                  {
                    "name": "My peer 2",
                    "publicIp": "123.123.123.2",
                    "privateSubnets": [
                      "192.168.2.0/24",
                      "192.168.129.0/24"
                    ],
                    "secret": "asdf56785678567856785678",
                    "ipsecPoliciesPreset": "default"
                  }
                ]
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/organizations/{organizationId}/claim": {
      "post": {
        "description": "Claim a device, license key, or order into an organization. When claiming by order, all devices and licenses in the order will be claimed; licenses will be added to the organization and devices will be placed in the organization's inventory. These three types of claims are mutually exclusive and cannot be performed in one request.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST --data-binary '{\"order\":\"4CXXXXXXX\"}' 'https://api.meraki.com/api/v0/organizations/{organizationId}/claim'\n```",
        "summary": "claimOrganization",
        "tags": [
          "Organizations"
        ],
        "operationId": "OrganizationsClaimByOrganizationIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "claimOrganization",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/claimOrganization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {}
          }
        }
      }
    },
    "/organizations/{organizationId}/uplinksLossAndLatency": {
      "get": {
        "description": "Return the uplink loss and latency for every MX in the organization from 2 - 7 minutes ago\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/organizations/{organizationId}/uplinksLossAndLatency'\n```",
        "summary": "getOrganizationUplinksLossAndLatency",
        "tags": [
          "Organizations"
        ],
        "operationId": "OrganizationsUplinksLossAndLatencyByOrganizationIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "uplink",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Optional filter for a specific WAN uplink. Valid uplinks are wan1, wan2, cellular. Default will return all uplinks."
          },
          {
            "name": "ip",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Optional filter for a specific destination IP. Default will return all destination IPs."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "networkId": "N_12345",
                  "serial": "Q2AB-CDEF-GHIJ",
                  "uplink": "wan1",
                  "ip": "8.8.8.8",
                  "timeSeries": [
                    {
                      "ts": "2019-01-31T18:46:13Z",
                      "lossPercent": 5.3,
                      "latencyMs": 194.9
                    }
                  ]
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/pii/piiKeys": {
      "get": {
        "description": "List the keys required to access Personally Identifiable Information (PII) for a given identifier. Exactly one identifier will be accepted. If the organization contains org-wide Systems Manager users matching the key provided then there will be an entry with the key \"0\" containing the applicable keys.\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/piiKeys\n```\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/pii/piiKeys'\n```",
        "summary": "getNetworkPiiPiiKeys",
        "tags": [
          "PII"
        ],
        "operationId": "NetworksPiiPiiKeysByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "username",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The username of a Systems Manager user"
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The email of a network user account or a Systems Manager device"
          },
          {
            "name": "mac",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The MAC of a network client device or a Systems Manager device"
          },
          {
            "name": "serial",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The serial of a Systems Manager device"
          },
          {
            "name": "imei",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The IMEI of a Systems Manager device"
          },
          {
            "name": "bluetoothMac",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The MAC of a Bluetooth client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/pii/smDevicesForKey": {
      "get": {
        "description": "Given a piece of Personally Identifiable Information (PII), return the Systems Manager device ID(s) associated with that identifier. These device IDs can be used with the Systems Manager API endpoints to retrieve device details. Exactly one identifier will be accepted.\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/smDevicesForKey\n```\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/pii/smDevicesForKey'\n```",
        "summary": "getNetworkPiiSmDevicesForKey",
        "tags": [
          "PII"
        ],
        "operationId": "NetworksPiiSmDevicesForKeyByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "username",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The username of a Systems Manager user"
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The email of a network user account or a Systems Manager device"
          },
          {
            "name": "mac",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The MAC of a network client device or a Systems Manager device"
          },
          {
            "name": "serial",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The serial of a Systems Manager device"
          },
          {
            "name": "imei",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The IMEI of a Systems Manager device"
          },
          {
            "name": "bluetoothMac",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The MAC of a Bluetooth client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/pii/smOwnersForKey": {
      "get": {
        "description": "Given a piece of Personally Identifiable Information (PII), return the Systems Manager owner ID(s) associated with that identifier. These owner IDs can be used with the Systems Manager API endpoints to retrieve owner details. Exactly one identifier will be accepted.\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/smOwnersForKey\n```\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/pii/smOwnersForKey'\n```",
        "summary": "getNetworkPiiSmOwnersForKey",
        "tags": [
          "PII"
        ],
        "operationId": "NetworksPiiSmOwnersForKeyByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "username",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The username of a Systems Manager user"
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The email of a network user account or a Systems Manager device"
          },
          {
            "name": "mac",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The MAC of a network client device or a Systems Manager device"
          },
          {
            "name": "serial",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The serial of a Systems Manager device"
          },
          {
            "name": "imei",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The IMEI of a Systems Manager device"
          },
          {
            "name": "bluetoothMac",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The MAC of a Bluetooth client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/pii/requests": {
      "get": {
        "description": "List the PII requests for this network or organization\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/requests\n```\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/pii/requests'\n```",
        "summary": "getNetworkPiiRequests",
        "tags": [
          "PII"
        ],
        "operationId": "NetworksPiiRequestsByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Submit a new delete or restrict processing PII request\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/requests\n```\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -X POST -H 'Content-Type: application/json' --data-binary '{\"type\":\"delete\", \"datasets\":\"[\"usage\",\"events\"]\", \"mac\":\"00:77:00:77:00:77\"}' 'https://api.meraki.com/api/v0/networks/[networkId]/pii/requests'\n\n```",
        "summary": "createNetworkPiiRequests",
        "tags": [
          "PII"
        ],
        "operationId": "NetworksPiiRequestsByNetworkIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "createNetworkPiiRequests",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/createNetworkPiiRequests"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/pii/requests/{id}": {
      "get": {
        "description": "Return a PII request\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/requests/{id}\n```\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/pii/requests/[id]'\n```",
        "summary": "getNetworkPiiRequest",
        "tags": [
          "PII"
        ],
        "operationId": "NetworksPiiRequestsByNetworkIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a restrict processing PII request\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/requests/{id}\n```\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X DELETE 'https://api.meraki.com/api/v0/networks/[networkId]/pii/requests/[id]'\n```",
        "summary": "deleteNetworkPiiRequest",
        "tags": [
          "PII"
        ],
        "operationId": "NetworksPiiRequestsByNetworkIdAndIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation",
            "headers": {}
          }
        }
      }
    },
    "/organizations/{organizationId}/samlRoles": {
      "get": {
        "description": "List the SAML roles for this organization\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/organizations/[organizationId]/samlRoles'\n```",
        "summary": "getOrganizationSamlRoles",
        "tags": [
          "SAML roles"
        ],
        "operationId": "OrganizationsSamlRolesByOrganizationIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "id": "TEdJIEN1c3RvbWVy",
                  "role": "myrole",
                  "orgAccess": "none",
                  "networks": [
                    {
                      "id": "N_1234",
                      "access": "full"
                    }
                  ],
                  "tags": [
                    {
                      "tag": "west",
                      "access": "read-only"
                    }
                  ]
                }
              ]
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a SAML role\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST 'https://api.meraki.com/api/v0/organizations/[organizationId]/samlRoles'\n```",
        "summary": "createOrganizationSamlRoles",
        "tags": [
          "SAML roles"
        ],
        "operationId": "OrganizationsSamlRolesByOrganizationIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "createOrganizationSamlRoles",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/createOrganizationSamlRoles"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "id": "TEdJIEN1c3RvbWVy",
                "role": "myrole",
                "orgAccess": "none",
                "networks": [
                  {
                    "id": "N_1234",
                    "access": "full"
                  }
                ],
                "tags": [
                  {
                    "tag": "west",
                    "access": "read-only"
                  }
                ]
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/organizations/{organizationId}/samlRoles/{id}": {
      "get": {
        "description": "Return a SAML role\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/organizations/[organizationId]/samlRoles/[id]'\n```",
        "summary": "getOrganizationSamlRole",
        "tags": [
          "SAML roles"
        ],
        "operationId": "OrganizationsSamlRolesByOrganizationIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "id": "TEdJIEN1c3RvbWVy",
                "role": "myrole",
                "orgAccess": "none",
                "networks": [
                  {
                    "id": "N_1234",
                    "access": "full"
                  }
                ],
                "tags": [
                  {
                    "tag": "west",
                    "access": "read-only"
                  }
                ]
              }
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a SAML role\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT 'https://api.meraki.com/api/v0/organizations/[organizationId]/samlRoles/[id]'\n```",
        "summary": "updateOrganizationSamlRole",
        "tags": [
          "SAML roles"
        ],
        "operationId": "OrganizationsSamlRolesByOrganizationIdAndIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "updateOrganizationSamlRole",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateOrganizationSamlRole"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "id": "TEdJIEN1c3RvbWVy",
                "role": "myrole",
                "orgAccess": "none",
                "networks": [
                  {
                    "id": "N_1234",
                    "access": "full"
                  }
                ],
                "tags": [
                  {
                    "tag": "west",
                    "access": "read-only"
                  }
                ]
              }
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Remove a SAML role\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X DELETE 'https://api.meraki.com/api/v0/organizations/[organizationId]/samlRoles/[id]'\n```",
        "summary": "deleteOrganizationSamlRole",
        "tags": [
          "SAML roles"
        ],
        "operationId": "OrganizationsSamlRolesByOrganizationIdAndIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/clients/{clientId}/securityEvents": {
      "get": {
        "description": "List the security events\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/{networkId}/clients/{clientId}/securityEvents'\n```",
        "summary": "getNetworkClientSecurityEvents",
        "tags": [
          "Client security events"
        ],
        "operationId": "NetworksClientsSecurityEventsByNetworkIdAndClientIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "perPage",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32",
            "description": "The number of entries per page returned. Acceptable range is 3 - 1000."
          },
          {
            "name": "t0",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 791 days from today."
          },
          {
            "name": "t1",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The end of the timespan for the data. t1 can be a maximum of 791 days after t0."
          },
          {
            "name": "timespan",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 791 days. The default is 31 days."
          },
          {
            "name": "startingAfter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "name": "endingBefore",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "ts": 1547683314.2703979,
                  "deviceMac": "00:18:0a:01:02:03",
                  "clientMac": "A1:B2:C3:D4:E5:F6",
                  "srcIp": "1.2.3.4:34195",
                  "destIp": "10.20.30.40:80",
                  "protocol": "tcp/ip",
                  "priority": "2",
                  "classification": "4",
                  "blocked": true,
                  "message": "SERVER-WEBAPP JBoss JMX console access attempt",
                  "signature": "1:21516:9",
                  "sigSource": ""
                },
                {
                  "ts": 1547683827.7232649,
                  "deviceMac": "00:18:0a:01:02:03",
                  "clientMac": "A1:B2:C3:D4:E5:F6",
                  "srcIp": "1.2.3.4:56023",
                  "destIp": "10.20.30.40:80",
                  "protocol": "tcp/ip",
                  "priority": "1",
                  "classification": "33",
                  "blocked": true,
                  "message": "POLICY-OTHER Adobe ColdFusion admin interface access attempt",
                  "signature": "1:25975:2",
                  "sigSource": ""
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/security/malwareSettings": {
      "get": {
        "description": "Returns all supported malware settings for an MX network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/security/malwareSettings'\n```",
        "summary": "getNetworkSecurityMalwareSettings",
        "tags": [
          "Malware settings"
        ],
        "operationId": "NetworksSecurityMalwareSettingsByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "mode": "enabled",
                "allowedUrls": [
                  {
                    "url": "example.org",
                    "comment": "allow example.org"
                  },
                  {
                    "url": "help.com.au",
                    "comment": "allow help.com.au"
                  }
                ],
                "allowedFiles": [
                  {
                    "sha256": "e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503",
                    "comment": "allow ZIP file"
                  }
                ],
                "failureMode": "open"
              }
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Set the supported malware settings for an MX network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"mode\":\"enabled\",\"allowedUrls\":[{\"url\":\"example.org\",\"comment\":\"allow example.org\"},{\"url\":\"help.com.au\",\"comment\":\"allow help.com.au\"}],\"allowedFiles\":[{\"sha256\":\"e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503\",\"comment\":\"allow ZIP file\"}],\"failureMode\":\"open\"}' 'https://api.meraki.com/api/v0/networks/[networkId]/security/malwareSettings'\n```",
        "summary": "updateNetworkSecurityMalwareSettings",
        "tags": [
          "Malware settings"
        ],
        "operationId": "NetworksSecurityMalwareSettingsByNetworkIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "updateNetworkSecurityMalwareSettings",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateNetworkSecurityMalwareSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "mode": "enabled",
                "allowedUrls": [
                  {
                    "url": "example.org",
                    "comment": "allow example.org"
                  },
                  {
                    "url": "help.com.au",
                    "comment": "allow help.com.au"
                  }
                ],
                "allowedFiles": [
                  {
                    "sha256": "e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503",
                    "comment": "allow ZIP file"
                  }
                ],
                "failureMode": "open"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/sm/targetGroups": {
      "get": {
        "description": "List the target groups in this network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/sm/targetGroups'\n```",
        "summary": "getNetworkSmTargetGroups",
        "tags": [
          "Named tag scope"
        ],
        "operationId": "NetworksSmTargetGroupsByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "withDetails",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Boolean indicating if the the ids of the devices or users scoped by the target group should be included in the response"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "name": "My target group",
                  "scope": "none",
                  "tags": "[]",
                  "type": "devices"
                }
              ]
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Add a target group\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST --data-binary '{\"name\":\"My target group\",\"scope\":\"none\",\"tags\":\"[]\",\"type\":\"devices\"}' 'https://api.meraki.com/api/v0/networks/[networkId]/sm/targetGroups'\n```",
        "summary": "createNetworkSmTargetGroups",
        "tags": [
          "Named tag scope"
        ],
        "operationId": "NetworksSmTargetGroupsByNetworkIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "createNetworkSmTargetGroups",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/createNetworkSmTargetGroups"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "name": "My target group",
                "scope": "none",
                "tags": "[]",
                "type": "devices"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/sm/targetGroups/{targetGroupId}": {
      "get": {
        "description": "Return a target group\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/sm/targetGroups/[targetGroupId]'\n```",
        "summary": "getNetworkSmTargetGroup",
        "tags": [
          "Named tag scope"
        ],
        "operationId": "NetworksSmTargetGroupsByNetworkIdAndTargetGroupIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "targetGroupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "withDetails",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Boolean indicating if the the ids of devices or users scoped by the target group should be included in the response"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "name": "My target group",
                "scope": "none",
                "tags": "[]",
                "type": "devices"
              }
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a target group\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"name\":\"My target group\",\"scope\":\"none\",\"tags\":\"[]\",\"type\":\"devices\"}' 'https://api.meraki.com/api/v0/networks/[networkId]/sm/targetGroups/[targetGroupId]'\n```",
        "summary": "updateNetworkSmTargetGroup",
        "tags": [
          "Named tag scope"
        ],
        "operationId": "NetworksSmTargetGroupsByNetworkIdAndTargetGroupIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "targetGroupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "updateNetworkSmTargetGroup",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateNetworkSmTargetGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "name": "My target group",
                "scope": "none",
                "tags": "[]",
                "type": "devices"
              }
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a target group from a network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X DELETE 'https://api.meraki.com/api/v0/networks/[networkId]/sm/targetGroups/[targetGroupId]'\n```",
        "summary": "deleteNetworkSmTargetGroup",
        "tags": [
          "Named tag scope"
        ],
        "operationId": "NetworksSmTargetGroupsByNetworkIdAndTargetGroupIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "targetGroupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation",
            "headers": {}
          }
        }
      }
    },
    "/networks/{network_id}/sm/profile/clarity": {
      "post": {
        "description": "Create a new profile containing a Cisco Clarity payload\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H \"X-Cisco-Meraki-API-KEY: <key>\" \\\n  -X POST \\\n  -H \"Content-Type: multipart/form-data\" \\\n  -F \"scope=withAny, tag1, tag2\" \\\n  -F \"name=Cisco Clarity Config\" \\\n  -F \"PluginBundleID=com.cisco.security.app\" \\\n  -F 'VendorConfig=[ {\"key\":\"cloud_asn1_server_host\", \"type\":\"manual_string\", \"value\":\"immunet.com\"}, {\"key\":\"cloud_asn1_server_port\", \"type\":\"manual_int\", \"value\":443} ]' \\\n  \"https://api.meraki.com/api/v0/networks/[networkId]/sm/profile/clarity\"\n\n```",
        "summary": "createNetworkSmProfileClarity",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmProfileClarityByNetworkIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "createNetworkSmProfileClarity",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/createNetworkSmProfileClarity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{network_id}/sm/profile/clarity/{profileId}": {
      "put": {
        "description": "Update an existing profile containing a Cisco Clarity payload\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H \"X-Cisco-Meraki-API-KEY: <key>\" \\\n  -X PUT \\\n  -H \"Content-Type: multipart/form-data\" \\\n  -F \"scope=withAny, tag1, tag2\" \\\n  -F \"name=Cisco Clarity Config\" \\\n  -F 'VendorConfig=[ {\"key\":\"cloud_asn1_server_host\", \"type\":\"manual_string\", \"value\":\"immunet.com\"}, {\"key\":\"cloud_asn1_server_port\", \"type\":\"manual_int\", \"value\":443} ]' \\\n  \"https://api.meraki.com/api/v0/networks/[networkId]/sm/profile/clarity/[profileId]\"\n\n```",
        "summary": "updateNetworkSmProfileClarity",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmProfileClarityByNetworkIdAndProfileIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "updateNetworkSmProfileClarity",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateNetworkSmProfileClarity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Add a Cisco Clarity payload to an existing profile\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H \"X-Cisco-Meraki-API-KEY: <key>\" \\\n  -X POST \\\n  -H \"Content-Type: multipart/form-data\" \\\n  -F 'VendorConfig=[ {\"key\":\"cloud_asn1_server_host\", \"type\":\"manual_string\", \"value\":\"immunet.com\"}, {\"key\":\"cloud_asn1_server_port\", \"type\":\"manual_int\", \"value\":443} ]' \\\n  \"https://api.meraki.com/api/v0/networks/[networkId]/sm/profile/clarity/[profileId]\"\n\n```",
        "summary": "addNetworkSmProfileClarity",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmProfileClarityByNetworkIdAndProfileIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "addNetworkSmProfileClarity",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/addNetworkSmProfileClarity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {}
          }
        }
      },
      "get": {
        "description": "Get details for a Cisco Clarity payload\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H \"X-Cisco-Meraki-API-KEY: <key>\" \\\n  -X GET \\\n  \"https://api.meraki.com/api/v0/networks/[networkId]/sm/profile/clarity/[profileId]\"\n\n```",
        "summary": "getNetworkSmProfileClarity",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmProfileClarityByNetworkIdAndProfileIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a Cisco Clarity payload. Deletes the entire profile if it's empty after removing the payload.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H \"X-Cisco-Meraki-API-KEY: <key>\" \\\n  -X DELETE \\\n  \"https://api.meraki.com/api/v0/networks/[networkId]/sm/profile/clarity/[profileId]\"\n\n```",
        "summary": "deleteNetworkSmProfileClarity",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmProfileClarityByNetworkIdAndProfileIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {}
          }
        }
      }
    },
    "/networks/{network_id}/sm/profile/umbrella": {
      "post": {
        "description": "Create a new profile containing a Cisco Umbrella payload\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H \"X-Cisco-Meraki-API-KEY: <key>\" \\\n  -X POST \\\n  -H \"Content-Type: multipart/form-data\" \\\n  -F \"scope=withAny, tag1, tag2\" \\\n  -F \"name=Cisco Umbrella Config\" \\\n  -F \"AppBundleIdentifier=com.cisco.security\" \\\n  -F \"ProviderBundleIdentifier=com.cisco.umbrella\" \\\n  -F 'ProviderConfiguration=[ {\"key\":\"internalDomains\", \"type\":\"manual_list\", \"value\":[\"meraki.com\", \"cisco.com\"] }, {\"key\":\"user_id\", \"type\":\"manual_string\", \"value\":\"miles\"} ]' \\\n  -F \"usesCert=true\" \\\n  \"https://api.meraki.com/api/v0/networks/[networkId]/sm/profile/umbrella\"\n\n```",
        "summary": "createNetworkSmProfileUmbrella",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmProfileUmbrellaByNetworkIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "createNetworkSmProfileUmbrella",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/createNetworkSmProfileUmbrella"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{network_id}/sm/profile/umbrella/{profileId}": {
      "put": {
        "description": "Update an existing profile containing a Cisco Umbrella payload\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H \"X-Cisco-Meraki-API-KEY: <key>\" \\\n  -X PUT \\\n  -H \"Content-Type: multipart/form-data\" \\\n  -F \"scope=withAny, tag1, tag2\" \\\n  -F \"name=Cisco Umbrella Config\" \\\n  -F 'ProviderConfiguration=[ {\"key\":\"internalDomains\", \"type\":\"manual_list\", \"value\":[\"meraki.com\", \"cisco.com\"] }, {\"key\":\"user_id\", \"type\":\"manual_string\", \"value\":\"miles\"} ]' \\\n  \"https://api.meraki.com/api/v0/networks/[networkId]/sm/profile/umbrella/[profileId]\"\n\n```",
        "summary": "updateNetworkSmProfileUmbrella",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmProfileUmbrellaByNetworkIdAndProfileIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "updateNetworkSmProfileUmbrella",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateNetworkSmProfileUmbrella"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Add a Cisco Umbrella payload to an existing profile\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H \"X-Cisco-Meraki-API-KEY: <key>\" \\\n  -X POST \\\n  -H \"Content-Type: multipart/form-data\" \\\n  -F 'ProviderConfiguration=[ {\"key\":\"internalDomains\", \"type\":\"manual_list\", \"value\":[\"meraki.com\", \"cisco.com\"] }, {\"key\":\"user_id\", \"type\":\"manual_string\", \"value\":\"miles\"} ]' \\\n  \"https://api.meraki.com/api/v0/networks/[networkId]/sm/profile/umbrella/[profileId]\"\n\n```",
        "summary": "addNetworkSmProfileUmbrella",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmProfileUmbrellaByNetworkIdAndProfileIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "addNetworkSmProfileUmbrella",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/addNetworkSmProfileUmbrella"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {}
          }
        }
      },
      "get": {
        "description": "Get details for a Cisco Umbrella payload\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H \"X-Cisco-Meraki-API-KEY: <key>\" \\\n  -X GET \\\n  \"https://api.meraki.com/api/v0/networks/[networkId]/sm/profile/umbrella/[profileId]\"\n\n```",
        "summary": "getNetworkSmProfileUmbrella",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmProfileUmbrellaByNetworkIdAndProfileIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a Cisco Umbrella payload. Deletes the entire profile if it's empty after removing the payload\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H \"X-Cisco-Meraki-API-KEY: <key>\" \\\n  -X GET \\\n  \"https://api.meraki.com/api/v0/networks/[networkId]/sm/profile/umbrella/[profileId]\"\n\n```",
        "summary": "deleteNetworkSmProfileUmbrella",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmProfileUmbrellaByNetworkIdAndProfileIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {}
          }
        }
      }
    },
    "/networks/{network_id}/sm/app/polaris": {
      "post": {
        "description": "Create a new Polaris app\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H \"X-Cisco-Meraki-API-KEY: <key>\" \\\n  -X POST \\\n  -H \"Content-Type: multipart/form-data\" \\\n  -F \"scope=withAny, tag1, tag2\" \\\n  -F \"manifestUrl=https://website.com/assets/manifest.plist\" \\\n  -F \"preventAutoInstall=true\" \\\n  -F \"usesVPP=true\" \\\n  \"https://api.meraki.com/api/v0/networks/[networkId]/sm/app/polaris\"\n\n```",
        "summary": "createNetworkSmAppPolaris",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmAppPolarisByNetworkIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "createNetworkSmAppPolaris",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/createNetworkSmAppPolaris"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {}
          }
        }
      },
      "get": {
        "description": "Get details for a Cisco Polaris app if it exists\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H \"X-Cisco-Meraki-API-KEY: <key>\" \\\n  -X GET \\\n  \"https://api.meraki.com/api/v0/networks/[networkId]/sm/app/polaris?bundleId=com.cisco.polaris\"\n\n```",
        "summary": "getNetworkSmAppPolaris",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmAppPolarisByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "bundleId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The bundle ID of the app to be found, defaults to com.cisco.ciscosecurity.app"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{network_id}/sm/app/polaris/{appId}": {
      "put": {
        "description": "Update an existing Polaris app\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H \"X-Cisco-Meraki-API-KEY: <key>\" \\\n  -X PUT \\\n  -H \"Content-Type: multipart/form-data\" \\\n  -F \"scope=withAny, tag1, tag2\" \\\n  -F \"preventAutoInstall=true\" \\\n  -F \"usesVPP=true\" \\\n  \"https://api.meraki.com/api/v0/networks/[networkId]/sm/app/polaris/[appId]\"\n\n```",
        "summary": "updateNetworkSmAppPolari",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmAppPolarisByNetworkIdAndAppIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "updateNetworkSmAppPolari",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateNetworkSmAppPolari"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a Cisco Polaris app\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H \"X-Cisco-Meraki-API-KEY: <key>\" \\\n  -X DELETE \\\n  \"https://api.meraki.com/api/v0/networks/[networkId]/sm/app/polaris/[appId]\"\n\n```",
        "summary": "deleteNetworkSmAppPolari",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmAppPolarisByNetworkIdAndAppIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {}
          }
        }
      }
    },
    "/networks/{network_id}/sm/devices": {
      "get": {
        "description": "List the devices enrolled in an SM network with various specified fields and filters\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/devices'\n```",
        "summary": "getNetworkSmDevices",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmDevicesByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Additional fields that will be displayed for each device. Multiple fields can be passed in as comma separated values.\n      The default fields are: id, name, tags, ssid, wifiMac, osName, systemModel, uuid, and serialNumber. The additional fields are: ip,\n      systemType, availableDeviceCapacity, kioskAppName, biosVersion, lastConnected, missingAppsCount, userSuppliedAddress, location, lastUser,\n      ownerEmail, ownerUsername, publicIp, phoneNumber, diskInfoJson, deviceCapacity, isManaged, hadMdm, isSupervised, meid, imei, iccid,\n      simCarrierNetwork, cellularDataUsed, isHotspotEnabled, createdAt, batteryEstCharge, quarantined, avName, avRunning, asName, fwName,\n      isRooted, loginRequired, screenLockEnabled, screenLockDelay, autoLoginDisabled, autoTags, hasMdm, hasDesktopAgent, diskEncryptionEnabled,\n      hardwareEncryptionCaps, passCodeLock, usesHardwareKeystore, and androidSecurityPatchVersion."
          },
          {
            "name": "wifiMacs",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter devices by wifi mac(s). Multiple wifi macs can be passed in as comma separated values."
          },
          {
            "name": "serials",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter devices by serial(s). Multiple serials can be passed in as comma separated values."
          },
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter devices by id(s). Multiple ids can be passed in as comma separated values."
          },
          {
            "name": "scope",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Specify a scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags as comma separated values."
          },
          {
            "name": "batchToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "On networks with more than 1000 devices, the device list will be limited to 1000 devices per query.\n      If there are more devices to be seen, a batch token will be returned as a part of the device list. To see the remainder of\n      the devices, pass in the batchToken as a parameter in the next request. Requests made with the batchToken do not require\n      additional parameters as the batchToken includes the parameters passed in with the original request. Additional parameters\n      passed in with the batchToken will be ignored."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "devices": [
                    {
                      "id": "1284392014819",
                      "name": "Miles's phone",
                      "tags": [
                        "tag1",
                        "tag2"
                      ],
                      "ssid": "My SSID",
                      "wifiMac": "00:11:22:33:44:55",
                      "osName": "iOS 9.3.5",
                      "systemModel": "iPhone",
                      "uuid": "3d990628ede4c628d52",
                      "serialNumber": "F5XKHEBX",
                      "ip": "1.2.3.4"
                    }
                  ],
                  "batchToken": "MMbCbpHZtG3TKUCr9B9uc5"
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{network_id}/sm/users": {
      "get": {
        "description": "List the owners in an SM network with various specified fields and filters\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/users'\n```",
        "summary": "getNetworkSmUsers",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmUsersByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "usernames",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter users by username(s). Multiple usernames can be passed in as comma separated values."
          },
          {
            "name": "emails",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter users by email(s). Multiple emails can be passed in as comma separated values."
          },
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter users by id(s). Multiple ids can be passed in as comma separated values."
          },
          {
            "name": "scope",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Specify a scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags as comma separated values."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "id": "1234",
                "email": "miles@meraki.com",
                "fullName": "Miles Meraki",
                "username": "",
                "hasPassword": false,
                "tags": [
                  "tag1",
                  "tag2"
                ],
                "adGroups": [],
                "asmGroups": [],
                "isExternal": false,
                "displayName": "Miles Meraki <miles@meraki.com>",
                "hasIdentityCertificate": false,
                "userThumbnail": "https://s3.amazonaws.com/image.extension"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{network_id}/sm/user/{id}/deviceProfiles": {
      "get": {
        "description": "Get the profiles associated with a user\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/user/[id]/deviceProfiles'\n```",
        "summary": "getNetworkSmUserDeviceProfiles",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmUserDeviceProfilesByNetworkIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "id": "1284392014819",
                  "isEncrypted": true,
                  "isManaged": true,
                  "profileData": {},
                  "profileIdentifier": "com.test.app",
                  "name": "My profile",
                  "version": "0.0.1"
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{network_id}/sm/{id}/deviceProfiles": {
      "get": {
        "description": "Get the profiles associated with a device\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/[id]/deviceProfiles'\n```",
        "summary": "getNetworkSmDeviceProfiles",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmDeviceProfilesByNetworkIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "id": "1284392014819",
                  "isEncrypted": true,
                  "isManaged": true,
                  "profileData": {},
                  "profileIdentifier": "com.test.app",
                  "name": "My profile",
                  "version": "0.0.1"
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{network_id}/sm/user/{id}/softwares": {
      "get": {
        "description": "Get a list of softwares associated with a user\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/user/[id]/softwares'\n```",
        "summary": "getNetworkSmUserSoftwares",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmUserSoftwaresByNetworkIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "bundleSize": null,
                  "createdAt": "2018-02-11T00:00:00Z",
                  "dynamicSize": null,
                  "id": "1284392014819",
                  "identifier": "com.test.app",
                  "installedAt": "2018-05-12T00:00:00Z",
                  "toInstall": null,
                  "iosRedemptionCode": null,
                  "isManaged": true,
                  "itunesId": null,
                  "licenseKey": null,
                  "name": "My app",
                  "path": "/Path/to/app.app",
                  "redemptionCode": null,
                  "shortVersion": null,
                  "status": null,
                  "toUninstall": false,
                  "uninstalledAt": null,
                  "updatedAt": "2018-05-12T00:00:00Z",
                  "vendor": "Apple",
                  "version": "0.1"
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{network_id}/sm/{id}/softwares": {
      "get": {
        "description": "Get a list of softwares associated with a device\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/[id]/softwares'\n```",
        "summary": "getNetworkSmSoftwares",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmSoftwaresByNetworkIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "bundleSize": null,
                  "createdAt": "2018-02-11T00:00:00Z",
                  "dynamicSize": null,
                  "id": "1284392014819",
                  "identifier": "com.test.app",
                  "installedAt": "2018-05-12T00:00:00Z",
                  "toInstall": null,
                  "iosRedemptionCode": null,
                  "isManaged": true,
                  "itunesId": null,
                  "licenseKey": null,
                  "name": "My app",
                  "path": "/Path/to/app.app",
                  "redemptionCode": null,
                  "shortVersion": null,
                  "status": null,
                  "toUninstall": false,
                  "uninstalledAt": null,
                  "updatedAt": "2018-05-12T00:00:00Z",
                  "vendor": "Apple",
                  "version": "0.1"
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{network_id}/sm/{id}/networkAdapters": {
      "get": {
        "description": "List the network adapters of a device\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/[id]/networkAdapters'\n```",
        "summary": "getNetworkSmNetworkAdapters",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmNetworkAdaptersByNetworkIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "dhcpServer": "123.123.123.1",
                  "dnsServer": "8.8.8.8, 8.8.4.4",
                  "gateway": "1.2.3.5",
                  "id": "1284392014819",
                  "ip": "1.2.3.4",
                  "mac": "00:11:22:33:44:55",
                  "name": "en0",
                  "subnet": "255.255.255.0"
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{network_id}/sm/{id}/wlanLists": {
      "get": {
        "description": "List the saved SSID names on a device\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/[id]/wlanLists'\n```",
        "summary": "getNetworkSmWlanLists",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmWlanListsByNetworkIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "createdAt": "2018-02-11T00:00:00Z",
                  "id": "1284392014819",
                  "xml": "Preferred networks on en0:"
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{network_id}/sm/{id}/securityCenters": {
      "get": {
        "description": "List the security centers on a device\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/[id]/securityCenters'\n```",
        "summary": "getNetworkSmSecurityCenters",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmSecurityCentersByNetworkIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "isRooted": true,
                  "hasAntiVirus": true,
                  "antiVirusName": "meraki_av",
                  "isFireWallEnabled": true,
                  "hasFireWallInstalled": true,
                  "fireWallName": "meraki_fw",
                  "isDiskEncrypted": true,
                  "isAutoLoginDisabled": true,
                  "id": "1284392014819",
                  "runningProcs": "/software,/software_2"
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{network_id}/sm/{id}/restrictions": {
      "get": {
        "description": "List the restrictions on a device\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/[id]/restrictions'\n```",
        "summary": "getNetworkSmRestrictions",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmRestrictionsByNetworkIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "profile": "com.meraki.sm.1",
                  "restrictions": {
                    "myRestriction": {
                      "value": true
                    }
                  }
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{network_id}/sm/{id}/certs": {
      "get": {
        "description": "List the certs on a device\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/[id]/certs'\n```",
        "summary": "getNetworkSmCerts",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmCertsByNetworkIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "name": "My Cert",
                  "notValidAfter": "May 12, 2018",
                  "notValidBefore": "Feb 11, 2018",
                  "certPem": "-----BEGIN CERTIFICATE-----\n-----END CERTIFICATE-----\n",
                  "issuer": "",
                  "subject": "",
                  "id": 15
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{network_id}/sm/devices/tags": {
      "put": {
        "description": "Add, delete, or update the tags of a set of devices\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"scope\":\"withAny, old_tag\",\"updateAction\":\"add\",\"tags\":\"tag1,tag2\"}' 'https://api.meraki.com/api/v0/networks/[network_id]/sm/devices/tags'\n```",
        "summary": "updateNetworkSmDevicesTags",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmDevicesTagsByNetworkIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "updateNetworkSmDevicesTags",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateNetworkSmDevicesTags"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "success": [
                  {
                    "id": "1284392014819",
                    "serial": "F5XKHEBX",
                    "wifiMac": "00:11:22:33:44:55",
                    "tags": [
                      "tag1",
                      "tag2"
                    ]
                  }
                ]
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{network_id}/sm/device/fields": {
      "put": {
        "description": "Modify the fields of a device\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"id\":\"1284392014819\",\"deviceFields\":{\"name\":\"My name\"}}' 'https://api.meraki.com/api/v0/networks/[network_id]/sm/device/fields'\n```",
        "summary": "updateNetworkSmDeviceFields",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmDeviceFieldsByNetworkIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "updateNetworkSmDeviceFields",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateNetworkSmDeviceFields"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "success": [
                  {
                    "id": "1284392014819",
                    "serial": "F5XKHEBX",
                    "wifiMac": "00:11:22:33:44:55",
                    "name": "My name"
                  }
                ]
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{network_id}/sm/devices/lock": {
      "put": {
        "description": "Lock a set of devices\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"ids\":\"\\\"1284392014819\\\"\"}' 'https://api.meraki.com/api/v0/networks/[network_id]/sm/devices/lock'\n```",
        "summary": "updateNetworkSmDevicesLock",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmDevicesLockByNetworkIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "updateNetworkSmDevicesLock",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateNetworkSmDevicesLock"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "success": true
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{network_id}/sm/device/wipe": {
      "put": {
        "description": "Wipe a device\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"id\":\"1284392014819\"}' 'https://api.meraki.com/api/v0/networks/[network_id]/sm/device/wipe'\n```",
        "summary": "updateNetworkSmDeviceWipe",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmDeviceWipeByNetworkIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "updateNetworkSmDeviceWipe",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateNetworkSmDeviceWipe"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "success": true
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{network_id}/sm/devices/checkin": {
      "put": {
        "description": "Force check-in a set of devices\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"ids\":\"\\\"1284392014819\\\"\"}' 'https://api.meraki.com/api/v0/networks/[network_id]/sm/devices/checkin'\n```",
        "summary": "updateNetworkSmDevicesCheckin",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmDevicesCheckinByNetworkIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "updateNetworkSmDevicesCheckin",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateNetworkSmDevicesCheckin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "success": true
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{network_id}/sm/devices/move": {
      "put": {
        "description": "Move a set of devices to a new network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"ids\":\"\\\"1284392014819\\\"\",\"newNetwork\":\"N_24329156\"}' 'https://api.meraki.com/api/v0/networks/[network_id]/sm/devices/move'\n```",
        "summary": "updateNetworkSmDevicesMove",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmDevicesMoveByNetworkIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "updateNetworkSmDevicesMove",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateNetworkSmDevicesMove"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "success": true
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{network_id}/sm/devices/{deviceId}/unenroll": {
      "post": {
        "description": "Unenroll a device\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST 'https://api.meraki.com/api/v0/networks/[network_id]/sm/devices/[deviceId]/unenroll'\n```",
        "summary": "unenrollNetworkSmDevice",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmDevicesUnenrollByNetworkIdAndDeviceIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "success": true
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{network_id}/sm/profiles": {
      "get": {
        "description": "List all the profiles in the network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/profiles'\n```",
        "summary": "getNetworkSmProfiles",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmProfilesByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "profiles": [
                  {
                    "id": "1234",
                    "payload_display_name": "API Profile",
                    "payload_identifier": "com.meraki.sm.1",
                    "payload_description": "API docs test",
                    "scope": "some",
                    "tags": [
                      "tag1",
                      "tag2"
                    ],
                    "wifis": [],
                    "payload_types": [
                      "Privacy",
                      "Document"
                    ]
                  }
                ]
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{network_id}/sm/{id}/cellularUsageHistory": {
      "get": {
        "description": "Return the client's daily cellular data usage history. Usage data is in kilobytes.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/[id]/cellularUsageHistory'\n```",
        "summary": "getNetworkSmCellularUsageHistory",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmCellularUsageHistoryByNetworkIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "sent": 138.0,
                "recv": 61.0,
                "ts": 1526087474
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{network_id}/sm/{id}/performanceHistory": {
      "get": {
        "description": "Return historical records of various Systems Manager client metrics for desktop devices.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/[id]/performanceHistory'\n```",
        "summary": "getNetworkSmPerformanceHistory",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmPerformanceHistoryByNetworkIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The number of entries per page returned"
          },
          {
            "name": "startingAfter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it."
          },
          {
            "name": "endingBefore",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "cpuPercentUsed": 0.95,
                  "memFree": 1024,
                  "memWired": 4096,
                  "memActive": 1024,
                  "memInactive": 2048,
                  "networkSent": 512,
                  "networkReceived": 512,
                  "swapUsed": 768,
                  "diskUsage": {
                    "c": {
                      "used": 2048,
                      "space": 9096
                    }
                  },
                  "ts": 1526087474.0
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{network_id}/sm/{id}/desktopLogs": {
      "get": {
        "description": "Return historical records of various Systems Manager network connection details for desktop devices.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/[id]/desktopLogs'\n```",
        "summary": "getNetworkSmDesktopLogs",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmDesktopLogsByNetworkIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The number of entries per page returned"
          },
          {
            "name": "startingAfter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it."
          },
          {
            "name": "endingBefore",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "measuredAt": 1526087474.0,
                  "user": "milesmeraki",
                  "networkDevice": "NIC",
                  "networkDriver": "Driver",
                  "wifiChannel": "11",
                  "wifiAuth": "wpa-psk",
                  "wifiBssid": "00:11:22:33:44:55",
                  "wifiSsid": "ssid",
                  "wifiRssi": "-11",
                  "wifiNoise": "-99",
                  "dhcpServer": "1.2.3.4",
                  "ip": "1.2.3.4",
                  "networkMTU": "1500",
                  "subnet": "192.168.1.0/24",
                  "gateway": "1.2.3.5",
                  "publicIP": "123.123.123.1",
                  "dnsServer": "8",
                  "ts": 1526087474.0
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{network_id}/sm/{id}/deviceCommandLogs": {
      "get": {
        "description": "    Return historical records of commands sent to Systems Manager devices.\n    <p>Note that this will include the name of the Dashboard user who initiated the command if it was generated\n    by a Dashboard admin rather than the automatic behavior of the system; you may wish to filter this out\n    of any reports.</p>\n\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/[id]/deviceCommandLogs'\n```",
        "summary": "getNetworkSmDeviceCommandLogs",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmDeviceCommandLogsByNetworkIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The number of entries per page returned"
          },
          {
            "name": "startingAfter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it."
          },
          {
            "name": "endingBefore",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "action": "UpdateProfile",
                "name": "My profile",
                "details": "{}",
                "dashboardUser": "Miles Meraki",
                "ts": 1526087474.0
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{network_id}/sm/{id}/connectivity": {
      "get": {
        "description": "Returns historical connectivity data (whether a device is regularly checking in to Dashboard).\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/[id]/connectivity'\n```",
        "summary": "getNetworkSmConnectivity",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmConnectivityByNetworkIdAndIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The number of entries per page returned"
          },
          {
            "name": "startingAfter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it."
          },
          {
            "name": "endingBefore",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "firstSeenAt": 1518365681.0,
                "lastSeenAt": 1526087474.0
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{id}/splashLoginAttempts": {
      "get": {
        "description": "List the splash login attempts for a network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[id]/splashLoginAttempts?timespan=7200'\n```",
        "summary": "getNetworkSplashLoginAttempts",
        "tags": [
          "Splash login attempts"
        ],
        "operationId": "NetworksSplashLoginAttemptsByIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "ssidNumber",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Only return the login attempts for the specified SSID"
          },
          {
            "name": "loginIdentifier",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The username, email, or phone number used during login"
          },
          {
            "name": "timespan",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The timespan, in seconds, for the login attempts. The period will be from [timespan] seconds ago until now. The maximum timespan is 3 months"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "name": "Miles Meraki",
                  "login": "miles@meraki.com",
                  "ssid": "My SSID",
                  "loginAt": 1518365681,
                  "gatewayDeviceMac": "00:11:22:33:44:55",
                  "clientMac": "22:33:44:55:66:77",
                  "clientId": "k74272e",
                  "authorization": "success"
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/ssids/{number}/splashSettings": {
      "get": {
        "description": "Display the splash page settings for the given SSID\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/ssids/[number]/splashSettings'\n```",
        "summary": "getNetworkSsidSplashSettings",
        "tags": [
          "Splash settings"
        ],
        "operationId": "NetworksSsidsSplashSettingsByNetworkIdAndNumberGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "number",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "ssidNumber": 0,
                "splashPage": "Click-through splash page",
                "splashUrl": "https://www.custom_splash_url.com",
                "useSplashUrl": true
              }
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Modify the splash page settings for the given SSID\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"splashUrl\":\"https://www.custom_splash_url.com\",\"useSplashUrl\":true}' 'https://api.meraki.com/api/v0/networks/[networkId]/ssids/[number]/splashSettings'\n```",
        "summary": "updateNetworkSsidSplashSettings",
        "tags": [
          "Splash settings"
        ],
        "operationId": "NetworksSsidsSplashSettingsByNetworkIdAndNumberPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "number",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "updateNetworkSsidSplashSettings",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateNetworkSsidSplashSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "ssidNumber": 0,
                "splashPage": "Click-through splash page",
                "splashUrl": "https://www.custom_splash_url.com",
                "useSplashUrl": true
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/ssids": {
      "get": {
        "description": "List the SSIDs in a network. Supports networks with access points or wireless-enabled security appliances and teleworker gateways.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/ssids'\n```",
        "summary": "getNetworkSsids",
        "tags": [
          "SSIDs"
        ],
        "operationId": "NetworksSsidsByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "number": 0,
                  "name": "My SSID",
                  "enabled": true,
                  "splashPage": "Click-through splash page",
                  "ssidAdminAccessible": false,
                  "authMode": "open",
                  "ipAssignmentMode": "NAT mode",
                  "bandSelection": "5 GHz band only",
                  "perClientBandwidthLimitUp": 0,
                  "perClientBandwidthLimitDown": 0
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/ssids/{number}": {
      "get": {
        "description": "Return a single SSID\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/ssids/[number]'\n```",
        "summary": "getNetworkSsid",
        "tags": [
          "SSIDs"
        ],
        "operationId": "NetworksSsidsByNetworkIdAndNumberGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "number",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "number": 0,
                "name": "My SSID",
                "enabled": true,
                "splashPage": "Click-through splash page",
                "ssidAdminAccessible": false,
                "authMode": "open",
                "ipAssignmentMode": "NAT mode",
                "bandSelection": "5 GHz band only",
                "perClientBandwidthLimitUp": 0,
                "perClientBandwidthLimitDown": 0
              }
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update the attributes of an SSID\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"name\":\"My SSID\",\"enabled\":true}' 'https://api.meraki.com/api/v0/networks/[networkId]/ssids/[number]'\n```",
        "summary": "updateNetworkSsid",
        "tags": [
          "SSIDs"
        ],
        "operationId": "NetworksSsidsByNetworkIdAndNumberPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "number",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "updateNetworkSsid",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateNetworkSsid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "number": 0,
                "name": "My SSID",
                "enabled": true,
                "splashPage": "Click-through splash page",
                "ssidAdminAccessible": false,
                "authMode": "open",
                "ipAssignmentMode": "NAT mode",
                "bandSelection": "5 GHz band only",
                "perClientBandwidthLimitUp": 0,
                "perClientBandwidthLimitDown": 0
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/switch/settings": {
      "get": {
        "description": "Returns the switch network settings\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/switch/settings'\n```",
        "summary": "getNetworkSwitchSettings",
        "tags": [
          "Switch settings"
        ],
        "operationId": "NetworksSwitchSettingsByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "networkId": "N_24329156",
                "useCombinedPower": false,
                "powerExceptions": [
                  {
                    "serial": "Q234-ABCD-0001",
                    "powerType": "redundant"
                  },
                  {
                    "serial": "Q234-ABCD-0002",
                    "powerType": "combined"
                  },
                  {
                    "serial": "Q234-ABCD-0003",
                    "powerType": "redundant"
                  }
                ]
              }
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update switch network settings\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"useCombinedPower\":true,\"powerExceptions\":[{\"serial\":\"Q234-ABCD-0001\",\"powerType\":\"redundant\"},{\"serial\":\"Q234-ABCD-0002\",\"powerType\":\"combined\"},{\"serial\":\"Q234-ABCD-0003\",\"powerType\":\"combined\"},{\"serial\":\"Q234-ABCD-0004\",\"powerType\":\"useNetworkSetting\"}]}' 'https://api.meraki.com/api/v0/networks/[networkId]/switch/settings'\n```",
        "summary": "updateNetworkSwitchSettings",
        "tags": [
          "Switch settings"
        ],
        "operationId": "NetworksSwitchSettingsByNetworkIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "updateNetworkSwitchSettings",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateNetworkSwitchSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "useCombinedPower": true,
                "powerExceptions": [
                  {
                    "serial": "Q234-ABCD-0001",
                    "powerType": "redundant"
                  },
                  {
                    "serial": "Q234-ABCD-0002",
                    "powerType": "combined"
                  },
                  {
                    "serial": "Q234-ABCD-0003",
                    "powerType": "combined"
                  },
                  {
                    "serial": "Q234-ABCD-0004",
                    "powerType": "useNetworkSetting"
                  }
                ]
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/devices/{serial}/switchPorts": {
      "get": {
        "description": "List the switch ports for a switch\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/devices/[serial]/switchPorts'\n```",
        "summary": "getDeviceSwitchPorts",
        "tags": [
          "Switch ports"
        ],
        "operationId": "DevicesSwitchPortsBySerialGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "number": 1,
                  "name": "My switch port",
                  "tags": "tag1 tag2",
                  "enabled": true,
                  "poeEnabled": true,
                  "type": "access",
                  "vlan": 10,
                  "voiceVlan": 20,
                  "isolationEnabled": false,
                  "rstpEnabled": true,
                  "stpGuard": "disabled",
                  "accessPolicyNumber": "1234",
                  "linkNegotiation": "Auto negotiate"
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/devices/{serial}/switchPorts/{number}": {
      "get": {
        "description": "Return a switch port\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/devices/[serial]/switchPorts/[number]'\n```",
        "summary": "getDeviceSwitchPort",
        "tags": [
          "Switch ports"
        ],
        "operationId": "DevicesSwitchPortsBySerialAndNumberGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "number",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "number": 1,
                "name": "My switch port",
                "tags": "tag1 tag2",
                "enabled": true,
                "poeEnabled": true,
                "type": "access",
                "vlan": 10,
                "voiceVlan": 20,
                "isolationEnabled": false,
                "rstpEnabled": true,
                "stpGuard": "disabled",
                "accessPolicyNumber": "1234",
                "linkNegotiation": "Auto negotiate"
              }
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a switch port\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT 'https://api.meraki.com/api/v0/devices/[serial]/switchPorts/[number]'\n```",
        "summary": "updateDeviceSwitchPort",
        "tags": [
          "Switch ports"
        ],
        "operationId": "DevicesSwitchPortsBySerialAndNumberPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "number",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "updateDeviceSwitchPort",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateDeviceSwitchPort"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "number": 1,
                "name": "My switch port",
                "tags": "tag1 tag2",
                "enabled": true,
                "poeEnabled": true,
                "type": "access",
                "vlan": 10,
                "voiceVlan": 20,
                "isolationEnabled": false,
                "rstpEnabled": true,
                "stpGuard": "disabled",
                "accessPolicyNumber": "1234",
                "linkNegotiation": "Auto negotiate"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/switchStacks": {
      "get": {
        "description": "List the switch stacks in a network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/{networkId}/switchStacks'\n```",
        "summary": "getNetworkSwitchStacks",
        "tags": [
          "Switch stacks"
        ],
        "operationId": "NetworksSwitchStacksByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "id": "8473",
                  "name": "A cool stack",
                  "serials": [
                    "QBZY-XWVU-TSRQ",
                    "QBAB-CDEF-GHIJ"
                  ]
                }
              ]
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Create a stack\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST --data-binary '{\"name\":\"A cool stack\",\"serials\":[\"QBZY-XWVU-TSRQ\",\"QBAB-CDEF-GHIJ\"]}' 'https://api.meraki.com/api/v0/networks/{networkId}/switchStacks'\n```",
        "summary": "createNetworkSwitchStacks",
        "tags": [
          "Switch stacks"
        ],
        "operationId": "NetworksSwitchStacksByNetworkIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "createNetworkSwitchStacks",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/createNetworkSwitchStacks"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "id": "8473",
                "name": "A cool stack",
                "serials": [
                  "QBZY-XWVU-TSRQ",
                  "QBAB-CDEF-GHIJ"
                ]
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/switchStacks/{switchStackId}": {
      "get": {
        "description": "Show a switch stack\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/{networkId}/switchStacks/{switchStackId}'\n```",
        "summary": "getNetworkSwitchStack",
        "tags": [
          "Switch stacks"
        ],
        "operationId": "NetworksSwitchStacksByNetworkIdAndSwitchStackIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "switchStackId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "id": "8473",
                "name": "A cool stack",
                "serials": [
                  "QBZY-XWVU-TSRQ",
                  "QBAB-CDEF-GHIJ"
                ]
              }
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a stack\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X DELETE 'https://api.meraki.com/api/v0/networks/{networkId}/switchStacks/{switchStackId}'\n```",
        "summary": "deleteNetworkSwitchStack",
        "tags": [
          "Switch stacks"
        ],
        "operationId": "NetworksSwitchStacksByNetworkIdAndSwitchStackIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "switchStackId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation",
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/switchStacks/{switchStackId}/add": {
      "post": {
        "description": "Add a switch to a stack\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST --data-binary '{\"serial\":\"QBZY-XWVU-TSRQ\"}' 'https://api.meraki.com/api/v0/networks/{networkId}/switchStacks/{switchStackId}/add'\n```",
        "summary": "addNetworkSwitchStack",
        "tags": [
          "Switch stacks"
        ],
        "operationId": "NetworksSwitchStacksAddByNetworkIdAndSwitchStackIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "switchStackId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "addNetworkSwitchStack",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/addNetworkSwitchStack"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "id": "8473",
                "name": "A cool stack",
                "serials": [
                  "QBZY-XWVU-TSRQ",
                  "QBAB-CDEF-GHIJ"
                ]
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkID}/switchStacks/{switchStackId}/remove": {
      "post": {
        "description": "Remove a switch from a stack\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST --data-binary '{\"serial\":\"QBZY-XWVU-TSRQ\"}' 'https://api.meraki.com/api/v0/networks/{networkID}/switchStacks/{switchStackId}/remove'\n```",
        "summary": "removeNetworkSwitchStack",
        "tags": [
          "Switch stacks"
        ],
        "operationId": "NetworksSwitchStacksRemoveByNetworkIDAndSwitchStackIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "switchStackId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "removeNetworkSwitchStack",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/removeNetworkSwitchStack"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "id": "8473",
                "name": "A cool stack",
                "serials": [
                  "QBAB-CDEF-GHIJ"
                ]
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/syslogServers": {
      "get": {
        "description": "List the syslog servers for a network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/syslogServers'\n```",
        "summary": "getNetworkSyslogServers",
        "tags": [
          "Syslog servers"
        ],
        "operationId": "NetworksSyslogServersByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "host": "1.2.3.4",
                  "port": 443,
                  "roles": [
                    "Wireless event log",
                    "URLs"
                  ]
                }
              ]
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update the syslog servers for a network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"servers\":[{\"host\":\"1.2.3.4\",\"port\":443,\"roles\":[\"Wireless event log\",\"URLs\"]}]}' 'https://api.meraki.com/api/v0/networks/[networkId]/syslogServers'\n```",
        "summary": "updateNetworkSyslogServers",
        "tags": [
          "Syslog servers"
        ],
        "operationId": "NetworksSyslogServersByNetworkIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "updateNetworkSyslogServers",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateNetworkSyslogServers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "host": "1.2.3.4",
                  "port": 443,
                  "roles": [
                    "Wireless event log",
                    "URLs"
                  ]
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/contentFiltering/categories": {
      "get": {
        "description": "List all available content filtering categories for an MX network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/contentFiltering/categories'\n```",
        "summary": "getNetworkContentFilteringCategories",
        "tags": [
          "Content filtering categories"
        ],
        "operationId": "NetworksContentFilteringCategoriesByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "categories": [
                  {
                    "id": "meraki:contentFiltering/category/1",
                    "name": "Real Estate"
                  },
                  {
                    "id": "meraki:contentFiltering/category/3",
                    "name": "Financial Services"
                  },
                  "...",
                  {
                    "id": "meraki:contentFiltering/category/11",
                    "name": "Adult and Pornography"
                  }
                ]
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/contentFiltering": {
      "get": {
        "description": "Return the content filtering settings for an MX network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/contentFiltering'\n```",
        "summary": "getNetworkContentFiltering",
        "tags": [
          "Content filtering rules"
        ],
        "operationId": "NetworksContentFilteringByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "allowedUrlPatterns": [
                  "http://www.example.org",
                  "http://help.com.au"
                ],
                "blockedUrlPatterns": [
                  "http://www.example.com",
                  "http://www.betting.com"
                ],
                "blockedUrlCategories": [
                  {
                    "id": "meraki:contentFiltering/category/1",
                    "name": "Real Estate"
                  },
                  {
                    "id": "meraki:contentFiltering/category/7",
                    "name": "Shopping"
                  }
                ],
                "urlCategoryListSize": "topSites"
              }
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update the content filtering settings for an MX network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"allowedUrlPatterns\":[\"http://www.example.org\",\"http://help.com.au\"],\"blockedUrlPatterns\":[\"http://www.example.com\",\"http://www.betting.com\"],\"blockedUrlCategories\":[\"meraki:contentFiltering/category/1\",\"meraki:contentFiltering/category/7\"],\"urlCategoryListSize\":\"topSites\"}' 'https://api.meraki.com/api/v0/networks/[networkId]/contentFiltering'\n```",
        "summary": "updateNetworkContentFiltering",
        "tags": [
          "Content filtering rules"
        ],
        "operationId": "NetworksContentFilteringByNetworkIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "updateNetworkContentFiltering",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateNetworkContentFiltering"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "allowedUrlPatterns": [
                  "http://www.example.org",
                  "http://help.com.au"
                ],
                "blockedUrlPatterns": [
                  "http://www.example.com",
                  "http://www.betting.com"
                ],
                "blockedUrlCategories": [
                  {
                    "id": "meraki:contentFiltering/category/1",
                    "name": "Real Estate"
                  },
                  {
                    "id": "meraki:contentFiltering/category/7",
                    "name": "Shopping"
                  }
                ],
                "urlCategoryListSize": "topSites"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/firewalledServices": {
      "get": {
        "description": "List the appliance services and their accessibility rules\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/firewalledServices'\n```",
        "summary": "getNetworkFirewalledServices",
        "tags": [
          "Firewalled services"
        ],
        "operationId": "NetworksFirewalledServicesByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "service": "web",
                  "access": "restricted",
                  "allowedIps": [
                    "123.123.123.1"
                  ]
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/firewalledServices/{service}": {
      "get": {
        "description": "Return the accessibility settings of the given service ('ICMP', 'web', or 'SNMP')\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/firewalledServices/[service]'\n```",
        "summary": "getNetworkFirewalledService",
        "tags": [
          "Firewalled services"
        ],
        "operationId": "NetworksFirewalledServicesByNetworkIdAndServiceGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "service",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "service": "web",
                "access": "restricted",
                "allowedIps": [
                  "123.123.123.1"
                ]
              }
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Updates the accessibility settings for the given service ('ICMP', 'web', or 'SNMP')\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"access\":\"restricted\",\"allowedIps\":[\"123.123.123.1\"]}' 'https://api.meraki.com/api/v0/networks/[networkId]/firewalledServices/[service]'\n```",
        "summary": "updateNetworkFirewalledService",
        "tags": [
          "Firewalled services"
        ],
        "operationId": "NetworksFirewalledServicesByNetworkIdAndServicePut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "service",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "updateNetworkFirewalledService",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateNetworkFirewalledService"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "service": "web",
                "access": "restricted",
                "allowedIps": [
                  "123.123.123.1"
                ]
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/oneToManyNatRules": {
      "get": {
        "description": "Return the 1:Many NAT mapping rules for an MX network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/oneToManyNatRules'\n```",
        "summary": "getNetworkOneToManyNatRules",
        "tags": [
          "MX 1:Many NAT rules"
        ],
        "operationId": "NetworksOneToManyNatRulesByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "rules": [
                  {
                    "publicIp": "146.11.11.13",
                    "uplink": "internet1",
                    "portRules": [
                      {
                        "name": "Rule 1",
                        "protocol": "tcp",
                        "publicPort": "9443",
                        "localIp": "192.168.128.1",
                        "localPort": "443",
                        "allowedIps": [
                          "any"
                        ]
                      },
                      {
                        "name": "Rule 2",
                        "protocol": "tcp",
                        "publicPort": "8080",
                        "localIp": "192.168.128.1",
                        "localPort": "80",
                        "allowedIps": [
                          "10.82.110.0/24",
                          "10.82.111.0/24"
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Set the 1:Many NAT mapping rules for an MX network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"rules\":[{\"publicIp\":\"146.11.11.13\",\"uplink\":\"internet1\",\"portRules\":[{\"name\":\"Rule 1\",\"protocol\":\"tcp\",\"publicPort\":\"9443\",\"localIp\":\"192.168.128.1\",\"localPort\":\"443\",\"allowedIps\":[\"any\"]},{\"name\":\"Rule 2\",\"protocol\":\"tcp\",\"publicPort\":\"8080\",\"localIp\":\"192.168.128.1\",\"localPort\":\"80\",\"allowedIps\":[\"10.82.110.0/24\",\"10.82.111.0/24\"]}]}]}' 'https://api.meraki.com/api/v0/networks/[networkId]/oneToManyNatRules'\n```",
        "summary": "updateNetworkOneToManyNatRules",
        "tags": [
          "MX 1:Many NAT rules"
        ],
        "operationId": "NetworksOneToManyNatRulesByNetworkIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "updateNetworkOneToManyNatRules",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateNetworkOneToManyNatRules"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "rules": [
                  {
                    "publicIp": "146.11.11.13",
                    "uplink": "internet1",
                    "portRules": [
                      {
                        "name": "Rule 1",
                        "protocol": "tcp",
                        "publicPort": "9443",
                        "localIp": "192.168.128.1",
                        "localPort": "443",
                        "allowedIps": [
                          "any"
                        ]
                      },
                      {
                        "name": "Rule 2",
                        "protocol": "tcp",
                        "publicPort": "8080",
                        "localIp": "192.168.128.1",
                        "localPort": "80",
                        "allowedIps": [
                          "10.82.110.0/24",
                          "10.82.111.0/24"
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/oneToOneNatRules": {
      "get": {
        "description": "Return the 1:1 NAT mapping rules for an MX network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/oneToOneNatRules'\n```",
        "summary": "getNetworkOneToOneNatRules",
        "tags": [
          "MX 1:1 NAT rules"
        ],
        "operationId": "NetworksOneToOneNatRulesByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "rules": [
                  {
                    "name": "Service behind NAT",
                    "lanIp": "192.168.128.22",
                    "publicIp": "146.12.3.33",
                    "uplink": "internet1",
                    "allowedInbound": [
                      {
                        "protocol": "tcp",
                        "destinationPorts": [
                          "80"
                        ],
                        "allowedIps": [
                          "10.82.112.0/24",
                          "10.82.0.0/16"
                        ]
                      },
                      {
                        "protocol": "udp",
                        "destinationPorts": [
                          "8080"
                        ],
                        "allowedIps": [
                          "10.81.110.5",
                          "10.81.0.0/16"
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Set the 1:1 NAT mapping rules for an MX network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"rules\":[{\"name\":\"Service behind NAT\",\"lanIp\":\"192.168.128.22\",\"publicIp\":\"146.12.3.33\",\"uplink\":\"internet1\",\"allowedInbound\":[{\"protocol\":\"tcp\",\"destinationPorts\":[\"80\"],\"allowedIps\":[\"10.82.112.0/24\",\"10.82.0.0/16\"]},{\"protocol\":\"udp\",\"destinationPorts\":[\"8080\"],\"allowedIps\":[\"10.81.110.5\",\"10.81.0.0/16\"]}]}]}' 'https://api.meraki.com/api/v0/networks/[networkId]/oneToOneNatRules'\n```",
        "summary": "updateNetworkOneToOneNatRules",
        "tags": [
          "MX 1:1 NAT rules"
        ],
        "operationId": "NetworksOneToOneNatRulesByNetworkIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "updateNetworkOneToOneNatRules",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateNetworkOneToOneNatRules"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "rules": [
                  {
                    "name": "Service behind NAT",
                    "lanIp": "192.168.128.22",
                    "publicIp": "146.12.3.33",
                    "uplink": "internet1",
                    "allowedInbound": [
                      {
                        "protocol": "tcp",
                        "destinationPorts": [
                          "80"
                        ],
                        "allowedIps": [
                          "10.82.112.0/24",
                          "10.82.0.0/16"
                        ]
                      },
                      {
                        "protocol": "udp",
                        "destinationPorts": [
                          "8080"
                        ],
                        "allowedIps": [
                          "10.81.110.5",
                          "10.81.0.0/16"
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/portForwardingRules": {
      "get": {
        "description": "Return the port forwarding rules for an MX network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/portForwardingRules'\n```",
        "summary": "getNetworkPortForwardingRules",
        "tags": [
          "MX port forwarding rules"
        ],
        "operationId": "NetworksPortForwardingRulesByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "rules": [
                  {
                    "lanIp": "192.168.128.1",
                    "allowedIps": [
                      "any"
                    ],
                    "name": "Description of Port Forwarding Rule",
                    "protocol": "tcp",
                    "publicPort": "8100-8101",
                    "localPort": "442-443",
                    "uplink": "both"
                  }
                ]
              }
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update the port forwarding rules for an MX network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"rules\":[{\"lanIp\":\"192.168.128.1\",\"allowedIps\":[\"any\"],\"name\":\"Description of Port Forwarding Rule\",\"protocol\":\"tcp\",\"publicPort\":\"8100-8101\",\"localPort\":\"442-443\",\"uplink\":\"both\"}]}' 'https://api.meraki.com/api/v0/networks/[networkId]/portForwardingRules'\n```",
        "summary": "updateNetworkPortForwardingRules",
        "tags": [
          "MX port forwarding rules"
        ],
        "operationId": "NetworksPortForwardingRulesByNetworkIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "updateNetworkPortForwardingRules",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateNetworkPortForwardingRules"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "rules": [
                  {
                    "lanIp": "192.168.128.1",
                    "allowedIps": [
                      "any"
                    ],
                    "name": "Description of Port Forwarding Rule",
                    "protocol": "tcp",
                    "publicPort": "8100-8101",
                    "localPort": "442-443",
                    "uplink": "both"
                  }
                ]
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/staticRoutes": {
      "get": {
        "description": "List the static routes for this network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/staticRoutes'\n```",
        "summary": "getNetworkStaticRoutes",
        "tags": [
          "Static routes"
        ],
        "operationId": "NetworksStaticRoutesByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "id": "d7fa4948-7921-4dfa-af6b-ae8b16c20c39",
                  "networkId": "N_24329156",
                  "name": "My route",
                  "gatewayIp": "1.2.3.5",
                  "subnet": "192.168.1.0/24",
                  "fixedIpAssignments": "{}",
                  "reservedIpRanges": "[]",
                  "enabled": true
                }
              ]
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Add a static route\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST --data-binary '{\"name\":\"My route\",\"subnet\":\"192.168.1.0/24\",\"gatewayIp\":\"1.2.3.5\"}' 'https://api.meraki.com/api/v0/networks/[networkId]/staticRoutes'\n```",
        "summary": "createNetworkStaticRoutes",
        "tags": [
          "Static routes"
        ],
        "operationId": "NetworksStaticRoutesByNetworkIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "createNetworkStaticRoutes",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/createNetworkStaticRoutes"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "name": "My route",
                "subnet": "192.168.1.0/24",
                "gatewayIp": "1.2.3.5"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/staticRoutes/{srId}": {
      "get": {
        "description": "Return a static route\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/staticRoutes/[srId]'\n```",
        "summary": "getNetworkStaticRoute",
        "tags": [
          "Static routes"
        ],
        "operationId": "NetworksStaticRoutesByNetworkIdAndSrIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "srId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "id": "d7fa4948-7921-4dfa-af6b-ae8b16c20c39",
                "networkId": "N_24329156",
                "name": "My route",
                "gatewayIp": "1.2.3.5",
                "subnet": "192.168.1.0/24",
                "fixedIpAssignments": "{}",
                "reservedIpRanges": "[]",
                "enabled": true
              }
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a static route\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"name\":\"My route\",\"subnet\":\"192.168.1.0/24\",\"fixedIpAssignments\":\"{}\",\"reservedIpRanges\":\"[]\"}' 'https://api.meraki.com/api/v0/networks/[networkId]/staticRoutes/[srId]'\n```",
        "summary": "updateNetworkStaticRoute",
        "tags": [
          "Static routes"
        ],
        "operationId": "NetworksStaticRoutesByNetworkIdAndSrIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "srId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "updateNetworkStaticRoute",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateNetworkStaticRoute"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "id": "d7fa4948-7921-4dfa-af6b-ae8b16c20c39",
                "networkId": "N_24329156",
                "name": "My route",
                "gatewayIp": "1.2.3.5",
                "subnet": "192.168.1.0/24",
                "fixedIpAssignments": "{}",
                "reservedIpRanges": "[]",
                "enabled": true
              }
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a static route from a network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X DELETE 'https://api.meraki.com/api/v0/networks/[networkId]/staticRoutes/[srId]'\n```",
        "summary": "deleteNetworkStaticRoute",
        "tags": [
          "Static routes"
        ],
        "operationId": "NetworksStaticRoutesByNetworkIdAndSrIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "srId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation",
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/uplinkSettings": {
      "get": {
        "description": "Returns the uplink settings for your MX network.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/{networkId}/uplinkSettings'\n```",
        "summary": "getNetworkUplinkSettings",
        "tags": [
          "Uplink settings"
        ],
        "operationId": "NetworksUplinkSettingsByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "bandwidthLimits": {
                  "wan1": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  },
                  "wan2": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  },
                  "cellular": {
                    "limitUp": 51200,
                    "limitDown": 51200
                  }
                }
              }
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Updates the uplink settings for your MX network.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"bandwidthLimits\":{\"wan1\":{\"limitUp\":1000000,\"limitDown\":1000000},\"wan2\":{\"limitUp\":1000000,\"limitDown\":1000000},\"cellular\":{\"limitUp\":51200,\"limitDown\":51200}}}' 'https://api.meraki.com/api/v0/networks/{networkId}/uplinkSettings'\n```",
        "summary": "updateNetworkUplinkSettings",
        "tags": [
          "Uplink settings"
        ],
        "operationId": "NetworksUplinkSettingsByNetworkIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "updateNetworkUplinkSettings",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateNetworkUplinkSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "bandwidthLimits": {
                  "wan1": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  },
                  "wan2": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  },
                  "cellular": {
                    "limitUp": 51200,
                    "limitDown": 51200
                  }
                }
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/vlans": {
      "get": {
        "description": "List the VLANs for this network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/{networkId}/vlans'\n```",
        "summary": "getNetworkVlans",
        "tags": [
          "VLANs"
        ],
        "operationId": "NetworksVlansByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "id": "1234",
                  "networkId": "N_24329156",
                  "name": "My VLAN",
                  "applianceIp": "1.2.3.4",
                  "subnet": "192.168.1.0/24",
                  "fixedIpAssignments": {
                    "22:33:44:55:66:77": {
                      "ip": "1.2.3.4",
                      "name": "Some client name"
                    }
                  },
                  "reservedIpRanges": [
                    {
                      "start": "192.168.1.0",
                      "end": "192.168.1.1",
                      "comment": "A reserved IP range"
                    }
                  ],
                  "dnsNameservers": "google_dns",
                  "dhcpHandling": "Run a DHCP server",
                  "dhcpLeaseTime": "1 day",
                  "dhcpBootOptionsEnabled": false,
                  "dhcpBootNextServer": null,
                  "dhcpBootFilename": null,
                  "dhcpOptions": [
                    {
                      "code": 5,
                      "type": "text",
                      "value": "five"
                    }
                  ]
                }
              ]
            },
            "headers": {}
          }
        }
      },
      "post": {
        "description": "Add a VLAN\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST --data-binary '{\"id\":\"1234\",\"name\":\"My VLAN\",\"subnet\":\"192.168.1.0/24\",\"applianceIp\":\"1.2.3.4\"}' 'https://api.meraki.com/api/v0/networks/{networkId}/vlans'\n```",
        "summary": "createNetworkVlans",
        "tags": [
          "VLANs"
        ],
        "operationId": "NetworksVlansByNetworkIdPost",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "createNetworkVlans",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/createNetworkVlans"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "id": "1234",
                "networkId": "N_24329156",
                "name": "My VLAN",
                "applianceIp": "1.2.3.4",
                "subnet": "192.168.1.0/24",
                "fixedIpAssignments": {},
                "reservedIpRanges": [],
                "dnsNameservers": "google_dns",
                "dhcpHandling": "Run a DHCP server",
                "dhcpLeaseTime": "1 day",
                "dhcpBootOptionsEnabled": false,
                "dhcpBootNextServer": null,
                "dhcpBootFilename": null,
                "dhcpOptions": []
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/vlans/{vlanId}": {
      "get": {
        "description": "Return a VLAN\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/{networkId}/vlans/{vlanId}'\n```",
        "summary": "getNetworkVlan",
        "tags": [
          "VLANs"
        ],
        "operationId": "NetworksVlansByNetworkIdAndVlanIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "vlanId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "id": "1234",
                "networkId": "N_24329156",
                "name": "My VLAN",
                "applianceIp": "1.2.3.4",
                "subnet": "192.168.1.0/24",
                "fixedIpAssignments": {
                  "22:33:44:55:66:77": {
                    "ip": "1.2.3.4",
                    "name": "Some client name"
                  }
                },
                "reservedIpRanges": [
                  {
                    "start": "192.168.1.0",
                    "end": "192.168.1.1",
                    "comment": "A reserved IP range"
                  }
                ],
                "dnsNameservers": "google_dns",
                "dhcpHandling": "Run a DHCP server",
                "dhcpLeaseTime": "1 day",
                "dhcpBootOptionsEnabled": false,
                "dhcpBootNextServer": null,
                "dhcpBootFilename": null,
                "dhcpOptions": [
                  {
                    "code": 5,
                    "type": "text",
                    "value": "five"
                  }
                ]
              }
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a VLAN\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"name\":\"My VLAN\",\"applianceIp\":\"1.2.3.4\",\"subnet\":\"192.168.1.0/24\",\"fixedIpAssignments\":{\"22:33:44:55:66:77\":{\"ip\":\"1.2.3.4\",\"name\":\"Some client name\"}},\"reservedIpRanges\":[{\"start\":\"192.168.1.0\",\"end\":\"192.168.1.1\",\"comment\":\"A reserved IP range\"}],\"dnsNameservers\":\"google_dns\",\"dhcpHandling\":\"Run a DHCP server\",\"dhcpLeaseTime\":\"1 day\",\"dhcpBootOptionsEnabled\":false,\"dhcpBootNextServer\":null,\"dhcpBootFilename\":null,\"dhcpOptions\":[{\"code\":5,\"type\":\"text\",\"value\":\"five\"}]}' 'https://api.meraki.com/api/v0/networks/{networkId}/vlans/{vlanId}'\n```",
        "summary": "updateNetworkVlan",
        "tags": [
          "VLANs"
        ],
        "operationId": "NetworksVlansByNetworkIdAndVlanIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "vlanId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "updateNetworkVlan",
            "in": "body",
            "required": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateNetworkVlan"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "id": "1234",
                "networkId": "N_24329156",
                "name": "My VLAN",
                "applianceIp": "1.2.3.4",
                "subnet": "192.168.1.0/24",
                "fixedIpAssignments": {
                  "22:33:44:55:66:77": {
                    "ip": "1.2.3.4",
                    "name": "Some client name"
                  }
                },
                "reservedIpRanges": [
                  {
                    "start": "192.168.1.0",
                    "end": "192.168.1.1",
                    "comment": "A reserved IP range"
                  }
                ],
                "dnsNameservers": "google_dns",
                "dhcpHandling": "Run a DHCP server",
                "dhcpLeaseTime": "1 day",
                "dhcpBootOptionsEnabled": false,
                "dhcpBootNextServer": null,
                "dhcpBootFilename": null,
                "dhcpOptions": [
                  {
                    "code": 5,
                    "type": "text",
                    "value": "five"
                  }
                ]
              }
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "description": "Delete a VLAN from a network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X DELETE 'https://api.meraki.com/api/v0/networks/{networkId}/vlans/{vlanId}'\n```",
        "summary": "deleteNetworkVlan",
        "tags": [
          "VLANs"
        ],
        "operationId": "NetworksVlansByNetworkIdAndVlanIdDelete",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "vlanId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation",
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/vlansEnabledState": {
      "get": {
        "description": "Returns the enabled status of VLANs for the network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/{networkId}/vlansEnabledState'\n```",
        "summary": "getNetworkVlansEnabledState",
        "tags": [
          "VLANs"
        ],
        "operationId": "NetworksVlansEnabledStateByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "enabled": true,
                "networkId": "N_24329156"
              }
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Enable/Disable VLANs for the given network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"enabled\":true}' 'https://api.meraki.com/api/v0/networks/{networkId}/vlansEnabledState'\n```",
        "summary": "updateNetworkVlansEnabledState",
        "tags": [
          "VLANs"
        ],
        "operationId": "NetworksVlansEnabledStateByNetworkIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "updateNetworkVlansEnabledState",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/updateNetworkVlansEnabledState"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "enabled": true,
                "networkId": "N_24329156"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/connectionStats": {
      "get": {
        "description": "Aggregated connectivity info for this network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/connectionStats'\n```",
        "summary": "getNetworkConnectionStats",
        "tags": [
          "Wireless health"
        ],
        "operationId": "NetworksConnectionStatsByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "t0",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Start of the requested time range in seconds since epoch (Required)"
          },
          {
            "name": "t1",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "End of the requested time range in seconds since epoch (Required)"
          },
          {
            "name": "ssid",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter results by SSID"
          },
          {
            "name": "vlan",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter results by VLAN"
          },
          {
            "name": "apTag",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter results by AP Tag"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "assoc": 1,
                "auth": 5,
                "dhcp": 0,
                "dns": 0,
                "success": 51
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/devices/connectionStats": {
      "get": {
        "description": "Aggregated connectivity info for this network, grouped by node\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/devices/connectionStats'\n```",
        "summary": "getNetworkDevicesConnectionStats",
        "tags": [
          "Wireless health"
        ],
        "operationId": "NetworksDevicesConnectionStatsByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "t0",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Start of the requested time range in seconds since epoch (Required)"
          },
          {
            "name": "t1",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "End of the requested time range in seconds since epoch (Required)"
          },
          {
            "name": "ssid",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter results by SSID"
          },
          {
            "name": "vlan",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter results by VLAN"
          },
          {
            "name": "apTag",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter results by AP Tag"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "serial": "Q2JC-2MJM-FHRD",
                  "connectionStats": {
                    "assoc": 0,
                    "auth": 1,
                    "dhcp": 0,
                    "dns": 0,
                    "success": 43
                  }
                },
                {
                  "serial": "Q2FJ-3SHB-Y2K2",
                  "connectionStats": {
                    "assoc": 1,
                    "auth": 4,
                    "dhcp": 0,
                    "dns": 0,
                    "success": 8
                  }
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/devices/{serial}/connectionStats": {
      "get": {
        "description": "Aggregated connectivity info for a given AP on this network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/devices/[serial]/connectionStats'\n```",
        "summary": "getNetworkDeviceConnectionStats",
        "tags": [
          "Wireless health"
        ],
        "operationId": "NetworksDevicesConnectionStatsByNetworkIdAndSerialGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "serial",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "t0",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Start of the requested time range in seconds since epoch (Required)"
          },
          {
            "name": "t1",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "End of the requested time range in seconds since epoch (Required)"
          },
          {
            "name": "ssid",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter results by SSID"
          },
          {
            "name": "vlan",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter results by VLAN"
          },
          {
            "name": "apTag",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter results by AP Tag"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "serial": "Q2JC-2MJM-FHRD",
                "connectionStats": {
                  "assoc": 0,
                  "auth": 1,
                  "dhcp": 0,
                  "dns": 0,
                  "success": 43
                }
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/clients/connectionStats": {
      "get": {
        "description": "Aggregated connectivity info for this network, grouped by clients\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/clients/connectionStats'\n```",
        "summary": "getNetworkClientsConnectionStats",
        "tags": [
          "Wireless health"
        ],
        "operationId": "NetworksClientsConnectionStatsByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "t0",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Start of the requested time range in seconds since epoch (Required)"
          },
          {
            "name": "t1",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "End of the requested time range in seconds since epoch (Required)"
          },
          {
            "name": "ssid",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter results by SSID"
          },
          {
            "name": "vlan",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter results by VLAN"
          },
          {
            "name": "apTag",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter results by AP Tag"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "mac": "00:61:71:c8:51:27",
                  "connectionStats": {
                    "assoc": 0,
                    "auth": 4,
                    "dhcp": 0,
                    "dns": 0,
                    "success": 10
                  }
                },
                {
                  "mac": "1c:4d:70:7f:5e:5e",
                  "connectionStats": {
                    "assoc": 0,
                    "auth": 1,
                    "dhcp": 0,
                    "dns": 0,
                    "success": 24
                  }
                },
                {
                  "mac": "1c:4d:70:81:8d:0a",
                  "connectionStats": {
                    "assoc": 1,
                    "auth": 0,
                    "dhcp": 0,
                    "dns": 0,
                    "success": 16
                  }
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/clients/{clientId}/connectionStats": {
      "get": {
        "description": "Aggregated connectivity info for a given client on this network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/clients/[clientId]/connectionStats'\n```",
        "summary": "getNetworkClientConnectionStats",
        "tags": [
          "Wireless health"
        ],
        "operationId": "NetworksClientsConnectionStatsByNetworkIdAndClientIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "t0",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Start of the requested time range in seconds since epoch (Required)"
          },
          {
            "name": "t1",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "End of the requested time range in seconds since epoch (Required)"
          },
          {
            "name": "ssid",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter results by SSID"
          },
          {
            "name": "vlan",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter results by VLAN"
          },
          {
            "name": "apTag",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter results by AP Tag"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "mac": "00:61:71:c8:51:27",
                "connectionStats": {
                  "assoc": 0,
                  "auth": 4,
                  "dhcp": 0,
                  "dns": 0,
                  "success": 10
                }
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/latencyStats": {
      "get": {
        "description": "Aggregated latency info for this network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/latencyStats'\n```",
        "summary": "getNetworkLatencyStats",
        "tags": [
          "Wireless health"
        ],
        "operationId": "NetworksLatencyStatsByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "t0",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Start of the requested time range in seconds since epoch (Required)"
          },
          {
            "name": "t1",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "End of the requested time range in seconds since epoch (Required)"
          },
          {
            "name": "ssid",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter results by SSID"
          },
          {
            "name": "vlan",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter results by VLAN"
          },
          {
            "name": "apTag",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter results by AP Tag"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "backgroundTraffic": {
                  "rawDistribution": {
                    "0": 1234,
                    "1": 2345,
                    "2": 3456,
                    "4": 4567,
                    "8": 5678,
                    "16": 6789,
                    "32": 7890,
                    "64": 8901,
                    "128": 9012,
                    "256": 83,
                    "512": 1234,
                    "1024": 2345,
                    "2048": 9999
                  },
                  "avg": 606.52
                },
                "bestEffortTraffic": "same shape as backgroundTraffic",
                "videoTraffic": "same shape as backgroundTraffic",
                "voiceTraffic": "same shape as backgroundTraffic"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/devices/latencyStats": {
      "get": {
        "description": "Aggregated latency info for this network, grouped by node\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/devices/latencyStats'\n```",
        "summary": "getNetworkDevicesLatencyStats",
        "tags": [
          "Wireless health"
        ],
        "operationId": "NetworksDevicesLatencyStatsByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "t0",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Start of the requested time range in seconds since epoch (Required)"
          },
          {
            "name": "t1",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "End of the requested time range in seconds since epoch (Required)"
          },
          {
            "name": "ssid",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter results by SSID"
          },
          {
            "name": "vlan",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter results by VLAN"
          },
          {
            "name": "apTag",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter results by AP Tag"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "serial": "Q2JC-2MJM-FHRD",
                  "latencyStats": {
                    "backgroundTraffic": {
                      "rawDistribution": {
                        "0": 1234,
                        "1": 2345,
                        "2": 3456,
                        "4": 4567,
                        "8": 5678,
                        "16": 6789,
                        "32": 7890,
                        "64": 8901,
                        "128": 9012,
                        "256": 83,
                        "512": 1234,
                        "1024": 2345,
                        "2048": 9999
                      },
                      "avg": 606.52
                    },
                    "bestEffortTraffic": "same shape as backgroundTraffic",
                    "videoTraffic": "same shape as backgroundTraffic",
                    "voiceTraffic": "same shape as backgroundTraffic"
                  }
                },
                {
                  "serial": "Q2FJ-3SHB-Y2K2",
                  "latencyStats": {
                    "backgroundTraffic": {
                      "rawDistribution": {
                        "0": 1234,
                        "1": 2345,
                        "2": 3456,
                        "4": 4567,
                        "8": 5678,
                        "16": 6789,
                        "32": 7890,
                        "64": 8901,
                        "128": 9012,
                        "256": 83,
                        "512": 1234,
                        "1024": 2345,
                        "2048": 9999
                      },
                      "avg": 606.52
                    },
                    "bestEffortTraffic": "same shape as backgroundTraffic",
                    "videoTraffic": "same shape as backgroundTraffic",
                    "voiceTraffic": "same shape as backgroundTraffic"
                  }
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/devices/{serial}/latencyStats": {
      "get": {
        "description": "Aggregated latency info for a given AP on this network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/devices/[serial]/latencyStats'\n```",
        "summary": "getNetworkDeviceLatencyStats",
        "tags": [
          "Wireless health"
        ],
        "operationId": "NetworksDevicesLatencyStatsByNetworkIdAndSerialGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "serial",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "t0",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Start of the requested time range in seconds since epoch (Required)"
          },
          {
            "name": "t1",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "End of the requested time range in seconds since epoch (Required)"
          },
          {
            "name": "ssid",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter results by SSID"
          },
          {
            "name": "vlan",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter results by VLAN"
          },
          {
            "name": "apTag",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter results by AP Tag"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "serial": "Q2JC-2MJM-FHRD",
                "latencyStats": {
                  "backgroundTraffic": {
                    "rawDistribution": {
                      "0": 1234,
                      "1": 2345,
                      "2": 3456,
                      "4": 4567,
                      "8": 5678,
                      "16": 6789,
                      "32": 7890,
                      "64": 8901,
                      "128": 9012,
                      "256": 83,
                      "512": 1234,
                      "1024": 2345,
                      "2048": 9999
                    },
                    "avg": 606.52
                  },
                  "bestEffortTraffic": "same shape as backgroundTraffic",
                  "videoTraffic": "same shape as backgroundTraffic",
                  "voiceTraffic": "same shape as backgroundTraffic"
                }
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/clients/latencyStats": {
      "get": {
        "description": "Aggregated latency info for this network, grouped by clients\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/clients/latencyStats'\n```",
        "summary": "getNetworkClientsLatencyStats",
        "tags": [
          "Wireless health"
        ],
        "operationId": "NetworksClientsLatencyStatsByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "t0",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Start of the requested time range in seconds since epoch (Required)"
          },
          {
            "name": "t1",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "End of the requested time range in seconds since epoch (Required)"
          },
          {
            "name": "ssid",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter results by SSID"
          },
          {
            "name": "vlan",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter results by VLAN"
          },
          {
            "name": "apTag",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter results by AP Tag"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "mac": "00:61:71:c8:51:27",
                  "latencyStats": {
                    "backgroundTraffic": {
                      "rawDistribution": {
                        "0": 1234,
                        "1": 2345,
                        "2": 3456,
                        "4": 4567,
                        "8": 5678,
                        "16": 6789,
                        "32": 7890,
                        "64": 8901,
                        "128": 9012,
                        "256": 83,
                        "512": 1234,
                        "1024": 2345,
                        "2048": 9999
                      },
                      "avg": 606.52
                    },
                    "bestEffortTraffic": "same shape as backgroundTraffic",
                    "videoTraffic": "same shape as backgroundTraffic",
                    "voiceTraffic": "same shape as backgroundTraffic"
                  }
                },
                {
                  "mac": "1c:4d:70:7f:5e:5e",
                  "latencyStats": {
                    "backgroundTraffic": {
                      "rawDistribution": {
                        "0": 1234,
                        "1": 2345,
                        "2": 3456,
                        "4": 4567,
                        "8": 5678,
                        "16": 6789,
                        "32": 7890,
                        "64": 8901,
                        "128": 9012,
                        "256": 83,
                        "512": 1234,
                        "1024": 2345,
                        "2048": 9999
                      },
                      "avg": 606.52
                    },
                    "bestEffortTraffic": "same shape as backgroundTraffic",
                    "videoTraffic": "same shape as backgroundTraffic",
                    "voiceTraffic": "same shape as backgroundTraffic"
                  }
                },
                {
                  "mac": "1c:4d:70:81:8d:0a",
                  "latencyStats": {
                    "backgroundTraffic": {
                      "rawDistribution": {
                        "0": 1234,
                        "1": 2345,
                        "2": 3456,
                        "4": 4567,
                        "8": 5678,
                        "16": 6789,
                        "32": 7890,
                        "64": 8901,
                        "128": 9012,
                        "256": 83,
                        "512": 1234,
                        "1024": 2345,
                        "2048": 9999
                      },
                      "avg": 606.52
                    },
                    "bestEffortTraffic": "same shape as backgroundTraffic",
                    "videoTraffic": "same shape as backgroundTraffic",
                    "voiceTraffic": "same shape as backgroundTraffic"
                  }
                }
              ]
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/clients/{clientId}/latencyStats": {
      "get": {
        "description": "Aggregated latency info for a given client on this network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/clients/[clientId]/latencyStats'\n```",
        "summary": "getNetworkClientLatencyStats",
        "tags": [
          "Wireless health"
        ],
        "operationId": "NetworksClientsLatencyStatsByNetworkIdAndClientIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "t0",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Start of the requested time range in seconds since epoch (Required)"
          },
          {
            "name": "t1",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "End of the requested time range in seconds since epoch (Required)"
          },
          {
            "name": "ssid",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter results by SSID"
          },
          {
            "name": "vlan",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter results by VLAN"
          },
          {
            "name": "apTag",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter results by AP Tag"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": {
                "mac": "00:61:71:c8:51:27",
                "latencyStats": {
                  "backgroundTraffic": {
                    "rawDistribution": {
                      "0": 1234,
                      "1": 2345,
                      "2": 3456,
                      "4": 4567,
                      "8": 5678,
                      "16": 6789,
                      "32": 7890,
                      "64": 8901,
                      "128": 9012,
                      "256": 83,
                      "512": 1234,
                      "1024": 2345,
                      "2048": 9999
                    },
                    "avg": 606.52
                  },
                  "bestEffortTraffic": "same shape as backgroundTraffic",
                  "videoTraffic": "same shape as backgroundTraffic",
                  "voiceTraffic": "same shape as backgroundTraffic"
                }
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/networks/{networkId}/failedConnections": {
      "get": {
        "description": "List of all failed client connection events on this network in a given time range\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/failedConnections'\n```",
        "summary": "getNetworkFailedConnections",
        "tags": [
          "Wireless health"
        ],
        "operationId": "NetworksFailedConnectionsByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": ""
          },
          {
            "name": "t0",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Start of the requested time range in seconds since epoch (Required)"
          },
          {
            "name": "t1",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "End of the requested time range in seconds since epoch (Required)"
          },
          {
            "name": "ssid",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter results by SSID"
          },
          {
            "name": "vlan",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter results by VLAN"
          },
          {
            "name": "apTag",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter results by AP Tag"
          },
          {
            "name": "serial",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by AP"
          },
          {
            "name": "clientId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filter by client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "application/json": [
                {
                  "ssidNumber": 0,
                  "vlan": -1,
                  "clientMac": "00:61:71:c8:51:27",
                  "serial": "Q2JC-2MJM-FHRD",
                  "failureStep": "auth",
                  "type": "802.1X auth fail",
                  "ts": 1532032592
                },
                {
                  "ssidNumber": 0,
                  "vlan": -1,
                  "clientMac": "00:61:71:c8:51:27",
                  "nodeId": "Q2FJ-3SHB-Y2K2",
                  "failureStep": "auth",
                  "type": "802.1X auth fail",
                  "ts": 1532032593
                },
                {
                  "ssidNumber": 0,
                  "vlan": -1,
                  "clientMac": "00:61:71:c8:51:27",
                  "nodeId": "Q2FJ-3SHB-Y2K2",
                  "failureStep": "auth",
                  "type": "802.1X auth fail",
                  "ts": 1532032594
                },
                {
                  "ssidNumber": 0,
                  "vlan": -1,
                  "clientMac": "00:61:71:c8:51:27",
                  "nodeId": "Q2FJ-3SHB-Y2K2",
                  "failureStep": "auth",
                  "type": "802.1X auth fail",
                  "ts": 1532032595
                },
                {
                  "ssidNumber": 0,
                  "vlan": -1,
                  "clientMac": "1c:4d:70:7f:5e:5e",
                  "nodeId": "Q2FJ-3SHB-Y2K2",
                  "failureStep": "assoc",
                  "type": "802.1X auth fail",
                  "ts": 1532032592
                },
                {
                  "ssidNumber": 0,
                  "vlan": -1,
                  "clientMac": "1c:4d:70:81:8d:0a",
                  "nodeId": "Q2FJ-3SHB-Y2K2",
                  "failureStep": "auth",
                  "type": "802.1X auth fail",
                  "ts": 1532032595
                }
              ]
            },
            "headers": {}
          }
        }
      }
    }
  },
  "definitions": {
    "createOrganizationAdmins": {
      "title": "createOrganizationAdmins",
      "type": "object",
      "properties": {
        "email": {
          "description": "The email of the dashboard administrator. This attribute can not be updated.",
          "type": "string"
        },
        "name": {
          "description": "The name of the dashboard administrator",
          "type": "string"
        },
        "orgAccess": {
          "description": "The privilege of the dashboard administrator on the organization (full, read-only, none)",
          "type": "string"
        },
        "tags": {
          "description": "The list of tags that the dashboard administrator has privileges on",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "networks": {
          "description": "The list of networks that the dashboard administrator has privileges on",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Network"
          }
        }
      },
      "required": [
        "email",
        "name",
        "orgAccess"
      ]
    },
    "Tag": {
      "title": "Tag",
      "type": "object",
      "properties": {
        "tag": {
          "description": "The name of the tag",
          "type": "string"
        },
        "access": {
          "description": "The privilege of the dashboard administrator on the tag",
          "type": "string"
        }
      },
      "required": [
        "tag",
        "access"
      ]
    },
    "Network": {
      "title": "Network",
      "type": "object",
      "properties": {
        "id": {
          "description": "The network ID",
          "type": "string"
        },
        "access": {
          "description": "The privilege of the dashboard administrator on the network",
          "type": "string"
        }
      },
      "required": [
        "id",
        "access"
      ]
    },
    "updateOrganizationAdmin": {
      "title": "updateOrganizationAdmin",
      "type": "object",
      "properties": {
        "email": {
          "description": "The email of the dashboard administrator. This attribute can not be updated.",
          "type": "string"
        },
        "name": {
          "description": "The name of the dashboard administrator",
          "type": "string"
        },
        "orgAccess": {
          "description": "The privilege of the dashboard administrator on the organization (full, read-only, none)",
          "type": "string"
        },
        "tags": {
          "description": "The list of tags that the dashboard administrator has privileges on",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "networks": {
          "description": "The list of networks that the dashboard administrator has privileges on",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Network"
          }
        }
      }
    },
    "updateNetworkAlertSettings": {
      "title": "updateNetworkAlertSettings",
      "type": "object",
      "properties": {
        "defaultDestinations": {
          "$ref": "#/definitions/DefaultDestinations"
        },
        "alerts": {
          "description": "Alert-specific configuration for each type. Only alerts that pertain to the network can be updated.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Alert"
          }
        }
      }
    },
    "DefaultDestinations": {
      "title": "DefaultDestinations",
      "description": "The network_wide destinations for all alerts on the network.",
      "type": "object",
      "properties": {
        "emails": {
          "description": "A list of emails that will recieve the alert(s).",
          "type": "string"
        },
        "allAdmins": {
          "description": "If true, then all network admins will receive emails.",
          "type": "string"
        },
        "snmp": {
          "description": "If true, then an SNMP trap will be sent if there is an SNMP trap server configured for this network.",
          "type": "string"
        }
      }
    },
    "Alert": {
      "title": "Alert",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type of alert",
          "type": "string"
        },
        "enabled": {
          "description": "A boolean depicting if the alert is turned on or off",
          "type": "string"
        },
        "alertDestinations": {
          "description": "A hash of destinations for this specific alert. Keys include: emails: A list of emails that will recieve information about the alert, allAdmins: If true, then all network admins will receive emails, and snmp: If true, then an SNMP trap will be sent if there is an SNMP trap server configured for this network.",
          "type": "string"
        },
        "filters": {
          "description": "A hash of specific configuration data for the alert. Only filters specific to the alert will be updated.",
          "type": "string"
        }
      }
    },
    "updateNetworkBluetoothSettings": {
      "title": "updateNetworkBluetoothSettings",
      "type": "object",
      "properties": {
        "scanningEnabled": {
          "description": "Whether APs will scan for Bluetooth enabled clients. (true, false)",
          "type": "boolean"
        },
        "advertisingEnabled": {
          "description": "Whether APs will advertise beacons. (true, false)",
          "type": "boolean"
        },
        "uuid": {
          "description": "The UUID to be used in the beacon identifier.",
          "type": "string"
        },
        "majorMinorAssignmentMode": {
          "description": "The way major and minor number should be assigned to nodes in the network. ('Unique', 'Non-unique')",
          "type": "string"
        },
        "major": {
          "description": "The major number to be used in the beacon identifier. Only valid in 'Non-unique' mode.",
          "type": "integer",
          "format": "int32"
        },
        "minor": {
          "description": "The minor number to be used in the beacon identifier. Only valid in 'Non-unique' mode.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "createOrganizationNetworks": {
      "title": "createOrganizationNetworks",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the new network",
          "type": "string"
        },
        "type": {
          "description": "The type of the new network. Valid types are wireless, appliance, switch, phone, systemsManager, camera or a space-separated list of those for a combined network.",
          "type": "string"
        },
        "tags": {
          "description": "A space-separated list of tags to be applied to the network",
          "type": "string"
        },
        "timeZone": {
          "description": "The timezone of the network. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article.</a>",
          "type": "string"
        },
        "copyFromNetworkId": {
          "description": "The ID of the network to copy configuration from. Other provided parameters will override the copied configuration, except type which must match this network's type exactly.",
          "type": "string"
        },
        "disableMyMerakiCom": {
          "description": "Disables the local device status pages (<a target='_blank' href='http://my.meraki.com/'>my.meraki.com, </a><a target='_blank' href='http://ap.meraki.com/'>ap.meraki.com, </a><a target='_blank' href='http://switch.meraki.com/'>switch.meraki.com, </a><a target='_blank' href='http://wired.meraki.com/'>wired.meraki.com</a>). Optional (defaults to false)",
          "type": "boolean"
        },
        "disableRemoteStatusPage": {
          "description": "Disables access to the device status page (<a target='_blank'>http://[device's LAN IP])</a>. Optional. Can only be set if disableMyMerakiCom is set to false",
          "type": "boolean"
        }
      },
      "required": [
        "name",
        "type"
      ]
    },
    "updateNetwork": {
      "title": "updateNetwork",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the new network",
          "type": "string"
        },
        "timeZone": {
          "description": "The timezone of the network. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article.</a>",
          "type": "string"
        },
        "tags": {
          "description": "A space-separated list of tags to be applied to the network",
          "type": "string"
        },
        "disableMyMerakiCom": {
          "description": "Disables the local device status pages (<a target='_blank' href='http://my.meraki.com/'>my.meraki.com, </a><a target='_blank' href='http://ap.meraki.com/'>ap.meraki.com, </a><a target='_blank' href='http://switch.meraki.com/'>switch.meraki.com, </a><a target='_blank' href='http://wired.meraki.com/'>wired.meraki.com</a>). Optional (defaults to false)",
          "type": "boolean"
        },
        "disableRemoteStatusPage": {
          "description": "Disables access to the device status page (<a target='_blank'>http://[device's LAN IP])</a>. Optional. Can only be set if disableMyMerakiCom is set to false",
          "type": "boolean"
        }
      }
    },
    "bindNetwork": {
      "title": "bindNetwork",
      "type": "object",
      "properties": {
        "configTemplateId": {
          "description": "The ID of the template to which the network should be bound.",
          "type": "string"
        },
        "autoBind": {
          "description": "Optional boolean indicating whether the network's switches should automatically bind to profiles of the same model. Defaults to false if left unspecified. This option only affects switch networks and switch templates. Auto-bind is not valid unless the switch template has at least one profile and has at most one profile per switch model.",
          "type": "boolean"
        }
      },
      "required": [
        "configTemplateId"
      ]
    },
    "updateNetworkSiteToSiteVpn": {
      "title": "updateNetworkSiteToSiteVpn",
      "type": "object",
      "properties": {
        "mode": {
          "description": "The site-to-site VPN mode: hub, spoke, or none",
          "type": "string"
        },
        "hubs": {
          "description": "The list of VPN hubs, in order of preference. In spoke mode, at least 1 hub is required.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Hub"
          }
        },
        "subnets": {
          "description": "The list of subnets and their VPN presence.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Subnet"
          }
        }
      }
    },
    "Hub": {
      "title": "Hub",
      "type": "object",
      "properties": {
        "hubId": {
          "description": "The network ID of the hub.",
          "type": "string"
        },
        "useDefaultRoute": {
          "description": "Only valid in 'spoke' mode. Indicates whether default route traffic should be sent to this hub.",
          "type": "boolean"
        }
      },
      "required": [
        "hubId"
      ]
    },
    "Subnet": {
      "title": "Subnet",
      "type": "object",
      "properties": {
        "localSubnet": {
          "description": "The CIDR notation subnet used within the VPN",
          "type": "string"
        },
        "useVpn": {
          "description": "Indicates the presence of the subnet in the VPN",
          "type": "boolean"
        }
      },
      "required": [
        "localSubnet"
      ]
    },
    "snapshotNetworkCamera": {
      "title": "snapshotNetworkCamera",
      "type": "object",
      "properties": {
        "timestamp": {
          "description": "[optional] The snapshot will be taken from this time on the camera. The timestamp is expected to be in ISO 8601 format. If no timestamp is specified, we will assume current time.",
          "type": "string"
        }
      }
    },
    "provisionNetworkClients": {
      "title": "provisionNetworkClients",
      "type": "object",
      "properties": {
        "mac": {
          "description": "The MAC address of the client. Required.",
          "type": "string"
        },
        "name": {
          "description": "The display name for the client. Optional. Limited to 255 bytes.",
          "type": "string"
        },
        "devicePolicy": {
          "description": "The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required.",
          "type": "string"
        },
        "groupPolicyId": {
          "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored.",
          "type": "string"
        }
      }
    },
    "updateNetworkClientPolicy": {
      "title": "updateNetworkClientPolicy",
      "type": "object",
      "properties": {
        "devicePolicy": {
          "description": "The group policy (Whitelisted, Blocked, Normal, Group policy)",
          "type": "string"
        },
        "groupPolicyId": {
          "description": "[optional] If devicePolicy param is set to 'Group policy' this param is used to specify the group ID.",
          "type": "string"
        },
        "timespan": {
          "description": "The timespan for which clients will be fetched. Must be in seconds and less than or equal to a month (2592000 seconds).",
          "type": "string"
        }
      }
    },
    "updateNetworkClientSplashAuthorizationStatus": {
      "title": "updateNetworkClientSplashAuthorizationStatus",
      "type": "object",
      "properties": {
        "ssids": {
          "$ref": "#/definitions/Ssids"
        }
      }
    },
    "Ssids": {
      "title": "Ssids",
      "description": "The target SSIDs. For each SSID where isAuthorized is true, the expiration time will automatically be set according to the SSID's splash frequency.",
      "type": "object",
      "properties": {
        "isAuthorized": {
          "description": "New authorization status for SSID (true, false).",
          "type": "string"
        }
      }
    },
    "updateNetworkDevice": {
      "title": "updateNetworkDevice",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of a device",
          "type": "string"
        },
        "tags": {
          "description": "The tags of a device",
          "type": "string"
        },
        "lat": {
          "description": "The latitude of a device",
          "type": "string"
        },
        "lng": {
          "description": "The longitude of a device",
          "type": "string"
        },
        "address": {
          "description": "The address of a device",
          "type": "string"
        },
        "notes": {
          "description": "The notes for the device. String. Limited to 255 characters.",
          "type": "string"
        },
        "moveMapMarker": {
          "description": "Whether or not to set the latitude and longitude of a device based on the new address. Only applies when lat and lng are not specified.",
          "type": "string"
        }
      }
    },
    "claimNetworkDevices": {
      "title": "claimNetworkDevices",
      "type": "object",
      "properties": {
        "serial": {
          "description": "The serial of a device",
          "type": "string"
        }
      },
      "required": [
        "serial"
      ]
    },
    "blinkLedsNetworkDevice": {
      "title": "blinkLedsNetworkDevice",
      "type": "object",
      "properties": {
        "duration": {
          "description": "The duration in seconds. Must be between 5 and 120. Default is 20 seconds",
          "type": "integer",
          "format": "int32"
        },
        "period": {
          "description": "The period in milliseconds. Must be between 100 and 1000. Default is 160 milliseconds",
          "type": "integer",
          "format": "int32"
        },
        "duty": {
          "description": "The duty cycle as the percent active. Must be between 10 and 90. Default is 50.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "updateNetworkCellularFirewallRules": {
      "title": "updateNetworkCellularFirewallRules",
      "type": "object",
      "properties": {
        "rules": {
          "description": "An ordered array of the firewall rules (not including the default rule)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rule"
          }
        }
      }
    },
    "Rule": {
      "title": "Rule",
      "type": "object",
      "properties": {
        "comment": {
          "description": "Description of the rule (optional)",
          "type": "string"
        },
        "policy": {
          "description": "'Allow' or 'Deny' traffic specified by this rule",
          "type": "string"
        },
        "protocol": {
          "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')",
          "type": "string"
        },
        "srcPort": {
          "description": "Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'",
          "type": "string"
        },
        "srcCidr": {
          "description": "Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (note: FQDN not supported for source addresses)",
          "type": "string"
        },
        "destPort": {
          "description": "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'",
          "type": "string"
        },
        "destCidr": {
          "description": "Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'",
          "type": "string"
        },
        "syslogEnabled": {
          "description": "Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)",
          "type": "boolean"
        }
      },
      "required": [
        "policy",
        "protocol",
        "srcCidr",
        "destCidr"
      ]
    },
    "updateNetworkL3FirewallRules": {
      "title": "updateNetworkL3FirewallRules",
      "type": "object",
      "properties": {
        "rules": {
          "description": "An ordered array of the firewall rules (not including the default rule)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rule"
          }
        },
        "syslogDefaultRule": {
          "description": "Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)",
          "type": "boolean"
        }
      }
    },
    "updateNetworkL7FirewallRules": {
      "title": "updateNetworkL7FirewallRules",
      "type": "object",
      "properties": {
        "rules": {
          "description": "An ordered array of the MX L7 firewall rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rule2"
          }
        }
      }
    },
    "Rule2": {
      "title": "Rule2",
      "type": "object",
      "properties": {
        "policy": {
          "description": "'Deny' traffic specified by this rule",
          "type": "string"
        },
        "type": {
          "description": "Type of the L7 rule. One of: 'application', 'applicationCategory', 'host', 'port', 'ipRange'",
          "type": "string"
        },
        "value": {
          "description": "The 'value' of what you want to block. Format of 'value' varies depending on type of the rule. See sample request. The application categories and application ids can be retrieved from the the 'MX L7 application categories' endpoint. The countries follow the two-letter ISO 3166-1 alpha-2 format.",
          "type": "string"
        }
      }
    },
    "updateOrganizationVpnFirewallRules": {
      "title": "updateOrganizationVpnFirewallRules",
      "type": "object",
      "properties": {
        "rules": {
          "description": "An ordered array of the firewall rules (not including the default rule)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rule3"
          }
        },
        "syslogDefaultRule": {
          "description": "Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)",
          "type": "boolean"
        }
      }
    },
    "Rule3": {
      "title": "Rule3",
      "type": "object",
      "properties": {
        "comment": {
          "description": "Description of the rule (optional)",
          "type": "string"
        },
        "policy": {
          "description": "'Allow' or 'Deny' traffic specified by this rule",
          "type": "string"
        },
        "protocol": {
          "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')",
          "type": "string"
        },
        "srcPort": {
          "description": "Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'",
          "type": "string"
        },
        "srcCidr": {
          "description": "Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (FQDN not supported)",
          "type": "string"
        },
        "destPort": {
          "description": "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'",
          "type": "string"
        },
        "destCidr": {
          "description": "Comma-separated list of destination IP address(es) (in IP or CIDR notation) or 'any' (FQDN not supported)",
          "type": "string"
        },
        "syslogEnabled": {
          "description": "Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)",
          "type": "boolean"
        }
      },
      "required": [
        "policy",
        "protocol",
        "srcCidr",
        "destCidr"
      ]
    },
    "updateNetworkSsidL3FirewallRules": {
      "title": "updateNetworkSsidL3FirewallRules",
      "type": "object",
      "properties": {
        "rules": {
          "description": "An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rule4"
          }
        },
        "allowLanAccess": {
          "description": "Allow wireless client access to local LAN (boolean value - true allows access and false denies access) (optional)",
          "type": "boolean"
        }
      }
    },
    "Rule4": {
      "title": "Rule4",
      "type": "object",
      "properties": {
        "comment": {
          "description": "Description of the rule (optional)",
          "type": "string"
        },
        "policy": {
          "description": "'Allow' or 'Deny' traffic specified by this rule",
          "type": "string"
        },
        "protocol": {
          "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')",
          "type": "string"
        },
        "destPort": {
          "description": "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'",
          "type": "string"
        },
        "destCidr": {
          "description": "Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'",
          "type": "string"
        }
      },
      "required": [
        "policy",
        "protocol",
        "destCidr"
      ]
    },
    "createNetworkGroupPolicies": {
      "title": "createNetworkGroupPolicies",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name for your group policy. Required.",
          "type": "string"
        },
        "scheduling": {
          "$ref": "#/definitions/Scheduling"
        },
        "bandwidth": {
          "$ref": "#/definitions/Bandwidth"
        }
      },
      "required": [
        "name"
      ]
    },
    "Scheduling": {
      "title": "Scheduling",
      "description": "The schedule for the group policy. Schedules are applied to days of the week. Schedule\n    objects have the form of { \"active\": <bool>, \"from\": \"hh:mm\", \"to\": \"hh:mm\" }, specifying\n    when the group policy is active (true) or inactive (false). Only 30 minute increments are\n    allowed for 'from' and 'to'. Unset days are given a default schedule of\n    {\"active\":true,\"from\":\"00:00\",\"to\":\"24:00\"}\"",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Whether scheduling is enabled (true) or disabled (false). Defaults to false. If true, the schedule objects for each day of the week (monday - sunday) are parsed.",
          "type": "boolean"
        },
        "monday": {
          "$ref": "#/definitions/Monday"
        },
        "tuesday": {
          "$ref": "#/definitions/Tuesday"
        },
        "wednesday": {
          "$ref": "#/definitions/Wednesday"
        },
        "thursday": {
          "$ref": "#/definitions/Thursday"
        },
        "friday": {
          "$ref": "#/definitions/Friday"
        },
        "saturday": {
          "$ref": "#/definitions/Saturday"
        },
        "sunday": {
          "$ref": "#/definitions/Sunday"
        }
      }
    },
    "Monday": {
      "title": "Monday",
      "description": "The schedule object for Monday.",
      "type": "object",
      "properties": {
        "active": {
          "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.",
          "type": "boolean"
        },
        "from": {
          "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.",
          "type": "string"
        },
        "to": {
          "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.",
          "type": "string"
        }
      }
    },
    "Tuesday": {
      "title": "Tuesday",
      "description": "The schedule object for Tuesday.",
      "type": "object",
      "properties": {
        "active": {
          "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.",
          "type": "boolean"
        },
        "from": {
          "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.",
          "type": "string"
        },
        "to": {
          "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.",
          "type": "string"
        }
      }
    },
    "Wednesday": {
      "title": "Wednesday",
      "description": "The schedule object for Wednesday.",
      "type": "object",
      "properties": {
        "active": {
          "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.",
          "type": "boolean"
        },
        "from": {
          "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.",
          "type": "string"
        },
        "to": {
          "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.",
          "type": "string"
        }
      }
    },
    "Thursday": {
      "title": "Thursday",
      "description": "The schedule object for Thursday.",
      "type": "object",
      "properties": {
        "active": {
          "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.",
          "type": "boolean"
        },
        "from": {
          "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.",
          "type": "string"
        },
        "to": {
          "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.",
          "type": "string"
        }
      }
    },
    "Friday": {
      "title": "Friday",
      "description": "The schedule object for Friday.",
      "type": "object",
      "properties": {
        "active": {
          "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.",
          "type": "boolean"
        },
        "from": {
          "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.",
          "type": "string"
        },
        "to": {
          "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.",
          "type": "string"
        }
      }
    },
    "Saturday": {
      "title": "Saturday",
      "description": "The schedule object for Saturday.",
      "type": "object",
      "properties": {
        "active": {
          "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.",
          "type": "boolean"
        },
        "from": {
          "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.",
          "type": "string"
        },
        "to": {
          "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.",
          "type": "string"
        }
      }
    },
    "Sunday": {
      "title": "Sunday",
      "description": "The schedule object for Sunday.",
      "type": "object",
      "properties": {
        "active": {
          "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.",
          "type": "boolean"
        },
        "from": {
          "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.",
          "type": "string"
        },
        "to": {
          "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.",
          "type": "string"
        }
      }
    },
    "Bandwidth": {
      "title": "Bandwidth",
      "description": "The bandwidth settings for clients bound to your group policy. Bandwidth settings can be\n    set to 'network default', 'ignore' or 'custom'. Bandwidth limit objects have the form of\n    { \"limitUp\": <integer>, \"limitDown\": <integer> }, specifying the upload and download limit\n    for clients, respectively. null indicates no limit. Bandwidth limits are in Kb/s.",
      "type": "object",
      "properties": {
        "settings": {
          "description": "How bandwidth limits are enforced. Can be 'network default', 'ignore' or 'custom'.",
          "type": "string"
        },
        "bandwidthLimits": {
          "$ref": "#/definitions/BandwidthLimits"
        }
      }
    },
    "BandwidthLimits": {
      "title": "BandwidthLimits",
      "description": "The bandwidth limits object, specifying upload and download speed for clients bound to the group policy. These are only enforced if 'settings' is set to 'custom'.",
      "type": "object",
      "properties": {
        "limitUp": {
          "description": "The maximum upload limit (integer, in Kbps). null indicates no limit",
          "type": "integer",
          "format": "int32"
        },
        "limitDown": {
          "description": "The maximum download limit (integer, in Kbps). null indicates no limit",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "updateNetworkGroupPolicy": {
      "title": "updateNetworkGroupPolicy",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name for your group policy.",
          "type": "string"
        },
        "scheduling": {
          "$ref": "#/definitions/Scheduling"
        },
        "bandwidth": {
          "$ref": "#/definitions/Bandwidth"
        }
      }
    },
    "createNetworkHttpServers": {
      "title": "createNetworkHttpServers",
      "type": "object",
      "properties": {
        "name": {
          "description": "A name for easy reference to the HTTP server",
          "type": "string"
        },
        "url": {
          "description": "The URL of the HTTP server",
          "type": "string"
        },
        "sharedSecret": {
          "description": "A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki.",
          "type": "string"
        }
      }
    },
    "updateNetworkHttpServer": {
      "title": "updateNetworkHttpServer",
      "type": "object",
      "properties": {
        "name": {
          "description": "A name for easy reference to the HTTP server",
          "type": "string"
        },
        "url": {
          "description": "The URL of the HTTP server",
          "type": "string"
        },
        "sharedSecret": {
          "description": "A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki.",
          "type": "string"
        }
      }
    },
    "createNetworkHttpServersWebhookTests": {
      "title": "createNetworkHttpServersWebhookTests",
      "type": "object",
      "properties": {
        "url": {
          "description": "The URL where the test webhook will be sent",
          "type": "string"
        }
      }
    },
    "createOrganizations": {
      "title": "createOrganizations",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the organization",
          "type": "string"
        }
      }
    },
    "updateOrganization": {
      "title": "updateOrganization",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the organization",
          "type": "string"
        }
      }
    },
    "cloneOrganization": {
      "title": "cloneOrganization",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the new organization",
          "type": "string"
        }
      }
    },
    "updateOrganizationSnmp": {
      "title": "updateOrganizationSnmp",
      "type": "object",
      "properties": {
        "v2cEnabled": {
          "description": "Boolean indicating whether SNMP version 2c is enabled for the organization",
          "type": "string"
        },
        "v3Enabled": {
          "description": "Boolean indicating whether SNMP version 3 is enabled for the organization",
          "type": "string"
        },
        "v3AuthMode": {
          "description": "The SNMP version 3 authentication mode either MD5 or SHA",
          "type": "string"
        },
        "v3AuthPass": {
          "description": "The SNMP version 3 authentication password.  Must be at least 8 characters if specified.",
          "type": "string"
        },
        "v3PrivMode": {
          "description": "The SNMP version 3 privacy mode DES or AES128",
          "type": "string"
        },
        "v3PrivPass": {
          "description": "The SNMP version 3 privacy password.  Must be at least 8 characters if specified.",
          "type": "string"
        },
        "peerIps": {
          "description": "The IPs that are allowed to access the SNMP server. This list should be IPv4 addresses separated by semi-colons (ie. \"1.2.3.4;2.3.4.5\").",
          "type": "string"
        }
      }
    },
    "updateOrganizationThirdPartyVPNPeers": {
      "title": "updateOrganizationThirdPartyVPNPeers",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the VPN peer",
          "type": "string"
        },
        "publicIp": {
          "description": "The public IP of the VPN peer",
          "type": "string"
        },
        "privateSubnets": {
          "description": "The list of the private subnets of the VPN peer",
          "type": "string"
        },
        "ipsecPolicies": {
          "$ref": "#/definitions/IpsecPolicies"
        },
        "ipsecPoliciesPreset": {
          "description": "One of the following available presets: \"default\", \"aws\", \"azure\". If this is provided, the IPSecPolicies parameter is ignored.",
          "type": "string"
        },
        "secret": {
          "description": "The shared secret with the VPN peer",
          "type": "string"
        },
        "networkTags": {
          "description": "A list of network tags that will connect with this peer. Use \"all\" for all networks. Use \"none\" for no networks. If missing, default is \"all\".",
          "type": "string"
        }
      }
    },
    "IpsecPolicies": {
      "title": "IpsecPolicies",
      "description": "Custom IPSec policies for the VPN peer. If not included and a preset has not been chosen, the default preset for IPSec policies will be used.",
      "type": "object",
      "properties": {
        "ikeCipherAlgo": {
          "description": "This is the cipher algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: \"aes256\", \"aes192\", \"aes128\", \"tripledes\", \"des\"",
          "type": "string"
        },
        "ikeAuthAlgo": {
          "description": "This is the authentication algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: \"sha1\", \"md5\"",
          "type": "string"
        },
        "ikeDiffieHellmanGroup": {
          "description": "This is the Diffie-Hellman group to be used in Phase 1. The value should be an array with one of the following algorithms: \"group5\", \"group2\", \"group1\"",
          "type": "string"
        },
        "ikeLifetime": {
          "description": "The lifetime of the Phase 1 SA in seconds.",
          "type": "string"
        },
        "childCipherAlgo": {
          "description": "This is the cipher algorithms to be used in Phase 2. The value should be an array with one or more of the following algorithms: \"aes256\", \"aes192\", \"aes128\", \"tripledes\", \"des\", \"null\"",
          "type": "string"
        },
        "childAuthAlgo": {
          "description": "This is the authentication algorithms to be used in Phase 2. The value should be an array with one of the following algorithms: \"sha1\", \"md5\"",
          "type": "string"
        },
        "childPfsGroup": {
          "description": "This is the Diffie-Hellman group to be used for Perfect Forward Secrecy in Phase 2. The value should be an array with one of the following values: \"disabled\", \"group5\", \"group2\", \"group1\"",
          "type": "string"
        },
        "childLifetime": {
          "description": "The lifetime of the Phase 2 SA in seconds.",
          "type": "string"
        }
      }
    },
    "claimOrganization": {
      "title": "claimOrganization",
      "type": "object",
      "properties": {
        "order": {
          "description": "The order number that should be claimed",
          "type": "string"
        },
        "serial": {
          "description": "The serial of the device that should be claimed",
          "type": "string"
        },
        "licenseKey": {
          "description": "The license key that should be claimed",
          "type": "string"
        },
        "licenseMode": {
          "description": "Either 'renew' or 'addDevices'. 'addDevices' will increase the license limit, while 'renew' will extend the amount of time until expiration. This parameter is required when claiming by licenseKey. Please see <a target='_blank' href='https://documentation.meraki.com/zGeneral_Administration/Licensing/Adding_an_Enterprise_license_to_an_existing_Dashboard_account'>this article</a> for more information.",
          "type": "string"
        }
      }
    },
    "createNetworkPiiRequests": {
      "title": "createNetworkPiiRequests",
      "type": "object",
      "properties": {
        "type": {
          "description": "One of \"delete\" or \"restrict processing\"",
          "type": "string"
        },
        "datasets": {
          "description": "The datasets related to the provided key that should be deleted. Only applies to \"delete\" requests. The value \"all\" will be expanded to all datasets applicable to this type. The datasets by applicable to each type are: mac (usage, events, traffic), email (users, loginAttempts), username (users, loginAttempts), bluetoothMac (client, connectivity), smDeviceId (device), smUserId (user)",
          "type": "string"
        },
        "username": {
          "description": "The username of a network log in. Only applies to \"delete\" requests.",
          "type": "string"
        },
        "email": {
          "description": "The email of a network user account. Only applies to \"delete\" requests.",
          "type": "string"
        },
        "mac": {
          "description": "The MAC of a network client device. Applies to both \"restrict processing\" and \"delete\" requests.",
          "type": "string"
        },
        "smDeviceId": {
          "description": "The sm_device_id of a Systems Manager device. The only way to \"restrict processing\" or \"delete\" a Systems Manager device. Must include \"device\" in the dataset for a \"delete\" request to destroy the device.",
          "type": "string"
        },
        "smUserId": {
          "description": "The sm_user_id of a Systems Manager user. The only way to \"restrict processing\" or \"delete\" a Systems Manager user. Must include \"user\" in the dataset for a \"delete\" request to destroy the user.",
          "type": "string"
        }
      }
    },
    "createOrganizationSamlRoles": {
      "title": "createOrganizationSamlRoles",
      "type": "object",
      "properties": {
        "role": {
          "description": "The role of the SAML administrator",
          "type": "string"
        },
        "orgAccess": {
          "description": "The privilege of the SAML administrator on the organization",
          "type": "string"
        },
        "tags": {
          "description": "The list of tags that the SAML administrator has privileges on",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag2"
          }
        },
        "networks": {
          "description": "The list of networks that the SAML administrator has privileges on",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Network2"
          }
        }
      }
    },
    "Tag2": {
      "title": "Tag2",
      "type": "object",
      "properties": {
        "tag": {
          "description": "The name of the tag",
          "type": "string"
        },
        "access": {
          "description": "The privilege of the SAML administrator on the tag",
          "type": "string"
        }
      }
    },
    "Network2": {
      "title": "Network2",
      "type": "object",
      "properties": {
        "id": {
          "description": "The network ID",
          "type": "string"
        },
        "access": {
          "description": "The privilege of the SAML administrator on the network",
          "type": "string"
        }
      }
    },
    "updateOrganizationSamlRole": {
      "title": "updateOrganizationSamlRole",
      "type": "object",
      "properties": {
        "role": {
          "description": "The role of the SAML administrator",
          "type": "string"
        },
        "orgAccess": {
          "description": "The privilege of the SAML administrator on the organization",
          "type": "string"
        },
        "tags": {
          "description": "The list of tags that the SAML administrator has privileges on",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag2"
          }
        },
        "networks": {
          "description": "The list of networks that the SAML administrator has privileges on",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Network2"
          }
        }
      }
    },
    "updateNetworkSecurityMalwareSettings": {
      "title": "updateNetworkSecurityMalwareSettings",
      "type": "object",
      "properties": {
        "mode": {
          "description": "Set mode to 'enabled' to enable malware prevention, otherwise 'disabled'",
          "type": "string"
        }
      }
    },
    "createNetworkSmTargetGroups": {
      "title": "createNetworkSmTargetGroups",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of this target group",
          "type": "string"
        },
        "scope": {
          "description": "The scope and tag options of the target group. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none, followed by tags",
          "type": "string"
        }
      }
    },
    "updateNetworkSmTargetGroup": {
      "title": "updateNetworkSmTargetGroup",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of this target group",
          "type": "string"
        },
        "scope": {
          "description": "The scope and tag options of the target group. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none, followed by tags",
          "type": "string"
        }
      }
    },
    "createNetworkSmProfileClarity": {
      "title": "createNetworkSmProfileClarity",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name to be given to the new profile",
          "type": "string"
        },
        "scope": {
          "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned",
          "type": "string"
        },
        "PluginBundleID": {
          "description": "The bundle ID of the application, defaults to com.cisco.ciscosecurity.app",
          "type": "string"
        },
        "FilterBrowsers": {
          "description": "Whether or not to enable browser traffic filtering (one of true, false). Default true.",
          "type": "string"
        },
        "FilterSockets": {
          "description": "Whether or not to enable socket traffic filtering (one of true, false). Default true.",
          "type": "string"
        },
        "VendorConfig": {
          "description": "The specific VendorConfig to be passed to the filtering framework, as JSON. VendorConfig should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name",
          "type": "string"
        }
      }
    },
    "updateNetworkSmProfileClarity": {
      "title": "updateNetworkSmProfileClarity",
      "type": "object",
      "properties": {
        "name": {
          "description": "optional: A new name for the profile",
          "type": "string"
        },
        "scope": {
          "description": "optional: A new scope for the profile (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned",
          "type": "string"
        },
        "PluginBundleID": {
          "description": "optional: The new bundle ID of the application",
          "type": "string"
        },
        "FilterBrowsers": {
          "description": "optional: Whether or not to enable browser traffic filtering (one of true, false).",
          "type": "string"
        },
        "FilterSockets": {
          "description": "optional: Whether or not to enable socket traffic filtering (one of true, false).",
          "type": "string"
        },
        "VendorConfig": {
          "description": "optional: The specific VendorConfig to be passed to the filtering framework, as JSON. VendorConfig should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name",
          "type": "string"
        }
      }
    },
    "addNetworkSmProfileClarity": {
      "title": "addNetworkSmProfileClarity",
      "type": "object",
      "properties": {
        "PluginBundleID": {
          "description": "The bundle ID of the application, defaults to com.cisco.ciscosecurity.app",
          "type": "string"
        },
        "FilterBrowsers": {
          "description": "Whether or not to enable browser traffic filtering (one of true, false).",
          "type": "string"
        },
        "FilterSockets": {
          "description": "Whether or not to enable socket traffic filtering (one of true, false).",
          "type": "string"
        },
        "VendorConfig": {
          "description": "The specific VendorConfig to be passed to the filtering framework, as JSON. VendorConfig should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name",
          "type": "string"
        }
      }
    },
    "createNetworkSmProfileUmbrella": {
      "title": "createNetworkSmProfileUmbrella",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name to be given to the new profile",
          "type": "string"
        },
        "scope": {
          "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned",
          "type": "string"
        },
        "AppBundleIdentifier": {
          "description": "The bundle ID of the application, defaults to com.cisco.ciscosecurity.app",
          "type": "string"
        },
        "ProviderBundleIdentifier": {
          "description": "The bundle ID of the provider, defaults to com.cisco.ciscosecurity.app.CiscoUmbrella",
          "type": "string"
        },
        "ProviderConfiguration": {
          "description": "The specific ProviderConfiguration to be passed to the filtering framework, as JSON. ProviderConfiguration should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name",
          "type": "string"
        },
        "usesCert": {
          "description": "Whether the certificate should be attached to this profile (one of true, false).",
          "type": "string"
        }
      }
    },
    "updateNetworkSmProfileUmbrella": {
      "title": "updateNetworkSmProfileUmbrella",
      "type": "object",
      "properties": {
        "name": {
          "description": "optional: A new name for the profile",
          "type": "string"
        },
        "scope": {
          "description": "optional: A new scope for the profile (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned",
          "type": "string"
        },
        "AppBundleIdentifier": {
          "description": "optional: The bundle ID of the application",
          "type": "string"
        },
        "ProviderBundleIdentifier": {
          "description": "optional: The bundle ID of the provider",
          "type": "string"
        },
        "ProviderConfiguration": {
          "description": "optional: The specific ProviderConfiguration to be passed to the filtering framework, as JSON. ProviderConfiguration should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name",
          "type": "string"
        },
        "usesCert": {
          "description": "Whether the certificate should be attached to this profile (one of true, false). False by default.",
          "type": "string"
        }
      }
    },
    "addNetworkSmProfileUmbrella": {
      "title": "addNetworkSmProfileUmbrella",
      "type": "object",
      "properties": {
        "AppBundleIdentifier": {
          "description": "The bundle ID of the application, defaults to com.cisco.ciscosecurity.app",
          "type": "string"
        },
        "ProviderBundleIdentifier": {
          "description": "The bundle ID of the provider, defaults to com.cisco.ciscosecurity.app.CiscoUmbrella",
          "type": "string"
        },
        "ProviderConfiguration": {
          "description": "The specific ProviderConfiguration to be passed to the filtering framework, as JSON. ProviderConfiguration should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name",
          "type": "string"
        },
        "usesCert": {
          "description": "Whether the certificate should be attached to this profile (one of true, false). False by default.",
          "type": "string"
        }
      }
    },
    "createNetworkSmAppPolaris": {
      "title": "createNetworkSmAppPolaris",
      "type": "object",
      "properties": {
        "scope": {
          "description": "The scope (one of all, none, automatic, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned",
          "type": "string"
        },
        "manifestUrl": {
          "description": "The manifest URL of the Polaris app (one of manifestUrl and bundleId must be provided)",
          "type": "string"
        },
        "bundleId": {
          "description": "The bundleId of the Polaris app (one of manifestUrl and bundleId must be provided)",
          "type": "string"
        },
        "preventAutoInstall": {
          "description": "(optional) Whether or not SM should auto-install this app (one of true or false). False by default.",
          "type": "string"
        },
        "usesVPP": {
          "description": "(optional) Whether or not the app should use VPP by device assignment (one of true or false). False by default.",
          "type": "string"
        }
      }
    },
    "updateNetworkSmAppPolari": {
      "title": "updateNetworkSmAppPolari",
      "type": "object",
      "properties": {
        "scope": {
          "description": "The scope (one of all, none, automatic, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned",
          "type": "string"
        },
        "preventAutoInstall": {
          "description": "Whether or not SM should auto-install this app (one of true or false). False by default.",
          "type": "string"
        },
        "usesVPP": {
          "description": "Whether or not the app should use VPP by device assignment (one of true or false). False by default.",
          "type": "string"
        }
      }
    },
    "updateNetworkSmDevicesTags": {
      "title": "updateNetworkSmDevicesTags",
      "type": "object",
      "properties": {
        "wifiMacs": {
          "description": "The wifiMacs of the devices to be modified.",
          "type": "string"
        },
        "ids": {
          "description": "The ids of the devices to be modified.",
          "type": "string"
        },
        "serials": {
          "description": "The serials of the devices to be modified.",
          "type": "string"
        },
        "scope": {
          "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be modified.",
          "type": "string"
        },
        "tags": {
          "description": "The tags to be added, deleted, or updated.",
          "type": "string"
        },
        "updateAction": {
          "description": "One of add, delete, or update. Only devices that have been modified will be returned.",
          "type": "string"
        }
      }
    },
    "updateNetworkSmDeviceFields": {
      "title": "updateNetworkSmDeviceFields",
      "type": "object",
      "properties": {
        "wifiMac": {
          "description": "The wifiMac of the device to be modified.",
          "type": "string"
        },
        "id": {
          "description": "The id of the device to be modified.",
          "type": "string"
        },
        "serial": {
          "description": "The serial of the device to be modified.",
          "type": "string"
        },
        "deviceFields": {
          "description": "The new fields of the device. Passed in as a JSON object. The list of available fields are: name, notes",
          "type": "string"
        }
      }
    },
    "updateNetworkSmDevicesLock": {
      "title": "updateNetworkSmDevicesLock",
      "type": "object",
      "properties": {
        "wifiMacs": {
          "description": "The wifiMacs of the devices to be locked.",
          "type": "string"
        },
        "ids": {
          "description": "The ids of the devices to be locked.",
          "type": "string"
        },
        "serials": {
          "description": "The serials of the devices to be locked.",
          "type": "string"
        },
        "scope": {
          "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be wiped.",
          "type": "string"
        },
        "pin": {
          "description": "The pin number for locking macOS devices (a six digit number). Required only for macOS devices.",
          "type": "string"
        }
      }
    },
    "updateNetworkSmDeviceWipe": {
      "title": "updateNetworkSmDeviceWipe",
      "type": "object",
      "properties": {
        "wifiMac": {
          "description": "The wifiMac of the device to be wiped.",
          "type": "string"
        },
        "id": {
          "description": "The id of the device to be wiped.",
          "type": "string"
        },
        "serial": {
          "description": "The serial of the device to be wiped.",
          "type": "string"
        },
        "pin": {
          "description": "The pin number (a six digit value) for wiping a macOS device. Required only for macOS devices.",
          "type": "string"
        }
      }
    },
    "updateNetworkSmDevicesCheckin": {
      "title": "updateNetworkSmDevicesCheckin",
      "type": "object",
      "properties": {
        "wifiMacs": {
          "description": "The wifiMacs of the devices to be checked-in.",
          "type": "string"
        },
        "ids": {
          "description": "The ids of the devices to be checked-in.",
          "type": "string"
        },
        "serials": {
          "description": "The serials of the devices to be checked-in.",
          "type": "string"
        },
        "scope": {
          "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be checked-in.",
          "type": "string"
        }
      }
    },
    "updateNetworkSmDevicesMove": {
      "title": "updateNetworkSmDevicesMove",
      "type": "object",
      "properties": {
        "wifiMacs": {
          "description": "The wifiMacs of the devices to be moved.",
          "type": "string"
        },
        "ids": {
          "description": "The ids of the devices to be moved.",
          "type": "string"
        },
        "serials": {
          "description": "The serials of the devices to be moved.",
          "type": "string"
        },
        "scope": {
          "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be moved.",
          "type": "string"
        },
        "newNetwork": {
          "description": "The new network to which the devices will be moved.",
          "type": "string"
        }
      }
    },
    "updateNetworkSsidSplashSettings": {
      "title": "updateNetworkSsidSplashSettings",
      "type": "object",
      "properties": {
        "splashUrl": {
          "description": "The custom splash URL of the click-through splash page. Optional. Note that the URL can be configured without necessarily being used. In order to enable the custom URL, see 'useSplashUrl'",
          "type": "string"
        },
        "useSplashUrl": {
          "description": "Boolean indicating whether the user will be redirected to the custom splash url. A custom splash URL must be set if this is true. Optional. Note that depending on your SSID's access control settings, it may not be possible to use the custom splash URL.",
          "type": "string"
        }
      }
    },
    "updateNetworkSsid": {
      "title": "updateNetworkSsid",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of an SSID",
          "type": "string"
        },
        "enabled": {
          "description": "Whether or not an SSID is enabled",
          "type": "string"
        },
        "authMode": {
          "description": "The association control method for the SSID ('open', 'psk', 'open-with-radius', '8021x-meraki', '8021x-radius')",
          "type": "string"
        },
        "encryptionMode": {
          "description": "The psk encryption mode for the SSID ('wpa', 'wep', 'wpa-eap')",
          "type": "string"
        },
        "psk": {
          "description": "The passkey for the SSID. This param is only valid if the authMode is 'psk'",
          "type": "string"
        },
        "wpaEncryptionMode": {
          "description": "The types of WPA encryption. ('WPA1 and WPA2', 'WPA2 only')",
          "type": "string"
        },
        "splashPage": {
          "description": "The type of splash page for the SSID ('None', 'Click-through splash page', 'Billing', 'Password-protected with Meraki RADIUS', 'Password-protected with custom RADIUS', 'Password-protected with Active Directory', 'Password-protected with LDAP', 'SMS authentication', 'Systems Manager Sentry', 'Facebook Wi-Fi', 'Google OAuth', 'Sponsored guest'). This attribute is not supported for template children.",
          "type": "string"
        },
        "radiusServers": {
          "description": "The RADIUS 802.1x servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius'",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RadiusServer"
          }
        },
        "radiusCoaEnabled": {
          "description": "If true, Meraki devices will act as a RADIUS Dynamic Authorization Server and will respond to RADIUS Change-of-Authorization and Disconnect messages sent by the RADIUS server.",
          "type": "string"
        },
        "radiusFailoverPolicy": {
          "description": "This policy determines how authentication requests should be handled in the event that all of the configured RADIUS servers are unreachable ('Deny access', 'Allow access')",
          "type": "string"
        },
        "radiusLoadBalancingPolicy": {
          "description": "This policy determines which RADIUS server will be contacted first in an authentication attempt and the ordering of any necessary retry attempts ('Strict priority order', 'Round robin')",
          "type": "string"
        },
        "radiusAccountingEnabled": {
          "description": "Whether or not RADIUS accounting is enabled. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius'",
          "type": "string"
        },
        "radiusAccountingServers": {
          "description": "The RADIUS accounting 802.1x servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius' and radiusAccountingEnabled is 'true'",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RadiusAccountingServer"
          }
        },
        "ipAssignmentMode": {
          "description": "The client IP assignment mode ('NAT mode', 'Bridge mode', 'Layer 3 roaming', 'Layer 3 roaming with a concentrator', 'VPN')",
          "type": "string"
        },
        "useVlanTagging": {
          "description": "Direct trafic to use specific VLANs. This param is only valid with 'Bridge mode' and 'Layer 3 roaming'",
          "type": "string"
        },
        "concentratorNetworkId": {
          "description": "The concentrator to use for 'Layer 3 roaming with a concentrator' or 'VPN'.",
          "type": "string"
        },
        "vlanId": {
          "description": "The VLAN ID used for VLAN tagging. This param is only valid with 'Layer 3 roaming with a concentrator' and 'VPN'",
          "type": "string"
        },
        "defaultVlanId": {
          "description": "The default VLAN ID used for 'all other APs'. This param is only valid with 'Bridge mode' and 'Layer 3 roaming'",
          "type": "string"
        },
        "apTagsAndVlanIds": {
          "description": "The list of tags and VLAN IDs used for VLAN tagging. This param is only valid with 'Bridge mode', 'Layer 3 roaming'",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApTagsAndVlanId"
          }
        },
        "walledGardenEnabled": {
          "description": "Allow access to a configurable list of IP ranges, which users may access prior to sign-on.",
          "type": "string"
        },
        "walledGardenRanges": {
          "description": "Specify your walled garden by entering space-separated addresses, ranges using CIDR notation, domain names, and domain wildcards (e.g. 192.168.1.1/24 192.168.37.10/32 www.yahoo.com *.google.com). Meraki's splash page is automatically included in your walled garden.",
          "type": "string"
        },
        "minBitrate": {
          "description": "The minimum bitrate in Mbps. (1, 2, 5.5, 6, 9, 11, 12, 18, 24, 36, 48, 54)",
          "type": "string"
        },
        "bandSelection": {
          "description": "The client-serving radio frequencies. (Dual band operation, 5 GHz band only, Dual band operation with Band Steering)",
          "type": "string"
        },
        "perClientBandwidthLimitUp": {
          "description": "The upload bandwidth limit in Kbps. (0 represents no limit.)",
          "type": "string"
        },
        "perClientBandwidthLimitDown": {
          "description": "The download bandwidth limit in Kbps. (0 represents no limit.)",
          "type": "string"
        }
      }
    },
    "RadiusServer": {
      "title": "RadiusServer",
      "type": "object",
      "properties": {
        "host": {
          "description": "IP address of your RADIUS server",
          "type": "string"
        },
        "port": {
          "description": "UDP port the RADIUS server listens on for Access-requests",
          "type": "string"
        },
        "secret": {
          "description": "RADIUS client shared secret",
          "type": "string"
        }
      }
    },
    "RadiusAccountingServer": {
      "title": "RadiusAccountingServer",
      "type": "object",
      "properties": {
        "host": {
          "description": "IP address to which the APs will send RADIUS accounting messages",
          "type": "string"
        },
        "port": {
          "description": "Port on the RADIUS server that is listening for accounting messages",
          "type": "string"
        },
        "secret": {
          "description": "Shared key used to authenticate messages between the APs and RADIUS server",
          "type": "string"
        }
      }
    },
    "ApTagsAndVlanId": {
      "title": "ApTagsAndVlanId",
      "type": "object",
      "properties": {
        "tags": {
          "description": "Comma-separated list of AP tags",
          "type": "string"
        },
        "vlanId": {
          "description": "Numerical identifier that is assigned to the VLAN",
          "type": "string"
        }
      }
    },
    "updateNetworkSwitchSettings": {
      "title": "updateNetworkSwitchSettings",
      "type": "object",
      "properties": {
        "useCombinedPower": {
          "description": "The behavior of secondary power supplies on supported devices (\"redundant\", \"combined\")",
          "type": "string"
        },
        "powerExceptions": {
          "description": "Exceptions on a per switch basis to \"useCombinedPower\"",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PowerException"
          }
        }
      }
    },
    "PowerException": {
      "title": "PowerException",
      "type": "object",
      "properties": {
        "serial": {
          "description": "Serial number of the switch",
          "type": "string"
        },
        "powerType": {
          "description": "Per switch exception (combined, redundant, useNetworkSetting)",
          "type": "string"
        }
      }
    },
    "updateDeviceSwitchPort": {
      "title": "updateDeviceSwitchPort",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the switch port",
          "type": "string"
        },
        "tags": {
          "description": "The tags of the switch port",
          "type": "string"
        },
        "enabled": {
          "description": "The status of the switch port",
          "type": "string"
        },
        "type": {
          "description": "The type of the switch port (\"access\" or \"trunk\")",
          "type": "string"
        },
        "vlan": {
          "description": "The VLAN of the switch port",
          "type": "string"
        },
        "voiceVlan": {
          "description": "The voice VLAN of the switch port. Only applicable to access ports.",
          "type": "string"
        },
        "allowedVlans": {
          "description": "The VLANs allowed on the switch port. Only applicable to trunk ports.",
          "type": "string"
        },
        "poeEnabled": {
          "description": "The PoE status of the switch port",
          "type": "string"
        },
        "isolationEnabled": {
          "description": "The isolation status of the switch port",
          "type": "string"
        },
        "rstpEnabled": {
          "description": "The rapid spanning tree protocol status",
          "type": "string"
        },
        "stpGuard": {
          "description": "The state of the STP guard (\"disabled\", \"Root guard\", \"BPDU guard\", \"Loop guard\")",
          "type": "string"
        },
        "accessPolicyNumber": {
          "description": "The number of the access policy of the switch port. Only applicable to access ports.",
          "type": "string"
        },
        "linkNegotiation": {
          "description": "The link speed for the switch port",
          "type": "string"
        }
      }
    },
    "createNetworkSwitchStacks": {
      "title": "createNetworkSwitchStacks",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the new stack",
          "type": "string"
        },
        "serials": {
          "description": "An array of switch serials to be added into the new stack",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "name",
        "serials"
      ]
    },
    "addNetworkSwitchStack": {
      "title": "addNetworkSwitchStack",
      "type": "object",
      "properties": {
        "serial": {
          "description": "The serial of the switch to be added",
          "type": "string"
        }
      },
      "required": [
        "serial"
      ]
    },
    "removeNetworkSwitchStack": {
      "title": "removeNetworkSwitchStack",
      "type": "object",
      "properties": {
        "serial": {
          "description": "The serial of the switch to be removed",
          "type": "string"
        }
      },
      "required": [
        "serial"
      ]
    },
    "updateNetworkSyslogServers": {
      "title": "updateNetworkSyslogServers",
      "type": "object",
      "properties": {
        "servers": {
          "description": "A list of the syslog servers for this network",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Server"
          }
        }
      }
    },
    "Server": {
      "title": "Server",
      "type": "object",
      "properties": {
        "host": {
          "description": "The IP address of the syslog server",
          "type": "string"
        },
        "port": {
          "description": "The port of the syslog server",
          "type": "string"
        },
        "roles": {
          "description": "A list of roles for the syslog server. Options (case-insensitive): 'Wireless event log', 'Appliance event log', 'Switch event log', 'Air Marshal events', 'Flows', 'URLs', 'IDS alerts', 'Security events'",
          "type": "string"
        }
      }
    },
    "updateNetworkContentFiltering": {
      "title": "updateNetworkContentFiltering",
      "type": "object",
      "properties": {
        "allowedUrlPatterns": {
          "description": "A whitelist of URL patterns to allow",
          "type": "string"
        },
        "blockedUrlPatterns": {
          "description": "A blacklist of URL patterns to block",
          "type": "string"
        },
        "blockedUrlCategories": {
          "description": "A list of URL categories to block",
          "type": "string"
        },
        "urlCategoryListSize": {
          "description": "URL category list size which is either 'topSites' or 'fullList'",
          "type": "string"
        }
      }
    },
    "updateNetworkFirewalledService": {
      "title": "updateNetworkFirewalledService",
      "type": "object",
      "properties": {
        "access": {
          "description": "A string indicating the rule for which IPs are allowed to use the specified service. Acceptable values are \"blocked\" (no remote IPs can access the service), \"restricted\" (only whitelisted IPs can access the service), and \"unrestriced\" (any remote IP can access the service). This field is required",
          "type": "string"
        },
        "allowedIps": {
          "description": "An array of whitelisted IPs that can access the service. This field is required if \"access\" is set to \"restricted\". Otherwise this field is ignored",
          "type": "string"
        }
      }
    },
    "updateNetworkOneToManyNatRules": {
      "title": "updateNetworkOneToManyNatRules",
      "type": "object",
      "properties": {
        "rules": {
          "description": "An array of 1:Many nat rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rule5"
          }
        }
      }
    },
    "Rule5": {
      "title": "Rule5",
      "type": "object",
      "properties": {
        "publicIp": {
          "description": "The IP address that will be used to access the internal resource from the WAN",
          "type": "string"
        },
        "uplink": {
          "description": "The physical WAN interface on which the traffic will arrive ('internet1' or, if available, 'internet2')",
          "type": "string"
        },
        "portRules": {
          "description": "An array of associated forwarding rules",
          "type": "string"
        },
        "name": {
          "description": "A description of the rule",
          "type": "string"
        },
        "protocol": {
          "description": "'tcp' or 'udp'",
          "type": "string"
        },
        "publicPort": {
          "description": "Destination port of the traffic that is arriving on the WAN",
          "type": "string"
        },
        "localIp": {
          "description": "Local IP address to which traffic will be forwarded",
          "type": "string"
        },
        "localPort": {
          "description": "Destination port of the forwarded traffic that will be sent from the MX to the specified host on the LAN. If you simply wish to forward the traffic without translating the port, this should be the same as the Public port",
          "type": "string"
        },
        "allowedIps": {
          "description": "Remote IP addresses or ranges that are permitted to access the internal resource via this port forwarding rule, or 'any'",
          "type": "string"
        }
      }
    },
    "updateNetworkOneToOneNatRules": {
      "title": "updateNetworkOneToOneNatRules",
      "type": "object",
      "properties": {
        "rules": {
          "description": "An array of 1:1 nat rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rule6"
          }
        }
      }
    },
    "Rule6": {
      "title": "Rule6",
      "type": "object",
      "properties": {
        "name": {
          "description": "A descriptive name for the rule",
          "type": "string"
        },
        "publicIp": {
          "description": "The IP address that will be used to access the internal resource from the WAN",
          "type": "string"
        },
        "lanIp": {
          "description": "The IP address of the server or device that hosts the internal resource that you wish to make available on the WAN",
          "type": "string"
        },
        "uplink": {
          "description": "The physical WAN interface on which the traffic will arrive ('internet1' or, if available, 'internet2')",
          "type": "string"
        },
        "allowedInbound": {
          "description": "The ports this mapping will provide access on, and the remote IPs that will be allowed access to the resource",
          "type": "string"
        },
        "protocol": {
          "description": "Either of the following: 'tcp', 'udp', 'icmp-ping' or 'any'",
          "type": "string"
        },
        "destinationPorts": {
          "description": "An array of ports or port ranges that will be forwarded to the host on the LAN",
          "type": "string"
        },
        "allowedIps": {
          "description": "An array of ranges of WAN IP addresses that are allowed to make inbound connections on the specified ports or port ranges, or 'any'",
          "type": "string"
        }
      }
    },
    "updateNetworkPortForwardingRules": {
      "title": "updateNetworkPortForwardingRules",
      "type": "object",
      "properties": {
        "rules": {
          "description": "An array of port forwarding params",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Rule7"
          }
        }
      }
    },
    "Rule7": {
      "title": "Rule7",
      "type": "object",
      "properties": {
        "name": {
          "description": "A descriptive name for the rule",
          "type": "string"
        },
        "lanIp": {
          "description": "The IP address of the server or device that hosts the internal resource that you wish to make available on the WAN",
          "type": "string"
        },
        "uplink": {
          "description": "The physical WAN interface on which the traffic will arrive ('internet1' or, if available, 'internet2' or 'both')",
          "type": "string"
        },
        "publicPort": {
          "description": "A port or port ranges that will be forwarded to the host on the LAN",
          "type": "string"
        },
        "localPort": {
          "description": "A port or port ranges that will receive the forwarded traffic from the WAN",
          "type": "string"
        },
        "allowedIps": {
          "description": "An array of ranges of WAN IP addresses that are allowed to make inbound connections on the specified ports or port ranges (or any)",
          "type": "string"
        },
        "protocol": {
          "description": "TCP or UDP",
          "type": "string"
        }
      }
    },
    "createNetworkStaticRoutes": {
      "title": "createNetworkStaticRoutes",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the new static route",
          "type": "string"
        },
        "subnet": {
          "description": "The subnet of the static route",
          "type": "string"
        },
        "gatewayIp": {
          "description": "The gateway IP (next hop) of the static route",
          "type": "string"
        }
      }
    },
    "updateNetworkStaticRoute": {
      "title": "updateNetworkStaticRoute",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the static route",
          "type": "string"
        },
        "subnet": {
          "description": "The subnet of the static route",
          "type": "string"
        },
        "gatewayIp": {
          "description": "The gateway IP (next hop) of the static route",
          "type": "string"
        },
        "enabled": {
          "description": "The enabled state of the static route",
          "type": "string"
        },
        "fixedIpAssignments": {
          "description": "The DHCP fixed IP assignments on the static route",
          "type": "string"
        },
        "reservedIpRanges": {
          "description": "The DHCP reserved IP ranges on the static route",
          "type": "string"
        }
      }
    },
    "updateNetworkUplinkSettings": {
      "title": "updateNetworkUplinkSettings",
      "type": "object",
      "properties": {
        "bandwidthLimits": {
          "$ref": "#/definitions/BandwidthLimits2"
        }
      }
    },
    "BandwidthLimits2": {
      "title": "BandwidthLimits2",
      "description": "A mapping of uplinks ('wan1', 'wan2' or 'cellular') to their bandwidth settings (be sure to check which uplinks are supported for your network). Bandwidth setting objects have the following structure",
      "type": "object",
      "properties": {
        "limitUp": {
          "description": "The maximum upload limit (integer, in Kbps). null indicates no limit",
          "type": "integer",
          "format": "int32"
        },
        "limitDown": {
          "description": "The maximum download limit (integer, in Kbps). null indicates no limit",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "createNetworkVlans": {
      "title": "createNetworkVlans",
      "type": "object",
      "properties": {
        "id": {
          "description": "The VLAN ID of the new VLAN (must be between 1 and 4094)",
          "type": "string"
        },
        "name": {
          "description": "The name of the new VLAN",
          "type": "string"
        },
        "subnet": {
          "description": "The subnet of the VLAN",
          "type": "string"
        },
        "applianceIp": {
          "description": "The local IP of the appliance on the VLAN",
          "type": "string"
        }
      },
      "required": [
        "id",
        "name",
        "subnet",
        "applianceIp"
      ]
    },
    "updateNetworkVlan": {
      "title": "updateNetworkVlan",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the VLAN",
          "type": "string"
        },
        "subnet": {
          "description": "The subnet of the VLAN",
          "type": "string"
        },
        "applianceIp": {
          "description": "The local IP of the appliance on the VLAN",
          "type": "string"
        },
        "vpnNatSubnet": {
          "description": "The translated VPN subnet if VPN and VPN subnet translation are enabled on the VLAN",
          "type": "string"
        },
        "dhcpHandling": {
          "description": "The appliance's handling of DHCP requests on this VLAN. One of: \"Run a DHCP server\", \"Relay DHCP to another server\", or \"Do not respond to DHCP requests\"",
          "type": "string"
        },
        "dhcpRelayServerIps": {
          "description": "The IPs of the DHCP servers that DHCP requests should be relayed to",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dhcpLeaseTime": {
          "description": "The term of DHCP leases if the appliance is running a DHCP server on this VLAN. One of: \"30 minutes\", \"1 hour\", \"4 hours\", \"12 hours\", \"1 day\", \"1 week\".",
          "type": "string"
        },
        "dhcpBootOptionsEnabled": {
          "description": "Use DHCP boot options specified in other properties",
          "type": "boolean"
        },
        "dhcpBootNextServer": {
          "description": "DHCP boot option to direct boot clients to the server to load the boot file from",
          "type": "string"
        },
        "dhcpBootFilename": {
          "description": "DHCP boot option for boot filename",
          "type": "string"
        },
        "fixedIpAssignments": {
          "description": "The DHCP fixed IP assignments on the VLAN. This should be an object that contains mappings from MAC addresses to objects that themselves each contain \"ip\" and \"name\" string fields. See the sample request/response for more details.",
          "type": "object"
        },
        "reservedIpRanges": {
          "description": "The DHCP reserved IP ranges on the VLAN",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReservedIpRange"
          }
        },
        "dnsNameservers": {
          "description": "The DNS nameservers used for DHCP responses, either \"upstream_dns\", \"google_dns\", \"opendns\", or a newline seperated string of IP addresses or domain names",
          "type": "string"
        },
        "dhcpOptions": {
          "description": "The list of DHCP options that will be included in DHCP responses. Each object in the list should have \"code\", \"type\", and \"value\" properties.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DhcpOption"
          }
        }
      }
    },
    "ReservedIpRange": {
      "title": "ReservedIpRange",
      "type": "object",
      "properties": {
        "start": {
          "description": "The first IP in the reserved range",
          "type": "string"
        },
        "end": {
          "description": "The last IP in the reserved range",
          "type": "string"
        },
        "comment": {
          "description": "A text comment for the reserved range",
          "type": "string"
        }
      },
      "required": [
        "start",
        "end",
        "comment"
      ]
    },
    "DhcpOption": {
      "title": "DhcpOption",
      "type": "object",
      "properties": {
        "code": {
          "description": "The code for the DHCP option. This should be an integer between 2 and 254.",
          "type": "string"
        },
        "type": {
          "description": "The type for the DHCP option. One of: \"text\", \"ip\", \"hex\", or \"integer\".",
          "type": "string"
        },
        "value": {
          "description": "The value for the DHCP option",
          "type": "string"
        }
      },
      "required": [
        "code",
        "type",
        "value"
      ]
    },
    "updateNetworkVlansEnabledState": {
      "title": "updateNetworkVlansEnabledState",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Boolean indicating whether to enable (true) or disable (false) VLANs for the network",
          "type": "boolean"
        }
      },
      "required": [
        "enabled"
      ]
    }
  },
  "security": [
    {
      "Cisco-Meraki-API-Key": []
    }
  ],
  "tags": [
    {
      "name": "Admins",
      "description": ""
    },
    {
      "name": "Alert settings",
      "description": ""
    },
    {
      "name": "MV Sense",
      "description": ""
    },
    {
      "name": "API usage",
      "description": ""
    },
    {
      "name": "Bluetooth clients",
      "description": ""
    },
    {
      "name": "Networks",
      "description": ""
    },
    {
      "name": "Cameras",
      "description": ""
    },
    {
      "name": "Clients",
      "description": ""
    },
    {
      "name": "Config templates",
      "description": ""
    },
    {
      "name": "Devices",
      "description": ""
    },
    {
      "name": "MX cellular firewall",
      "description": ""
    },
    {
      "name": "MX L3 firewall",
      "description": ""
    },
    {
      "name": "MX L7 application categories",
      "description": ""
    },
    {
      "name": "MX L7 firewall",
      "description": ""
    },
    {
      "name": "MX VPN firewall",
      "description": ""
    },
    {
      "name": "MR L3 firewall",
      "description": ""
    },
    {
      "name": "Group policies",
      "description": ""
    },
    {
      "name": "HTTP servers",
      "description": ""
    },
    {
      "name": "Meraki auth users",
      "description": ""
    },
    {
      "name": "Organizations",
      "description": ""
    },
    {
      "name": "PII",
      "description": ""
    },
    {
      "name": "SAML roles",
      "description": ""
    },
    {
      "name": "Client security events",
      "description": ""
    },
    {
      "name": "Malware settings",
      "description": ""
    },
    {
      "name": "Named tag scope",
      "description": ""
    },
    {
      "name": "SM",
      "description": ""
    },
    {
      "name": "Splash login attempts",
      "description": ""
    },
    {
      "name": "Splash settings",
      "description": ""
    },
    {
      "name": "SSIDs",
      "description": ""
    },
    {
      "name": "Switch settings",
      "description": ""
    },
    {
      "name": "Switch ports",
      "description": ""
    },
    {
      "name": "Switch stacks",
      "description": ""
    },
    {
      "name": "Syslog servers",
      "description": ""
    },
    {
      "name": "Content filtering categories",
      "description": ""
    },
    {
      "name": "Content filtering rules",
      "description": ""
    },
    {
      "name": "Firewalled services",
      "description": ""
    },
    {
      "name": "MX 1:Many NAT rules",
      "description": ""
    },
    {
      "name": "MX 1:1 NAT rules",
      "description": ""
    },
    {
      "name": "MX port forwarding rules",
      "description": ""
    },
    {
      "name": "Static routes",
      "description": ""
    },
    {
      "name": "Uplink settings",
      "description": ""
    },
    {
      "name": "VLANs",
      "description": ""
    },
    {
      "name": "Wireless health",
      "description": ""
    }
  ]
}