{
  "swagger": "2.0",
  "info": {
    "version": "v0",
    "title": "Meraki Dashboard API",
    "description": "This collection of API calls provides an easy way to interact with a Cisco Meraki network"
  },
  "host": "api.meraki.com",
  "basePath": "/api/v0",
  "schemes": ["https"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "securityDefinitions": {
    "meraki_api_key": {
      "type": "apiKey",
      "name": "X-Cisco-Meraki-API-Key",
      "in": "header"
    }
  },
  "security": [
    {
      "meraki_api_key": []
    }
  ],
  "paths": {
    "/organizations/{organizationId}/actionBatches": {
      "post": {
        "summary": "Create an action batch",
        "description": "Create an action batch\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST 'https://api.meraki.com/api/v0/organizations/[organizationId]/actionBatches'\n```",
        "operationId": "postOrganizationsOrganizationidActionbatches",
        "responses": {
          "201": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": "123",
                "status": "in progress",
                "confirmed": true,
                "actions": [
                  {
                    "resource": "/devices/QXXX-XXXX-XXXX/switchPorts/3",
                    "operation": "update",
                    "body": {
                      "enabled": false
                    }
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "confirmed": {
                  "description": "Set to true for immediate execution. Set to false if the action should be previewed before executing.",
                  "type": "string"
                },
                "actions": {
                  "description": "A set of changes to make as part of this action",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "resource": {
                        "description": "Unique identifier for the resource to be acted on",
                        "type": "string"
                      },
                      "operation": {
                        "description": "The operation to be used. One of \"create\", \"update\", \"delete\".",
                        "type": "string"
                      },
                      "body": {
                        "description": "The body of the action",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "tags": ["Action batches"]
      },
      "get": {
        "summary": "Return the list of action batches in the organization",
        "description": "Return the list of action batches in the organization\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/organizations/[organizationId]/actionBatches'\n```",
        "operationId": "getOrganizationsOrganizationidActionbatches",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "id": "123",
                  "status": "in progress",
                  "confirmed": true,
                  "actions": [
                    {
                      "resource": "/devices/QXXX-XXXX-XXXX/switchPorts/3",
                      "operation": "update",
                      "body": {
                        "enabled": false
                      }
                    }
                  ]
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Action batches"]
      }
    },
    "/organizations/{organizationId}/actionBatches/{id}": {
      "get": {
        "summary": "Return an action batch",
        "description": "Return an action batch\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/organizations/[organizationId]/actionBatches/[id]'\n```",
        "operationId": "getOrganizationsOrganizationidActionbatchesId",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": "123",
                "status": "in progress",
                "confirmed": true,
                "actions": [
                  {
                    "resource": "/devices/QXXX-XXXX-XXXX/switchPorts/3",
                    "operation": "update",
                    "body": {
                      "enabled": false
                    }
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Action batches"]
      },
      "delete": {
        "summary": "Delete an action batch",
        "description": "Delete an action batch\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X DELETE 'https://api.meraki.com/api/v0/organizations/[organizationId]/actionBatches/[id]'\n```",
        "operationId": "deleteOrganizationsOrganizationidActionbatchesId",
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Action batches"]
      },
      "put": {
        "summary": "Update an action batch",
        "description": "Update an action batch\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT 'https://api.meraki.com/api/v0/organizations/[organizationId]/actionBatches/[id]'\n```",
        "operationId": "putOrganizationsOrganizationidActionbatchesId",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": "123",
                "status": "in progress",
                "confirmed": true,
                "actions": [
                  {
                    "resource": "/devices/QXXX-XXXX-XXXX/switchPorts/3",
                    "operation": "update",
                    "body": {
                      "enabled": false
                    }
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "confirmed": {
                  "description": "A boolean representing whether or not the batch has been confirmed. This property cannot be unset once it is true.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Action batches"]
      }
    },
    "/organizations/{organization_id}/admins": {
      "get": {
        "summary": "List the dashboard administrators in this organization",
        "description": "List the dashboard administrators in this organization\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/organizations/[organization_id]/admins'\n```",
        "operationId": "getOrganizationsOrganization_idAdmins",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "id": "212406",
                  "name": "Miles Meraki",
                  "email": "miles@meraki.com",
                  "orgAccess": "none",
                  "tags": [
                    {
                      "tag": "west",
                      "access": "read-only"
                    }
                  ],
                  "networks": [
                    {
                      "id": "N_24329156",
                      "access": "full"
                    }
                  ]
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Admins"]
      },
      "post": {
        "summary": "Create a new dashboard administrator",
        "description": "Create a new dashboard administrator\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST --data-binary '{\"name\":\"Miles Meraki\",\"email\":\"miles@meraki.com\",\"orgAccess\":\"none\",\"tags\":[{\"tag\":\"west\",\"access\":\"read-only\"}]}' 'https://api.meraki.com/api/v0/organizations/[organization_id]/admins'\n```",
        "operationId": "postOrganizationsOrganization_idAdmins",
        "responses": {
          "201": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": "212406",
                "name": "Miles Meraki",
                "email": "miles@meraki.com",
                "orgAccess": "none",
                "tags": [
                  {
                    "tag": "west",
                    "access": "read-only"
                  }
                ],
                "networks": [
                  {
                    "id": "N_24329156",
                    "access": "full"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "description": "The email of the dashboard administrator. This attribute can not be updated.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of the dashboard administrator",
                  "type": "string"
                },
                "orgAccess": {
                  "description": "The privilege of the dashboard administrator on the organization (full, read-only, none)",
                  "type": "string"
                },
                "tags": {
                  "description": "The list of tags that the dashboard administrator has privileges on",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "tag": {
                        "description": "The name of the tag",
                        "type": "string"
                      },
                      "access": {
                        "description": "The privilege of the dashboard administrator on the tag",
                        "type": "string"
                      }
                    }
                  }
                },
                "networks": {
                  "description": "The list of networks that the dashboard administrator has privileges on",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "The network ID",
                        "type": "string"
                      },
                      "access": {
                        "description": "The privilege of the dashboard administrator on the network",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "tags": ["Admins"]
      }
    },
    "/organizations/{organization_id}/admins/{id}": {
      "put": {
        "summary": "Update an administrator",
        "description": "Update an administrator\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"name\":\"Miles Meraki\",\"email\":\"miles@meraki.com\",\"orgAccess\":\"none\",\"tags\":[{\"tag\":\"west\",\"access\":\"read-only\"}]}' 'https://api.meraki.com/api/v0/organizations/[organization_id]/admins/[id]'\n```",
        "operationId": "putOrganizationsOrganization_idAdminsId",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": "212406",
                "name": "Miles Meraki",
                "email": "miles@meraki.com",
                "orgAccess": "none",
                "tags": [
                  {
                    "tag": "west",
                    "access": "read-only"
                  }
                ],
                "networks": [
                  {
                    "id": "N_24329156",
                    "access": "full"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "description": "The email of the dashboard administrator. This attribute can not be updated.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of the dashboard administrator",
                  "type": "string"
                },
                "orgAccess": {
                  "description": "The privilege of the dashboard administrator on the organization (full, read-only, none)",
                  "type": "string"
                },
                "tags": {
                  "description": "The list of tags that the dashboard administrator has privileges on",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "tag": {
                        "description": "The name of the tag",
                        "type": "string"
                      },
                      "access": {
                        "description": "The privilege of the dashboard administrator on the tag",
                        "type": "string"
                      }
                    }
                  }
                },
                "networks": {
                  "description": "The list of networks that the dashboard administrator has privileges on",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "The network ID",
                        "type": "string"
                      },
                      "access": {
                        "description": "The privilege of the dashboard administrator on the network",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "tags": ["Admins"]
      },
      "delete": {
        "summary": "Revoke all access for a dashboard administrator within this organization",
        "description": "Revoke all access for a dashboard administrator within this organization\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X DELETE 'https://api.meraki.com/api/v0/organizations/[organization_id]/admins/[id]'\n```",
        "operationId": "deleteOrganizationsOrganization_idAdminsId",
        "responses": {
          "204": {
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Admins"]
      }
    },
    "/networks/{networkId}/alertSettings": {
      "get": {
        "summary": "Return the alert configuration for this network",
        "description": "Return the alert configuration for this network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/alertSettings'\n```",
        "operationId": "getNetworksNetworkidAlertsettings",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "defaultDestinations": {
                  "emails": ["miles@meraki.com"],
                  "allAdmins": true,
                  "snmp": true
                },
                "alerts": [
                  {
                    "type": "gatewayDown",
                    "enabled": true,
                    "alertDestinations": {
                      "emails": ["miles@meraki.com"],
                      "allAdmins": false,
                      "snmp": false
                    },
                    "filters": {
                      "timeout": 60
                    }
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Alert settings"]
      },
      "put": {
        "summary": "Update the alert configuration for this network",
        "description": "Update the alert configuration for this network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"defaultDestinations\":{\"emails\":[\"miles@meraki.com\"],\"allAdmins\":true,\"snmp\":true},\"alerts\":[{\"type\":\"gatewayDown\",\"enabled\":true,\"alertDestinations\":{\"emails\":[\"miles@meraki.com\"],\"allAdmins\":false,\"snmp\":false},\"filters\":{\"timeout\":60}}]}' 'https://api.meraki.com/api/v0/networks/[networkId]/alertSettings'\n```",
        "operationId": "putNetworksNetworkidAlertsettings",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "defaultDestinations": {
                  "emails": ["miles@meraki.com"],
                  "allAdmins": true,
                  "snmp": true
                },
                "alerts": [
                  {
                    "type": "gatewayDown",
                    "enabled": true,
                    "alertDestinations": {
                      "emails": ["miles@meraki.com"],
                      "allAdmins": false,
                      "snmp": false
                    },
                    "filters": {
                      "timeout": 60
                    }
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "defaultDestinations": {
                  "description": "The network_wide destinations for all alerts on the network.",
                  "type": "object",
                  "properties": {
                    "emails": {
                      "description": "A list of emails that will recieve the alert(s).",
                      "type": "string"
                    },
                    "allAdmins": {
                      "description": "If true, then all network admins will receive emails.",
                      "type": "string"
                    },
                    "snmp": {
                      "description": "If true, then an SNMP trap will be sent if there is an SNMP trap server configured for this network.",
                      "type": "string"
                    }
                  }
                },
                "alerts": {
                  "description": "Alert-specific configuration for each type. Only alerts that pertain to the network can be updated.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "description": "The type of alert",
                        "type": "string"
                      },
                      "enabled": {
                        "description": "A boolean depicting if the alert is turned on or off",
                        "type": "string"
                      },
                      "alertDestinations": {
                        "description": "A hash of destinations for this specific alert. Keys include: emails: A list of emails that will recieve information about the alert, allAdmins: If true, then all network admins will receive emails, and snmp: If true, then an SNMP trap will be sent if there is an SNMP trap server configured for this network.",
                        "type": "string"
                      },
                      "filters": {
                        "description": "A hash of specific configuration data for the alert. Only filters specific to the alert will be updated.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "tags": ["Alert settings"]
      }
    },
    "/devices/{serial}/camera/analytics/zones": {
      "get": {
        "summary": "Returns all configured analytic zones for this camera",
        "description": "Returns all configured analytic zones for this camera\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/devices/[serial]/camera/analytics/zones'\n```",
        "operationId": "getDevicesSerialCameraAnalyticsZones",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "id": "0",
                  "type": "occupancy",
                  "label": "Full Frame"
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Analytics"]
      }
    },
    "/devices/{serial}/camera/analytics/recent": {
      "get": {
        "summary": "Returns most recent record for analytics zones",
        "description": "Returns most recent record for analytics zones\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/devices/[serial]/camera/analytics/recent'\n```",
        "operationId": "getDevicesSerialCameraAnalyticsRecent",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "startTs": "2018-08-15T18:32:38.123Z",
                  "endTs": "2018-08-15T18:33:38.123Z",
                  "zoneId": 0,
                  "entrances": 10,
                  "averageCount": 2.54
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Analytics"]
      }
    },
    "/devices/{serial}/camera/analytics/live": {
      "get": {
        "summary": "Returns live state from camera of analytics zones",
        "description": "Returns live state from camera of analytics zones\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/devices/[serial]/camera/analytics/live'\n```",
        "operationId": "getDevicesSerialCameraAnalyticsLive",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "ts": "2018-08-15T18:32:38.123Z",
                  "zones": {
                    "0": {
                      "person": 0
                    }
                  }
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Analytics"]
      }
    },
    "/devices/{serial}/camera/analytics/overview": {
      "get": {
        "summary": "Returns an overview of aggregate analytics data for a timespan",
        "description": "Returns an overview of aggregate analytics data for a timespan\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/devices/{serial}/camera/analytics/overview'\n```",
        "operationId": "getDevicesSerialCameraAnalyticsOverview",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "startTs": "2018-08-15T18:32:38.123Z",
                  "endTs": "2018-08-15T18:33:38.123Z",
                  "zoneId": 0,
                  "entrances": 254,
                  "averageCount": 5
                }
              ]
            }
          }
        },
        "tags": ["Analytics"]
      }
    },
    "/devices/{serial}/camera/analytics/zones/{zoneId}/history": {
      "get": {
        "summary": "Return historical records for analytic zones",
        "description": "Return historical records for analytic zones\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/devices/{serial}/camera/analytics/zones/{zoneId}/history'\n```",
        "operationId": "getDevicesSerialCameraAnalyticsZonesZoneidHistory",
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "zoneId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "startTs": "2018-08-15T18:32:38.123Z",
                  "endTs": "2018-08-15T18:33:38.123Z",
                  "entrances": 5,
                  "averageCount": 1.5
                }
              ]
            }
          }
        },
        "tags": ["Analytics"]
      }
    },
    "/networks/{networkId}/bluetoothClients": {
      "get": {
        "summary": "List the Bluetooth clients seen by APs in this network",
        "description": "List the Bluetooth clients seen by APs in this network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/bluetoothClients?timespan=7200'\n```",
        "operationId": "getNetworksNetworkidBluetoothclients",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "mac": "00:11:22:33:44:55",
                  "networkId": "N_24329156"
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "timespan": {
                  "description": "The timespan, in seconds, used to look back from now for bluetooth clients",
                  "type": "string"
                },
                "includeConnectivityHistory": {
                  "description": "Include the connectivity history for this client",
                  "type": "string"
                },
                "perPage": {
                  "description": "The number of entries per page returned",
                  "type": "string"
                },
                "startingAfter": {
                  "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it.",
                  "type": "string"
                },
                "endingBefore": {
                  "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Bluetooth clients"]
      }
    },
    "/networks/{networkId}/bluetoothClients/{id}": {
      "get": {
        "summary": "Return a Bluetooth client",
        "description": "Return a Bluetooth client\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/bluetoothClients/[id]'\n```",
        "operationId": "getNetworksNetworkidBluetoothclientsId",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "mac": "00:11:22:33:44:55",
                "networkId": "N_24329156"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "includeConnectivityHistory": {
                  "description": "Include the connectivity history for this client",
                  "type": "string"
                },
                "connectivityHistoryTimespan": {
                  "description": "The timespan, in seconds, for the connectivityHistory data. By default 1 day, 86400, will be used.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Bluetooth clients"]
      }
    },
    "/networks/{networkId}/cameras/{serial}/videoLink": {
      "get": {
        "summary": "Returns video link for the specified camera. If a timestamp supplied, it links to that time.",
        "description": "Returns video link for the specified camera. If a timestamp supplied, it links to that time.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/cameras/[serial]/videoLink'\n```",
        "operationId": "getNetworksNetworkidCamerasSerialVideolink",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "url": "https://nxx.meraki.com/office-cameras/n/bs0a1k/manage/nodes/new_list/29048243992402?timestamp=1535732570077"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "timestamp": {
                  "description": "The video link will start at this timestamp. The timestamp is in UNIX Epoch time (milliseconds).",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Cameras"]
      }
    },
    "/devices/{serial}/clients": {
      "get": {
        "summary": "List the clients of a device, up to a maximum of a month ago. The usage of each client is returned in kilobytes. If the device is a switch, the switchport is returned; otherwise the switchport field is null.",
        "description": "List the clients of a device, up to a maximum of a month ago. The usage of each client is returned in kilobytes. If the device is a switch, the switchport is returned; otherwise the switchport field is null.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/devices/[serial]/clients?timespan=7200'\n```",
        "operationId": "getDevicesSerialClients",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "usage": {
                    "sent": 138,
                    "recv": 61
                  },
                  "id": "k74272e",
                  "description": "Miles's phone",
                  "mdnsName": "Miles's phone",
                  "dhcpHostname": "MilesPhone",
                  "mac": "00:11:22:33:44:55",
                  "ip": "1.2.3.4",
                  "vlan": "",
                  "switchport": null
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "timespan": {
                  "description": "The timespan for which clients will be fetched. Must be in seconds and less than or equal to a month (2592000 seconds).",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Clients"]
      }
    },
    "/networks/{networkId}/clients/{id_or_mac_or_ip}": {
      "get": {
        "summary": "Return the client associated with the given identifier. This endpoint will lookup by client ID or either the MAC or IP depending on whether the network uses Track-by-IP.",
        "description": "Return the client associated with the given identifier. This endpoint will lookup by client ID or either the MAC or IP depending on whether the network uses Track-by-IP.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/clients/[id_or_mac_or_ip]'\n```",
        "operationId": "getNetworksNetworkidClientsId_or_mac_or_ip",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": "k74272e",
                "description": "Miles's phone",
                "mdnsName": "Miles's phone",
                "dhcpHostname": "MilesPhone",
                "mac": "00:11:22:33:44:55",
                "ip": "1.2.3.4",
                "vlan": "255",
                "switchport": null,
                "ip6": "",
                "firstSeen": 1518365681,
                "lastSeen": 1526087474,
                "manufacturer": "Apple",
                "os": "iOS",
                "user": "null",
                "ssid": "My SSID",
                "wirelessCapabilities": "802.11ac - 2.4 and 5 GHz",
                "smInstalled": true,
                "recentDeviceMac": "00:11:22:33:44:55",
                "clientVpnConnections": [
                  {
                    "remoteIp": "1.2.3.4",
                    "connectedAt": 1522613355,
                    "disconnectedAt": 1522613360
                  }
                ],
                "lldp": [
                  ["System name", "Some system name"],
                  ["System description", "Some system description"],
                  ["Port ID", "1"],
                  ["Chassis ID", "00:18:0a:00:00:00"],
                  ["Port description", "eth0"],
                  ["System capabilities", "Two-port MAC Relay"]
                ],
                "cdp": null
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id_or_mac_or_ip",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Clients"]
      }
    },
    "/networks/{networkId}/clients/provision": {
      "post": {
        "summary": "Provisions a client with a name and policy. Clients can be provisioned before they associate to the network.",
        "description": "Provisions a client with a name and policy. Clients can be provisioned before they associate to the network.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST --data-binary '{\"mac\":\"00:11:22:33:44:55\",\"name\":\"Miles's phone\",\"devicePolicy\":\"Group policy\",\"groupPolicyId\":\"101\"}' 'https://api.meraki.com/api/v0/networks/[networkId]/clients/provision'\n```",
        "operationId": "postNetworksNetworkidClientsProvision",
        "responses": {
          "201": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "mac": "00:11:22:33:44:55",
                "clientId": "k74272e",
                "name": "Miles's phone",
                "devicePolicy": "Group policy",
                "groupPolicyId": "101"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "mac": {
                  "description": "The MAC address of the client. Required.",
                  "type": "string"
                },
                "name": {
                  "description": "The display name for the client. Optional. Limited to 255 bytes.",
                  "type": "string"
                },
                "devicePolicy": {
                  "description": "The policy to apply to the specified client. Can be Whitelisted, Blocked, Normal, and Group policy. Required.",
                  "type": "string"
                },
                "groupPolicyId": {
                  "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Clients"]
      }
    },
    "/networks/{networkId}/clients/{id_or_mac_or_ip}/usageHistory": {
      "get": {
        "summary": "Return the client's daily usage history. Usage data is in kilobytes.",
        "description": "Return the client's daily usage history. Usage data is in kilobytes.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/clients/[id_or_mac_or_ip]/usageHistory'\n```",
        "operationId": "getNetworksNetworkidClientsId_or_mac_or_ipUsagehistory",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "sent": 500,
                  "received": 680,
                  "ts": 1518365681
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id_or_mac_or_ip",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Clients"]
      }
    },
    "/networks/{networkId}/clients/{id_or_mac_or_ip}/trafficHistory": {
      "get": {
        "summary": "Return the client's network traffic data over time. Usage data is in kilobytes. This endpoint requires detailed traffic analysis to be enabled on the Network-wide > General page.",
        "description": "Return the client's network traffic data over time. Usage data is in kilobytes. This endpoint requires detailed traffic analysis to be enabled on the Network-wide > General page.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/clients/[id_or_mac_or_ip]/trafficHistory'\n```",
        "operationId": "getNetworksNetworkidClientsId_or_mac_or_ipTraffichistory",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "ts": 1518365681,
                  "application": "Google",
                  "destination": "www.google.com",
                  "protocol": "UDP",
                  "port": 443,
                  "recv": 383,
                  "sent": 56,
                  "numFlows": 5,
                  "activeSeconds": 240
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id_or_mac_or_ip",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "perPage": {
                  "description": "The number of entries per page returned",
                  "type": "string"
                },
                "startingAfter": {
                  "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it.",
                  "type": "string"
                },
                "endingBefore": {
                  "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Clients"]
      }
    },
    "/networks/{networkId}/clients/{id_or_mac_or_ip}/events": {
      "get": {
        "summary": "Return the events associated with this client.",
        "description": "Return the events associated with this client.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/clients/[id_or_mac_or_ip]/events'\n```",
        "operationId": "getNetworksNetworkidClientsId_or_mac_or_ipEvents",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "deviceSerial": "Q234-ABCD-5678",
                  "occurredAt": 1518365681,
                  "type": "l3roaming_assoc_start",
                  "details": {
                    "vap": "1",
                    "on_packet": "true"
                  }
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id_or_mac_or_ip",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "perPage": {
                  "description": "The number of entries per page returned",
                  "type": "string"
                },
                "startingAfter": {
                  "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it.",
                  "type": "string"
                },
                "endingBefore": {
                  "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Clients"]
      }
    },
    "/networks/{networkId}/clients/{id_or_mac_or_ip}/latencyHistory": {
      "get": {
        "summary": "Return the latency history for a client. The latency data is from a sample of 2% of packets and is grouped into 4 traffic categories: background, best effort, video, voice. Within these categories the sampled packet counters are bucketed by latency in milliseconds.",
        "description": "Return the latency history for a client. The latency data is from a sample of 2% of packets and is grouped into 4 traffic categories: background, best effort, video, voice. Within these categories the sampled packet counters are bucketed by latency in milliseconds.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/clients/[id_or_mac_or_ip]/latencyHistory?timespan=7200'\n```",
        "operationId": "getNetworksNetworkidClientsId_or_mac_or_ipLatencyhistory",
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id_or_mac_or_ip",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "timespan": {
                  "description": "The timespan in seconds for the data",
                  "type": "string"
                },
                "t0": {
                  "description": "The start time, in seconds from epoch, for the data",
                  "type": "string"
                },
                "t1": {
                  "description": "The end time, in seconds from epoch, for the data",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Clients"]
      }
    },
    "/networks/{networkId}/clients/{mac}/policy": {
      "get": {
        "summary": "Return the policy assigned to a client on the network.",
        "description": "Return the policy assigned to a client on the network.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/clients/[mac]/policy?timespan=7200'\n```",
        "operationId": "getNetworksNetworkidClientsMacPolicy",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "mac": "00:11:22:33:44:55",
                "type": "Group policy",
                "groupPolicyId": "101"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "mac",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "timespan": {
                  "description": "The timespan for which clients will be fetched. Must be in seconds and less than or equal to a month (2592000 seconds).",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Clients"]
      },
      "put": {
        "summary": "Update the policy assigned to a client on the network.",
        "description": "Update the policy assigned to a client on the network.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"mac\":\"00:11:22:33:44:55\",\"type\":\"Group policy\",\"groupPolicyId\":\"101\"}' 'https://api.meraki.com/api/v0/networks/[networkId]/clients/[mac]/policy'\n```",
        "operationId": "putNetworksNetworkidClientsMacPolicy",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "mac": "00:11:22:33:44:55",
                "type": "Group policy",
                "groupPolicyId": "101"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "mac",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "devicePolicy": {
                  "description": "The group policy (Whitelisted, Blocked, Normal, Group policy)",
                  "type": "string"
                },
                "groupPolicyId": {
                  "description": "[optional] If devicePolicy param is set to 'Group policy' this param is used to specify the group ID.",
                  "type": "string"
                },
                "timespan": {
                  "description": "The timespan for which clients will be fetched. Must be in seconds and less than or equal to a month (2592000 seconds).",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Clients"]
      }
    },
    "/networks/{id}/clients/{mac}/splashAuthorizationStatus": {
      "get": {
        "summary": "Return the splash authorization for a client, for each SSID they've associated with through splash.",
        "description": "Return the splash authorization for a client, for each SSID they've associated with through splash.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[id]/clients/[mac]/splashAuthorizationStatus'\n```",
        "operationId": "getNetworksIdClientsMacSplashauthorizationstatus",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "ssids": {
                  "0": {
                    "isAuthorized": true,
                    "authorizedAt": "2017-07-19 16:24:13 UTC",
                    "expiresAt": "2017-07-20 16:24:13 UTC"
                  },
                  "2": {
                    "isAuthorized": false
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "mac",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Clients"]
      },
      "put": {
        "summary": "Update a client's splash authorization.",
        "description": "Update a client's splash authorization.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"ssids\":{\"0\":{\"isAuthorized\":true,\"authorizedAt\":\"2017-07-19 16:24:13 UTC\",\"expiresAt\":\"2017-07-20 16:24:13 UTC\"},\"2\":{\"isAuthorized\":false}}}' 'https://api.meraki.com/api/v0/networks/[id]/clients/[mac]/splashAuthorizationStatus'\n```",
        "operationId": "putNetworksIdClientsMacSplashauthorizationstatus",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "ssids": {
                  "0": {
                    "isAuthorized": true,
                    "authorizedAt": "2017-07-19 16:24:13 UTC",
                    "expiresAt": "2017-07-20 16:24:13 UTC"
                  },
                  "2": {
                    "isAuthorized": false
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "mac",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "ssids": {
                  "description": "The target SSIDs. For each SSID where isAuthorized is true, the expiration time will automatically be set according to the SSID's splash frequency.",
                  "type": "object",
                  "properties": {
                    "isAuthorized": {
                      "description": "New authorization status for SSID (true, false).",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "tags": ["Clients"]
      }
    },
    "/organizations/{organizationId}/configTemplates": {
      "get": {
        "summary": "List the configuration templates for this organization",
        "description": "List the configuration templates for this organization\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/organizations/[organizationId]/configTemplates'\n```",
        "operationId": "getOrganizationsOrganizationidConfigtemplates",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "id": "N_24329156",
                  "name": "My config template"
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Config templates"]
      }
    },
    "/organizations/{organizationId}/configTemplates/{id}": {
      "delete": {
        "summary": "Remove a configuration template",
        "description": "Remove a configuration template\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X DELETE 'https://api.meraki.com/api/v0/organizations/[organizationId]/configTemplates/[id]'\n```",
        "operationId": "deleteOrganizationsOrganizationidConfigtemplatesId",
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Config templates"]
      }
    },
    "/networks/{networkId}/devices": {
      "get": {
        "summary": "List the devices in a network",
        "description": "List the devices in a network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/devices'\n```",
        "operationId": "getNetworksNetworkidDevices",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "name": "My AP",
                  "lat": 37.4180951010362,
                  "lng": -122.098531723022,
                  "serial": "Q234-ABCD-5678",
                  "mac": "00:11:22:33:44:55",
                  "model": "MR34",
                  "address": "1600 Pennsylvania Ave",
                  "notes": "My AP's note",
                  "lanIp": "1.2.3.4",
                  "tags": " recently-added ",
                  "networkId": "N_24329156",
                  "beaconIdParams": {
                    "uuid": "00000000-0000-0000-0000-000000000000",
                    "major": 5,
                    "minor": 3
                  }
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Devices"]
      }
    },
    "/networks/{networkId}/devices/{serial}": {
      "get": {
        "summary": "Return a single device",
        "description": "Return a single device\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/devices/[serial]'\n```",
        "operationId": "getNetworksNetworkidDevicesSerial",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "name": "My AP",
                "lat": 37.4180951010362,
                "lng": -122.098531723022,
                "serial": "Q234-ABCD-5678",
                "mac": "00:11:22:33:44:55",
                "model": "MR34",
                "address": "1600 Pennsylvania Ave",
                "notes": "My AP's note",
                "lanIp": "1.2.3.4",
                "tags": " recently-added ",
                "networkId": "N_24329156",
                "beaconIdParams": {
                  "uuid": "00000000-0000-0000-0000-000000000000",
                  "major": 5,
                  "minor": 3
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Devices"]
      },
      "put": {
        "summary": "Update the attributes of a device",
        "description": "Update the attributes of a device\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"name\":\"My AP\",\"lat\":37.4180951010362,\"lng\":-122.098531723022,\"serial\":\"Q234-ABCD-5678\",\"mac\":\"00:11:22:33:44:55\",\"tags\":\" recently-added \"}' 'https://api.meraki.com/api/v0/networks/[networkId]/devices/[serial]'\n```",
        "operationId": "putNetworksNetworkidDevicesSerial",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "name": "My AP",
                "lat": 37.4180951010362,
                "lng": -122.098531723022,
                "serial": "Q234-ABCD-5678",
                "mac": "00:11:22:33:44:55",
                "model": "MR34",
                "address": "1600 Pennsylvania Ave",
                "notes": "My AP's note",
                "lanIp": "1.2.3.4",
                "tags": " recently-added ",
                "networkId": "N_24329156",
                "beaconIdParams": {
                  "uuid": "00000000-0000-0000-0000-000000000000",
                  "major": 5,
                  "minor": 3
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of a device",
                  "type": "string"
                },
                "tags": {
                  "description": "The tags of a device",
                  "type": "string"
                },
                "lat": {
                  "description": "The latitude of a device",
                  "type": "string"
                },
                "lng": {
                  "description": "The longitude of a device",
                  "type": "string"
                },
                "address": {
                  "description": "The address of a device",
                  "type": "string"
                },
                "notes": {
                  "description": "The notes for the device. String. Limited to 255 characters.",
                  "type": "string"
                },
                "moveMapMarker": {
                  "description": "Whether or not to set the latitude and longitude of a device based on the new address. Only applies when lat and lng are not specified.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Devices"]
      }
    },
    "/networks/{networkId}/devices/{serial}/uplink": {
      "get": {
        "summary": "Return the uplink information for a device.",
        "description": "Return the uplink information for a device.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/devices/[serial]/uplink'\n```",
        "operationId": "getNetworksNetworkidDevicesSerialUplink",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "interface": "WAN 1",
                  "status": "Active",
                  "ip": "1.2.3.4",
                  "gateway": "1.2.3.5",
                  "publicIp": "123.123.123.1",
                  "dns": "8.8.8.8, 8.8.4.4",
                  "usingStaticIp": false
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Devices"]
      }
    },
    "/networks/{networkId}/devices/claim": {
      "post": {
        "summary": "Claim a device into a network",
        "description": "Claim a device into a network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST --data-binary '{\"serial\":\"Q234-ABCD-5678\"}' 'https://api.meraki.com/api/v0/networks/[networkId]/devices/claim'\n```",
        "operationId": "postNetworksNetworkidDevicesClaim",
        "responses": {
          "201": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "name": "My AP",
                "lat": 37.4180951010362,
                "lng": -122.098531723022,
                "serial": "Q234-ABCD-5678",
                "mac": "00:11:22:33:44:55",
                "model": "MR34",
                "address": "1600 Pennsylvania Ave",
                "notes": "My AP's note",
                "lanIp": "1.2.3.4",
                "tags": " recently-added ",
                "networkId": "N_24329156",
                "beaconIdParams": {
                  "uuid": "00000000-0000-0000-0000-000000000000",
                  "major": 5,
                  "minor": 3
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "serial": {
                  "description": "The serial of a device",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Devices"]
      }
    },
    "/networks/{networkId}/devices/{serial}/remove": {
      "post": {
        "summary": "Remove a single device",
        "description": "Remove a single device\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST 'https://api.meraki.com/api/v0/networks/[networkId]/devices/[serial]/remove'\n```",
        "operationId": "postNetworksNetworkidDevicesSerialRemove",
        "responses": {
          "204": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "name": "My AP",
                "lat": 37.4180951010362,
                "lng": -122.098531723022,
                "serial": "Q234-ABCD-5678",
                "mac": "00:11:22:33:44:55",
                "model": "MR34",
                "address": "1600 Pennsylvania Ave",
                "notes": "My AP's note",
                "lanIp": "1.2.3.4",
                "tags": " recently-added ",
                "networkId": "N_24329156",
                "beaconIdParams": {
                  "uuid": "00000000-0000-0000-0000-000000000000",
                  "major": 5,
                  "minor": 3
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Devices"]
      }
    },
    "/networks/{networkId}/devices/{serial}/lldp_cdp": {
      "get": {
        "summary": "List LLDP and CDP information for a device",
        "description": "List LLDP and CDP information for a device\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/devices/[serial]/lldp_cdp?timespan=7200'\n```",
        "operationId": "getNetworksNetworkidDevicesSerialLldp_cdp",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "sourceMac": "00:11:22:33:44:55",
                "ports": {
                  "8": {
                    "cdp": {
                      "deviceId": "e0553d8cdf53",
                      "portId": "Port 10",
                      "address": "00:11:22:33:44:55",
                      "sourcePort": "8"
                    }
                  },
                  "12": {
                    "cdp": {
                      "deviceId": "e0553d8cdf53",
                      "portId": "Port 11",
                      "address": "00:11:22:33:44:55",
                      "sourcePort": "12"
                    },
                    "lldp": {
                      "systemName": "Meraki MS350-24X - Phineas",
                      "portId": "11",
                      "managementAddress": "00:11:22:33:44:55",
                      "sourcePort": "12"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "timespan": {
                  "description": "The timespan for which LLDP and CDP information will be fetched. Must be in seconds and less than or equal to a month (2592000 seconds). LLDP and CDP information is sent to the Meraki dashboard every 10 minutes. In instances where this LLDP and CDP information matches an existing entry in the Meraki dashboard, the data is updated once every two hours. Meraki recommends querying LLDP and CDP information at an interval slightly greater than two hours, to ensure that unchanged CDP / LLDP information can be queried consistently.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Devices"]
      }
    },
    "/networks/{networkId}/devices/{serial}/lossAndLatencyHistory": {
      "get": {
        "summary": "Get the uplink loss percentage and latency in milliseconds for a wired network device.",
        "description": "Get the uplink loss percentage and latency in milliseconds for a wired network device.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/{networkId}/devices/{serial}/lossAndLatencyHistory?uplink=wan1&ip=1.2.3.4&timespan=7200'\n```",
        "operationId": "getNetworksNetworkidDevicesSerialLossandlatencyhistory",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "integer",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 12 months from today."
          },
          {
            "type": "integer",
            "name": "t1",
            "in": "query",
            "description": "The end of the timespan for the data. t1 can be a max of 1 month after t0."
          },
          {
            "type": "integer",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and less than or equal to a month (2592000 seconds)."
          },
          {
            "type": "integer",
            "name": "resolution",
            "in": "query",
            "description": "The time resolution in seconds for returned data. The valid resolutions are 60, 600, 3600, 86400. The default is 60."
          },
          {
            "type": "string",
            "name": "uplink",
            "in": "query",
            "description": "The WAN uplink used to obtain the requested stats. Valid uplinks are wan1, wan2. The default is wan1."
          },
          {
            "type": "string",
            "name": "ip",
            "in": "query",
            "required": true,
            "description": "The destination IP used to obtain the requested stats. This is required."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "startTime": "2018-10-09T22:18:27Z",
                  "endTime": "2018-10-09T22:19:27Z",
                  "lossPercent": 5,
                  "latencyMs": 324
                },
                {
                  "startTime": "2018-10-09T22:19:27Z",
                  "endTime": "2018-10-09T22:20:27Z",
                  "lossPercent": 1,
                  "latencyMs": 43
                },
                {
                  "startTime": "2018-10-09T22:20:27Z",
                  "endTime": "2018-10-09T22:21:27Z",
                  "lossPercent": 0,
                  "latencyMs": 44
                }
              ]
            }
          }
        },
        "tags": ["Devices"]
      }
    },
    "/networks/{networkId}/cellularFirewallRules": {
      "get": {
        "summary": "Return the cellular firewall rules for an MX network",
        "description": "Return the cellular firewall rules for an MX network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/cellularFirewallRules'\n```",
        "operationId": "getNetworksNetworkidCellularfirewallrules",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "comment": "Allow TCP traffic to subnet with HTTP servers.",
                  "policy": "allow",
                  "protocol": "tcp",
                  "destPort": 443,
                  "destCidr": "192.168.1.0/24",
                  "srcPort": "Any",
                  "srcCidr": "Any",
                  "syslogEnabled": false
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["MX cellular firewall"]
      },
      "put": {
        "summary": "Update the cellular firewall rules of an MX network",
        "description": "Update the cellular firewall rules of an MX network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"rules\":[{\"comment\":\"Allow TCP traffic to subnet with HTTP servers.\",\"policy\":\"allow\",\"protocol\":\"tcp\",\"destPort\":443,\"destCidr\":\"192.168.1.0/24\",\"srcPort\":\"Any\",\"srcCidr\":\"Any\",\"syslogEnabled\":false}]}' 'https://api.meraki.com/api/v0/networks/[networkId]/cellularFirewallRules'\n```",
        "operationId": "putNetworksNetworkidCellularfirewallrules",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "comment": "Allow TCP traffic to subnet with HTTP servers.",
                  "policy": "allow",
                  "protocol": "tcp",
                  "destPort": 443,
                  "destCidr": "192.168.1.0/24",
                  "srcPort": "Any",
                  "srcCidr": "Any",
                  "syslogEnabled": false
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "rules": {
                  "description": "An ordered array of the firewall rules (not including the default rule)",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "description": "Description of the rule (optional)",
                        "type": "string"
                      },
                      "policy": {
                        "description": "'Allow' or 'Deny' traffic specified by this rule",
                        "type": "string"
                      },
                      "protocol": {
                        "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')",
                        "type": "string"
                      },
                      "srcPort": {
                        "description": "Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'",
                        "type": "string"
                      },
                      "srcCidr": {
                        "description": "Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (note: FQDN not supported for source addresses)",
                        "type": "string"
                      },
                      "destPort": {
                        "description": "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'",
                        "type": "string"
                      },
                      "destCidr": {
                        "description": "Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'",
                        "type": "string"
                      },
                      "syslogEnabled": {
                        "description": "Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "tags": ["MX cellular firewall"]
      }
    },
    "/networks/{networkId}/l3FirewallRules": {
      "get": {
        "summary": "Return the L3 firewall rules for an MX network",
        "description": "Return the L3 firewall rules for an MX network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/l3FirewallRules'\n```",
        "operationId": "getNetworksNetworkidL3firewallrules",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "comment": "Allow TCP traffic to subnet with HTTP servers.",
                  "policy": "allow",
                  "protocol": "tcp",
                  "destPort": 443,
                  "destCidr": "192.168.1.0/24",
                  "srcPort": "Any",
                  "srcCidr": "Any",
                  "syslogEnabled": false
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["MX L3 firewall"]
      },
      "put": {
        "summary": "Update the L3 firewall rules of an MX network",
        "description": "Update the L3 firewall rules of an MX network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"rules\":[{\"comment\":\"Allow TCP traffic to subnet with HTTP servers.\",\"policy\":\"allow\",\"protocol\":\"tcp\",\"destPort\":443,\"destCidr\":\"192.168.1.0/24\",\"srcPort\":\"Any\",\"srcCidr\":\"Any\",\"syslogEnabled\":false}]}' 'https://api.meraki.com/api/v0/networks/[networkId]/l3FirewallRules'\n```",
        "operationId": "putNetworksNetworkidL3firewallrules",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "comment": "Allow TCP traffic to subnet with HTTP servers.",
                  "policy": "allow",
                  "protocol": "tcp",
                  "destPort": 443,
                  "destCidr": "192.168.1.0/24",
                  "srcPort": "Any",
                  "srcCidr": "Any",
                  "syslogEnabled": false
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "rules": {
                  "description": "An ordered array of the firewall rules (not including the default rule)",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "description": "Description of the rule (optional)",
                        "type": "string"
                      },
                      "policy": {
                        "description": "'Allow' or 'Deny' traffic specified by this rule",
                        "type": "string"
                      },
                      "protocol": {
                        "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')",
                        "type": "string"
                      },
                      "srcPort": {
                        "description": "Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'",
                        "type": "string"
                      },
                      "srcCidr": {
                        "description": "Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (note: FQDN not supported for source addresses)",
                        "type": "string"
                      },
                      "destPort": {
                        "description": "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'",
                        "type": "string"
                      },
                      "destCidr": {
                        "description": "Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'",
                        "type": "string"
                      },
                      "syslogEnabled": {
                        "description": "Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)",
                        "type": "string"
                      }
                    }
                  }
                },
                "syslogDefaultRule": {
                  "description": "Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["MX L3 firewall"]
      }
    },
    "/organizations/{organizationId}/vpnFirewallRules": {
      "get": {
        "summary": "Return the firewall rules for an organization's site-to-site VPN",
        "description": "Return the firewall rules for an organization's site-to-site VPN\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/organizations/[organizationId]/vpnFirewallRules'\n```",
        "operationId": "getOrganizationsOrganizationidVpnfirewallrules",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "comment": "Allow TCP traffic to subnet with HTTP servers.",
                  "policy": "allow",
                  "protocol": "tcp",
                  "destPort": 443,
                  "destCidr": "192.168.1.0/24",
                  "srcPort": "Any",
                  "srcCidr": "Any",
                  "syslogEnabled": false
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["MX VPN firewall"]
      },
      "put": {
        "summary": "Update firewall rules of an organization's site-to-site VPN",
        "description": "Update firewall rules of an organization's site-to-site VPN\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"rules\":[{\"comment\":\"Allow TCP traffic to subnet with HTTP servers.\",\"policy\":\"allow\",\"protocol\":\"tcp\",\"destPort\":443,\"destCidr\":\"192.168.1.0/24\",\"srcPort\":\"Any\",\"srcCidr\":\"Any\",\"syslogEnabled\":false}]}' 'https://api.meraki.com/api/v0/organizations/[organizationId]/vpnFirewallRules'\n```",
        "operationId": "putOrganizationsOrganizationidVpnfirewallrules",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "comment": "Allow TCP traffic to subnet with HTTP servers.",
                  "policy": "allow",
                  "protocol": "tcp",
                  "destPort": 443,
                  "destCidr": "192.168.1.0/24",
                  "srcPort": "Any",
                  "srcCidr": "Any",
                  "syslogEnabled": false
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "rules": {
                  "description": "An ordered array of the firewall rules (not including the default rule)",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "description": "Description of the rule (optional)",
                        "type": "string"
                      },
                      "policy": {
                        "description": "'Allow' or 'Deny' traffic specified by this rule",
                        "type": "string"
                      },
                      "protocol": {
                        "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')",
                        "type": "string"
                      },
                      "srcPort": {
                        "description": "Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'",
                        "type": "string"
                      },
                      "srcCidr": {
                        "description": "Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (FQDN not supported)",
                        "type": "string"
                      },
                      "destPort": {
                        "description": "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'",
                        "type": "string"
                      },
                      "destCidr": {
                        "description": "Comma-separated list of destination IP address(es) (in IP or CIDR notation) or 'any' (FQDN not supported)",
                        "type": "string"
                      },
                      "syslogEnabled": {
                        "description": "Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)",
                        "type": "string"
                      }
                    }
                  }
                },
                "syslogDefaultRule": {
                  "description": "Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["MX VPN firewall"]
      }
    },
    "/networks/{networkId}/ssids/{number}/l3FirewallRules": {
      "get": {
        "summary": "Return the L3 firewall rules for an SSID on an MR network",
        "description": "Return the L3 firewall rules for an SSID on an MR network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/ssids/[number]/l3FirewallRules'\n```",
        "operationId": "getNetworksNetworkidSsidsNumberL3firewallrules",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "comment": "Allow TCP traffic to subnet with HTTP servers.",
                  "policy": "allow",
                  "protocol": "tcp",
                  "destPort": 443,
                  "destCidr": "192.168.1.0/24"
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "number",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["MR L3 firewall"]
      },
      "put": {
        "summary": "Update the L3 firewall rules of an SSID on an MR network",
        "description": "Update the L3 firewall rules of an SSID on an MR network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"rules\":[{\"comment\":\"Allow TCP traffic to subnet with HTTP servers.\",\"policy\":\"allow\",\"protocol\":\"tcp\",\"destPort\":443,\"destCidr\":\"192.168.1.0/24\"}]}' 'https://api.meraki.com/api/v0/networks/[networkId]/ssids/[number]/l3FirewallRules'\n```",
        "operationId": "putNetworksNetworkidSsidsNumberL3firewallrules",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "comment": "Allow TCP traffic to subnet with HTTP servers.",
                  "policy": "allow",
                  "protocol": "tcp",
                  "destPort": 443,
                  "destCidr": "192.168.1.0/24"
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "number",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "rules": {
                  "description": "An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule)",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "policy": {
                        "description": "'Allow' or 'Deny' traffic specified by this rule",
                        "type": "string"
                      },
                      "protocol": {
                        "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')",
                        "type": "string"
                      },
                      "destPort": {
                        "description": "Comma-separated list of destination port(s) (integer in the range 1-65535) or 'any'",
                        "type": "string"
                      },
                      "destCidr": {
                        "description": "Comma-separated list of destination IP address(es) (in IP or CIDR notation) or 'any'",
                        "type": "string"
                      },
                      "comment": {
                        "description": "Description of the rule (optional)",
                        "type": "string"
                      }
                    }
                  }
                },
                "allowLanAccess": {
                  "description": "Allow wireless client access to local LAN (boolean value - true allows access and false denies access) (optional)",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["MR L3 firewall"]
      }
    },
    "/networks/{id}/groupPolicies": {
      "get": {
        "summary": "List the group policies in a network",
        "description": "List the group policies in a network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[id]/groupPolicies'\n```",
        "operationId": "getNetworksIdGrouppolicies",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "name": "No video streaming",
                  "groupPolicyId": "101"
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Group policies"]
      }
    },
    "/networks/{networkId}/httpServers": {
      "get": {
        "summary": "List the HTTP servers for a network",
        "description": "List the HTTP servers for a network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/httpServers'\n```",
        "operationId": "getNetworksNetworkidHttpservers",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "id": "ABC123",
                  "networkId": "N_123",
                  "name": "My HTTP server",
                  "url": "https://www.example.com/webhooks",
                  "sharedSecret": "foobar"
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["HTTP servers"]
      },
      "post": {
        "summary": "Add an HTTP server",
        "description": "Add an HTTP server\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST --data-binary '{\"name\":\"My HTTP server\",\"url\":\"https://www.example.com/webhooks\",\"sharedSecret\":\"foobar\"}' 'https://api.meraki.com/api/v0/networks/[networkId]/httpServers'\n```",
        "operationId": "postNetworksNetworkidHttpservers",
        "responses": {
          "201": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": "ABC123",
                "networkId": "N_123",
                "name": "My HTTP server",
                "url": "https://www.example.com/webhooks",
                "sharedSecret": "foobar"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "A name for easy reference to the HTTP server",
                  "type": "string"
                },
                "url": {
                  "description": "The URL of the HTTP server",
                  "type": "string"
                },
                "sharedSecret": {
                  "description": "A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["HTTP servers"]
      }
    },
    "/networks/{networkId}/httpServers/{id}": {
      "get": {
        "summary": "Return an HTTP server",
        "description": "Return an HTTP server\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/httpServers/[id]'\n```",
        "operationId": "getNetworksNetworkidHttpserversId",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": "ABC123",
                "networkId": "N_123",
                "name": "My HTTP server",
                "url": "https://www.example.com/webhooks",
                "sharedSecret": "foobar"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["HTTP servers"]
      },
      "put": {
        "summary": "Update an HTTP server",
        "description": "Update an HTTP server\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"name\":\"My HTTP server\",\"url\":\"https://www.example.com/webhooks\",\"sharedSecret\":\"foobar\"}' 'https://api.meraki.com/api/v0/networks/[networkId]/httpServers/[id]'\n```",
        "operationId": "putNetworksNetworkidHttpserversId",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": "ABC123",
                "networkId": "N_123",
                "name": "My HTTP server",
                "url": "https://www.example.com/webhooks",
                "sharedSecret": "foobar"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "A name for easy reference to the HTTP server",
                  "type": "string"
                },
                "url": {
                  "description": "The URL of the HTTP server",
                  "type": "string"
                },
                "sharedSecret": {
                  "description": "A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["HTTP servers"]
      },
      "delete": {
        "summary": "Delete an HTTP server",
        "description": "Delete an HTTP server\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X DELETE 'https://api.meraki.com/api/v0/networks/[networkId]/httpServers/[id]'\n```",
        "operationId": "deleteNetworksNetworkidHttpserversId",
        "responses": {
          "204": {
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["HTTP servers"]
      }
    },
    "/networks/{networkId}/httpServers/webhookTests": {
      "post": {
        "summary": "Send a test webhook",
        "description": "Send a test webhook\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST 'https://api.meraki.com/api/v0/networks/[networkId]/httpServers/webhookTests'\n```",
        "operationId": "postNetworksNetworkidHttpserversWebhooktests",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": "1234",
                "url": "https://www.example.com/path",
                "status": "enqueued"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "url": {
                  "description": "The URL where the test webhook will be sent",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["HTTP servers"]
      }
    },
    "/networks/{networkId}/httpServers/webhookTests/{id}": {
      "get": {
        "summary": "Return the status of a webhook test",
        "description": "Return the status of a webhook test\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/httpServers/webhookTests/[id]'\n```",
        "operationId": "getNetworksNetworkidHttpserversWebhooktestsId",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": "1234",
                "url": "https://www.example.com/path",
                "status": "delivered"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["HTTP servers"]
      }
    },
    "/networks/{networkId}/merakiAuthUsers": {
      "get": {
        "summary": "List the splash or RADIUS users configured under Meraki Authentication for a network",
        "description": "List the splash or RADIUS users configured under Meraki Authentication for a network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/merakiAuthUsers'\n```",
        "operationId": "getNetworksNetworkidMerakiauthusers",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "id": "aGlAaGkuY29t",
                  "email": "miles@meraki.com",
                  "name": "Miles Meraki",
                  "createdAt": 1518365681,
                  "accountType": "Guest",
                  "authorizations": [
                    {
                      "authorizedZone": "Store WiFi",
                      "expiresAt": 1526087474,
                      "authorizedByName": "Miles Meraki",
                      "authorizedByEmail": "miles@meraki.com"
                    }
                  ]
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Meraki auth users"]
      }
    },
    "/networks/{networkId}/merakiAuthUsers/{id}": {
      "get": {
        "summary": "Return the Meraki Auth splash or RADIUS user",
        "description": "Return the Meraki Auth splash or RADIUS user\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/merakiAuthUsers/[id]'\n```",
        "operationId": "getNetworksNetworkidMerakiauthusersId",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": "aGlAaGkuY29t",
                "email": "miles@meraki.com",
                "name": "Miles Meraki",
                "createdAt": 1518365681,
                "accountType": "Guest",
                "authorizations": [
                  {
                    "authorizedZone": "Store WiFi",
                    "expiresAt": 1526087474,
                    "authorizedByName": "Miles Meraki",
                    "authorizedByEmail": "miles@meraki.com"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Meraki auth users"]
      }
    },
    "/organizations/{organizationId}/networks": {
      "get": {
        "summary": "List the networks in an organization",
        "description": "List the networks in an organization\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/organizations/[organizationId]/networks'\n```",
        "operationId": "getOrganizationsOrganizationidNetworks",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "id": "N_24329156",
                  "organizationId": 2930418,
                  "name": "My organization",
                  "timeZone": "America/Los_Angeles",
                  "tags": " tag1 tag2 ",
                  "type": "appliance switch camera",
                  "disableMyMerakiCom": false
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "configTemplateId": {
                  "description": "An optional parameter that is the ID of a config template. Will return all networks bound to that template.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Networks"]
      },
      "post": {
        "summary": "Create a network",
        "description": "Create a network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST --data-binary '{\"name\":\"My organization\",\"type\":\"appliance switch camera\",\"tags\":\" tag1 tag2 \",\"disableMyMerakiCom\":false}' 'https://api.meraki.com/api/v0/organizations/[organizationId]/networks'\n```",
        "operationId": "postOrganizationsOrganizationidNetworks",
        "responses": {
          "201": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": "N_24329156",
                "organizationId": 2930418,
                "name": "My organization",
                "timeZone": "America/Los_Angeles",
                "tags": " tag1 tag2 ",
                "type": "appliance switch camera",
                "disableMyMerakiCom": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the new network",
                  "type": "string"
                },
                "type": {
                  "description": "The type of the new network. Valid types are wireless, appliance, switch, phone, systemsManager, camera or a space-separated list of those for a combined network.",
                  "type": "string"
                },
                "tags": {
                  "description": "A space-separated list of tags to be applied to the network",
                  "type": "string"
                },
                "timeZone": {
                  "description": "The timezone of the network. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article.</a>",
                  "type": "string"
                },
                "copyFromNetworkId": {
                  "description": "The ID of the network to copy configuration from. Other provided parameters will override the copied configuration, except type which must match this network's type exactly.",
                  "type": "string"
                },
                "disableMyMerakiCom": {
                  "description": "Disables the local device status pages (<a target='_blank' href='http://my.meraki.com/'>my.meraki.com, </a><a target='_blank' href='http://ap.meraki.com/'>ap.meraki.com, </a><a target='_blank' href='http://switch.meraki.com/'>switch.meraki.com, </a><a target='_blank' href='http://wired.meraki.com/'>wired.meraki.com</a>). Optional (defaults to false)",
                  "type": "string"
                },
                "disableRemoteStatusPage": {
                  "description": "Disables access to the device status page (<a target='_blank'>http://[device's LAN IP])</a>. Optional. Can only be set if disableMyMerakiCom is set to false",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Networks"]
      }
    },
    "/networks/{id}": {
      "get": {
        "summary": "Return a network",
        "description": "Return a network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[id]'\n```",
        "operationId": "getNetworksId",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": "N_24329156",
                "organizationId": 2930418,
                "name": "My organization",
                "timeZone": "America/Los_Angeles",
                "tags": " tag1 tag2 ",
                "type": "appliance switch camera",
                "disableMyMerakiCom": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Networks"]
      },
      "put": {
        "summary": "Update a network",
        "description": "Update a network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"name\":\"My organization\",\"timeZone\":\"America/Los_Angeles\",\"tags\":\" tag1 tag2 \",\"disableMyMerakiCom\":false}' 'https://api.meraki.com/api/v0/networks/[id]'\n```",
        "operationId": "putNetworksId",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": "N_24329156",
                "organizationId": 2930418,
                "name": "My organization",
                "timeZone": "America/Los_Angeles",
                "tags": " tag1 tag2 ",
                "type": "appliance switch camera",
                "disableMyMerakiCom": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the new network",
                  "type": "string"
                },
                "timeZone": {
                  "description": "The timezone of the network. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article.</a>",
                  "type": "string"
                },
                "tags": {
                  "description": "A space-separated list of tags to be applied to the network",
                  "type": "string"
                },
                "disableMyMerakiCom": {
                  "description": "Disables the local device status pages (<a target='_blank' href='http://my.meraki.com/'>my.meraki.com, </a><a target='_blank' href='http://ap.meraki.com/'>ap.meraki.com, </a><a target='_blank' href='http://switch.meraki.com/'>switch.meraki.com, </a><a target='_blank' href='http://wired.meraki.com/'>wired.meraki.com</a>). Optional (defaults to false)",
                  "type": "string"
                },
                "disableRemoteStatusPage": {
                  "description": "Disables access to the device status page (<a target='_blank'>http://[device's LAN IP])</a>. Optional. Can only be set if disableMyMerakiCom is set to false",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Networks"]
      },
      "delete": {
        "summary": "Delete a network",
        "description": "Delete a network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X DELETE 'https://api.meraki.com/api/v0/networks/[id]'\n```",
        "operationId": "deleteNetworksId",
        "responses": {
          "204": {
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Networks"]
      }
    },
    "/networks/{id}/bind": {
      "post": {
        "summary": "Bind a network to a template.",
        "description": "Bind a network to a template.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST --data-binary '{\"configTemplateId\":\"N_23952905\",\"autoBind\":false}' 'https://api.meraki.com/api/v0/networks/[id]/bind'\n```",
        "operationId": "postNetworksIdBind",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": "N_24329156",
                "organizationId": 2930418,
                "name": "My organization",
                "timeZone": "America/Los_Angeles",
                "tags": " tag1 tag2 ",
                "type": "appliance switch camera",
                "disableMyMerakiCom": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "configTemplateId": {
                  "description": "The ID of the template to which the network should be bound.",
                  "type": "string"
                },
                "autoBind": {
                  "description": "Optional boolean indicating whether the network's switches should automatically bind to profiles of the same model. Defaults to false if left unspecified. This option only affects switch networks and switch templates. Auto-bind is not valid unless the switch template has at least one profile and has at most one profile per switch model.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Networks"]
      }
    },
    "/networks/{id}/unbind": {
      "post": {
        "summary": "Unbind a network from a template.",
        "description": "Unbind a network from a template.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST 'https://api.meraki.com/api/v0/networks/[id]/unbind'\n```",
        "operationId": "postNetworksIdUnbind",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": "N_24329156",
                "organizationId": 2930418,
                "name": "My organization",
                "timeZone": "America/Los_Angeles",
                "tags": " tag1 tag2 ",
                "type": "appliance switch camera",
                "disableMyMerakiCom": false
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Networks"]
      }
    },
    "/networks/{id}/siteToSiteVpn": {
      "get": {
        "summary": "Return the site-to-site VPN settings of a network. Only valid for MX networks.",
        "description": "Return the site-to-site VPN settings of a network. Only valid for MX networks.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[id]/siteToSiteVpn'\n```",
        "operationId": "getNetworksIdSitetositevpn",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "mode": "spoke",
                "hubs": [
                  {
                    "hubId": "N_4901849",
                    "useDefaultRoute": true
                  },
                  {
                    "hubId": "N_1892489",
                    "useDefaultRoute": false
                  }
                ],
                "subnets": [
                  {
                    "localSubnet": "192.168.1.0/24",
                    "useVpn": true
                  },
                  {
                    "localSubnet": "192.168.128.0/24",
                    "useVpn": true
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Networks"]
      },
      "put": {
        "summary": "Update the site-to-site VPN settings of a network. Only valid for MX networks in NAT mode.",
        "description": "Update the site-to-site VPN settings of a network. Only valid for MX networks in NAT mode.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"mode\":\"spoke\",\"hubs\":[{\"hubId\":\"N_4901849\",\"useDefaultRoute\":true},{\"hubId\":\"N_1892489\",\"useDefaultRoute\":false}],\"subnets\":[{\"localSubnet\":\"192.168.1.0/24\",\"useVpn\":true},{\"localSubnet\":\"192.168.128.0/24\",\"useVpn\":true}]}' 'https://api.meraki.com/api/v0/networks/[id]/siteToSiteVpn'\n```",
        "operationId": "putNetworksIdSitetositevpn",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "mode": "spoke",
                "hubs": [
                  {
                    "hubId": "N_4901849",
                    "useDefaultRoute": true
                  },
                  {
                    "hubId": "N_1892489",
                    "useDefaultRoute": false
                  }
                ],
                "subnets": [
                  {
                    "localSubnet": "192.168.1.0/24",
                    "useVpn": true
                  },
                  {
                    "localSubnet": "192.168.128.0/24",
                    "useVpn": true
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "mode": {
                  "description": "The site-to-site VPN mode: hub, spoke, or none",
                  "type": "string"
                },
                "hubs": {
                  "description": "The list of VPN hubs, in order of preference. In spoke mode, at least 1 hub is required.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "hubId": {
                        "description": "The network ID of the hub.",
                        "type": "string"
                      },
                      "useDefaultRoute": {
                        "description": "Only valid in 'spoke' mode. Indicates whether default route traffic should be sent to this hub.",
                        "type": "string"
                      }
                    }
                  }
                },
                "subnets": {
                  "description": "The list of subnets and their VPN presence.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "localSubnet": {
                        "description": "The CIDR notation subnet used within the VPN",
                        "type": "string"
                      },
                      "useVpn": {
                        "description": "Indicates the presence of the subnet in the VPN",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "tags": ["Networks"]
      }
    },
    "/networks/{id}/traffic": {
      "get": {
        "summary": "The traffic analysis data for this network.\n<a href=\"https://documentation.meraki.com/MR/Monitoring_and_Reporting/Hostname_Visibility\">Traffic Analysis with Hostname Visibility</a> must be enabled on the network.\n",
        "description": "The traffic analysis data for this network.\n<a href=\"https://documentation.meraki.com/MR/Monitoring_and_Reporting/Hostname_Visibility\">Traffic Analysis with Hostname Visibility</a> must be enabled on the network.\n\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[id]/traffic?timespan=7200'\n```",
        "operationId": "getNetworksIdTraffic",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "application": "Gmail",
                  "destination": null,
                  "protocol": "TCP",
                  "port": 443,
                  "sent": 138,
                  "recv": 61,
                  "numClients": 7,
                  "activeTime": 77000,
                  "flows": 300
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "timespan": {
                  "description": "The timespan for the data.  Must be an integer representing a duration in seconds between two hours and one month. (Mandatory.)",
                  "type": "string"
                },
                "deviceType": {
                  "description": "Filter the data by device type: combined (default), wireless, switch, appliance. When using combined, for each rule the data will come from the device type with the most usage.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Networks"]
      }
    },
    "/networks/{id}/accessPolicies": {
      "get": {
        "summary": "List the access policies for this network. Only valid for MS networks.",
        "description": "List the access policies for this network. Only valid for MS networks.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[id]/accessPolicies'\n```",
        "operationId": "getNetworksIdAccesspolicies",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "number": 1,
                  "name": "My access policy",
                  "accessType": "8021.x",
                  "guestVlan": 3700,
                  "radiusServers": [
                    {
                      "ip": "1.2.3.4",
                      "port": 1337
                    },
                    {
                      "ip": "2.3.4.5",
                      "port": 1337
                    }
                  ]
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Networks"]
      }
    },
    "/networks/{id}/airMarshal": {
      "get": {
        "summary": "List Air Marshal scan results from a network",
        "description": "List Air Marshal scan results from a network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[id]/airMarshal?timespan=7200'\n```",
        "operationId": "getNetworksIdAirmarshal",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "ssid": "linksys",
                  "bssids": [
                    {
                      "bssid": "00:11:22:33:44:55",
                      "contained": false,
                      "detectedBy": [
                        {
                          "device": "Q234-ABCD-5678",
                          "rssi": 17
                        }
                      ]
                    }
                  ],
                  "channels": [36, 40],
                  "firstSeen": 1518365681,
                  "lastSeen": 1526087474,
                  "wiredMacs": ["00:11:22:33:44:55"],
                  "wiredVlans": [0, 108],
                  "wiredLastSeen": 1526087474
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "timespan": {
                  "description": "The timespan for which results will be fetched. Must be at most one month in seconds.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Networks"]
      }
    },
    "/networks/{id}/bluetoothSettings": {
      "get": {
        "summary": "Return the Bluetooth settings for a network.\n<a href=\"https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)\">Bluetooth settings</a> must be enabled on the network.\n",
        "description": "Return the Bluetooth settings for a network.\n<a href=\"https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)\">Bluetooth settings</a> must be enabled on the network.\n\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[id]/bluetoothSettings'\n```",
        "operationId": "getNetworksIdBluetoothsettings",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": "N_24329156",
                "scanningEnabled": true,
                "advertisingEnabled": true,
                "uuid": "00000000-0000-0000-000-000000000000",
                "majorMinorAssignmentMode": "Non-unique",
                "major": 1
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Networks"]
      },
      "put": {
        "summary": "Update the Bluetooth settings for a network. See the docs page for <a href=\"https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)\">Bluetooth settings</a>.\n",
        "description": "Update the Bluetooth settings for a network. See the docs page for <a href=\"https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)\">Bluetooth settings</a>.\n\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"id\":\"N_24329156\",\"scanningEnabled\":true,\"advertisingEnabled\":true,\"uuid\":\"00000000-0000-0000-000-000000000000\",\"majorMinorAssignmentMode\":\"Non-unique\",\"major\":1}' 'https://api.meraki.com/api/v0/networks/[id]/bluetoothSettings'\n```",
        "operationId": "putNetworksIdBluetoothsettings",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": "N_24329156",
                "scanningEnabled": true,
                "advertisingEnabled": true,
                "uuid": "00000000-0000-0000-000-000000000000",
                "majorMinorAssignmentMode": "Non-unique",
                "major": 1
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "scanningEnabled": {
                  "description": "Whether APs will scan for Bluetooth enabled clients. (true, false)",
                  "type": "string"
                },
                "advertisingEnabled": {
                  "description": "Whether APs will advertise beacons. (true, false)",
                  "type": "string"
                },
                "uuid": {
                  "description": "The UUID to be used in the beacon identifier.",
                  "type": "string"
                },
                "majorMinorAssignmentMode": {
                  "description": "The way major and minor number should be assigned to nodes in the network. ('Unique', 'Non-unique')",
                  "type": "string"
                },
                "major": {
                  "description": "The major number to be used in the beacon identifier. Only valid in 'Non-unique' mode.",
                  "type": "string"
                },
                "minor": {
                  "description": "The minor number to be used in the beacon identifier. Only valid in 'Non-unique' mode.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Networks"]
      }
    },
    "/organizations/{organizationId}/openapiSpec": {
      "get": {
        "summary": "Return the OpenAPI Specification of the organization's API documentation in JSON",
        "description": "Return the OpenAPI Specification of the organization's API documentation in JSON\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/organizations/[organizationId]/openapiSpec'\n```",
        "operationId": "getOrganizationsOrganizationidOpenapispec",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "swagger": "2.0",
                "info": {
                  "version": "v0",
                  "title": "Meraki Dashboard API",
                  "description": "This collection of API calls provides an easy way to interact with a Cisco Meraki network"
                },
                "host": "api.meraki.com",
                "basePath": "/api/v0",
                "schemes": ["https"],
                "consumes": ["application/json"],
                "produces": ["application/json"],
                "securityDefinitions": {
                  "meraki_api_key": {
                    "type": "apiKey",
                    "name": "X-Cisco-Meraki-API-Key",
                    "in": "header"
                  }
                },
                "security": [
                  {
                    "meraki_api_key": []
                  }
                ],
                "paths": {
                  "/pets": {
                    "get": {
                      "description": "Returns all pets from the system",
                      "operationId": "getPets",
                      "responses": {
                        "200": {
                          "description": "Successful operation",
                          "examples": {
                            "application/json": [
                              {
                                "id": 1,
                                "name": "Riley",
                                "type": "Cat"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["OpenAPI Spec"]
      }
    },
    "/organizations": {
      "get": {
        "summary": "List the organizations that the user has privileges on",
        "description": "List the organizations that the user has privileges on\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/organizations'\n```",
        "operationId": "getOrganizations",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "id": 2930418,
                  "name": "My organization"
                }
              ]
            }
          }
        },
        "tags": ["Organizations"]
      },
      "post": {
        "summary": "Create a new organization",
        "description": "Create a new organization\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST --data-binary '{\"name\":\"My organization\"}' 'https://api.meraki.com/api/v0/organizations'\n```",
        "operationId": "postOrganizations",
        "responses": {
          "201": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": 2930418,
                "name": "My organization"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the organization",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Organizations"]
      }
    },
    "/organizations/{id}": {
      "get": {
        "summary": "Return an organization",
        "description": "Return an organization\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/organizations/[id]'\n```",
        "operationId": "getOrganizationsId",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": 2930418,
                "name": "My organization"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Organizations"]
      },
      "put": {
        "summary": "Update an organization",
        "description": "Update an organization\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"name\":\"My organization\"}' 'https://api.meraki.com/api/v0/organizations/[id]'\n```",
        "operationId": "putOrganizationsId",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": 2930418,
                "name": "My organization"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the organization",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Organizations"]
      }
    },
    "/organizations/{id}/clone": {
      "post": {
        "summary": "Create a new organization by cloning the addressed organization",
        "description": "Create a new organization by cloning the addressed organization\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST --data-binary '{\"name\":\"My organization\"}' 'https://api.meraki.com/api/v0/organizations/[id]/clone'\n```",
        "operationId": "postOrganizationsIdClone",
        "responses": {
          "201": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": 2930418,
                "name": "My organization"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the new organization",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Organizations"]
      }
    },
    "/organizations/{id}/claim": {
      "post": {
        "summary": "Claim a device, license key, or order into an organization. When claiming by order, all devices and licenses in the order will be claimed; licenses will be added to the organization and devices will be placed in the organization's inventory. These three types of claims are mutually exclusive and cannot be performed in one request.",
        "description": "Claim a device, license key, or order into an organization. When claiming by order, all devices and licenses in the order will be claimed; licenses will be added to the organization and devices will be placed in the organization's inventory. These three types of claims are mutually exclusive and cannot be performed in one request.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST --data-binary '{\"order\":\"4CXXXXXXX\"}' 'https://api.meraki.com/api/v0/organizations/[id]/claim'\n```",
        "operationId": "postOrganizationsIdClaim",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": 2930418,
                "name": "My organization"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "order": {
                  "description": "The order number that should be claimed",
                  "type": "string"
                },
                "serial": {
                  "description": "The serial of the device that should be claimed",
                  "type": "string"
                },
                "licenseKey": {
                  "description": "The license key that should be claimed",
                  "type": "string"
                },
                "licenseMode": {
                  "description": "Either 'renew' or 'addDevices'. 'addDevices' will increase the license limit, while 'renew' will extend the amount of time until expiration. This parameter is required when claiming by licenseKey. Please see <a target='_blank' href='https://documentation.meraki.com/zGeneral_Administration/Licensing/Adding_an_Enterprise_license_to_an_existing_Dashboard_account'>this article</a> for more information.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Organizations"]
      }
    },
    "/organizations/{id}/licenseState": {
      "get": {
        "summary": "Return the license state for an organization",
        "description": "Return the license state for an organization\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/organizations/[id]/licenseState'\n```",
        "operationId": "getOrganizationsIdLicensestate",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "status": "OK",
                "expirationDate": "Feb 8, 2020 UTC",
                "licensedDeviceCounts": {
                  "MS": 100
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Organizations"]
      }
    },
    "/organizations/{id}/inventory": {
      "get": {
        "summary": "Return the inventory for an organization",
        "description": "Return the inventory for an organization\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/organizations/[id]/inventory'\n```",
        "operationId": "getOrganizationsIdInventory",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "mac": "00:11:22:33:44:55",
                  "serial": "Q234-ABCD-5678",
                  "networkId": "N_24329156",
                  "model": "MR34",
                  "claimedAt": 1518365681,
                  "publicIp": "123.123.123.1",
                  "name": "My AP"
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Organizations"]
      }
    },
    "/organizations/{id}/deviceStatuses": {
      "get": {
        "summary": "List the status of every Meraki device in the organization",
        "description": "List the status of every Meraki device in the organization\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/organizations/[id]/deviceStatuses'\n```",
        "operationId": "getOrganizationsIdDevicestatuses",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "name": "My AP",
                  "serial": "Q234-ABCD-5678",
                  "mac": "00:11:22:33:44:55",
                  "status": "online",
                  "lanIp": "1.2.3.4",
                  "publicIp": "123.123.123.1",
                  "networkId": "N_24329156"
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Organizations"]
      }
    },
    "/organizations/{id}/snmp": {
      "get": {
        "summary": "Return the SNMP settings for an organization",
        "description": "Return the SNMP settings for an organization\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/organizations/[id]/snmp'\n```",
        "operationId": "getOrganizationsIdSnmp",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "v2cEnabled": false,
                "v3Enabled": false,
                "v3AuthMode": "SHA",
                "v3PrivMode": "AES128",
                "peerIps": "123.123.123.1",
                "hostname": "n1.meraki.com",
                "port": 443
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Organizations"]
      },
      "put": {
        "summary": "Update the SNMP settings for an organization",
        "description": "Update the SNMP settings for an organization\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"v2cEnabled\":false,\"v3Enabled\":false}' 'https://api.meraki.com/api/v0/organizations/[id]/snmp'\n```",
        "operationId": "putOrganizationsIdSnmp",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "v2cEnabled": false,
                "v3Enabled": false,
                "v3AuthMode": "SHA",
                "v3PrivMode": "AES128",
                "peerIps": "123.123.123.1",
                "hostname": "n1.meraki.com",
                "port": 443
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "v2cEnabled": {
                  "description": "Boolean indicating whether SNMP version 2c is enabled for the organization",
                  "type": "string"
                },
                "v3Enabled": {
                  "description": "Boolean indicating whether SNMP version 3 is enabled for the organization",
                  "type": "string"
                },
                "v3AuthMode": {
                  "description": "The SNMP version 3 authentication mode either MD5 or SHA",
                  "type": "string"
                },
                "v3AuthPass": {
                  "description": "The SNMP version 3 authentication password.  Must be at least 8 characters if specified.",
                  "type": "string"
                },
                "v3PrivMode": {
                  "description": "The SNMP version 3 privacy mode DES or AES128",
                  "type": "string"
                },
                "v3PrivPass": {
                  "description": "The SNMP version 3 privacy password.  Must be at least 8 characters if specified.",
                  "type": "string"
                },
                "peerIps": {
                  "description": "The IPs that are allowed to access the SNMP server. This list should be IPv4 addresses separated by semi-colons (ie. \"1.2.3.4;2.3.4.5\").",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Organizations"]
      }
    },
    "/organizations/{id}/thirdPartyVPNPeers": {
      "get": {
        "summary": "Return the third party VPN peers for an organization",
        "description": "Return the third party VPN peers for an organization\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/organizations/[id]/thirdPartyVPNPeers'\n```",
        "operationId": "getOrganizationsIdThirdpartyvpnpeers",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                [
                  {
                    "name": "My peer 1",
                    "publicIp": "123.123.123.1",
                    "privateSubnets": ["192.168.1.0/24", "192.168.128.0/24"],
                    "secret": "asdf1234",
                    "ipsecPolicies": {
                      "ikeCipherAlgo": ["tripledes"],
                      "ikeAuthAlgo": ["sha1"],
                      "ikeDiffieHellmanGroup": ["group2"],
                      "ikeLifetime": "28800",
                      "childCipherAlgo": ["aes128"],
                      "childAuthAlgo": ["sha1"],
                      "childPfsGroup": ["disabled"],
                      "childLifetime": "28800"
                    }
                  },
                  {
                    "name": "My peer 2",
                    "publicIp": "123.123.123.2",
                    "privateSubnets": ["192.168.2.0/24", "192.168.129.0/24"],
                    "secret": "asdf56785678567856785678",
                    "ipsecPoliciesPreset": "default"
                  }
                ]
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Organizations"]
      },
      "put": {
        "summary": "Update the third party VPN peers for an organization",
        "description": "Update the third party VPN peers for an organization\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '[[{\"name\":\"My peer 1\",\"publicIp\":\"123.123.123.1\",\"privateSubnets\":[\"192.168.1.0/24\",\"192.168.128.0/24\"],\"secret\":\"asdf1234\",\"ipsecPolicies\":{\"ikeCipherAlgo\":[\"tripledes\"],\"ikeAuthAlgo\":[\"sha1\"],\"ikeDiffieHellmanGroup\":[\"group2\"],\"ikeLifetime\":\"28800\",\"childCipherAlgo\":[\"aes128\"],\"childAuthAlgo\":[\"sha1\"],\"childPfsGroup\":[\"disabled\"],\"childLifetime\":\"28800\"}},{\"name\":\"My peer 2\",\"publicIp\":\"123.123.123.2\",\"privateSubnets\":[\"192.168.2.0/24\",\"192.168.129.0/24\"],\"secret\":\"asdf56785678567856785678\",\"ipsecPoliciesPreset\":\"default\"}]]' 'https://api.meraki.com/api/v0/organizations/[id]/thirdPartyVPNPeers'\n```",
        "operationId": "putOrganizationsIdThirdpartyvpnpeers",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                [
                  {
                    "name": "My peer 1",
                    "publicIp": "123.123.123.1",
                    "privateSubnets": ["192.168.1.0/24", "192.168.128.0/24"],
                    "secret": "asdf1234",
                    "ipsecPolicies": {
                      "ikeCipherAlgo": ["tripledes"],
                      "ikeAuthAlgo": ["sha1"],
                      "ikeDiffieHellmanGroup": ["group2"],
                      "ikeLifetime": "28800",
                      "childCipherAlgo": ["aes128"],
                      "childAuthAlgo": ["sha1"],
                      "childPfsGroup": ["disabled"],
                      "childLifetime": "28800"
                    }
                  },
                  {
                    "name": "My peer 2",
                    "publicIp": "123.123.123.2",
                    "privateSubnets": ["192.168.2.0/24", "192.168.129.0/24"],
                    "secret": "asdf56785678567856785678",
                    "ipsecPoliciesPreset": "default"
                  }
                ]
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the VPN peer",
                  "type": "string"
                },
                "publicIp": {
                  "description": "The public IP of the VPN peer",
                  "type": "string"
                },
                "privateSubnets": {
                  "description": "The list of the private subnets of the VPN peer",
                  "type": "string"
                },
                "ipsecPolicies": {
                  "description": "Custom IPsec policies for the VPN peer. If not included and a preset has not been chosen, the default preset for IPsec policies will be used.",
                  "type": "object",
                  "properties": {
                    "ikeCipherAlgo": {
                      "description": "This is the cipher algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: \"aes256\", \"aes192\", \"aes128\", \"tripledes\", \"des\"",
                      "type": "string"
                    },
                    "ikeAuthAlgo": {
                      "description": "This is the authentication algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: \"sha1\", \"md5\"",
                      "type": "string"
                    },
                    "ikeDiffieHellmanGroup": {
                      "description": "This is the Diffie-Hellman group to be used in Phase 1. The value should be an array with one of the following algorithms: \"group5\", \"group2\", \"group1\"",
                      "type": "string"
                    },
                    "ikeLifetime": {
                      "description": "The lifetime of the Phase 1 SA in seconds.",
                      "type": "string"
                    },
                    "childCipherAlgo": {
                      "description": "This is the cipher algorithms to be used in Phase 2. The value should be an array with one or more of the following algorithms: \"aes256\", \"aes192\", \"aes128\", \"tripledes\", \"des\"",
                      "type": "string"
                    },
                    "childAuthAlgo": {
                      "description": "This is the authentication algorithms to be used in Phase 2. The value should be an array with one of the following algorithms: \"sha1\", \"md5\"",
                      "type": "string"
                    },
                    "childPfsGroup": {
                      "description": "This is the Diffie-Hellman group to be used for Perfect Forward Secrecy in Phase 2. The value should be an array with one of the following values: \"disabled\", \"group5\", \"group2\", \"group1\"",
                      "type": "string"
                    },
                    "childLifetime": {
                      "description": "The lifetime of the Phase 2 SA in seconds.",
                      "type": "string"
                    }
                  }
                },
                "ipsecPoliciesPreset": {
                  "description": "One of the following available presets: \"default\", \"aws\", \"azure\". If this is provided, the IPsecPolicies parameter is ignored.",
                  "type": "string"
                },
                "secret": {
                  "description": "The shared secret with the VPN peer",
                  "type": "string"
                },
                "networkTags": {
                  "description": "A list of network tags that will connect with this peer. Use \"all\" for all networks. Use \"none\" for no networks. If missing, default is \"all\".",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Organizations"]
      }
    },
    "/networks/{networkId}/phoneAnnouncements": {
      "get": {
        "summary": "List all announcement groups in a network.",
        "description": "List all announcement groups in a network.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/phoneAnnouncements'\n```",
        "operationId": "getNetworksNetworkidPhoneannouncements",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "id": "1284392014819",
                  "name": "My announcement group",
                  "phoneAdmins": ["Miles Meraki"],
                  "phoneMembers": ["Miles Meraki"]
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Phone announcements"]
      },
      "post": {
        "summary": "Add an announcement group.",
        "description": "Add an announcement group.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST --data-binary '{\"name\":\"My announcement group\"}' 'https://api.meraki.com/api/v0/networks/[networkId]/phoneAnnouncements'\n```",
        "operationId": "postNetworksNetworkidPhoneannouncements",
        "responses": {
          "201": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": "1284392014819",
                "name": "My announcement group",
                "phoneAdmins": ["Miles Meraki"],
                "phoneMembers": ["Miles Meraki"]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The full name of the new announcement group.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Phone announcements"]
      }
    },
    "/networks/{networkId}/phoneAnnouncements/{id}": {
      "delete": {
        "summary": "Delete an announcement group.",
        "description": "Delete an announcement group.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X DELETE 'https://api.meraki.com/api/v0/networks/[networkId]/phoneAnnouncements/[id]'\n```",
        "operationId": "deleteNetworksNetworkidPhoneannouncementsId",
        "responses": {
          "204": {
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Phone announcements"]
      }
    },
    "/networks/{networkId}/phoneAssignments": {
      "get": {
        "summary": "List all phones in a network and their contact assignment",
        "description": "List all phones in a network and their contact assignment\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/phoneAssignments'\n```",
        "operationId": "getNetworksNetworkidPhoneassignments",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "serial": "Q2XX-XXXX-XXXX",
                  "contactId": "823",
                  "contactType": "Dashboard",
                  "publicNumber": ["+15555555555"],
                  "ext": "1234"
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Phone assignments"]
      }
    },
    "/networks/{networkId}/phoneAssignments/{serial}": {
      "get": {
        "summary": "Return a phone's contact assignment",
        "description": "Return a phone's contact assignment\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/phoneAssignments/[serial]'\n```",
        "operationId": "getNetworksNetworkidPhoneassignmentsSerial",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "serial": "Q2XX-XXXX-XXXX",
                "contactId": "823",
                "contactType": "Dashboard",
                "publicNumber": ["+15555555555"],
                "ext": "1234"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Phone assignments"]
      },
      "put": {
        "summary": "Assign a contact and number(s) to a phone",
        "description": "Assign a contact and number(s) to a phone\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"contactId\":\"823\",\"contactType\":\"Google\",\"publicNumber\":[\"+15555555555\"],\"ext\":\"1234\"}' 'https://api.meraki.com/api/v0/networks/[networkId]/phoneAssignments/[serial]'\n```",
        "operationId": "putNetworksNetworkidPhoneassignmentsSerial",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "serial": "Q2XX-XXXX-XXXX",
                "contactId": "823",
                "contactType": "Dashboard",
                "publicNumber": ["+15555555555"],
                "ext": "1234"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "contactId": {
                  "description": "The ID of the contact (obtained from 'Phone Contacts' API)",
                  "type": "string"
                },
                "contactType": {
                  "description": "The type of contact to bind: 'Dashboard' or 'Google' (obtained from 'Phone Contacts' API)",
                  "type": "string"
                },
                "publicNumber": {
                  "description": "The public number(s) in E.164 format (obtained from 'Phone Numbers' API) as an array of strings. Multiple numbers per phone are allowed.\n    Omitting this paramater will remove the public number assignment(s).",
                  "type": "string"
                },
                "ext": {
                  "description": "The 4-6 digit extension. Extension cannot be in use. Omitting this parameter will remove the extension assignment.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Phone assignments"]
      },
      "delete": {
        "summary": "Remove a phone assignment (unprovision a phone)",
        "description": "Remove a phone assignment (unprovision a phone)\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X DELETE 'https://api.meraki.com/api/v0/networks/[networkId]/phoneAssignments/[serial]'\n```",
        "operationId": "deleteNetworksNetworkidPhoneassignmentsSerial",
        "responses": {
          "204": {
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Phone assignments"]
      }
    },
    "/networks/{networkId}/phoneCallgroups": {
      "get": {
        "summary": "List all call groups in a network",
        "description": "List all call groups in a network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/phoneCallgroups'\n```",
        "operationId": "getNetworksNetworkidPhonecallgroups",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "id": "178449602133687616",
                  "name": "Meraki Sales",
                  "publicNumber": "+15555555555",
                  "ext": "1234"
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Phone callgroups"]
      }
    },
    "/networks/{networkId}/phoneCallgroups/{id}": {
      "get": {
        "summary": "Show a call group's details",
        "description": "Show a call group's details\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/phoneCallgroups/[id]'\n```",
        "operationId": "getNetworksNetworkidPhonecallgroupsId",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": "178449602133687616",
                "name": "Meraki Sales",
                "publicNumber": "+15555555555",
                "ext": "1234"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Phone callgroups"]
      },
      "put": {
        "summary": "Update a call group's details. Only submit parameters you would like to update. Omitting any parameters will leave them as-is.",
        "description": "Update a call group's details. Only submit parameters you would like to update. Omitting any parameters will leave them as-is.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"ext\":\"1234\",\"publicNumber\":\"+15555555555\",\"ringStrategy\":\"ring-all\",\"scope\":\"some\",\"tags\":[\"sales\",\"support\"],\"noAnswerAction\":\"transfer-to-ext\",\"transferExtension\":\"1003\"}' 'https://api.meraki.com/api/v0/networks/[networkId]/phoneCallgroups/[id]'\n```",
        "operationId": "putNetworksNetworkidPhonecallgroupsId",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": "178449602133687616",
                "name": "Meraki Sales",
                "publicNumber": "+15555555555",
                "ext": "1234"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The call group name.",
                  "type": "string"
                },
                "ext": {
                  "description": "The 4-6 digit extension. Extension cannot be in use.",
                  "type": "string"
                },
                "publicNumber": {
                  "description": "The public number(s) in E.164 format (obtained from 'Phone Numbers' API)",
                  "type": "string"
                },
                "ringStrategy": {
                  "description": "Ring strategy: options: 'ring-all', 'longest-idle-agent', 'round-robin'",
                  "type": "string"
                },
                "scope": {
                  "description": "Device Scope: options: 'all' - All devices, 'some' - Devices with ANY of the following tags (specify tags field), 'all_tags' - Devices with ALL of the following tags (specify tags field), 'without_all_tags' - Devices WITHOUT ALL of the following tags (specify tags field)",
                  "type": "string"
                },
                "tags": {
                  "description": "Scope tags (use if scope is 'some', 'all_tags', or 'without_all_tags'). Submit as array of text. ex: [\"sales\", \"eng\"]",
                  "type": "string"
                },
                "allowExternalForwards": {
                  "description": "Allow external forwards. Boolean true or false",
                  "type": "string"
                },
                "waitTimeEnabled": {
                  "description": "Enable Max Wait Time. Boolean true or false",
                  "type": "string"
                },
                "maxWaitTime": {
                  "description": "Max wait time in seconds.",
                  "type": "string"
                },
                "noAnswerAction": {
                  "description": "No answer action: options: 'hang-up', 'transfer-to-ext'. If 'transfer-to-ext', use the transferExtension field",
                  "type": "string"
                },
                "transferExtension": {
                  "description": "The extension to transfer to after wait time expires. Submit the 4-6 digit extension as text. Use if noAnswerAction is 'transfer-to-ext'",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Phone callgroups"]
      },
      "delete": {
        "summary": "Delete a call group",
        "description": "Delete a call group\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X DELETE 'https://api.meraki.com/api/v0/networks/[networkId]/phoneCallgroups/[id]'\n```",
        "operationId": "deleteNetworksNetworkidPhonecallgroupsId",
        "responses": {
          "204": {
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Phone callgroups"]
      }
    },
    "/networks/{networkId}/phoneCallgroups/": {
      "post": {
        "summary": "Create a new call group.",
        "description": "Create a new call group.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST --data-binary '{\"name\":\"Sales Group\",\"ext\":\"1234\",\"publicNumber\":\"+15555555555\",\"ringStrategy\":\"ring-all\",\"scope\":\"some\",\"tags\":[\"sales\",\"support\"],\"noAnswerAction\":\"transfer-to-ext\",\"transferExtension\":\"1003\"}' 'https://api.meraki.com/api/v0/networks/[networkId]/phoneCallgroups/'\n```",
        "operationId": "postNetworksNetworkidPhonecallgroups",
        "responses": {
          "201": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": "178449602133687616",
                "name": "Meraki Sales",
                "publicNumber": "+15555555555",
                "ext": "1234"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The call group name.",
                  "type": "string"
                },
                "ext": {
                  "description": "The 4-6 digit extension. Extension cannot be in use.",
                  "type": "string"
                },
                "publicNumber": {
                  "description": "The public number in E.164 format (obtained from 'Phone Numbers' API)",
                  "type": "string"
                },
                "ringStrategy": {
                  "description": "Ring strategy: options: 'ring-all', 'longest-idle-agent', 'round-robin'",
                  "type": "string"
                },
                "scope": {
                  "description": "Device Scope: options: 'all' - All devices, 'some' - Devices with ANY of the following tags (specify tags field), 'all_tags' - Devices with ALL of the following tags (specify tags field), 'without_all_tags' - Devices WITHOUT ALL of the following tags (specify tags field)",
                  "type": "string"
                },
                "tags": {
                  "description": "Scope tags (use if scope is 'some', 'all_tags', or 'without_all_tags'). Submit as array of text. ex: [\"sales\", \"eng\"]",
                  "type": "string"
                },
                "allowExternalForwards": {
                  "description": "Allow external forwards. Boolean true or false",
                  "type": "string"
                },
                "waitTimeEnabled": {
                  "description": "Enable Max Wait Time. Boolean true or false",
                  "type": "string"
                },
                "maxWaitTime": {
                  "description": "Max wait time in seconds.",
                  "type": "string"
                },
                "noAnswerAction": {
                  "description": "No answer action: options: 'hang-up', 'transfer-to-ext'. If 'transfer-to-ext', use the transferExtension field",
                  "type": "string"
                },
                "transferExtension": {
                  "description": "Use if noAnswerAction is 'transfer-to-ext. The extension to transfer to after wait time expires. The extension must exist on the network. Submit the 4-6 digit extension as text.'",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Phone callgroups"]
      }
    },
    "/networks/{networkId}/phoneConferenceRooms": {
      "get": {
        "summary": "List all the phone conference rooms in a network.",
        "description": "List all the phone conference rooms in a network.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/phoneConferenceRooms'\n```",
        "operationId": "getNetworksNetworkidPhoneconferencerooms",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "id": 563512903374733359,
                  "name": "Meraki Conferece Room",
                  "description": "Meraki HQ main conference room",
                  "ext": "1111",
                  "publicNumber": "+15555555555",
                  "pin": "1234",
                  "maxMembers": 10
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Phone conference rooms"]
      },
      "post": {
        "summary": "Add a conference room.",
        "description": "Add a conference room.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST --data-binary '{\"name\":\"Meraki Conference Room\"}' 'https://api.meraki.com/api/v0/networks/[networkId]/phoneConferenceRooms'\n```",
        "operationId": "postNetworksNetworkidPhoneconferencerooms",
        "responses": {
          "201": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": 563512903374733359,
                "name": "Meraki Conferece Room",
                "description": "Meraki HQ main conference room",
                "ext": "1111",
                "publicNumber": "+15555555555",
                "pin": "1234",
                "maxMembers": 10
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The full name of the new conference room.",
                  "type": "string"
                },
                "description": {
                  "description": "The description of the new conference room.",
                  "type": "string"
                },
                "ext": {
                  "description": "The extension of the new conference room.",
                  "type": "string"
                },
                "publicNumber": {
                  "description": "The public number of the new conference room.",
                  "type": "string"
                },
                "maxMembers": {
                  "description": "The max members allowed in the new conference room.",
                  "type": "string"
                },
                "pin": {
                  "description": "Password that must be entered before being allowed in the conference room.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Phone conference rooms"]
      }
    },
    "/networks/{networkId}/phoneConferenceRooms/{id}": {
      "get": {
        "summary": "Show a conference room's details.",
        "description": "Show a conference room's details.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/phoneConferenceRooms/[id]'\n```",
        "operationId": "getNetworksNetworkidPhoneconferenceroomsId",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": 563512903374733359,
                "name": "Meraki Conferece Room",
                "description": "Meraki HQ main conference room",
                "ext": "1111",
                "publicNumber": "+15555555555",
                "pin": "1234",
                "maxMembers": 10
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Phone conference rooms"]
      },
      "put": {
        "summary": "Update a conference room's. Only submit parameters you would like to update. Omitting any parameters will leave them as-is.",
        "description": "Update a conference room's. Only submit parameters you would like to update. Omitting any parameters will leave them as-is.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"name\":\"Meraki Conference Room\"}' 'https://api.meraki.com/api/v0/networks/[networkId]/phoneConferenceRooms/[id]'\n```",
        "operationId": "putNetworksNetworkidPhoneconferenceroomsId",
        "responses": {
          "201": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": 563512903374733359,
                "name": "Meraki Conferece Room",
                "description": "Meraki HQ main conference room",
                "ext": "1111",
                "publicNumber": "+15555555555",
                "pin": "1234",
                "maxMembers": 10
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The full name of the conference room.",
                  "type": "string"
                },
                "description": {
                  "description": "The description of the conference room.",
                  "type": "string"
                },
                "ext": {
                  "description": "The extension of the conference room.",
                  "type": "string"
                },
                "publicNumber": {
                  "description": "The public number of the conference room.",
                  "type": "string"
                },
                "maxMembers": {
                  "description": "The max members allowed in the conference room.",
                  "type": "string"
                },
                "pin": {
                  "description": "Password that must be entered before being allowed in the conference room.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Phone conference rooms"]
      },
      "delete": {
        "summary": "Delete a conference room.",
        "description": "Delete a conference room.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X DELETE 'https://api.meraki.com/api/v0/networks/[networkId]/phoneConferenceRooms/[id]'\n```",
        "operationId": "deleteNetworksNetworkidPhoneconferenceroomsId",
        "responses": {
          "204": {
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Phone conference rooms"]
      }
    },
    "/networks/{networkId}/phoneContacts": {
      "get": {
        "summary": "List the phone contacts in a network",
        "description": "List the phone contacts in a network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/phoneContacts'\n```",
        "operationId": "getNetworksNetworkidPhonecontacts",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "id": "1234",
                  "name": "Miles Meraki",
                  "type": "Dashboard"
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Phone contacts"]
      },
      "post": {
        "summary": "Add a contact",
        "description": "Add a contact\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST --data-binary '{\"name\":\"Miles Meraki\"}' 'https://api.meraki.com/api/v0/networks/[networkId]/phoneContacts'\n```",
        "operationId": "postNetworksNetworkidPhonecontacts",
        "responses": {
          "201": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": "1234",
                "name": "Miles Meraki",
                "type": "Dashboard"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The full name of the new contact",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Phone contacts"]
      }
    },
    "/networks/{networkId}/phoneContacts/{contactId}": {
      "put": {
        "summary": "Update a phone contact. Google Directory contacts cannot be modified.",
        "description": "Update a phone contact. Google Directory contacts cannot be modified.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"name\":\"Miles Meraki\"}' 'https://api.meraki.com/api/v0/networks/[networkId]/phoneContacts/[contactId]'\n```",
        "operationId": "putNetworksNetworkidPhonecontactsContactid",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": "1234",
                "name": "Miles Meraki",
                "type": "Dashboard"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "contactId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the contact",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Phone contacts"]
      },
      "delete": {
        "summary": "Delete a phone contact. Google Directory contacts cannot be removed.",
        "description": "Delete a phone contact. Google Directory contacts cannot be removed.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X DELETE 'https://api.meraki.com/api/v0/networks/[networkId]/phoneContacts/[contactId]'\n```",
        "operationId": "deleteNetworksNetworkidPhonecontactsContactid",
        "responses": {
          "204": {
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "contactId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Phone contacts"]
      }
    },
    "/networks/{networkId}/phoneNumbers": {
      "get": {
        "summary": "List all the phone numbers in a network",
        "description": "List all the phone numbers in a network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/phoneNumbers'\n```",
        "operationId": "getNetworksNetworkidPhonenumbers",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "publicNumber": "+15555555555"
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Phone numbers"]
      }
    },
    "/networks/{networkId}/phoneNumbers/available": {
      "get": {
        "summary": "List the available phone numbers in a network",
        "description": "List the available phone numbers in a network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/phoneNumbers/available'\n```",
        "operationId": "getNetworksNetworkidPhonenumbersAvailable",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "publicNumber": "+15555555555"
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Phone numbers"]
      }
    },
    "/networks/{networkId}/pii/piiKeys": {
      "get": {
        "summary": "List the keys required to access Personally Identifiable Information (PII) for a given identifier. Exactly one identifier will be accepted. If the organization contains org-wide Systems Manager users matching the key provided then there will be an entry with the key \"0\" containing the applicable keys.",
        "description": "List the keys required to access Personally Identifiable Information (PII) for a given identifier. Exactly one identifier will be accepted. If the organization contains org-wide Systems Manager users matching the key provided then there will be an entry with the key \"0\" containing the applicable keys.\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/piiKeys\n```\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/pii/piiKeys'\n```",
        "operationId": "getNetworksNetworkidPiiPiikeys",
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "description": "The username of a Systems Manager user",
                  "type": "string"
                },
                "email": {
                  "description": "The email of a network user account or a Systems Manager device",
                  "type": "string"
                },
                "mac": {
                  "description": "The MAC of a network client device or a Systems Manager device",
                  "type": "string"
                },
                "serial": {
                  "description": "The serial of a Systems Manager device",
                  "type": "string"
                },
                "imei": {
                  "description": "The IMEI of a Systems Manager device",
                  "type": "string"
                },
                "bluetoothMac": {
                  "description": "The MAC of a Bluetooth client",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["PII"]
      }
    },
    "/networks/{networkId}/pii/smDevicesForKey": {
      "get": {
        "summary": "Given a piece of Personally Identifiable Information (PII), return the Systems Manager device ID(s) associated with that identifier. These device IDs can be used with the Systems Manager API endpoints to retrieve device details. Exactly one identifier will be accepted.",
        "description": "Given a piece of Personally Identifiable Information (PII), return the Systems Manager device ID(s) associated with that identifier. These device IDs can be used with the Systems Manager API endpoints to retrieve device details. Exactly one identifier will be accepted.\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/smDevicesForKey\n```\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/pii/smDevicesForKey'\n```",
        "operationId": "getNetworksNetworkidPiiSmdevicesforkey",
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "description": "The username of a Systems Manager user",
                  "type": "string"
                },
                "email": {
                  "description": "The email of a network user account or a Systems Manager device",
                  "type": "string"
                },
                "mac": {
                  "description": "The MAC of a network client device or a Systems Manager device",
                  "type": "string"
                },
                "serial": {
                  "description": "The serial of a Systems Manager device",
                  "type": "string"
                },
                "imei": {
                  "description": "The IMEI of a Systems Manager device",
                  "type": "string"
                },
                "bluetoothMac": {
                  "description": "The MAC of a Bluetooth client",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["PII"]
      }
    },
    "/networks/{networkId}/pii/smOwnersForKey": {
      "get": {
        "summary": "Given a piece of Personally Identifiable Information (PII), return the Systems Manager owner ID(s) associated with that identifier. These owner IDs can be used with the Systems Manager API endpoints to retrieve owner details. Exactly one identifier will be accepted.",
        "description": "Given a piece of Personally Identifiable Information (PII), return the Systems Manager owner ID(s) associated with that identifier. These owner IDs can be used with the Systems Manager API endpoints to retrieve owner details. Exactly one identifier will be accepted.\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/smOwnersForKey\n```\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/pii/smOwnersForKey'\n```",
        "operationId": "getNetworksNetworkidPiiSmownersforkey",
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "description": "The username of a Systems Manager user",
                  "type": "string"
                },
                "email": {
                  "description": "The email of a network user account or a Systems Manager device",
                  "type": "string"
                },
                "mac": {
                  "description": "The MAC of a network client device or a Systems Manager device",
                  "type": "string"
                },
                "serial": {
                  "description": "The serial of a Systems Manager device",
                  "type": "string"
                },
                "imei": {
                  "description": "The IMEI of a Systems Manager device",
                  "type": "string"
                },
                "bluetoothMac": {
                  "description": "The MAC of a Bluetooth client",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["PII"]
      }
    },
    "/networks/{networkId}/pii/requests": {
      "get": {
        "summary": "List the PII requests for this network or organization",
        "description": "List the PII requests for this network or organization\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/requests\n```\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/pii/requests'\n```",
        "operationId": "getNetworksNetworkidPiiRequests",
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["PII"]
      },
      "post": {
        "summary": "Submit a new delete or restrict processing PII request",
        "description": "Submit a new delete or restrict processing PII request\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/requests\n```\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -X POST -H 'Content-Type: application/json' --data-binary '{\"type\":\"delete\", \"datasets\":\"[\"usage\",\"events\"]\", \"mac\":\"00:77:00:77:00:77\"}' 'https://api.meraki.com/api/v0/networks/[networkId]/pii/requests'\n\n```",
        "operationId": "postNetworksNetworkidPiiRequests",
        "responses": {
          "201": {
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "description": "One of \"delete\" or \"restrict processing\"",
                  "type": "string"
                },
                "datasets": {
                  "description": "The datasets related to the provided key that should be deleted. Only applies to \"delete\" requests. The value \"all\" will be expanded to all datasets applicable to this type. The datasets by applicable to each type are: mac (usage, events, traffic), email (users, loginAttempts), username (users, loginAttempts), bluetoothMac (client, connectivity), smDeviceId (device), smUserId (user)",
                  "type": "string"
                },
                "username": {
                  "description": "The username of a network log in. Only applies to \"delete\" requests.",
                  "type": "string"
                },
                "email": {
                  "description": "The email of a network user account. Only applies to \"delete\" requests.",
                  "type": "string"
                },
                "mac": {
                  "description": "The MAC of a network client device. Applies to both \"restrict processing\" and \"delete\" requests.",
                  "type": "string"
                },
                "smDeviceId": {
                  "description": "The sm_device_id of a Systems Manager device. The only way to \"restrict processing\" or \"delete\" a Systems Manager device. Must include \"device\" in the dataset for a \"delete\" request to destroy the device.",
                  "type": "string"
                },
                "smUserId": {
                  "description": "The sm_user_id of a Systems Manager user. The only way to \"restrict processing\" or \"delete\" a Systems Manager user. Must include \"user\" in the dataset for a \"delete\" request to destroy the user.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["PII"]
      }
    },
    "/networks/{networkId}/pii/requests/{id}": {
      "get": {
        "summary": "Return a PII request",
        "description": "Return a PII request\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/requests/{id}\n```\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/pii/requests/[id]'\n```",
        "operationId": "getNetworksNetworkidPiiRequestsId",
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["PII"]
      },
      "delete": {
        "summary": "Delete a restrict processing PII request",
        "description": "Delete a restrict processing PII request\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/requests/{id}\n```\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X DELETE 'https://api.meraki.com/api/v0/networks/[networkId]/pii/requests/[id]'\n```",
        "operationId": "deleteNetworksNetworkidPiiRequestsId",
        "responses": {
          "204": {
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["PII"]
      }
    },
    "/organizations/{organizationId}/samlRoles": {
      "get": {
        "summary": "List the SAML roles for this organization",
        "description": "List the SAML roles for this organization\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/organizations/[organizationId]/samlRoles'\n```",
        "operationId": "getOrganizationsOrganizationidSamlroles",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "id": "TEdJIEN1c3RvbWVy",
                  "role": "myrole",
                  "orgAccess": "none",
                  "networks": [
                    {
                      "id": "N_1234",
                      "access": "full"
                    }
                  ],
                  "tags": [
                    {
                      "tag": "west",
                      "access": "read-only"
                    }
                  ]
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["SAML roles"]
      },
      "post": {
        "summary": "Create a SAML role",
        "description": "Create a SAML role\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST 'https://api.meraki.com/api/v0/organizations/[organizationId]/samlRoles'\n```",
        "operationId": "postOrganizationsOrganizationidSamlroles",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": "TEdJIEN1c3RvbWVy",
                "role": "myrole",
                "orgAccess": "none",
                "networks": [
                  {
                    "id": "N_1234",
                    "access": "full"
                  }
                ],
                "tags": [
                  {
                    "tag": "west",
                    "access": "read-only"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "role": {
                  "description": "The role of the SAML administrator",
                  "type": "string"
                },
                "orgAccess": {
                  "description": "The privilege of the SAML administrator on the organization",
                  "type": "string"
                },
                "tags": {
                  "description": "The list of tags that the SAML administrator has privileges on",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "tag": {
                        "description": "The name of the tag",
                        "type": "string"
                      },
                      "access": {
                        "description": "The privilege of the SAML administrator on the tag",
                        "type": "string"
                      }
                    }
                  }
                },
                "networks": {
                  "description": "The list of networks that the SAML administrator has privileges on",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "The network ID",
                        "type": "string"
                      },
                      "access": {
                        "description": "The privilege of the SAML administrator on the network",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "tags": ["SAML roles"]
      }
    },
    "/organizations/{organizationId}/samlRoles/{id}": {
      "get": {
        "summary": "Return a SAML role",
        "description": "Return a SAML role\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/organizations/[organizationId]/samlRoles/[id]'\n```",
        "operationId": "getOrganizationsOrganizationidSamlrolesId",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": "TEdJIEN1c3RvbWVy",
                "role": "myrole",
                "orgAccess": "none",
                "networks": [
                  {
                    "id": "N_1234",
                    "access": "full"
                  }
                ],
                "tags": [
                  {
                    "tag": "west",
                    "access": "read-only"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["SAML roles"]
      },
      "put": {
        "summary": "Update a SAML role",
        "description": "Update a SAML role\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT 'https://api.meraki.com/api/v0/organizations/[organizationId]/samlRoles/[id]'\n```",
        "operationId": "putOrganizationsOrganizationidSamlrolesId",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": "TEdJIEN1c3RvbWVy",
                "role": "myrole",
                "orgAccess": "none",
                "networks": [
                  {
                    "id": "N_1234",
                    "access": "full"
                  }
                ],
                "tags": [
                  {
                    "tag": "west",
                    "access": "read-only"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "role": {
                  "description": "The role of the SAML administrator",
                  "type": "string"
                },
                "orgAccess": {
                  "description": "The privilege of the SAML administrator on the organization",
                  "type": "string"
                },
                "tags": {
                  "description": "The list of tags that the SAML administrator has privileges on",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "tag": {
                        "description": "The name of the tag",
                        "type": "string"
                      },
                      "access": {
                        "description": "The privilege of the SAML administrator on the tag",
                        "type": "string"
                      }
                    }
                  }
                },
                "networks": {
                  "description": "The list of networks that the SAML administrator has privileges on",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "The network ID",
                        "type": "string"
                      },
                      "access": {
                        "description": "The privilege of the SAML administrator on the network",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "tags": ["SAML roles"]
      },
      "delete": {
        "summary": "Remove a SAML role",
        "description": "Remove a SAML role\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X DELETE 'https://api.meraki.com/api/v0/organizations/[organizationId]/samlRoles/[id]'\n```",
        "operationId": "deleteOrganizationsOrganizationidSamlrolesId",
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["SAML roles"]
      }
    },
    "/networks/{networkId}/clients/{clientId}/securityEvents": {
      "get": {
        "summary": "List the security events",
        "description": "List the security events\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/clients/[clientId]/securityEvents?timespan=7200'\n```",
        "operationId": "getNetworksNetworkidClientsClientidSecurityevents",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "mac": "00:11:22:33:44:55",
                  "networkId": "N_24329156"
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "clientId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "timespan": {
                  "description": "The timespan, in seconds, to look back from now for events",
                  "type": "string"
                },
                "perPage": {
                  "description": "The number of entries per page returned",
                  "type": "string"
                },
                "startingAfter": {
                  "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it.",
                  "type": "string"
                },
                "endingBefore": {
                  "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Client security events"]
      }
    },
    "/networks/{networkId}/sm/namedTagScopes": {
      "get": {
        "summary": "List the named tag scopes in this network",
        "description": "List the named tag scopes in this network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/sm/namedTagScopes'\n```",
        "operationId": "getNetworksNetworkidSmNamedtagscopes",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "id": "1234",
                  "networkId": "N_24329156",
                  "name": "My named tag scope",
                  "scope": "none",
                  "tags": "[]",
                  "type": "Devices"
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "withDetails": {
                  "description": "Boolean indicating if the the ids of the apps, profiles, and devices or users scoped by the named tag scope should be included in the response",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Named tag scope"]
      },
      "post": {
        "summary": "Add a named_tag_scope",
        "description": "Add a named_tag_scope\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST --data-binary '{\"id\":\"1234\",\"networkId\":\"N_24329156\",\"name\":\"My named tag scope\",\"scope\":\"none\",\"tags\":\"[]\",\"type\":\"Devices\"}' 'https://api.meraki.com/api/v0/networks/[networkId]/sm/namedTagScopes'\n```",
        "operationId": "postNetworksNetworkidSmNamedtagscopes",
        "responses": {
          "201": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": "1234",
                "networkId": "N_24329156",
                "name": "My named tag scope",
                "scope": "none",
                "tags": "[]",
                "type": "Devices"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of this tag scope",
                  "type": "string"
                },
                "scope": {
                  "description": "The scope and tag options of the named tag scope. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none followed by tags",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Named tag scope"]
      }
    },
    "/networks/{networkId}/sm/namedTagScopes/{namedTagScopeId}": {
      "get": {
        "summary": "Return a named tag scope",
        "description": "Return a named tag scope\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/sm/namedTagScopes/[namedTagScopeId]'\n```",
        "operationId": "getNetworksNetworkidSmNamedtagscopesNamedtagscopeid",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": "1234",
                "networkId": "N_24329156",
                "name": "My named tag scope",
                "scope": "none",
                "tags": "[]",
                "type": "Devices"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "namedTagScopeId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "withDetails": {
                  "description": "Boolean indicating if the the ids of the apps, profiles, and devices or users scoped by the named tag scope should be included in the response",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Named tag scope"]
      },
      "put": {
        "summary": "Update a named tag scope",
        "description": "Update a named tag scope\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"id\":\"1234\",\"networkId\":\"N_24329156\",\"name\":\"My named tag scope\",\"scope\":\"none\",\"tags\":\"[]\",\"type\":\"Devices\"}' 'https://api.meraki.com/api/v0/networks/[networkId]/sm/namedTagScopes/[namedTagScopeId]'\n```",
        "operationId": "putNetworksNetworkidSmNamedtagscopesNamedtagscopeid",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": "1234",
                "networkId": "N_24329156",
                "name": "My named tag scope",
                "scope": "none",
                "tags": "[]",
                "type": "Devices"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "namedTagScopeId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of this tag scope",
                  "type": "string"
                },
                "scope": {
                  "description": "The scope and tag options of the named tag scope. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none followed by tags",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Named tag scope"]
      },
      "delete": {
        "summary": "Delete a named tag scope from a network",
        "description": "Delete a named tag scope from a network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X DELETE 'https://api.meraki.com/api/v0/networks/[networkId]/sm/namedTagScopes/[namedTagScopeId]'\n```",
        "operationId": "deleteNetworksNetworkidSmNamedtagscopesNamedtagscopeid",
        "responses": {
          "204": {
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "namedTagScopeId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Named tag scope"]
      }
    },
    "/networks/{network_id}/sm/profile/clarity": {
      "post": {
        "summary": "Create a new profile containing a Cisco Clarity payload",
        "description": "Create a new profile containing a Cisco Clarity payload\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H \"X-Cisco-Meraki-API-KEY: <key>\" \\\n  -X POST \\\n  -H \"Content-Type: multipart/form-data\" \\\n  -F \"scope=withAny, tag1, tag2\" \\\n  -F \"name=Cisco Clarity Config\" \\\n  -F \"PluginBundleID=com.cisco.security.app\" \\\n  -F 'VendorConfig=[ {\"key\":\"cloud_asn1_server_host\", \"type\":\"manual_string\", \"value\":\"immunet.com\"}, {\"key\":\"cloud_asn1_server_port\", \"type\":\"manual_int\", \"value\":443} ]' \\\n  \"https://api.meraki.com/api/v0/networks/[networkId]/sm/profile/clarity\"\n\n```",
        "operationId": "postNetworksNetwork_idSmProfileClarity",
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name to be given to the new profile",
                  "type": "string"
                },
                "scope": {
                  "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned",
                  "type": "string"
                },
                "PluginBundleID": {
                  "description": "The bundle ID of the application, defaults to com.cisco.ciscosecurity.app",
                  "type": "string"
                },
                "FilterBrowsers": {
                  "description": "Whether or not to enable browser traffic filtering (one of true, false). Default true.",
                  "type": "string"
                },
                "FilterSockets": {
                  "description": "Whether or not to enable socket traffic filtering (one of true, false). Default true.",
                  "type": "string"
                },
                "VendorConfig": {
                  "description": "The specific VendorConfig to be passed to the filtering framework, as JSON. VendorConfig should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name\n",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["SM"]
      }
    },
    "/networks/{network_id}/sm/profile/clarity/{profileId}": {
      "put": {
        "summary": "Update an existing profile containing a Cisco Clarity payload",
        "description": "Update an existing profile containing a Cisco Clarity payload\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H \"X-Cisco-Meraki-API-KEY: <key>\" \\\n  -X PUT \\\n  -H \"Content-Type: multipart/form-data\" \\\n  -F \"scope=withAny, tag1, tag2\" \\\n  -F \"name=Cisco Clarity Config\" \\\n  -F 'VendorConfig=[ {\"key\":\"cloud_asn1_server_host\", \"type\":\"manual_string\", \"value\":\"immunet.com\"}, {\"key\":\"cloud_asn1_server_port\", \"type\":\"manual_int\", \"value\":443} ]' \\\n  \"https://api.meraki.com/api/v0/networks/[networkId]/sm/profile/clarity/[profileId]\"\n\n```",
        "operationId": "putNetworksNetwork_idSmProfileClarityProfileid",
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "profileId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "optional: A new name for the profile",
                  "type": "string"
                },
                "scope": {
                  "description": "optional: A new scope for the profile (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned",
                  "type": "string"
                },
                "PluginBundleID": {
                  "description": "optional: The new bundle ID of the application",
                  "type": "string"
                },
                "FilterBrowsers": {
                  "description": "optional: Whether or not to enable browser traffic filtering (one of true, false).",
                  "type": "string"
                },
                "FilterSockets": {
                  "description": "optional: Whether or not to enable socket traffic filtering (one of true, false).",
                  "type": "string"
                },
                "VendorConfig": {
                  "description": "optional: The specific VendorConfig to be passed to the filtering framework, as JSON. VendorConfig should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name\n",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["SM"]
      },
      "post": {
        "summary": "Add a Cisco Clarity payload to an existing profile",
        "description": "Add a Cisco Clarity payload to an existing profile\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H \"X-Cisco-Meraki-API-KEY: <key>\" \\\n  -X POST \\\n  -H \"Content-Type: multipart/form-data\" \\\n  -F 'VendorConfig=[ {\"key\":\"cloud_asn1_server_host\", \"type\":\"manual_string\", \"value\":\"immunet.com\"}, {\"key\":\"cloud_asn1_server_port\", \"type\":\"manual_int\", \"value\":443} ]' \\\n  \"https://api.meraki.com/api/v0/networks/[networkId]/sm/profile/clarity/[profileId]\"\n\n```",
        "operationId": "postNetworksNetwork_idSmProfileClarityProfileid",
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "profileId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "PluginBundleID": {
                  "description": "The bundle ID of the application, defaults to com.cisco.ciscosecurity.app",
                  "type": "string"
                },
                "FilterBrowsers": {
                  "description": "Whether or not to enable browser traffic filtering (one of true, false).",
                  "type": "string"
                },
                "FilterSockets": {
                  "description": "Whether or not to enable socket traffic filtering (one of true, false).",
                  "type": "string"
                },
                "VendorConfig": {
                  "description": "The specific VendorConfig to be passed to the filtering framework, as JSON. VendorConfig should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name\n",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["SM"]
      },
      "get": {
        "summary": "Get details for a Cisco Clarity payload",
        "description": "Get details for a Cisco Clarity payload\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H \"X-Cisco-Meraki-API-KEY: <key>\" \\\n  -X GET \\\n  \"https://api.meraki.com/api/v0/networks/[networkId]/sm/profile/clarity/[profileId]\"\n\n```",
        "operationId": "getNetworksNetwork_idSmProfileClarityProfileid",
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "profileId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["SM"]
      },
      "delete": {
        "summary": "Delete a Cisco Clarity payload. Deletes the entire profile if it's empty after removing the payload.",
        "description": "Delete a Cisco Clarity payload. Deletes the entire profile if it's empty after removing the payload.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H \"X-Cisco-Meraki-API-KEY: <key>\" \\\n  -X DELETE \\\n  \"https://api.meraki.com/api/v0/networks/[networkId]/sm/profile/clarity/[profileId]\"\n\n```",
        "operationId": "deleteNetworksNetwork_idSmProfileClarityProfileid",
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "profileId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["SM"]
      }
    },
    "/networks/{network_id}/sm/profile/umbrella": {
      "post": {
        "summary": "Create a new profile containing a Cisco Umbrella payload",
        "description": "Create a new profile containing a Cisco Umbrella payload\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H \"X-Cisco-Meraki-API-KEY: <key>\" \\\n  -X POST \\\n  -H \"Content-Type: multipart/form-data\" \\\n  -F \"scope=withAny, tag1, tag2\" \\\n  -F \"name=Cisco Umbrella Config\" \\\n  -F \"AppBundleIdentifier=com.cisco.security\" \\\n  -F \"ProviderBundleIdentifier=com.cisco.umbrella\" \\\n  -F 'ProviderConfiguration=[ {\"key\":\"internalDomains\", \"type\":\"manual_list\", \"value\":[\"meraki.com\", \"cisco.com\"] }, {\"key\":\"user_id\", \"type\":\"manual_string\", \"value\":\"miles\"} ]' \\\n  -F \"usesCert=true\" \\\n  \"https://api.meraki.com/api/v0/networks/[networkId]/sm/profile/umbrella\"\n\n```",
        "operationId": "postNetworksNetwork_idSmProfileUmbrella",
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name to be given to the new profile",
                  "type": "string"
                },
                "scope": {
                  "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned",
                  "type": "string"
                },
                "AppBundleIdentifier": {
                  "description": "The bundle ID of the application, defaults to com.cisco.ciscosecurity.app",
                  "type": "string"
                },
                "ProviderBundleIdentifier": {
                  "description": "The bundle ID of the provider, defaults to com.cisco.ciscosecurity.app.CiscoUmbrella",
                  "type": "string"
                },
                "ProviderConfiguration": {
                  "description": "The specific ProviderConfiguration to be passed to the filtering framework, as JSON. ProviderConfiguration should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name\n",
                  "type": "string"
                },
                "usesCert": {
                  "description": "Whether the certificate should be attached to this profile (one of true, false).",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["SM"]
      }
    },
    "/networks/{network_id}/sm/profile/umbrella/{profileId}": {
      "put": {
        "summary": "Update an existing profile containing a Cisco Umbrella payload",
        "description": "Update an existing profile containing a Cisco Umbrella payload\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H \"X-Cisco-Meraki-API-KEY: <key>\" \\\n  -X PUT \\\n  -H \"Content-Type: multipart/form-data\" \\\n  -F \"scope=withAny, tag1, tag2\" \\\n  -F \"name=Cisco Umbrella Config\" \\\n  -F 'ProviderConfiguration=[ {\"key\":\"internalDomains\", \"type\":\"manual_list\", \"value\":[\"meraki.com\", \"cisco.com\"] }, {\"key\":\"user_id\", \"type\":\"manual_string\", \"value\":\"miles\"} ]' \\\n  \"https://api.meraki.com/api/v0/networks/[networkId]/sm/profile/umbrella/[profileId]\"\n\n```",
        "operationId": "putNetworksNetwork_idSmProfileUmbrellaProfileid",
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "profileId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "optional: A new name for the profile",
                  "type": "string"
                },
                "scope": {
                  "description": "optional: A new scope for the profile (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned",
                  "type": "string"
                },
                "AppBundleIdentifier": {
                  "description": "optional: The bundle ID of the application",
                  "type": "string"
                },
                "ProviderBundleIdentifier": {
                  "description": "optional: The bundle ID of the provider",
                  "type": "string"
                },
                "ProviderConfiguration": {
                  "description": "optional: The specific ProviderConfiguration to be passed to the filtering framework, as JSON. ProviderConfiguration should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name\n",
                  "type": "string"
                },
                "usesCert": {
                  "description": "Whether the certificate should be attached to this profile (one of true, false). False by default.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["SM"]
      },
      "post": {
        "summary": "Add a Cisco Umbrella payload to an existing profile",
        "description": "Add a Cisco Umbrella payload to an existing profile\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H \"X-Cisco-Meraki-API-KEY: <key>\" \\\n  -X POST \\\n  -H \"Content-Type: multipart/form-data\" \\\n  -F 'ProviderConfiguration=[ {\"key\":\"internalDomains\", \"type\":\"manual_list\", \"value\":[\"meraki.com\", \"cisco.com\"] }, {\"key\":\"user_id\", \"type\":\"manual_string\", \"value\":\"miles\"} ]' \\\n  \"https://api.meraki.com/api/v0/networks/[networkId]/sm/profile/umbrella/[profileId]\"\n\n```",
        "operationId": "postNetworksNetwork_idSmProfileUmbrellaProfileid",
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "profileId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "AppBundleIdentifier": {
                  "description": "The bundle ID of the application, defaults to com.cisco.ciscosecurity.app",
                  "type": "string"
                },
                "ProviderBundleIdentifier": {
                  "description": "The bundle ID of the provider, defaults to com.cisco.ciscosecurity.app.CiscoUmbrella",
                  "type": "string"
                },
                "ProviderConfiguration": {
                  "description": "The specific ProviderConfiguration to be passed to the filtering framework, as JSON. ProviderConfiguration should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name\n",
                  "type": "string"
                },
                "usesCert": {
                  "description": "Whether the certificate should be attached to this profile (one of true, false). False by default.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["SM"]
      },
      "get": {
        "summary": "Get details for a Cisco Umbrella payload",
        "description": "Get details for a Cisco Umbrella payload\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H \"X-Cisco-Meraki-API-KEY: <key>\" \\\n  -X GET \\\n  \"https://api.meraki.com/api/v0/networks/[networkId]/sm/profile/umbrella/[profileId]\"\n\n```",
        "operationId": "getNetworksNetwork_idSmProfileUmbrellaProfileid",
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "profileId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["SM"]
      },
      "delete": {
        "summary": "Delete a Cisco Umbrella payload. Deletes the entire profile if it's empty after removing the payload",
        "description": "Delete a Cisco Umbrella payload. Deletes the entire profile if it's empty after removing the payload\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H \"X-Cisco-Meraki-API-KEY: <key>\" \\\n  -X GET \\\n  \"https://api.meraki.com/api/v0/networks/[networkId]/sm/profile/umbrella/[profileId]\"\n\n```",
        "operationId": "deleteNetworksNetwork_idSmProfileUmbrellaProfileid",
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "profileId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["SM"]
      }
    },
    "/networks/{network_id}/sm/app/polaris": {
      "post": {
        "summary": "Create a new Polaris app",
        "description": "Create a new Polaris app\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H \"X-Cisco-Meraki-API-KEY: <key>\" \\\n  -X POST \\\n  -H \"Content-Type: multipart/form-data\" \\\n  -F \"scope=withAny, tag1, tag2\" \\\n  -F \"manifestUrl=https://website.com/assets/manifest.plist\" \\\n  -F \"preventAutoInstall=true\" \\\n  -F \"usesVPP=true\" \\\n  \"https://api.meraki.com/api/v0/networks/[networkId]/sm/app/polaris\"\n\n```",
        "operationId": "postNetworksNetwork_idSmAppPolaris",
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "scope": {
                  "description": "The scope (one of all, none, automatic, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned",
                  "type": "string"
                },
                "manifestUrl": {
                  "description": "The manifest URL of the Polaris app (one of manifestUrl and bundleId must be provided)",
                  "type": "string"
                },
                "bundleId": {
                  "description": "The bundleId of the Polaris app (one of manifestUrl and bundleId must be provided)",
                  "type": "string"
                },
                "preventAutoInstall": {
                  "description": "(optional) Whether or not SM should auto-install this app (one of true or false). False by default.",
                  "type": "string"
                },
                "usesVPP": {
                  "description": "(optional) Whether or not the app should use VPP by device assignment (one of true or false). False by default.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["SM"]
      },
      "get": {
        "summary": "Get details for a Cisco Polaris app if it exists",
        "description": "Get details for a Cisco Polaris app if it exists\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H \"X-Cisco-Meraki-API-KEY: <key>\" \\\n  -X GET \\\n  \"https://api.meraki.com/api/v0/networks/[networkId]/sm/app/polaris?bundleId=com.cisco.polaris\"\n\n```",
        "operationId": "getNetworksNetwork_idSmAppPolaris",
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "bundleId": {
                  "description": "The bundle ID of the app to be found, defaults to com.cisco.ciscosecurity.app",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["SM"]
      }
    },
    "/networks/{network_id}/sm/app/polaris/{appId}": {
      "put": {
        "summary": "Update an existing Polaris app",
        "description": "Update an existing Polaris app\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H \"X-Cisco-Meraki-API-KEY: <key>\" \\\n  -X PUT \\\n  -H \"Content-Type: multipart/form-data\" \\\n  -F \"scope=withAny, tag1, tag2\" \\\n  -F \"preventAutoInstall=true\" \\\n  -F \"usesVPP=true\" \\\n  \"https://api.meraki.com/api/v0/networks/[networkId]/sm/app/polaris/[appId]\"\n\n```",
        "operationId": "putNetworksNetwork_idSmAppPolarisAppid",
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "appId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "scope": {
                  "description": "The scope (one of all, none, automatic, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned",
                  "type": "string"
                },
                "preventAutoInstall": {
                  "description": "Whether or not SM should auto-install this app (one of true or false). False by default.",
                  "type": "string"
                },
                "usesVPP": {
                  "description": "Whether or not the app should use VPP by device assignment (one of true or false). False by default.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["SM"]
      },
      "delete": {
        "summary": "Delete a Cisco Polaris app",
        "description": "Delete a Cisco Polaris app\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H \"X-Cisco-Meraki-API-KEY: <key>\" \\\n  -X DELETE \\\n  \"https://api.meraki.com/api/v0/networks/[networkId]/sm/app/polaris/[appId]\"\n\n```",
        "operationId": "deleteNetworksNetwork_idSmAppPolarisAppid",
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "appId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["SM"]
      }
    },
    "/networks/{network_id}/sm/devices": {
      "get": {
        "summary": "List the devices enrolled in an SM network with various specified fields and filters",
        "description": "List the devices enrolled in an SM network with various specified fields and filters\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/devices'\n```",
        "operationId": "getNetworksNetwork_idSmDevices",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "devices": [
                    {
                      "id": "1284392014819",
                      "name": "Miles's phone",
                      "tags": ["tag1", "tag2"],
                      "ssid": "My SSID",
                      "wifiMac": "00:11:22:33:44:55",
                      "osName": "iOS 9.3.5",
                      "systemModel": "iPhone",
                      "uuid": "3d990628ede4c628d52",
                      "serialNumber": "F5XKHEBX",
                      "ip": "1.2.3.4"
                    }
                  ],
                  "batchToken": "MMbCbpHZtG3TKUCr9B9uc5"
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "fields": {
                  "description": "Additional fields that will be displayed for each device. Multiple fields can be passed in as comma separated values.\n      The default fields are: id, name, tags, ssid, wifiMac, osName, systemModel, uuid, and serialNumber. The additional fields are: ip,\n      systemType, availableDeviceCapacity, kioskAppName, biosVersion, lastConnected, missingAppsCount, userSuppliedAddress, location, lastUser,\n      ownerEmail, ownerUsername, publicIp, phoneNumber, diskInfoJson, deviceCapacity, isManaged, hadMdm, isSupervised, meid, imei, iccid,\n      simCarrierNetwork, cellularDataUsed, isHotspotEnabled, createdAt, batteryEstCharge, quarantined, avName, avRunning, asName, fwName,\n      isRooted, loginRequired, screenLockEnabled, screenLockDelay, autoLoginDisabled, autoTags, hasMdm, hasDesktopAgent, diskEncryptionEnabled,\n      hardwareEncryptionCaps, passCodeLock, usesHardwareKeystore, and androidSecurityPatchVersion.",
                  "type": "string"
                },
                "wifiMacs": {
                  "description": "Filter devices by wifi mac(s). Multiple wifi macs can be passed in as comma separated values.",
                  "type": "string"
                },
                "serials": {
                  "description": "Filter devices by serial(s). Multiple serials can be passed in as comma separated values.",
                  "type": "string"
                },
                "ids": {
                  "description": "Filter devices by id(s). Multiple ids can be passed in as comma separated values.",
                  "type": "string"
                },
                "scope": {
                  "description": "Specify a scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags as comma separated values.",
                  "type": "string"
                },
                "batchToken": {
                  "description": "On networks with more than 1000 devices, the device list will be limited to 1000 devices per query.\n      If there are more devices to be seen, a batch token will be returned as a part of the device list. To see the remainder of\n      the devices, pass in the batchToken as a parameter in the next request. Requests made with the batchToken do not require\n      additional parameters as the batchToken includes the parameters passed in with the original request. Additional parameters\n      passed in with the batchToken will be ignored.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["SM"]
      }
    },
    "/networks/{network_id}/sm/users": {
      "get": {
        "summary": "List the owners in an SM network with various specified fields and filters",
        "description": "List the owners in an SM network with various specified fields and filters\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/users'\n```",
        "operationId": "getNetworksNetwork_idSmUsers",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": "1234",
                "email": "miles@meraki.com",
                "fullName": "Miles Meraki",
                "username": "",
                "hasPassword": false,
                "tags": ["tag1", "tag2"],
                "adGroups": [],
                "asmGroups": [],
                "isExternal": false,
                "displayName": "Miles Meraki <miles@meraki.com>",
                "hasIdentityCertificate": false,
                "userThumbnail": "https://s3.amazonaws.com/image.extension"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "usernames": {
                  "description": "Filter users by username(s). Multiple usernames can be passed in as comma separated values.",
                  "type": "string"
                },
                "emails": {
                  "description": "Filter users by email(s). Multiple emails can be passed in as comma separated values.",
                  "type": "string"
                },
                "ids": {
                  "description": "Filter users by id(s). Multiple ids can be passed in as comma separated values.",
                  "type": "string"
                },
                "scope": {
                  "description": "Specify a scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags as comma separated values.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["SM"]
      }
    },
    "/networks/{network_id}/sm/user/{id}/deviceProfiles": {
      "get": {
        "summary": "Get the profiles associated with a user",
        "description": "Get the profiles associated with a user\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/user/[id]/deviceProfiles'\n```",
        "operationId": "getNetworksNetwork_idSmUserIdDeviceprofiles",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "id": "1284392014819",
                  "isEncrypted": true,
                  "isManaged": true,
                  "profileData": {},
                  "profileIdentifier": "com.test.app",
                  "name": "My profile",
                  "version": "0.0.1"
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["SM"]
      }
    },
    "/networks/{network_id}/sm/{id}/deviceProfiles": {
      "get": {
        "summary": "Get the profiles associated with a device",
        "description": "Get the profiles associated with a device\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/[id]/deviceProfiles'\n```",
        "operationId": "getNetworksNetwork_idSmIdDeviceprofiles",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "id": "1284392014819",
                  "isEncrypted": true,
                  "isManaged": true,
                  "profileData": {},
                  "profileIdentifier": "com.test.app",
                  "name": "My profile",
                  "version": "0.0.1"
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["SM"]
      }
    },
    "/networks/{network_id}/sm/user/{id}/softwares": {
      "get": {
        "summary": "Get a list of softwares associated with a user",
        "description": "Get a list of softwares associated with a user\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/user/[id]/softwares'\n```",
        "operationId": "getNetworksNetwork_idSmUserIdSoftwares",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "bundleSize": null,
                  "createdAt": "2018-02-11T00:00:00Z",
                  "dynamicSize": null,
                  "id": "1284392014819",
                  "identifier": "com.test.app",
                  "installedAt": "2018-05-12T00:00:00Z",
                  "toInstall": null,
                  "iosRedemptionCode": null,
                  "isManaged": true,
                  "itunesId": null,
                  "licenseKey": null,
                  "name": "My app",
                  "path": "/Path/to/app.app",
                  "redemptionCode": null,
                  "shortVersion": null,
                  "status": null,
                  "toUninstall": false,
                  "uninstalledAt": null,
                  "updatedAt": "2018-05-12T00:00:00Z",
                  "vendor": "Apple",
                  "version": "0.1"
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["SM"]
      }
    },
    "/networks/{network_id}/sm/{id}/softwares": {
      "get": {
        "summary": "Get a list of softwares associated with a device",
        "description": "Get a list of softwares associated with a device\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/[id]/softwares'\n```",
        "operationId": "getNetworksNetwork_idSmIdSoftwares",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "bundleSize": null,
                  "createdAt": "2018-02-11T00:00:00Z",
                  "dynamicSize": null,
                  "id": "1284392014819",
                  "identifier": "com.test.app",
                  "installedAt": "2018-05-12T00:00:00Z",
                  "toInstall": null,
                  "iosRedemptionCode": null,
                  "isManaged": true,
                  "itunesId": null,
                  "licenseKey": null,
                  "name": "My app",
                  "path": "/Path/to/app.app",
                  "redemptionCode": null,
                  "shortVersion": null,
                  "status": null,
                  "toUninstall": false,
                  "uninstalledAt": null,
                  "updatedAt": "2018-05-12T00:00:00Z",
                  "vendor": "Apple",
                  "version": "0.1"
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["SM"]
      }
    },
    "/networks/{network_id}/sm/{id}/networkAdapters": {
      "get": {
        "summary": "List the network adapters of a device",
        "description": "List the network adapters of a device\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/[id]/networkAdapters'\n```",
        "operationId": "getNetworksNetwork_idSmIdNetworkadapters",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "dhcpServer": "123.123.123.1",
                  "dnsServer": "8.8.8.8, 8.8.4.4",
                  "gateway": "1.2.3.5",
                  "id": "1284392014819",
                  "ip": "1.2.3.4",
                  "mac": "00:11:22:33:44:55",
                  "name": "en0",
                  "subnet": "255.255.255.0"
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["SM"]
      }
    },
    "/networks/{network_id}/sm/{id}/wlanLists": {
      "get": {
        "summary": "List the saved SSID names on a device",
        "description": "List the saved SSID names on a device\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/[id]/wlanLists'\n```",
        "operationId": "getNetworksNetwork_idSmIdWlanlists",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "createdAt": "2018-02-11T00:00:00Z",
                  "id": "1284392014819",
                  "xml": "Preferred networks on en0:"
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["SM"]
      }
    },
    "/networks/{network_id}/sm/{id}/securityCenters": {
      "get": {
        "summary": "List the security centers on a device",
        "description": "List the security centers on a device\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/[id]/securityCenters'\n```",
        "operationId": "getNetworksNetwork_idSmIdSecuritycenters",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "isRooted": true,
                  "hasAntiVirus": true,
                  "antiVirusName": "meraki_av",
                  "isFireWallEnabled": true,
                  "hasFireWallInstalled": true,
                  "fireWallName": "meraki_fw",
                  "isDiskEncrypted": true,
                  "isAutoLoginDisabled": true,
                  "id": "1284392014819",
                  "runningProcs": "/software,/software_2"
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["SM"]
      }
    },
    "/networks/{network_id}/sm/{id}/restrictions": {
      "get": {
        "summary": "List the restrictions on a device",
        "description": "List the restrictions on a device\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/[id]/restrictions'\n```",
        "operationId": "getNetworksNetwork_idSmIdRestrictions",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "profile": "com.meraki.sm.1",
                  "restrictions": {
                    "myRestriction": {
                      "value": true
                    }
                  }
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["SM"]
      }
    },
    "/networks/{network_id}/sm/{id}/certs": {
      "get": {
        "summary": "List the certs on a device",
        "description": "List the certs on a device\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/[id]/certs'\n```",
        "operationId": "getNetworksNetwork_idSmIdCerts",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "name": "My Cert",
                  "notValidAfter": "May 12, 2018",
                  "notValidBefore": "Feb 11, 2018",
                  "certPem": "-----BEGIN CERTIFICATE-----\n-----END CERTIFICATE-----\n",
                  "issuer": "",
                  "subject": "",
                  "id": 15
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["SM"]
      }
    },
    "/networks/{network_id}/sm/devices/tags": {
      "put": {
        "summary": "Add, delete, or update the tags of a set of devices",
        "description": "Add, delete, or update the tags of a set of devices\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"scope\":\"withAny, old_tag\",\"updateAction\":\"add\",\"tags\":\"tag1,tag2\"}' 'https://api.meraki.com/api/v0/networks/[network_id]/sm/devices/tags'\n```",
        "operationId": "putNetworksNetwork_idSmDevicesTags",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "success": [
                  {
                    "id": "1284392014819",
                    "serial": "F5XKHEBX",
                    "wifiMac": "00:11:22:33:44:55",
                    "tags": ["tag1", "tag2"]
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "wifiMacs": {
                  "description": "The wifiMacs of the devices to be modified.",
                  "type": "string"
                },
                "ids": {
                  "description": "The ids of the devices to be modified.",
                  "type": "string"
                },
                "serials": {
                  "description": "The serials of the devices to be modified.",
                  "type": "string"
                },
                "scope": {
                  "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be modified.",
                  "type": "string"
                },
                "tags": {
                  "description": "The tags to be added, deleted, or updated.",
                  "type": "string"
                },
                "updateAction": {
                  "description": "One of add, delete, or update. Only devices that have been modified will be returned.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["SM"]
      }
    },
    "/networks/{network_id}/sm/device/fields": {
      "put": {
        "summary": "Modify the fields of a device",
        "description": "Modify the fields of a device\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"id\":\"1284392014819\",\"deviceFields\":{\"name\":\"My name\"}}' 'https://api.meraki.com/api/v0/networks/[network_id]/sm/device/fields'\n```",
        "operationId": "putNetworksNetwork_idSmDeviceFields",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "success": [
                  {
                    "id": "1284392014819",
                    "serial": "F5XKHEBX",
                    "wifiMac": "00:11:22:33:44:55",
                    "name": "My name"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "wifiMac": {
                  "description": "The wifiMac of the device to be modified.",
                  "type": "string"
                },
                "id": {
                  "description": "The id of the device to be modified.",
                  "type": "string"
                },
                "serial": {
                  "description": "The serial of the device to be modified.",
                  "type": "string"
                },
                "deviceFields": {
                  "description": "The new fields of the device. Passed in as a JSON object. The list of available fields are: name, notes",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["SM"]
      }
    },
    "/networks/{network_id}/sm/devices/lock": {
      "put": {
        "summary": "Lock a set of devices",
        "description": "Lock a set of devices\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"ids\":\"\\\"1284392014819\\\"\"}' 'https://api.meraki.com/api/v0/networks/[network_id]/sm/devices/lock'\n```",
        "operationId": "putNetworksNetwork_idSmDevicesLock",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "success": true
              }
            }
          }
        },
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "wifiMacs": {
                  "description": "The wifiMacs of the devices to be locked.",
                  "type": "string"
                },
                "ids": {
                  "description": "The ids of the devices to be locked.",
                  "type": "string"
                },
                "serials": {
                  "description": "The serials of the devices to be locked.",
                  "type": "string"
                },
                "scope": {
                  "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be wiped.",
                  "type": "string"
                },
                "pin": {
                  "description": "The pin number for locking macOS devices (a six digit number). Required only for macOS devices.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["SM"]
      }
    },
    "/networks/{network_id}/sm/device/wipe": {
      "put": {
        "summary": "Wipe a device",
        "description": "Wipe a device\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"id\":\"1284392014819\"}' 'https://api.meraki.com/api/v0/networks/[network_id]/sm/device/wipe'\n```",
        "operationId": "putNetworksNetwork_idSmDeviceWipe",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "success": true
              }
            }
          }
        },
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "wifiMac": {
                  "description": "The wifiMac of the device to be wiped.",
                  "type": "string"
                },
                "id": {
                  "description": "The id of the device to be wiped.",
                  "type": "string"
                },
                "serial": {
                  "description": "The serial of the device to be wiped.",
                  "type": "string"
                },
                "pin": {
                  "description": "The pin number (a six digit value) for wiping a macOS device. Required only for macOS devices.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["SM"]
      }
    },
    "/networks/{network_id}/sm/devices/checkin": {
      "put": {
        "summary": "Force check-in a set of devices",
        "description": "Force check-in a set of devices\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"ids\":\"\\\"1284392014819\\\"\"}' 'https://api.meraki.com/api/v0/networks/[network_id]/sm/devices/checkin'\n```",
        "operationId": "putNetworksNetwork_idSmDevicesCheckin",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "success": true
              }
            }
          }
        },
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "wifiMacs": {
                  "description": "The wifiMacs of the devices to be checked-in.",
                  "type": "string"
                },
                "ids": {
                  "description": "The ids of the devices to be checked-in.",
                  "type": "string"
                },
                "serials": {
                  "description": "The serials of the devices to be checked-in.",
                  "type": "string"
                },
                "scope": {
                  "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be checked-in.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["SM"]
      }
    },
    "/networks/{network_id}/sm/devices/move": {
      "put": {
        "summary": "Move a set of devices to a new network",
        "description": "Move a set of devices to a new network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"ids\":\"\\\"1284392014819\\\"\",\"newNetwork\":\"N_24329156\"}' 'https://api.meraki.com/api/v0/networks/[network_id]/sm/devices/move'\n```",
        "operationId": "putNetworksNetwork_idSmDevicesMove",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "success": true
              }
            }
          }
        },
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "wifiMacs": {
                  "description": "The wifiMacs of the devices to be moved.",
                  "type": "string"
                },
                "ids": {
                  "description": "The ids of the devices to be moved.",
                  "type": "string"
                },
                "serials": {
                  "description": "The serials of the devices to be moved.",
                  "type": "string"
                },
                "scope": {
                  "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be moved.",
                  "type": "string"
                },
                "newNetwork": {
                  "description": "The new network to which the devices will be moved.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["SM"]
      }
    },
    "/networks/{network_id}/sm/profiles": {
      "get": {
        "summary": "List all the profiles in the network",
        "description": "List all the profiles in the network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/profiles'\n```",
        "operationId": "getNetworksNetwork_idSmProfiles",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "profiles": [
                  {
                    "id": "1234",
                    "payload_display_name": "API Profile",
                    "payload_identifier": "com.meraki.sm.1",
                    "payload_description": "API docs test",
                    "scope": "some",
                    "tags": ["tag1", "tag2"],
                    "wifis": [],
                    "payload_types": ["Privacy", "Document"]
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["SM"]
      }
    },
    "/networks/{network_id}/sm/{id}/cellularUsageHistory": {
      "get": {
        "summary": "Return the client's daily cellular data usage history. Usage data is in kilobytes.",
        "description": "Return the client's daily cellular data usage history. Usage data is in kilobytes.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/[id]/cellularUsageHistory'\n```",
        "operationId": "getNetworksNetwork_idSmIdCellularusagehistory",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "sent": 138,
                "recv": 61,
                "ts": 1526087474
              }
            }
          }
        },
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["SM"]
      }
    },
    "/networks/{network_id}/sm/{id}/performanceHistory": {
      "get": {
        "summary": "Return historical records of various Systems Manager client metrics for desktop devices.",
        "description": "Return historical records of various Systems Manager client metrics for desktop devices.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/[id]/performanceHistory'\n```",
        "operationId": "getNetworksNetwork_idSmIdPerformancehistory",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "cpuPercentUsed": 0.95,
                  "memFree": 1024,
                  "memWired": 4096,
                  "memActive": 1024,
                  "memInactive": 2048,
                  "networkSent": 512,
                  "networkReceived": 512,
                  "swapUsed": 768,
                  "diskUsage": {
                    "c": {
                      "used": 2048,
                      "space": 9096
                    }
                  },
                  "ts": 1526087474
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "perPage": {
                  "description": "The number of entries per page returned",
                  "type": "string"
                },
                "startingAfter": {
                  "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it.",
                  "type": "string"
                },
                "endingBefore": {
                  "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["SM"]
      }
    },
    "/networks/{network_id}/sm/{id}/desktopLogs": {
      "get": {
        "summary": "Return historical records of various Systems Manager network connection details for desktop devices.",
        "description": "Return historical records of various Systems Manager network connection details for desktop devices.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/[id]/desktopLogs'\n```",
        "operationId": "getNetworksNetwork_idSmIdDesktoplogs",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "measuredAt": 1526087474,
                  "user": "milesmeraki",
                  "networkDevice": "NIC",
                  "networkDriver": "Driver",
                  "wifiChannel": "11",
                  "wifiAuth": "wpa-psk",
                  "wifiBssid": "00:11:22:33:44:55",
                  "wifiSsid": "ssid",
                  "wifiRssi": "-11",
                  "wifiNoise": "-99",
                  "dhcpServer": "1.2.3.4",
                  "ip": "1.2.3.4",
                  "networkMTU": "1500",
                  "subnet": "192.168.1.0/24",
                  "gateway": "1.2.3.5",
                  "publicIP": "123.123.123.1",
                  "dnsServer": "8",
                  "ts": 1526087474
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "perPage": {
                  "description": "The number of entries per page returned",
                  "type": "string"
                },
                "startingAfter": {
                  "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it.",
                  "type": "string"
                },
                "endingBefore": {
                  "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["SM"]
      }
    },
    "/networks/{network_id}/sm/{id}/deviceCommandLogs": {
      "get": {
        "summary": "    Return historical records of commands sent to Systems Manager devices.\n    <p>Note that this will include the name of the Dashboard user who initiated the command if it was generated\n    by a Dashboard admin rather than the automatic behavior of the system; you may wish to filter this out\n    of any reports.</p>\n",
        "description": "    Return historical records of commands sent to Systems Manager devices.\n    <p>Note that this will include the name of the Dashboard user who initiated the command if it was generated\n    by a Dashboard admin rather than the automatic behavior of the system; you may wish to filter this out\n    of any reports.</p>\n\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/[id]/deviceCommandLogs'\n```",
        "operationId": "getNetworksNetwork_idSmIdDevicecommandlogs",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "action": "UpdateProfile",
                "name": "My profile",
                "details": "{}",
                "dashboardUser": "Miles Meraki",
                "ts": 1526087474
              }
            }
          }
        },
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "perPage": {
                  "description": "The number of entries per page returned",
                  "type": "string"
                },
                "startingAfter": {
                  "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it.",
                  "type": "string"
                },
                "endingBefore": {
                  "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["SM"]
      }
    },
    "/networks/{network_id}/sm/{id}/connectivity": {
      "get": {
        "summary": "Returns historical connectivity data (whether a device is regularly checking in to Dashboard).",
        "description": "Returns historical connectivity data (whether a device is regularly checking in to Dashboard).\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[network_id]/sm/[id]/connectivity'\n```",
        "operationId": "getNetworksNetwork_idSmIdConnectivity",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "firstSeenAt": 1518365681,
                "lastSeenAt": 1526087474
              }
            }
          }
        },
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "perPage": {
                  "description": "The number of entries per page returned",
                  "type": "string"
                },
                "startingAfter": {
                  "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it.",
                  "type": "string"
                },
                "endingBefore": {
                  "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["SM"]
      }
    },
    "/networks/{id}/splashLoginAttempts": {
      "get": {
        "summary": "List the splash login attempts for a network",
        "description": "List the splash login attempts for a network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[id]/splashLoginAttempts?timespan=7200'\n```",
        "operationId": "getNetworksIdSplashloginattempts",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "name": "Miles Meraki",
                  "login": "miles@meraki.com",
                  "ssid": "My SSID",
                  "loginAt": 1518365681,
                  "gatewayDeviceMac": "00:11:22:33:44:55",
                  "clientMac": "22:33:44:55:66:77",
                  "clientId": "k74272e",
                  "authorization": "success"
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "ssidNumber": {
                  "description": "Only return the login attempts for the specified SSID",
                  "type": "string"
                },
                "loginIdentifier": {
                  "description": "The username, email, or phone number used during login",
                  "type": "string"
                },
                "timespan": {
                  "description": "The timespan, in seconds, for the login attempts. The period will be from [timespan] seconds ago until now. The maximum timespan is 3 months",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Splash login attempts"]
      }
    },
    "/networks/{networkId}/ssids/{number}/splashSettings": {
      "get": {
        "summary": "Display the splash page settings for the given SSID",
        "description": "Display the splash page settings for the given SSID\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/ssids/[number]/splashSettings'\n```",
        "operationId": "getNetworksNetworkidSsidsNumberSplashsettings",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "ssidNumber": 0,
                "splashPage": "Click-through splash page",
                "splashUrl": "https://www.custom_splash_url.com",
                "useSplashUrl": true
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "number",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Splash settings"]
      },
      "put": {
        "summary": "Modify the splash page settings for the given SSID",
        "description": "Modify the splash page settings for the given SSID\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"splashUrl\":\"https://www.custom_splash_url.com\",\"useSplashUrl\":true}' 'https://api.meraki.com/api/v0/networks/[networkId]/ssids/[number]/splashSettings'\n```",
        "operationId": "putNetworksNetworkidSsidsNumberSplashsettings",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "ssidNumber": 0,
                "splashPage": "Click-through splash page",
                "splashUrl": "https://www.custom_splash_url.com",
                "useSplashUrl": true
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "number",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "splashUrl": {
                  "description": "The custom splash URL of the click-through splash page. Optional. Note that the URL can be configured without necessarily being used. In order to enable the custom URL, see 'useSplashUrl'",
                  "type": "string"
                },
                "useSplashUrl": {
                  "description": "Boolean indicating whether the user will be redirected to the custom splash url. A custom splash URL must be set if this is true. Optional. Note that depending on your SSID's access control settings, it may not be possible to use the custom splash URL.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Splash settings"]
      }
    },
    "/networks/{networkId}/ssids": {
      "get": {
        "summary": "List the SSIDs in a network. Supports networks with access points or wireless-enabled security appliances and teleworker gateways.",
        "description": "List the SSIDs in a network. Supports networks with access points or wireless-enabled security appliances and teleworker gateways.\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/ssids'\n```",
        "operationId": "getNetworksNetworkidSsids",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "number": 0,
                  "name": "My SSID",
                  "enabled": true,
                  "splashPage": "Click-through splash page",
                  "ssidAdminAccessible": false,
                  "authMode": "open",
                  "ipAssignmentMode": "NAT mode",
                  "bandSelection": "5 GHz band only",
                  "perClientBandwidthLimitUp": 0,
                  "perClientBandwidthLimitDown": 0
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["SSIDs"]
      }
    },
    "/networks/{networkId}/ssids/{number}": {
      "get": {
        "summary": "Return a single SSID",
        "description": "Return a single SSID\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/ssids/[number]'\n```",
        "operationId": "getNetworksNetworkidSsidsNumber",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "number": 0,
                "name": "My SSID",
                "enabled": true,
                "splashPage": "Click-through splash page",
                "ssidAdminAccessible": false,
                "authMode": "open",
                "ipAssignmentMode": "NAT mode",
                "bandSelection": "5 GHz band only",
                "perClientBandwidthLimitUp": 0,
                "perClientBandwidthLimitDown": 0
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "number",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["SSIDs"]
      },
      "put": {
        "summary": "Update the attributes of an SSID",
        "description": "Update the attributes of an SSID\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"name\":\"My SSID\",\"enabled\":true}' 'https://api.meraki.com/api/v0/networks/[networkId]/ssids/[number]'\n```",
        "operationId": "putNetworksNetworkidSsidsNumber",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "number": 0,
                "name": "My SSID",
                "enabled": true,
                "splashPage": "Click-through splash page",
                "ssidAdminAccessible": false,
                "authMode": "open",
                "ipAssignmentMode": "NAT mode",
                "bandSelection": "5 GHz band only",
                "perClientBandwidthLimitUp": 0,
                "perClientBandwidthLimitDown": 0
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "number",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of an SSID",
                  "type": "string"
                },
                "enabled": {
                  "description": "Whether or not an SSID is enabled",
                  "type": "string"
                },
                "authMode": {
                  "description": "The association control method for the SSID ('open', 'psk', 'open-with-radius', '8021x-meraki', '8021x-radius')",
                  "type": "string"
                },
                "encryptionMode": {
                  "description": "The psk encryption mode for the SSID ('wpa', 'wep', 'wpa-eap')",
                  "type": "string"
                },
                "psk": {
                  "description": "The passkey for the SSID. This param is only valid if the authMode is 'psk'",
                  "type": "string"
                },
                "wpaEncryptionMode": {
                  "description": "The types of WPA encryption. ('WPA1 and WPA2', 'WPA2 only')",
                  "type": "string"
                },
                "splashPage": {
                  "description": "The type of splash page for the SSID ('None', 'Click-through splash page', 'Billing', 'Password-protected with Meraki RADIUS', 'Password-protected with custom RADIUS', 'Password-protected with Active Directory', 'Password-protected with LDAP', 'SMS authentication', 'Systems Manager Sentry', 'Facebook Wi-Fi', 'Google OAuth', 'Sponsored guest'). This attribute is not supported for template children.",
                  "type": "string"
                },
                "radiusServers": {
                  "description": "The RADIUS 802.1x servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius'",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "host": {
                        "description": "IP address of your RADIUS server",
                        "type": "string"
                      },
                      "port": {
                        "description": "UDP port the RADIUS server listens on for Access-requests",
                        "type": "string"
                      },
                      "secret": {
                        "description": "RADIUS client shared secret",
                        "type": "string"
                      }
                    }
                  }
                },
                "radiusCoaEnabled": {
                  "description": "If true, Meraki devices will act as a RADIUS Dynamic Authorization Server and will respond to RADIUS Change-of-Authorization and Disconnect messages sent by the RADIUS server.",
                  "type": "string"
                },
                "radiusFailoverPolicy": {
                  "description": "This policy determines how authentication requests should be handled in the event that all of the configured RADIUS servers are unreachable ('Deny access', 'Allow access')",
                  "type": "string"
                },
                "radiusLoadBalancingPolicy": {
                  "description": "This policy determines which RADIUS server will be contacted first in an authentication attempt and the ordering of any necessary retry attempts ('Strict priority order', 'Round robin')",
                  "type": "string"
                },
                "radiusAccountingEnabled": {
                  "description": "Whether or not RADIUS accounting is enabled. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius'",
                  "type": "string"
                },
                "radiusAccountingServers": {
                  "description": "The RADIUS accounting 802.1x servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius' and radiusAccountingEnabled is 'true'",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "host": {
                        "description": "IP address to which the APs will send RADIUS accounting messages",
                        "type": "string"
                      },
                      "port": {
                        "description": "Port on the RADIUS server that is listening for accounting messages",
                        "type": "string"
                      },
                      "secret": {
                        "description": "Shared key used to authenticate messages between the APs and RADIUS server",
                        "type": "string"
                      }
                    }
                  }
                },
                "radiusAttributeForGroupPolicies": {
                  "description": "Specify the RADIUS attribute used to look up group policies. Access points must receive this attribute in the RADIUS Access-Accept message. The value of the attribute must match the group policy name configured on this page (Filter-Id, Reply-Message, Airespace-ACL-Name, Aruba-User-Role)",
                  "type": "string"
                },
                "ipAssignmentMode": {
                  "description": "The client IP assignment mode ('NAT mode', 'Bridge mode', 'Layer 3 roaming', 'Layer 3 roaming with a concentrator', 'VPN')",
                  "type": "string"
                },
                "useVlanTagging": {
                  "description": "Direct trafic to use specific VLANs. This param is only valid with 'Bridge mode' and 'Layer 3 roaming'",
                  "type": "string"
                },
                "concentratorNetworkId": {
                  "description": "The concentrator to use for 'Layer 3 roaming with a concentrator' or 'VPN'.",
                  "type": "string"
                },
                "vlanId": {
                  "description": "The VLAN ID used for VLAN tagging. This param is only valid with 'Layer 3 roaming with a concentrator' and 'VPN'",
                  "type": "string"
                },
                "defaultVlanId": {
                  "description": "The default VLAN ID used for 'all other APs'. This param is only valid with 'Bridge mode' and 'Layer 3 roaming'",
                  "type": "string"
                },
                "apTagsAndVlanIds": {
                  "description": "The list of tags and VLAN IDs used for VLAN tagging. This param is only valid with 'Bridge mode', 'Layer 3 roaming'",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "tags": {
                        "description": "Comma-separated list of AP tags",
                        "type": "string"
                      },
                      "vlanId": {
                        "description": "Numerical identifier that is assigned to the VLAN",
                        "type": "string"
                      }
                    }
                  }
                },
                "walledGardenEnabled": {
                  "description": "Allow access to a configurable list of IP ranges, which users may access prior to sign-on.",
                  "type": "string"
                },
                "walledGardenRanges": {
                  "description": "Specify your walled garden by entering space-separated addresses, ranges using CIDR notation, domain names, and domain wildcards (e.g. 192.168.1.1/24 192.168.37.10/32 www.yahoo.com *.google.com). Meraki's splash page is automatically included in your walled garden.",
                  "type": "string"
                },
                "radiusOverride": {
                  "description": "If true, the RADIUS response can override VLAN tag. This is not valid with NAT mode client IP assignment.",
                  "type": "string"
                },
                "minBitrate": {
                  "description": "The minimum bitrate in Mbps. (1, 2, 5.5, 6, 9, 11, 12, 18, 24, 36, 48, 54)",
                  "type": "string"
                },
                "bandSelection": {
                  "description": "The client-serving radio frequencies. (Dual band operation, 5 GHz band only, Dual band operation with Band Steering)",
                  "type": "string"
                },
                "perClientBandwidthLimitUp": {
                  "description": "The upload bandwidth limit in Kbps. (0 represents no limit.)",
                  "type": "string"
                },
                "perClientBandwidthLimitDown": {
                  "description": "The download bandwidth limit in Kbps. (0 represents no limit.)",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["SSIDs"]
      }
    },
    "/networks/{networkId}/switch/settings": {
      "get": {
        "summary": "Returns the switch network settings",
        "description": "Returns the switch network settings\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/switch/settings'\n```",
        "operationId": "getNetworksNetworkidSwitchSettings",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "networkId": "N_24329156",
                "useCombinedPower": false,
                "powerExceptions": [
                  {
                    "serial": "Q234-ABCD-0001",
                    "powerType": "redundant"
                  },
                  {
                    "serial": "Q234-ABCD-0002",
                    "powerType": "combined"
                  },
                  {
                    "serial": "Q234-ABCD-0003",
                    "powerType": "redundant"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Switch settings"]
      },
      "put": {
        "summary": "Update switch network settings",
        "description": "Update switch network settings\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"useCombinedPower\":true,\"powerExceptions\":[{\"serial\":\"Q234-ABCD-0001\",\"powerType\":\"redundant\"},{\"serial\":\"Q234-ABCD-0002\",\"powerType\":\"combined\"},{\"serial\":\"Q234-ABCD-0003\",\"powerType\":\"combined\"},{\"serial\":\"Q234-ABCD-0004\",\"powerType\":\"useNetworkSetting\"}]}' 'https://api.meraki.com/api/v0/networks/[networkId]/switch/settings'\n```",
        "operationId": "putNetworksNetworkidSwitchSettings",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "useCombinedPower": true,
                "powerExceptions": [
                  {
                    "serial": "Q234-ABCD-0001",
                    "powerType": "redundant"
                  },
                  {
                    "serial": "Q234-ABCD-0002",
                    "powerType": "combined"
                  },
                  {
                    "serial": "Q234-ABCD-0003",
                    "powerType": "combined"
                  },
                  {
                    "serial": "Q234-ABCD-0004",
                    "powerType": "useNetworkSetting"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "useCombinedPower": {
                  "description": "The behavior of secondary power supplies on supported devices (\"redundant\", \"combined\")",
                  "type": "string"
                },
                "powerExceptions": {
                  "description": "Exceptions on a per switch basis to \"useCombinedPower\"",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "serial": {
                        "description": "Serial number of the switch",
                        "type": "string"
                      },
                      "powerType": {
                        "description": "Per switch exception (combined, redundant, useNetworkSetting)",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "tags": ["Switch settings"]
      }
    },
    "/devices/{serial}/switchPorts": {
      "get": {
        "summary": "List the switch ports for a switch",
        "description": "List the switch ports for a switch\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/devices/[serial]/switchPorts'\n```",
        "operationId": "getDevicesSerialSwitchports",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "number": 1,
                  "name": "My switch port",
                  "tags": "tag1 tag2",
                  "enabled": true,
                  "poeEnabled": true,
                  "type": "access",
                  "vlan": 10,
                  "voiceVlan": 20,
                  "isolationEnabled": false,
                  "rstpEnabled": true,
                  "stpGuard": "disabled",
                  "accessPolicyNumber": "1234",
                  "linkNegotiation": "Auto negotiate"
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Switch ports"]
      }
    },
    "/devices/{serial}/switchPorts/{number}": {
      "get": {
        "summary": "Return a switch port",
        "description": "Return a switch port\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/devices/[serial]/switchPorts/[number]'\n```",
        "operationId": "getDevicesSerialSwitchportsNumber",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "number": 1,
                "name": "My switch port",
                "tags": "tag1 tag2",
                "enabled": true,
                "poeEnabled": true,
                "type": "access",
                "vlan": 10,
                "voiceVlan": 20,
                "isolationEnabled": false,
                "rstpEnabled": true,
                "stpGuard": "disabled",
                "accessPolicyNumber": "1234",
                "linkNegotiation": "Auto negotiate"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "number",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Switch ports"]
      },
      "put": {
        "summary": "Update a switch port",
        "description": "Update a switch port\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT 'https://api.meraki.com/api/v0/devices/[serial]/switchPorts/[number]'\n```",
        "operationId": "putDevicesSerialSwitchportsNumber",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "number": 1,
                "name": "My switch port",
                "tags": "tag1 tag2",
                "enabled": true,
                "poeEnabled": true,
                "type": "access",
                "vlan": 10,
                "voiceVlan": 20,
                "isolationEnabled": false,
                "rstpEnabled": true,
                "stpGuard": "disabled",
                "accessPolicyNumber": "1234",
                "linkNegotiation": "Auto negotiate"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "number",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the switch port",
                  "type": "string"
                },
                "tags": {
                  "description": "The tags of the switch port",
                  "type": "string"
                },
                "enabled": {
                  "description": "The status of the switch port",
                  "type": "string"
                },
                "type": {
                  "description": "The type of the switch port (\"access\" or \"trunk\")",
                  "type": "string"
                },
                "vlan": {
                  "description": "The VLAN of the switch port",
                  "type": "string"
                },
                "voiceVlan": {
                  "description": "The voice VLAN of the switch port. Only applicable to access ports.",
                  "type": "string"
                },
                "allowedVlans": {
                  "description": "The VLANs allowed on the switch port. Only applicable to trunk ports.",
                  "type": "string"
                },
                "poeEnabled": {
                  "description": "The PoE status of the switch port",
                  "type": "string"
                },
                "isolationEnabled": {
                  "description": "The isolation status of the switch port",
                  "type": "string"
                },
                "rstpEnabled": {
                  "description": "The rapid spanning tree protocol status",
                  "type": "string"
                },
                "stpGuard": {
                  "description": "The state of the STP guard (\"disabled\", \"Root guard\", \"BPDU guard\", \"Loop guard\")",
                  "type": "string"
                },
                "accessPolicyNumber": {
                  "description": "The number of the access policy of the switch port. Only applicable to access ports.",
                  "type": "string"
                },
                "linkNegotiation": {
                  "description": "The link speed for the switch port",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Switch ports"]
      }
    },
    "/networks/{networkId}/syslogServers": {
      "get": {
        "summary": "List the syslog servers for a network",
        "description": "List the syslog servers for a network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/syslogServers'\n```",
        "operationId": "getNetworksNetworkidSyslogservers",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "host": "1.2.3.4",
                  "port": 443,
                  "roles": ["Wireless event log", "URLs"]
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Syslog servers"]
      },
      "put": {
        "summary": "Update the syslog servers for a network",
        "description": "Update the syslog servers for a network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"servers\":[{\"host\":\"1.2.3.4\",\"port\":443,\"roles\":[\"Wireless event log\",\"URLs\"]}]}' 'https://api.meraki.com/api/v0/networks/[networkId]/syslogServers'\n```",
        "operationId": "putNetworksNetworkidSyslogservers",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "host": "1.2.3.4",
                  "port": 443,
                  "roles": ["Wireless event log", "URLs"]
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "servers": {
                  "description": "A list of the syslog servers for this network",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "host": {
                        "description": "The IP address of the syslog server",
                        "type": "string"
                      },
                      "port": {
                        "description": "The port of the syslog server",
                        "type": "string"
                      },
                      "roles": {
                        "description": "A list of roles for the syslog server. Options (case-insensitive): 'Wireless event log', 'Appliance event log', 'Switch event log', 'Air Marshal events', 'Flows', 'URLs', 'IDS alerts', 'Security events'",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "tags": ["Syslog servers"]
      }
    },
    "/networks/{networkId}/contentFiltering/categories": {
      "get": {
        "summary": "List all available content filtering categories for an MX network",
        "description": "List all available content filtering categories for an MX network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/contentFiltering/categories'\n```",
        "operationId": "getNetworksNetworkidContentfilteringCategories",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "categories": [
                  {
                    "id": "meraki:contentFiltering/category/1",
                    "name": "Real Estate"
                  },
                  {
                    "id": "meraki:contentFiltering/category/3",
                    "name": "Financial Services"
                  },
                  "...",
                  {
                    "id": "meraki:contentFiltering/category/11",
                    "name": "Adult and Pornography"
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Content filtering categories"]
      }
    },
    "/networks/{networkId}/contentFiltering": {
      "get": {
        "summary": "Return the content filtering settings for an MX network",
        "description": "Return the content filtering settings for an MX network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/contentFiltering'\n```",
        "operationId": "getNetworksNetworkidContentfiltering",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "allowedUrlPatterns": [
                  "http://www.example.org",
                  "http://help.com.au"
                ],
                "blockedUrlPatterns": [
                  "http://www.example.com",
                  "http://www.betting.com"
                ],
                "blockedUrlCategories": [
                  {
                    "id": "meraki:contentFiltering/category/1",
                    "name": "Real Estate"
                  },
                  {
                    "id": "meraki:contentFiltering/category/7",
                    "name": "Shopping"
                  }
                ],
                "urlCategoryListSize": "topSites"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Content filtering rules"]
      },
      "put": {
        "summary": "Update the content filtering settings for an MX network",
        "description": "Update the content filtering settings for an MX network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"allowedUrlPatterns\":[\"http://www.example.org\",\"http://help.com.au\"],\"blockedUrlPatterns\":[\"http://www.example.com\",\"http://www.betting.com\"],\"blockedUrlCategories\":[{\"id\":\"meraki:contentFiltering/category/1\",\"name\":\"Real Estate\"},{\"id\":\"meraki:contentFiltering/category/7\",\"name\":\"Shopping\"}],\"urlCategoryListSize\":\"topSites\"}' 'https://api.meraki.com/api/v0/networks/[networkId]/contentFiltering'\n```",
        "operationId": "putNetworksNetworkidContentfiltering",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "allowedUrlPatterns": [
                  "http://www.example.org",
                  "http://help.com.au"
                ],
                "blockedUrlPatterns": [
                  "http://www.example.com",
                  "http://www.betting.com"
                ],
                "blockedUrlCategories": [
                  {
                    "id": "meraki:contentFiltering/category/1",
                    "name": "Real Estate"
                  },
                  {
                    "id": "meraki:contentFiltering/category/7",
                    "name": "Shopping"
                  }
                ],
                "urlCategoryListSize": "topSites"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "allowedUrlPatterns": {
                  "description": "A whitelist of URL patterns to allow",
                  "type": "string"
                },
                "blockedUrlPatterns": {
                  "description": "A blacklist of URL patterns to block",
                  "type": "string"
                },
                "blockedUrlCategories": {
                  "description": "A list of URL categories to block",
                  "type": "string"
                },
                "urlCategoryListSize": {
                  "description": "URL category list size which is either 'topSites' or 'fullList'",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Content filtering rules"]
      }
    },
    "/networks/{networkId}/firewalledServices": {
      "get": {
        "summary": "List the appliance services and their accessibility rules",
        "description": "List the appliance services and their accessibility rules\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/firewalledServices'\n```",
        "operationId": "getNetworksNetworkidFirewalledservices",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "service": "web",
                  "access": "restricted",
                  "allowedIps": ["123.123.123.1"]
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Firewalled services"]
      }
    },
    "/networks/{networkId}/firewalledServices/{service}": {
      "get": {
        "summary": "Return the accessibility settings of the given service ('ICMP', 'web', or 'SNMP')",
        "description": "Return the accessibility settings of the given service ('ICMP', 'web', or 'SNMP')\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/firewalledServices/[service]'\n```",
        "operationId": "getNetworksNetworkidFirewalledservicesService",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "service": "web",
                "access": "restricted",
                "allowedIps": ["123.123.123.1"]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "service",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Firewalled services"]
      },
      "put": {
        "summary": "Updates the accessibility settings for the given service ('ICMP', 'web', or 'SNMP')",
        "description": "Updates the accessibility settings for the given service ('ICMP', 'web', or 'SNMP')\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"access\":\"restricted\",\"allowedIps\":[\"123.123.123.1\"]}' 'https://api.meraki.com/api/v0/networks/[networkId]/firewalledServices/[service]'\n```",
        "operationId": "putNetworksNetworkidFirewalledservicesService",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "service": "web",
                "access": "restricted",
                "allowedIps": ["123.123.123.1"]
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "service",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "access": {
                  "description": "A string indicating the rule for which IPs are allowed to use the specified service. Acceptable values are \"blocked\" (no remote IPs can access the service), \"restricted\" (only whitelisted IPs can access the service), and \"unrestriced\" (any remote IP can access the service). This field is required",
                  "type": "string"
                },
                "allowedIps": {
                  "description": "An array of whitelisted IPs that can access the service. This field is required if \"access\" is set to \"restricted\". Otherwise this field is ignored",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Firewalled services"]
      }
    },
    "/networks/{networkId}/oneToManyNatRules": {
      "get": {
        "summary": "Return the 1:Many NAT mapping rules for an MX network",
        "description": "Return the 1:Many NAT mapping rules for an MX network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/oneToManyNatRules'\n```",
        "operationId": "getNetworksNetworkidOnetomanynatrules",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "publicIp": "146.11.11.13",
                  "uplink": "internet1",
                  "portRules": [
                    {
                      "name": "Rule 1",
                      "protocol": "tcp",
                      "publicPort": "9443",
                      "localIp": "192.168.128.1",
                      "localPort": "443",
                      "allowedIps": ["any"]
                    },
                    {
                      "name": "Rule 2",
                      "protocol": "tcp",
                      "publicPort": "8080",
                      "localIp": "192.168.128.1",
                      "localPort": "80",
                      "allowedIps": ["10.82.110.0/24", "10.82.111.0/24"]
                    }
                  ]
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["MX 1:Many NAT rules"]
      },
      "put": {
        "summary": "Set the 1:Many NAT mapping rules for an MX network",
        "description": "Set the 1:Many NAT mapping rules for an MX network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"rules\":[{\"publicIp\":\"146.11.11.13\",\"uplink\":\"internet1\",\"portRules\":[{\"name\":\"Rule 1\",\"protocol\":\"tcp\",\"publicPort\":\"9443\",\"localIp\":\"192.168.128.1\",\"localPort\":\"443\",\"allowedIps\":[\"any\"]},{\"name\":\"Rule 2\",\"protocol\":\"tcp\",\"publicPort\":\"8080\",\"localIp\":\"192.168.128.1\",\"localPort\":\"80\",\"allowedIps\":[\"10.82.110.0/24\",\"10.82.111.0/24\"]}]}]}' 'https://api.meraki.com/api/v0/networks/[networkId]/oneToManyNatRules'\n```",
        "operationId": "putNetworksNetworkidOnetomanynatrules",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "publicIp": "146.11.11.13",
                  "uplink": "internet1",
                  "portRules": [
                    {
                      "name": "Rule 1",
                      "protocol": "tcp",
                      "publicPort": "9443",
                      "localIp": "192.168.128.1",
                      "localPort": "443",
                      "allowedIps": ["any"]
                    },
                    {
                      "name": "Rule 2",
                      "protocol": "tcp",
                      "publicPort": "8080",
                      "localIp": "192.168.128.1",
                      "localPort": "80",
                      "allowedIps": ["10.82.110.0/24", "10.82.111.0/24"]
                    }
                  ]
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "rules": {
                  "description": "An array of 1:Many nat rules",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "publicIp": {
                        "description": "The IP address that will be used to access the internal resource from the WAN",
                        "type": "string"
                      },
                      "uplink": {
                        "description": "The physical WAN interface on which the traffic will arrive ('internet1', 'internet2' if available, or 'Both')",
                        "type": "string"
                      },
                      "portRules": {
                        "description": "An array of associated forwarding rules",
                        "type": "string"
                      },
                      "name": {
                        "description": "A description of the rule",
                        "type": "string"
                      },
                      "protocol": {
                        "description": "'tcp' or 'udp'",
                        "type": "string"
                      },
                      "publicPort": {
                        "description": "Destination port of the traffic that is arriving on the WAN",
                        "type": "string"
                      },
                      "localIp": {
                        "description": "Local IP address to which traffic will be forwarded",
                        "type": "string"
                      },
                      "localPort": {
                        "description": "Destination port of the forwarded traffic that will be sent from the MX to the specified host on the LAN. If you simply wish to forward the traffic without translating the port, this should be the same as the Public port",
                        "type": "string"
                      },
                      "allowedIps": {
                        "description": "Remote IP addresses or ranges that are permitted to access the internal resource via this port forwarding rule, or 'any'",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "tags": ["MX 1:Many NAT rules"]
      }
    },
    "/networks/{networkId}/oneToOneNatRules": {
      "get": {
        "summary": "Return the 1:1 NAT mapping rules for an MX network",
        "description": "Return the 1:1 NAT mapping rules for an MX network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/oneToOneNatRules'\n```",
        "operationId": "getNetworksNetworkidOnetoonenatrules",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "name": "Service behind NAT",
                  "lanIp": "192.168.128.22",
                  "publicIp": "146.12.3.33",
                  "uplink": "internet1",
                  "allowedInbound": [
                    {
                      "protocol": "tcp",
                      "destinationPorts": ["80"],
                      "allowedIps": ["10.82.112.0/24", "10.82.0.0/16"]
                    },
                    {
                      "protocol": "udp",
                      "destinationPorts": ["8080"],
                      "allowedIps": ["10.81.110.5", "10.81.0.0/16"]
                    }
                  ]
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["MX 1:1 NAT rules"]
      },
      "put": {
        "summary": "Set the 1:1 NAT mapping rules for an MX network",
        "description": "Set the 1:1 NAT mapping rules for an MX network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"rules\":[{\"name\":\"Service behind NAT\",\"lanIp\":\"192.168.128.22\",\"publicIp\":\"146.12.3.33\",\"uplink\":\"internet1\",\"allowedInbound\":[{\"protocol\":\"tcp\",\"destinationPorts\":[\"80\"],\"allowedIps\":[\"10.82.112.0/24\",\"10.82.0.0/16\"]},{\"protocol\":\"udp\",\"destinationPorts\":[\"8080\"],\"allowedIps\":[\"10.81.110.5\",\"10.81.0.0/16\"]}]}]}' 'https://api.meraki.com/api/v0/networks/[networkId]/oneToOneNatRules'\n```",
        "operationId": "putNetworksNetworkidOnetoonenatrules",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "name": "Service behind NAT",
                  "lanIp": "192.168.128.22",
                  "publicIp": "146.12.3.33",
                  "uplink": "internet1",
                  "allowedInbound": [
                    {
                      "protocol": "tcp",
                      "destinationPorts": ["80"],
                      "allowedIps": ["10.82.112.0/24", "10.82.0.0/16"]
                    },
                    {
                      "protocol": "udp",
                      "destinationPorts": ["8080"],
                      "allowedIps": ["10.81.110.5", "10.81.0.0/16"]
                    }
                  ]
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "rules": {
                  "description": "An array of 1:1 nat rules",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "A descriptive name for the rule",
                        "type": "string"
                      },
                      "publicIp": {
                        "description": "The IP address that will be used to access the internal resource from the WAN",
                        "type": "string"
                      },
                      "lanIp": {
                        "description": "The IP address of the server or device that hosts the internal resource that you wish to make available on the WAN",
                        "type": "string"
                      },
                      "uplink": {
                        "description": "The physical WAN interface on which the traffic will arrive ('internet1', 'internet2' if available, or 'Both')",
                        "type": "string"
                      },
                      "allowedInbound": {
                        "description": "The ports this mapping will provide access on, and the remote IPs that will be allowed access to the resource",
                        "type": "string"
                      },
                      "protocol": {
                        "description": "Either of the following: 'tcp', 'udp', 'icmp-ping' or 'any'",
                        "type": "string"
                      },
                      "destinationPorts": {
                        "description": "An array of ports or port ranges that will be forwarded to the host on the LAN",
                        "type": "string"
                      },
                      "allowedIps": {
                        "description": "An array of ranges of WAN IP addresses that are allowed to make inbound connections on the specified ports or port ranges, or 'any'",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "tags": ["MX 1:1 NAT rules"]
      }
    },
    "/networks/{networkId}/portForwardingRules": {
      "get": {
        "summary": "Return the port forwarding rules for an MX network",
        "description": "Return the port forwarding rules for an MX network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/portForwardingRules'\n```",
        "operationId": "getNetworksNetworkidPortforwardingrules",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "lanIp": "192.168.128.1",
                  "allowedIps": ["any"],
                  "name": "Description of Port Forwarding Rule",
                  "protocol": "tcp",
                  "publicPort": "8100-8101",
                  "localPort": "442-443",
                  "inet": "Both"
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["MX port forwarding rules"]
      },
      "put": {
        "summary": "Update the port forwarding rules for an MX network",
        "description": "Update the port forwarding rules for an MX network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"rules\":[{\"lanIp\":\"192.168.128.1\",\"allowedIps\":[\"any\"],\"name\":\"Description of Port Forwarding Rule\",\"protocol\":\"tcp\",\"publicPort\":\"8100-8101\",\"localPort\":\"442-443\",\"inet\":\"Both\"}]}' 'https://api.meraki.com/api/v0/networks/[networkId]/portForwardingRules'\n```",
        "operationId": "putNetworksNetworkidPortforwardingrules",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "lanIp": "192.168.128.1",
                  "allowedIps": ["any"],
                  "name": "Description of Port Forwarding Rule",
                  "protocol": "tcp",
                  "publicPort": "8100-8101",
                  "localPort": "442-443",
                  "inet": "Both"
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "rules": {
                  "description": "An array of port forwarding params",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "A descriptive name for the rule",
                        "type": "string"
                      },
                      "lanIp": {
                        "description": "The IP address of the server or device that hosts the internal resource that you wish to make available on the WAN",
                        "type": "string"
                      },
                      "inet": {
                        "description": "The physical WAN interface on which the traffic will arrive ('internet1', 'internet2' if available, or 'Both')",
                        "type": "string"
                      },
                      "publicPort": {
                        "description": "A port or port ranges that will be forwarded to the host on the LAN",
                        "type": "string"
                      },
                      "localPort": {
                        "description": "A port or port ranges that will receive the forwarded traffic from the WAN",
                        "type": "string"
                      },
                      "allowedIps": {
                        "description": "An array of ranges of WAN IP addresses that are allowed to make inbound connections on the specified ports or port ranges (or any)",
                        "type": "string"
                      },
                      "protocol": {
                        "description": "TCP or UDP",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "tags": ["MX port forwarding rules"]
      }
    },
    "/networks/{networkId}/staticRoutes": {
      "get": {
        "summary": "List the static routes for this network",
        "description": "List the static routes for this network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/staticRoutes'\n```",
        "operationId": "getNetworksNetworkidStaticroutes",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "id": "d7fa4948-7921-4dfa-af6b-ae8b16c20c39",
                  "networkId": "N_24329156",
                  "name": "My route",
                  "gatewayIp": "1.2.3.5",
                  "subnet": "192.168.1.0/24",
                  "fixedIpAssignments": "{}",
                  "reservedIpRanges": "[]",
                  "enabled": true
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Static routes"]
      },
      "post": {
        "summary": "Add a static route",
        "description": "Add a static route\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST --data-binary '{\"name\":\"My route\",\"subnet\":\"192.168.1.0/24\",\"gatewayIp\":\"1.2.3.5\"}' 'https://api.meraki.com/api/v0/networks/[networkId]/staticRoutes'\n```",
        "operationId": "postNetworksNetworkidStaticroutes",
        "responses": {
          "201": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "name": "My route",
                "subnet": "192.168.1.0/24",
                "gatewayIp": "1.2.3.5"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the new static route",
                  "type": "string"
                },
                "subnet": {
                  "description": "The subnet of the static route",
                  "type": "string"
                },
                "gatewayIp": {
                  "description": "The gateway IP (next hop) of the static route",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Static routes"]
      }
    },
    "/networks/{networkId}/staticRoutes/{srId}": {
      "get": {
        "summary": "Return a static route",
        "description": "Return a static route\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/staticRoutes/[srId]'\n```",
        "operationId": "getNetworksNetworkidStaticroutesSrid",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": "d7fa4948-7921-4dfa-af6b-ae8b16c20c39",
                "networkId": "N_24329156",
                "name": "My route",
                "gatewayIp": "1.2.3.5",
                "subnet": "192.168.1.0/24",
                "fixedIpAssignments": "{}",
                "reservedIpRanges": "[]",
                "enabled": true
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "srId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Static routes"]
      },
      "put": {
        "summary": "Update a static route",
        "description": "Update a static route\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"name\":\"My route\",\"subnet\":\"192.168.1.0/24\",\"fixedIpAssignments\":\"{}\",\"reservedIpRanges\":\"[]\"}' 'https://api.meraki.com/api/v0/networks/[networkId]/staticRoutes/[srId]'\n```",
        "operationId": "putNetworksNetworkidStaticroutesSrid",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": "d7fa4948-7921-4dfa-af6b-ae8b16c20c39",
                "networkId": "N_24329156",
                "name": "My route",
                "gatewayIp": "1.2.3.5",
                "subnet": "192.168.1.0/24",
                "fixedIpAssignments": "{}",
                "reservedIpRanges": "[]",
                "enabled": true
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "srId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the static route",
                  "type": "string"
                },
                "subnet": {
                  "description": "The subnet of the static route",
                  "type": "string"
                },
                "gatewayIp": {
                  "description": "The gateway IP (next hop) of the static route",
                  "type": "string"
                },
                "enabled": {
                  "description": "The enabled state of the static route",
                  "type": "string"
                },
                "fixedIpAssignments": {
                  "description": "The DHCP fixed IP assignments on the static route",
                  "type": "string"
                },
                "reservedIpRanges": {
                  "description": "The DHCP reserved IP ranges on the static route",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Static routes"]
      },
      "delete": {
        "summary": "Delete a static route from a network",
        "description": "Delete a static route from a network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X DELETE 'https://api.meraki.com/api/v0/networks/[networkId]/staticRoutes/[srId]'\n```",
        "operationId": "deleteNetworksNetworkidStaticroutesSrid",
        "responses": {
          "204": {
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "srId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["Static routes"]
      }
    },
    "/networks/{networkId}/vlans": {
      "get": {
        "summary": "List the VLANs for this network",
        "description": "List the VLANs for this network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/vlans'\n```",
        "operationId": "getNetworksNetworkidVlans",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "id": "1234",
                  "networkId": "N_24329156",
                  "name": "My VLAN",
                  "applianceIp": "1.2.3.4",
                  "subnet": "192.168.1.0/24",
                  "fixedIpAssignments": "{}",
                  "reservedIpRanges": "[]",
                  "dnsNameservers": "google_dns"
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["VLANs"]
      },
      "post": {
        "summary": "Add a VLAN",
        "description": "Add a VLAN\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X POST --data-binary '{\"id\":\"1234\",\"name\":\"My VLAN\",\"subnet\":\"192.168.1.0/24\",\"applianceIp\":\"1.2.3.4\"}' 'https://api.meraki.com/api/v0/networks/[networkId]/vlans'\n```",
        "operationId": "postNetworksNetworkidVlans",
        "responses": {
          "201": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": "1234",
                "name": "My VLAN",
                "subnet": "192.168.1.0/24",
                "applianceIp": "1.2.3.4"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "The VLAN ID of the new VLAN (must be between 1 and 4094)",
                  "type": "string"
                },
                "name": {
                  "description": "The name of the new VLAN",
                  "type": "string"
                },
                "subnet": {
                  "description": "The subnet of the VLAN",
                  "type": "string"
                },
                "applianceIp": {
                  "description": "The local IP of the appliance on the VLAN",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["VLANs"]
      }
    },
    "/networks/{networkId}/vlans/{vlanId}": {
      "get": {
        "summary": "Return a VLAN",
        "description": "Return a VLAN\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/vlans/[vlanId]'\n```",
        "operationId": "getNetworksNetworkidVlansVlanid",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": "1234",
                "networkId": "N_24329156",
                "name": "My VLAN",
                "applianceIp": "1.2.3.4",
                "subnet": "192.168.1.0/24",
                "fixedIpAssignments": "{}",
                "reservedIpRanges": "[]",
                "dnsNameservers": "google_dns"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "vlanId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["VLANs"]
      },
      "put": {
        "summary": "Update a VLAN",
        "description": "Update a VLAN\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"id\":\"1234\",\"networkId\":\"N_24329156\",\"name\":\"My VLAN\",\"applianceIp\":\"1.2.3.4\",\"subnet\":\"192.168.1.0/24\",\"fixedIpAssignments\":\"{}\",\"reservedIpRanges\":\"[]\",\"dnsNameservers\":\"google_dns\"}' 'https://api.meraki.com/api/v0/networks/[networkId]/vlans/[vlanId]'\n```",
        "operationId": "putNetworksNetworkidVlansVlanid",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "id": "1234",
                "networkId": "N_24329156",
                "name": "My VLAN",
                "applianceIp": "1.2.3.4",
                "subnet": "192.168.1.0/24",
                "fixedIpAssignments": "{}",
                "reservedIpRanges": "[]",
                "dnsNameservers": "google_dns"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "vlanId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the VLAN",
                  "type": "string"
                },
                "subnet": {
                  "description": "The subnet of the VLAN",
                  "type": "string"
                },
                "applianceIp": {
                  "description": "The local IP of the appliance on the VLAN",
                  "type": "string"
                },
                "fixedIpAssignments": {
                  "description": "The DHCP fixed IP assignments on the VLAN",
                  "type": "string"
                },
                "reservedIpRanges": {
                  "description": "The DHCP reserved IP ranges on the VLAN",
                  "type": "string"
                },
                "vpnNatSubnet": {
                  "description": "The translated VPN subnet if VPN and VPN subnet translation are enabled on the VLAN",
                  "type": "string"
                },
                "dnsNameservers": {
                  "description": "The DNS nameservers used for DHCP responses, either \"upstream_dns\", \"google_dns\", \"opendns\", or a newline seperated string of IP addresses or domain names",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["VLANs"]
      },
      "delete": {
        "summary": "Delete a VLAN from a network",
        "description": "Delete a VLAN from a network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X DELETE 'https://api.meraki.com/api/v0/networks/[networkId]/vlans/[vlanId]'\n```",
        "operationId": "deleteNetworksNetworkidVlansVlanid",
        "responses": {
          "204": {
            "description": "Successful operation"
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "vlanId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["VLANs"]
      }
    },
    "/networks/{networkId}/vlansEnabledState": {
      "get": {
        "summary": "Returns the enabled status of VLANs for the network",
        "description": "Returns the enabled status of VLANs for the network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/vlansEnabledState'\n```",
        "operationId": "getNetworksNetworkidVlansenabledstate",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "enabled": true,
                "networkId": "N_24329156"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "tags": ["VLANs"]
      },
      "put": {
        "summary": "Enable/Disable VLANs for the given network",
        "description": "Enable/Disable VLANs for the given network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X PUT --data-binary '{\"enabled\":true}' 'https://api.meraki.com/api/v0/networks/[networkId]/vlansEnabledState'\n```",
        "operationId": "putNetworksNetworkidVlansenabledstate",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "enabled": true,
                "networkId": "N_24329156"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "enabled": {
                  "description": "Boolean indicating whether to enable (true) or disable (false) VLANs for the network",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["VLANs"]
      }
    },
    "/networks/{networkId}/connectionStats": {
      "get": {
        "summary": "Aggregated connectivity info for this network",
        "description": "Aggregated connectivity info for this network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/connectionStats'\n```",
        "operationId": "getNetworksNetworkidConnectionstats",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "assoc": 1,
                "auth": 5,
                "dhcp": 0,
                "dns": 0,
                "success": 51
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "t0": {
                  "description": "Start of the requested time range in seconds since epoch (Required)",
                  "type": "string"
                },
                "t1": {
                  "description": "End of the requested time range in seconds since epoch (Required)",
                  "type": "string"
                },
                "ssid": {
                  "description": "Filter results by SSID",
                  "type": "string"
                },
                "vlan": {
                  "description": "Filter results by VLAN",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Wireless health"]
      }
    },
    "/networks/{networkId}/devices/connectionStats": {
      "get": {
        "summary": "Aggregated connectivity info for this network, grouped by node",
        "description": "Aggregated connectivity info for this network, grouped by node\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/devices/connectionStats'\n```",
        "operationId": "getNetworksNetworkidDevicesConnectionstats",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "serial": "Q2JC-2MJM-FHRD",
                  "connectionStats": {
                    "assoc": 0,
                    "auth": 1,
                    "dhcp": 0,
                    "dns": 0,
                    "success": 43
                  }
                },
                {
                  "serial": "Q2FJ-3SHB-Y2K2",
                  "connectionStats": {
                    "assoc": 1,
                    "auth": 4,
                    "dhcp": 0,
                    "dns": 0,
                    "success": 8
                  }
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "t0": {
                  "description": "Start of the requested time range in seconds since epoch (Required)",
                  "type": "string"
                },
                "t1": {
                  "description": "End of the requested time range in seconds since epoch (Required)",
                  "type": "string"
                },
                "ssid": {
                  "description": "Filter results by SSID",
                  "type": "string"
                },
                "vlan": {
                  "description": "Filter results by VLAN",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Wireless health"]
      }
    },
    "/networks/{networkId}/devices/{serial}/connectionStats": {
      "get": {
        "summary": "Aggregated connectivity info for a given AP on this network",
        "description": "Aggregated connectivity info for a given AP on this network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/devices/[serial]/connectionStats'\n```",
        "operationId": "getNetworksNetworkidDevicesSerialConnectionstats",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "serial": "Q2JC-2MJM-FHRD",
                "connectionStats": {
                  "assoc": 0,
                  "auth": 1,
                  "dhcp": 0,
                  "dns": 0,
                  "success": 43
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "t0": {
                  "description": "Start of the requested time range in seconds since epoch (Required)",
                  "type": "string"
                },
                "t1": {
                  "description": "End of the requested time range in seconds since epoch (Required)",
                  "type": "string"
                },
                "ssid": {
                  "description": "Filter results by SSID",
                  "type": "string"
                },
                "vlan": {
                  "description": "Filter results by VLAN",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Wireless health"]
      }
    },
    "/networks/{networkId}/clients/connectionStats": {
      "get": {
        "summary": "Aggregated connectivity info for this network, grouped by clients",
        "description": "Aggregated connectivity info for this network, grouped by clients\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/clients/connectionStats'\n```",
        "operationId": "getNetworksNetworkidClientsConnectionstats",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "mac": "00:61:71:c8:51:27",
                  "connectionStats": {
                    "assoc": 0,
                    "auth": 4,
                    "dhcp": 0,
                    "dns": 0,
                    "success": 10
                  }
                },
                {
                  "mac": "1c:4d:70:7f:5e:5e",
                  "connectionStats": {
                    "assoc": 0,
                    "auth": 1,
                    "dhcp": 0,
                    "dns": 0,
                    "success": 24
                  }
                },
                {
                  "mac": "1c:4d:70:81:8d:0a",
                  "connectionStats": {
                    "assoc": 1,
                    "auth": 0,
                    "dhcp": 0,
                    "dns": 0,
                    "success": 16
                  }
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "t0": {
                  "description": "Start of the requested time range in seconds since epoch (Required)",
                  "type": "string"
                },
                "t1": {
                  "description": "End of the requested time range in seconds since epoch (Required)",
                  "type": "string"
                },
                "ssid": {
                  "description": "Filter results by SSID",
                  "type": "string"
                },
                "vlan": {
                  "description": "Filter results by VLAN",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Wireless health"]
      }
    },
    "/networks/{networkId}/clients/{clientId}/connectionStats": {
      "get": {
        "summary": "Aggregated connectivity info for a given client on this network",
        "description": "Aggregated connectivity info for a given client on this network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/clients/[clientId]/connectionStats'\n```",
        "operationId": "getNetworksNetworkidClientsClientidConnectionstats",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "mac": "00:61:71:c8:51:27",
                "connectionStats": {
                  "assoc": 0,
                  "auth": 4,
                  "dhcp": 0,
                  "dns": 0,
                  "success": 10
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "clientId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "t0": {
                  "description": "Start of the requested time range in seconds since epoch (Required)",
                  "type": "string"
                },
                "t1": {
                  "description": "End of the requested time range in seconds since epoch (Required)",
                  "type": "string"
                },
                "ssid": {
                  "description": "Filter results by SSID",
                  "type": "string"
                },
                "vlan": {
                  "description": "Filter results by VLAN",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Wireless health"]
      }
    },
    "/networks/{networkId}/latencyStats": {
      "get": {
        "summary": "Aggregated latency info for this network",
        "description": "Aggregated latency info for this network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/latencyStats'\n```",
        "operationId": "getNetworksNetworkidLatencystats",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "backgroundTraffic": {
                  "rawDistribution": {
                    "0": 1234,
                    "1": 2345,
                    "2": 3456,
                    "4": 4567,
                    "8": 5678,
                    "16": 6789,
                    "32": 7890,
                    "64": 8901,
                    "128": 9012,
                    "256": 83,
                    "512": 1234,
                    "1024": 2345,
                    "2048": 9999
                  },
                  "avg": 606.52
                },
                "bestEffortTraffic": "same shape as backgroundTraffic",
                "videoTraffic": "same shape as backgroundTraffic",
                "voiceTraffic": "same shape as backgroundTraffic"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "t0": {
                  "description": "Start of the requested time range in seconds since epoch (Required)",
                  "type": "string"
                },
                "t1": {
                  "description": "End of the requested time range in seconds since epoch (Required)",
                  "type": "string"
                },
                "ssid": {
                  "description": "Filter results by SSID",
                  "type": "string"
                },
                "vlan": {
                  "description": "Filter results by VLAN",
                  "type": "string"
                },
                "fields": {
                  "description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Wireless health"]
      }
    },
    "/networks/{networkId}/devices/latencyStats": {
      "get": {
        "summary": "Aggregated latency info for this network, grouped by node",
        "description": "Aggregated latency info for this network, grouped by node\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/devices/latencyStats'\n```",
        "operationId": "getNetworksNetworkidDevicesLatencystats",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "serial": "Q2JC-2MJM-FHRD",
                  "latencyStats": {
                    "backgroundTraffic": {
                      "rawDistribution": {
                        "0": 1234,
                        "1": 2345,
                        "2": 3456,
                        "4": 4567,
                        "8": 5678,
                        "16": 6789,
                        "32": 7890,
                        "64": 8901,
                        "128": 9012,
                        "256": 83,
                        "512": 1234,
                        "1024": 2345,
                        "2048": 9999
                      },
                      "avg": 606.52
                    },
                    "bestEffortTraffic": "same shape as backgroundTraffic",
                    "videoTraffic": "same shape as backgroundTraffic",
                    "voiceTraffic": "same shape as backgroundTraffic"
                  }
                },
                {
                  "serial": "Q2FJ-3SHB-Y2K2",
                  "latencyStats": {
                    "backgroundTraffic": {
                      "rawDistribution": {
                        "0": 1234,
                        "1": 2345,
                        "2": 3456,
                        "4": 4567,
                        "8": 5678,
                        "16": 6789,
                        "32": 7890,
                        "64": 8901,
                        "128": 9012,
                        "256": 83,
                        "512": 1234,
                        "1024": 2345,
                        "2048": 9999
                      },
                      "avg": 606.52
                    },
                    "bestEffortTraffic": "same shape as backgroundTraffic",
                    "videoTraffic": "same shape as backgroundTraffic",
                    "voiceTraffic": "same shape as backgroundTraffic"
                  }
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "t0": {
                  "description": "Start of the requested time range in seconds since epoch (Required)",
                  "type": "string"
                },
                "t1": {
                  "description": "End of the requested time range in seconds since epoch (Required)",
                  "type": "string"
                },
                "ssid": {
                  "description": "Filter results by SSID",
                  "type": "string"
                },
                "vlan": {
                  "description": "Filter results by VLAN",
                  "type": "string"
                },
                "fields": {
                  "description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Wireless health"]
      }
    },
    "/networks/{networkId}/devices/{serial}/latencyStats": {
      "get": {
        "summary": "Aggregated latency info for a given AP on this network",
        "description": "Aggregated latency info for a given AP on this network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/devices/[serial]/latencyStats'\n```",
        "operationId": "getNetworksNetworkidDevicesSerialLatencystats",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "serial": "Q2JC-2MJM-FHRD",
                "latencyStats": {
                  "backgroundTraffic": {
                    "rawDistribution": {
                      "0": 1234,
                      "1": 2345,
                      "2": 3456,
                      "4": 4567,
                      "8": 5678,
                      "16": 6789,
                      "32": 7890,
                      "64": 8901,
                      "128": 9012,
                      "256": 83,
                      "512": 1234,
                      "1024": 2345,
                      "2048": 9999
                    },
                    "avg": 606.52
                  },
                  "bestEffortTraffic": "same shape as backgroundTraffic",
                  "videoTraffic": "same shape as backgroundTraffic",
                  "voiceTraffic": "same shape as backgroundTraffic"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "t0": {
                  "description": "Start of the requested time range in seconds since epoch (Required)",
                  "type": "string"
                },
                "t1": {
                  "description": "End of the requested time range in seconds since epoch (Required)",
                  "type": "string"
                },
                "ssid": {
                  "description": "Filter results by SSID",
                  "type": "string"
                },
                "vlan": {
                  "description": "Filter results by VLAN",
                  "type": "string"
                },
                "fields": {
                  "description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Wireless health"]
      }
    },
    "/networks/{networkId}/clients/latencyStats": {
      "get": {
        "summary": "Aggregated latency info for this network, grouped by clients",
        "description": "Aggregated latency info for this network, grouped by clients\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/clients/latencyStats'\n```",
        "operationId": "getNetworksNetworkidClientsLatencystats",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "mac": "00:61:71:c8:51:27",
                  "latencyStats": {
                    "backgroundTraffic": {
                      "rawDistribution": {
                        "0": 1234,
                        "1": 2345,
                        "2": 3456,
                        "4": 4567,
                        "8": 5678,
                        "16": 6789,
                        "32": 7890,
                        "64": 8901,
                        "128": 9012,
                        "256": 83,
                        "512": 1234,
                        "1024": 2345,
                        "2048": 9999
                      },
                      "avg": 606.52
                    },
                    "bestEffortTraffic": "same shape as backgroundTraffic",
                    "videoTraffic": "same shape as backgroundTraffic",
                    "voiceTraffic": "same shape as backgroundTraffic"
                  }
                },
                {
                  "mac": "1c:4d:70:7f:5e:5e",
                  "latencyStats": {
                    "backgroundTraffic": {
                      "rawDistribution": {
                        "0": 1234,
                        "1": 2345,
                        "2": 3456,
                        "4": 4567,
                        "8": 5678,
                        "16": 6789,
                        "32": 7890,
                        "64": 8901,
                        "128": 9012,
                        "256": 83,
                        "512": 1234,
                        "1024": 2345,
                        "2048": 9999
                      },
                      "avg": 606.52
                    },
                    "bestEffortTraffic": "same shape as backgroundTraffic",
                    "videoTraffic": "same shape as backgroundTraffic",
                    "voiceTraffic": "same shape as backgroundTraffic"
                  }
                },
                {
                  "mac": "1c:4d:70:81:8d:0a",
                  "latencyStats": {
                    "backgroundTraffic": {
                      "rawDistribution": {
                        "0": 1234,
                        "1": 2345,
                        "2": 3456,
                        "4": 4567,
                        "8": 5678,
                        "16": 6789,
                        "32": 7890,
                        "64": 8901,
                        "128": 9012,
                        "256": 83,
                        "512": 1234,
                        "1024": 2345,
                        "2048": 9999
                      },
                      "avg": 606.52
                    },
                    "bestEffortTraffic": "same shape as backgroundTraffic",
                    "videoTraffic": "same shape as backgroundTraffic",
                    "voiceTraffic": "same shape as backgroundTraffic"
                  }
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "t0": {
                  "description": "Start of the requested time range in seconds since epoch (Required)",
                  "type": "string"
                },
                "t1": {
                  "description": "End of the requested time range in seconds since epoch (Required)",
                  "type": "string"
                },
                "ssid": {
                  "description": "Filter results by SSID",
                  "type": "string"
                },
                "vlan": {
                  "description": "Filter results by VLAN",
                  "type": "string"
                },
                "fields": {
                  "description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Wireless health"]
      }
    },
    "/networks/{networkId}/clients/{clientId}/latencyStats": {
      "get": {
        "summary": "Aggregated latency info for a given client on this network",
        "description": "Aggregated latency info for a given client on this network\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/clients/[clientId]/latencyStats'\n```",
        "operationId": "getNetworksNetworkidClientsClientidLatencystats",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": {
                "mac": "00:61:71:c8:51:27",
                "latencyStats": {
                  "backgroundTraffic": {
                    "rawDistribution": {
                      "0": 1234,
                      "1": 2345,
                      "2": 3456,
                      "4": 4567,
                      "8": 5678,
                      "16": 6789,
                      "32": 7890,
                      "64": 8901,
                      "128": 9012,
                      "256": 83,
                      "512": 1234,
                      "1024": 2345,
                      "2048": 9999
                    },
                    "avg": 606.52
                  },
                  "bestEffortTraffic": "same shape as backgroundTraffic",
                  "videoTraffic": "same shape as backgroundTraffic",
                  "voiceTraffic": "same shape as backgroundTraffic"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "clientId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "t0": {
                  "description": "Start of the requested time range in seconds since epoch (Required)",
                  "type": "string"
                },
                "t1": {
                  "description": "End of the requested time range in seconds since epoch (Required)",
                  "type": "string"
                },
                "ssid": {
                  "description": "Filter results by SSID",
                  "type": "string"
                },
                "vlan": {
                  "description": "Filter results by VLAN",
                  "type": "string"
                },
                "fields": {
                  "description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Wireless health"]
      }
    },
    "/networks/{networkId}/failedConnections": {
      "get": {
        "summary": "List of all failed client connection events on this network in a given time range",
        "description": "List of all failed client connection events on this network in a given time range\n\n## SAMPLE REQUEST\n\n```\ncurl -L -H 'X-Cisco-Meraki-API-Key: <key>' -H 'Content-Type: application/json' -X GET 'https://api.meraki.com/api/v0/networks/[networkId]/failedConnections'\n```",
        "operationId": "getNetworksNetworkidFailedconnections",
        "responses": {
          "200": {
            "description": "Successful operation",
            "examples": {
              "application/json": [
                {
                  "ssidNumber": 0,
                  "vlan": -1,
                  "clientMac": "00:61:71:c8:51:27",
                  "serial": "Q2JC-2MJM-FHRD",
                  "failureStep": "auth",
                  "type": "802.1X auth fail",
                  "ts": 1532032592
                },
                {
                  "ssidNumber": 0,
                  "vlan": -1,
                  "clientMac": "00:61:71:c8:51:27",
                  "nodeId": "Q2FJ-3SHB-Y2K2",
                  "failureStep": "auth",
                  "type": "802.1X auth fail",
                  "ts": 1532032593
                },
                {
                  "ssidNumber": 0,
                  "vlan": -1,
                  "clientMac": "00:61:71:c8:51:27",
                  "nodeId": "Q2FJ-3SHB-Y2K2",
                  "failureStep": "auth",
                  "type": "802.1X auth fail",
                  "ts": 1532032594
                },
                {
                  "ssidNumber": 0,
                  "vlan": -1,
                  "clientMac": "00:61:71:c8:51:27",
                  "nodeId": "Q2FJ-3SHB-Y2K2",
                  "failureStep": "auth",
                  "type": "802.1X auth fail",
                  "ts": 1532032595
                },
                {
                  "ssidNumber": 0,
                  "vlan": -1,
                  "clientMac": "1c:4d:70:7f:5e:5e",
                  "nodeId": "Q2FJ-3SHB-Y2K2",
                  "failureStep": "assoc",
                  "type": "802.1X auth fail",
                  "ts": 1532032592
                },
                {
                  "ssidNumber": 0,
                  "vlan": -1,
                  "clientMac": "1c:4d:70:81:8d:0a",
                  "nodeId": "Q2FJ-3SHB-Y2K2",
                  "failureStep": "auth",
                  "type": "802.1X auth fail",
                  "ts": 1532032595
                }
              ]
            }
          }
        },
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "t0": {
                  "description": "Start of the requested time range in seconds since epoch (Required)",
                  "type": "string"
                },
                "t1": {
                  "description": "End of the requested time range in seconds since epoch (Required)",
                  "type": "string"
                },
                "ssid": {
                  "description": "Filter results by SSID",
                  "type": "string"
                },
                "vlan": {
                  "description": "Filter results by VLAN",
                  "type": "string"
                },
                "serial": {
                  "description": "Filter by AP",
                  "type": "string"
                },
                "clientId": {
                  "description": "Filter by client",
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": ["Wireless health"]
      }
    }
  }
}
