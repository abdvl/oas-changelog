[
  {
    "ruleId": "edit-operation-id",
    "message": "`/organizations/{organizationId}/actionBatches` (get) - OperationId turned from `getOrganizationActionBatches` to `OrganizationsActionBatchesByOrganizationIdGet`",
    "messageHtml": "OperationId turned from <code>getOrganizationActionBatches</code> to <code>OrganizationsActionBatchesByOrganizationIdGet</code>",
    "path": "/organizations/{organizationId}/actionBatches",
    "method": "get",
    "previousOperationId": "getOrganizationActionBatches",
    "currentOperationId": "OrganizationsActionBatchesByOrganizationIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Return the list of action batches in the organization",
      "summary": "getOrganizationActionBatches",
      "tags": [
        "Action batches"
      ],
      "operationId": "OrganizationsActionBatchesByOrganizationIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"id\": \"123\",\r\n    \"status\": \"in progress\",\r\n    \"confirmed\": true,\r\n    \"synchronous\": false,\r\n    \"actions\": [\r\n      {\r\n        \"resource\": \"/devices/QXXX-XXXX-XXXX/switchPorts/3\",\r\n        \"operation\": \"update\",\r\n        \"body\": {\r\n          \"enabled\": false\r\n        }\r\n      }\r\n    ]\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/organizations/{organizationId}/actionBatches` (post) - OperationId turned from `createOrganizationActionBatch` to `OrganizationsActionBatchesByOrganizationIdPost`",
    "messageHtml": "OperationId turned from <code>createOrganizationActionBatch</code> to <code>OrganizationsActionBatchesByOrganizationIdPost</code>",
    "path": "/organizations/{organizationId}/actionBatches",
    "method": "post",
    "previousOperationId": "createOrganizationActionBatch",
    "currentOperationId": "OrganizationsActionBatchesByOrganizationIdPost",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Create an action batch",
      "summary": "createOrganizationActionBatch",
      "tags": [
        "Action batches"
      ],
      "operationId": "OrganizationsActionBatchesByOrganizationIdPost",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "createOrganizationActionBatch",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/createOrganizationActionBatch"
          }
        }
      ],
      "responses": {
        "201": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"id\": \"123\",\r\n  \"status\": \"in progress\",\r\n  \"confirmed\": true,\r\n  \"synchronous\": false,\r\n  \"actions\": [\r\n    {\r\n      \"resource\": \"/devices/QXXX-XXXX-XXXX/switchPorts/3\",\r\n      \"operation\": \"update\",\r\n      \"body\": {\r\n        \"enabled\": false\r\n      }\r\n    }\r\n  ]\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/organizations/{organizationId}/actionBatches/{id}` (get) - OperationId turned from `getOrganizationActionBatch` to `OrganizationsActionBatchesByOrganizationIdAndIdGet`",
    "messageHtml": "OperationId turned from <code>getOrganizationActionBatch</code> to <code>OrganizationsActionBatchesByOrganizationIdAndIdGet</code>",
    "path": "/organizations/{organizationId}/actionBatches/{id}",
    "method": "get",
    "previousOperationId": "getOrganizationActionBatch",
    "currentOperationId": "OrganizationsActionBatchesByOrganizationIdAndIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Return an action batch",
      "summary": "getOrganizationActionBatch",
      "tags": [
        "Action batches"
      ],
      "operationId": "OrganizationsActionBatchesByOrganizationIdAndIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"id\": \"123\",\r\n  \"status\": \"in progress\",\r\n  \"confirmed\": true,\r\n  \"synchronous\": false,\r\n  \"actions\": [\r\n    {\r\n      \"resource\": \"/devices/QXXX-XXXX-XXXX/switchPorts/3\",\r\n      \"operation\": \"update\",\r\n      \"body\": {\r\n        \"enabled\": false\r\n      }\r\n    }\r\n  ]\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/organizations/{organizationId}/actionBatches/{id}` (put) - OperationId turned from `updateOrganizationActionBatch` to `OrganizationsActionBatchesByOrganizationIdAndIdPut`",
    "messageHtml": "OperationId turned from <code>updateOrganizationActionBatch</code> to <code>OrganizationsActionBatchesByOrganizationIdAndIdPut</code>",
    "path": "/organizations/{organizationId}/actionBatches/{id}",
    "method": "put",
    "previousOperationId": "updateOrganizationActionBatch",
    "currentOperationId": "OrganizationsActionBatchesByOrganizationIdAndIdPut",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Update an action batch",
      "summary": "updateOrganizationActionBatch",
      "tags": [
        "Action batches"
      ],
      "operationId": "OrganizationsActionBatchesByOrganizationIdAndIdPut",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "updateOrganizationActionBatch",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/updateOrganizationActionBatch"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"id\": \"123\",\r\n  \"status\": \"in progress\",\r\n  \"confirmed\": true,\r\n  \"synchronous\": false,\r\n  \"actions\": [\r\n    {\r\n      \"resource\": \"/devices/QXXX-XXXX-XXXX/switchPorts/3\",\r\n      \"operation\": \"update\",\r\n      \"body\": {\r\n        \"enabled\": false\r\n      }\r\n    }\r\n  ]\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/organizations/{organizationId}/actionBatches/{id}` (delete) - OperationId turned from `deleteOrganizationActionBatch` to `OrganizationsActionBatchesByOrganizationIdAndIdDelete`",
    "messageHtml": "OperationId turned from <code>deleteOrganizationActionBatch</code> to <code>OrganizationsActionBatchesByOrganizationIdAndIdDelete</code>",
    "path": "/organizations/{organizationId}/actionBatches/{id}",
    "method": "delete",
    "previousOperationId": "deleteOrganizationActionBatch",
    "currentOperationId": "OrganizationsActionBatchesByOrganizationIdAndIdDelete",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Delete an action batch",
      "summary": "deleteOrganizationActionBatch",
      "tags": [
        "Action batches"
      ],
      "operationId": "OrganizationsActionBatchesByOrganizationIdAndIdDelete",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/organizations/{organizationId}/admins` (get) - OperationId turned from `getOrganizationAdmins` to `OrganizationsAdminsByOrganizationIdGet`",
    "messageHtml": "OperationId turned from <code>getOrganizationAdmins</code> to <code>OrganizationsAdminsByOrganizationIdGet</code>",
    "path": "/organizations/{organizationId}/admins",
    "method": "get",
    "previousOperationId": "getOrganizationAdmins",
    "currentOperationId": "OrganizationsAdminsByOrganizationIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "List the dashboard administrators in this organization",
      "summary": "getOrganizationAdmins",
      "tags": [
        "Admins"
      ],
      "operationId": "OrganizationsAdminsByOrganizationIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"id\": \"212406\",\r\n    \"name\": \"Miles Meraki\",\r\n    \"email\": \"miles@meraki.com\",\r\n    \"orgAccess\": \"none\",\r\n    \"accountStatus\": \"ok\",\r\n    \"twoFactorAuthEnabled\": false,\r\n    \"hasApiKey\": true,\r\n    \"lastActive\": \"2019-01-28 14:58:56 -0800\",\r\n    \"tags\": [\r\n      {\r\n        \"tag\": \"west\",\r\n        \"access\": \"read-only\"\r\n      }\r\n    ],\r\n    \"networks\": [\r\n      {\r\n        \"id\": \"N_24329156\",\r\n        \"access\": \"full\"\r\n      }\r\n    ]\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/organizations/{organizationId}/admins` (post) - OperationId turned from `createOrganizationAdmin` to `OrganizationsAdminsByOrganizationIdPost`",
    "messageHtml": "OperationId turned from <code>createOrganizationAdmin</code> to <code>OrganizationsAdminsByOrganizationIdPost</code>",
    "path": "/organizations/{organizationId}/admins",
    "method": "post",
    "previousOperationId": "createOrganizationAdmin",
    "currentOperationId": "OrganizationsAdminsByOrganizationIdPost",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Create a new dashboard administrator",
      "summary": "createOrganizationAdmin",
      "tags": [
        "Admins"
      ],
      "operationId": "OrganizationsAdminsByOrganizationIdPost",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "createOrganizationAdmin",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/createOrganizationAdmin"
          }
        }
      ],
      "responses": {
        "201": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"id\": \"212406\",\r\n  \"name\": \"Miles Meraki\",\r\n  \"email\": \"miles@meraki.com\",\r\n  \"orgAccess\": \"none\",\r\n  \"accountStatus\": \"ok\",\r\n  \"twoFactorAuthEnabled\": false,\r\n  \"hasApiKey\": true,\r\n  \"lastActive\": \"2019-01-28 14:58:56 -0800\",\r\n  \"tags\": [\r\n    {\r\n      \"tag\": \"west\",\r\n      \"access\": \"read-only\"\r\n    }\r\n  ],\r\n  \"networks\": [\r\n    {\r\n      \"id\": \"N_24329156\",\r\n      \"access\": \"full\"\r\n    }\r\n  ]\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/organizations/{organizationId}/admins/{id}` (put) - OperationId turned from `updateOrganizationAdmin` to `OrganizationsAdminsByOrganizationIdAndIdPut`",
    "messageHtml": "OperationId turned from <code>updateOrganizationAdmin</code> to <code>OrganizationsAdminsByOrganizationIdAndIdPut</code>",
    "path": "/organizations/{organizationId}/admins/{id}",
    "method": "put",
    "previousOperationId": "updateOrganizationAdmin",
    "currentOperationId": "OrganizationsAdminsByOrganizationIdAndIdPut",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Update an administrator",
      "summary": "updateOrganizationAdmin",
      "tags": [
        "Admins"
      ],
      "operationId": "OrganizationsAdminsByOrganizationIdAndIdPut",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "updateOrganizationAdmin",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/updateOrganizationAdmin"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"id\": \"212406\",\r\n  \"name\": \"Miles Meraki\",\r\n  \"email\": \"miles@meraki.com\",\r\n  \"orgAccess\": \"none\",\r\n  \"accountStatus\": \"ok\",\r\n  \"twoFactorAuthEnabled\": false,\r\n  \"hasApiKey\": true,\r\n  \"lastActive\": \"2019-01-28 14:58:56 -0800\",\r\n  \"tags\": [\r\n    {\r\n      \"tag\": \"west\",\r\n      \"access\": \"read-only\"\r\n    }\r\n  ],\r\n  \"networks\": [\r\n    {\r\n      \"id\": \"N_24329156\",\r\n      \"access\": \"full\"\r\n    }\r\n  ]\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/organizations/{organizationId}/admins/{id}` (delete) - OperationId turned from `deleteOrganizationAdmin` to `OrganizationsAdminsByOrganizationIdAndIdDelete`",
    "messageHtml": "OperationId turned from <code>deleteOrganizationAdmin</code> to <code>OrganizationsAdminsByOrganizationIdAndIdDelete</code>",
    "path": "/organizations/{organizationId}/admins/{id}",
    "method": "delete",
    "previousOperationId": "deleteOrganizationAdmin",
    "currentOperationId": "OrganizationsAdminsByOrganizationIdAndIdDelete",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Revoke all access for a dashboard administrator within this organization",
      "summary": "deleteOrganizationAdmin",
      "tags": [
        "Admins"
      ],
      "operationId": "OrganizationsAdminsByOrganizationIdAndIdDelete",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "204": {
          "description": "Successful operation",
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/alertSettings` (get) - OperationId turned from `getNetworkAlertSettings` to `NetworksAlertSettingsByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkAlertSettings</code> to <code>NetworksAlertSettingsByNetworkIdGet</code>",
    "path": "/networks/{networkId}/alertSettings",
    "method": "get",
    "previousOperationId": "getNetworkAlertSettings",
    "currentOperationId": "NetworksAlertSettingsByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Return the alert configuration for this network",
      "summary": "getNetworkAlertSettings",
      "tags": [
        "Alert settings"
      ],
      "operationId": "NetworksAlertSettingsByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"defaultDestinations\": {\r\n    \"emails\": [\r\n      \"miles@meraki.com\"\r\n    ],\r\n    \"allAdmins\": true,\r\n    \"snmp\": true\r\n  },\r\n  \"alerts\": [\r\n    {\r\n      \"type\": \"gatewayDown\",\r\n      \"enabled\": true,\r\n      \"alertDestinations\": {\r\n        \"emails\": [\r\n          \"miles@meraki.com\"\r\n        ],\r\n        \"allAdmins\": false,\r\n        \"snmp\": false\r\n      },\r\n      \"filters\": {\r\n        \"timeout\": 60\r\n      }\r\n    }\r\n  ]\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/alertSettings` (put) - OperationId turned from `updateNetworkAlertSettings` to `NetworksAlertSettingsByNetworkIdPut`",
    "messageHtml": "OperationId turned from <code>updateNetworkAlertSettings</code> to <code>NetworksAlertSettingsByNetworkIdPut</code>",
    "path": "/networks/{networkId}/alertSettings",
    "method": "put",
    "previousOperationId": "updateNetworkAlertSettings",
    "currentOperationId": "NetworksAlertSettingsByNetworkIdPut",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Update the alert configuration for this network",
      "summary": "updateNetworkAlertSettings",
      "tags": [
        "Alert settings"
      ],
      "operationId": "NetworksAlertSettingsByNetworkIdPut",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "updateNetworkAlertSettings",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/updateNetworkAlertSettings"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"defaultDestinations\": {\r\n    \"emails\": [\r\n      \"miles@meraki.com\"\r\n    ],\r\n    \"allAdmins\": true,\r\n    \"snmp\": true\r\n  },\r\n  \"alerts\": [\r\n    {\r\n      \"type\": \"gatewayDown\",\r\n      \"enabled\": true,\r\n      \"alertDestinations\": {\r\n        \"emails\": [\r\n          \"miles@meraki.com\"\r\n        ],\r\n        \"allAdmins\": false,\r\n        \"snmp\": false\r\n      },\r\n      \"filters\": {\r\n        \"timeout\": 60\r\n      }\r\n    }\r\n  ]\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/devices/{serial}/camera/analytics/overview` (get) - OperationId turned from `getDeviceCameraAnalyticsOverview` to `DevicesCameraAnalyticsOverviewBySerialGet`",
    "messageHtml": "OperationId turned from <code>getDeviceCameraAnalyticsOverview</code> to <code>DevicesCameraAnalyticsOverviewBySerialGet</code>",
    "path": "/devices/{serial}/camera/analytics/overview",
    "method": "get",
    "previousOperationId": "getDeviceCameraAnalyticsOverview",
    "currentOperationId": "DevicesCameraAnalyticsOverviewBySerialGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Returns an overview of aggregate analytics data for a timespan",
      "summary": "getDeviceCameraAnalyticsOverview",
      "tags": [
        "MV Sense"
      ],
      "operationId": "DevicesCameraAnalyticsOverviewBySerialGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "serial",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "t0",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
        },
        {
          "name": "t1",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
        },
        {
          "name": "timespan",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days. The default is 1 hour."
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"startTs\": \"2018-08-15T18:32:38.123Z\",\r\n    \"endTs\": \"2018-08-15T18:33:38.123Z\",\r\n    \"zoneId\": 0,\r\n    \"entrances\": 254,\r\n    \"averageCount\": 5\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/devices/{serial}/camera/analytics/zones` (get) - OperationId turned from `getDeviceCameraAnalyticsZones` to `DevicesCameraAnalyticsZonesBySerialGet`",
    "messageHtml": "OperationId turned from <code>getDeviceCameraAnalyticsZones</code> to <code>DevicesCameraAnalyticsZonesBySerialGet</code>",
    "path": "/devices/{serial}/camera/analytics/zones",
    "method": "get",
    "previousOperationId": "getDeviceCameraAnalyticsZones",
    "currentOperationId": "DevicesCameraAnalyticsZonesBySerialGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Returns all configured analytic zones for this camera",
      "summary": "getDeviceCameraAnalyticsZones",
      "tags": [
        "MV Sense"
      ],
      "operationId": "DevicesCameraAnalyticsZonesBySerialGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "serial",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"id\": \"0\",\r\n    \"type\": \"occupancy\",\r\n    \"label\": \"Full Frame\"\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/devices/{serial}/camera/analytics/zones/{zoneId}/history` (get) - OperationId turned from `getDeviceCameraAnalyticsZoneHistory` to `DevicesCameraAnalyticsZonesHistoryBySerialAndZoneIdGet`",
    "messageHtml": "OperationId turned from <code>getDeviceCameraAnalyticsZoneHistory</code> to <code>DevicesCameraAnalyticsZonesHistoryBySerialAndZoneIdGet</code>",
    "path": "/devices/{serial}/camera/analytics/zones/{zoneId}/history",
    "method": "get",
    "previousOperationId": "getDeviceCameraAnalyticsZoneHistory",
    "currentOperationId": "DevicesCameraAnalyticsZonesHistoryBySerialAndZoneIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Return historical records for analytic zones",
      "summary": "getDeviceCameraAnalyticsZoneHistory",
      "tags": [
        "MV Sense"
      ],
      "operationId": "DevicesCameraAnalyticsZonesHistoryBySerialAndZoneIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "serial",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "zoneId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "t0",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
        },
        {
          "name": "t1",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 14 hours after t0."
        },
        {
          "name": "timespan",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 14 hours. The default is 1 hour."
        },
        {
          "name": "resolution",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "The time resolution in seconds for returned data. The valid resolutions are: 60. The default is 60."
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"startTs\": \"2018-08-15T18:32:38.123Z\",\r\n    \"endTs\": \"2018-08-15T18:33:38.123Z\",\r\n    \"entrances\": 5,\r\n    \"averageCount\": 1.5\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/devices/{serial}/camera/analytics/recent` (get) - OperationId turned from `getDeviceCameraAnalyticsRecent` to `DevicesCameraAnalyticsRecentBySerialGet`",
    "messageHtml": "OperationId turned from <code>getDeviceCameraAnalyticsRecent</code> to <code>DevicesCameraAnalyticsRecentBySerialGet</code>",
    "path": "/devices/{serial}/camera/analytics/recent",
    "method": "get",
    "previousOperationId": "getDeviceCameraAnalyticsRecent",
    "currentOperationId": "DevicesCameraAnalyticsRecentBySerialGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Returns most recent record for analytics zones",
      "summary": "getDeviceCameraAnalyticsRecent",
      "tags": [
        "MV Sense"
      ],
      "operationId": "DevicesCameraAnalyticsRecentBySerialGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "serial",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"startTs\": \"2018-08-15T18:32:38.123Z\",\r\n    \"endTs\": \"2018-08-15T18:33:38.123Z\",\r\n    \"zoneId\": 0,\r\n    \"entrances\": 10,\r\n    \"averageCount\": 2.54\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/devices/{serial}/camera/analytics/live` (get) - OperationId turned from `getDeviceCameraAnalyticsLive` to `DevicesCameraAnalyticsLiveBySerialGet`",
    "messageHtml": "OperationId turned from <code>getDeviceCameraAnalyticsLive</code> to <code>DevicesCameraAnalyticsLiveBySerialGet</code>",
    "path": "/devices/{serial}/camera/analytics/live",
    "method": "get",
    "previousOperationId": "getDeviceCameraAnalyticsLive",
    "currentOperationId": "DevicesCameraAnalyticsLiveBySerialGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Returns live state from camera of analytics zones",
      "summary": "getDeviceCameraAnalyticsLive",
      "tags": [
        "MV Sense"
      ],
      "operationId": "DevicesCameraAnalyticsLiveBySerialGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "serial",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"ts\": \"2018-08-15T18:32:38.123Z\",\r\n  \"zones\": {\r\n    \"0\": {\r\n      \"person\": 0\r\n    }\r\n  }\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/organizations/{organizationId}/apiRequests` (get) - OperationId turned from `getOrganizationApiRequests` to `OrganizationsApiRequestsByOrganizationIdGet`",
    "messageHtml": "OperationId turned from <code>getOrganizationApiRequests</code> to <code>OrganizationsApiRequestsByOrganizationIdGet</code>",
    "path": "/organizations/{organizationId}/apiRequests",
    "method": "get",
    "previousOperationId": "getOrganizationApiRequests",
    "currentOperationId": "OrganizationsApiRequestsByOrganizationIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "List the API requests made by an organization",
      "summary": "getOrganizationApiRequests",
      "tags": [
        "API usage"
      ],
      "operationId": "OrganizationsApiRequestsByOrganizationIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "t0",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
        },
        {
          "name": "t1",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
        },
        {
          "name": "timespan",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days."
        },
        {
          "name": "perPage",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50."
        },
        {
          "name": "startingAfter",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
        },
        {
          "name": "endingBefore",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
        },
        {
          "name": "adminId",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "Filter the results by the ID of the admin who made the API requests"
        },
        {
          "name": "path",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "Filter the results by the path of the API requests"
        },
        {
          "name": "method",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "Filter the results by the method of the API requests (must be 'GET', 'PUT', 'POST' or 'DELETE')"
        },
        {
          "name": "responseCode",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "Filter the results by the response code of the API requests"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"adminId\": \"212406\",\r\n    \"method\": \"GET\",\r\n    \"host\": \"api.meraki.com\",\r\n    \"path\": \"/api/v0/organizations/33349/apiRequests\",\r\n    \"queryString\": \"timespan=604800\",\r\n    \"userAgent\": \"PostmanRuntime/7.6.0\",\r\n    \"ts\": \"2019-02-20T17:31:23Z\",\r\n    \"responseCode\": 200\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "delete-path",
    "message": "`/networks/{networkId}/bluetoothClients/{id}` - Deleted",
    "messageHtml": "Deleted",
    "path": "/networks/{networkId}/bluetoothClients/{id}",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/bluetoothClients` (get) - OperationId turned from `getNetworkBluetoothClients` to `NetworksBluetoothClientsByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkBluetoothClients</code> to <code>NetworksBluetoothClientsByNetworkIdGet</code>",
    "path": "/networks/{networkId}/bluetoothClients",
    "method": "get",
    "previousOperationId": "getNetworkBluetoothClients",
    "currentOperationId": "NetworksBluetoothClientsByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "List the Bluetooth clients seen by APs in this network",
      "summary": "getNetworkBluetoothClients",
      "tags": [
        "Bluetooth clients"
      ],
      "operationId": "NetworksBluetoothClientsByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "perPage",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "The number of entries per page returned. Acceptable range is 5 - 1000. Default is 10."
        },
        {
          "name": "startingAfter",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
        },
        {
          "name": "endingBefore",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
        },
        {
          "name": "timespan",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The timespan, in seconds, used to look back from now for bluetooth clients"
        },
        {
          "name": "includeConnectivityHistory",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "Include the connectivity history for this client"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"mac\": \"00:11:22:33:44:55\",\r\n    \"networkId\": \"N_24329156\"\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/bluetoothSettings` (get) - OperationId turned from `getNetworkBluetoothSettings` to `NetworksBluetoothSettingsByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkBluetoothSettings</code> to <code>NetworksBluetoothSettingsByNetworkIdGet</code>",
    "path": "/networks/{networkId}/bluetoothSettings",
    "method": "get",
    "previousOperationId": "getNetworkBluetoothSettings",
    "currentOperationId": "NetworksBluetoothSettingsByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Return the Bluetooth settings for a network. <a href=\"https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)\">Bluetooth settings</a> must be enabled on the network.",
      "summary": "getNetworkBluetoothSettings",
      "tags": [
        "Networks"
      ],
      "operationId": "NetworksBluetoothSettingsByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"scanningEnabled\": true,\r\n  \"advertisingEnabled\": true,\r\n  \"uuid\": \"00000000-0000-0000-000-000000000000\",\r\n  \"majorMinorAssignmentMode\": \"Non-unique\",\r\n  \"major\": 1\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/bluetoothSettings` (put) - OperationId turned from `updateNetworkBluetoothSettings` to `NetworksBluetoothSettingsByNetworkIdPut`",
    "messageHtml": "OperationId turned from <code>updateNetworkBluetoothSettings</code> to <code>NetworksBluetoothSettingsByNetworkIdPut</code>",
    "path": "/networks/{networkId}/bluetoothSettings",
    "method": "put",
    "previousOperationId": "updateNetworkBluetoothSettings",
    "currentOperationId": "NetworksBluetoothSettingsByNetworkIdPut",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Update the Bluetooth settings for a network. See the docs page for <a href=\"https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)\">Bluetooth settings</a>.",
      "summary": "updateNetworkBluetoothSettings",
      "tags": [
        "Networks"
      ],
      "operationId": "NetworksBluetoothSettingsByNetworkIdPut",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "updateNetworkBluetoothSettings",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/updateNetworkBluetoothSettings"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"scanningEnabled\": true,\r\n  \"advertisingEnabled\": true,\r\n  \"uuid\": \"00000000-0000-0000-000-000000000000\",\r\n  \"majorMinorAssignmentMode\": \"Non-unique\",\r\n  \"major\": 1\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/organizations/{organizationId}/networks` (get) - OperationId turned from `getOrganizationNetworks` to `OrganizationsNetworksByOrganizationIdGet`",
    "messageHtml": "OperationId turned from <code>getOrganizationNetworks</code> to <code>OrganizationsNetworksByOrganizationIdGet</code>",
    "path": "/organizations/{organizationId}/networks",
    "method": "get",
    "previousOperationId": "getOrganizationNetworks",
    "currentOperationId": "OrganizationsNetworksByOrganizationIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "List the networks in an organization",
      "summary": "getOrganizationNetworks",
      "tags": [
        "Networks"
      ],
      "operationId": "OrganizationsNetworksByOrganizationIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "configTemplateId",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "An optional parameter that is the ID of a config template. Will return all networks bound to that template."
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"id\": \"L_123456\",\r\n    \"organizationId\": 2930418,\r\n    \"name\": \"Long Island Office\",\r\n    \"timeZone\": \"America/Los_Angeles\",\r\n    \"tags\": \" tag1 tag2 \",\r\n    \"type\": \"combined\",\r\n    \"disableMyMerakiCom\": false\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/organizations/{organizationId}/networks` (post) - OperationId turned from `createOrganizationNetwork` to `OrganizationsNetworksByOrganizationIdPost`",
    "messageHtml": "OperationId turned from <code>createOrganizationNetwork</code> to <code>OrganizationsNetworksByOrganizationIdPost</code>",
    "path": "/organizations/{organizationId}/networks",
    "method": "post",
    "previousOperationId": "createOrganizationNetwork",
    "currentOperationId": "OrganizationsNetworksByOrganizationIdPost",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Create a network",
      "summary": "createOrganizationNetwork",
      "tags": [
        "Networks"
      ],
      "operationId": "OrganizationsNetworksByOrganizationIdPost",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "createOrganizationNetwork",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/createOrganizationNetwork"
          }
        }
      ],
      "responses": {
        "201": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"id\": \"L_123456\",\r\n  \"organizationId\": 2930418,\r\n  \"name\": \"Long Island Office\",\r\n  \"timeZone\": \"America/Los_Angeles\",\r\n  \"tags\": \" tag1 tag2 \",\r\n  \"type\": \"combined\",\r\n  \"disableMyMerakiCom\": false\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}` (get) - OperationId turned from `getNetwork` to `NetworksByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetwork</code> to <code>NetworksByNetworkIdGet</code>",
    "path": "/networks/{networkId}",
    "method": "get",
    "previousOperationId": "getNetwork",
    "currentOperationId": "NetworksByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Return a network",
      "summary": "getNetwork",
      "tags": [
        "Networks"
      ],
      "operationId": "NetworksByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"id\": \"L_123456\",\r\n  \"organizationId\": 2930418,\r\n  \"name\": \"Long Island Office\",\r\n  \"timeZone\": \"America/Los_Angeles\",\r\n  \"tags\": \" tag1 tag2 \",\r\n  \"type\": \"combined\",\r\n  \"disableMyMerakiCom\": false\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}` (put) - OperationId turned from `updateNetwork` to `NetworksByNetworkIdPut`",
    "messageHtml": "OperationId turned from <code>updateNetwork</code> to <code>NetworksByNetworkIdPut</code>",
    "path": "/networks/{networkId}",
    "method": "put",
    "previousOperationId": "updateNetwork",
    "currentOperationId": "NetworksByNetworkIdPut",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Update a network",
      "summary": "updateNetwork",
      "tags": [
        "Networks"
      ],
      "operationId": "NetworksByNetworkIdPut",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "updateNetwork",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/updateNetwork"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"id\": \"L_123456\",\r\n  \"organizationId\": 2930418,\r\n  \"name\": \"Long Island Office\",\r\n  \"timeZone\": \"America/Los_Angeles\",\r\n  \"tags\": \" tag1 tag2 \",\r\n  \"type\": \"combined\",\r\n  \"disableMyMerakiCom\": false\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}` (delete) - OperationId turned from `deleteNetwork` to `NetworksByNetworkIdDelete`",
    "messageHtml": "OperationId turned from <code>deleteNetwork</code> to <code>NetworksByNetworkIdDelete</code>",
    "path": "/networks/{networkId}",
    "method": "delete",
    "previousOperationId": "deleteNetwork",
    "currentOperationId": "NetworksByNetworkIdDelete",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Delete a network",
      "summary": "deleteNetwork",
      "tags": [
        "Networks"
      ],
      "operationId": "NetworksByNetworkIdDelete",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "204": {
          "description": "Successful operation",
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/bind` (post) - OperationId turned from `bindNetwork` to `NetworksBindByNetworkIdPost`",
    "messageHtml": "OperationId turned from <code>bindNetwork</code> to <code>NetworksBindByNetworkIdPost</code>",
    "path": "/networks/{networkId}/bind",
    "method": "post",
    "previousOperationId": "bindNetwork",
    "currentOperationId": "NetworksBindByNetworkIdPost",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Bind a network to a template.",
      "summary": "bindNetwork",
      "tags": [
        "Networks"
      ],
      "operationId": "NetworksBindByNetworkIdPost",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "bindNetwork",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/bindNetwork"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/unbind` (post) - OperationId turned from `unbindNetwork` to `NetworksUnbindByNetworkIdPost`",
    "messageHtml": "OperationId turned from <code>unbindNetwork</code> to <code>NetworksUnbindByNetworkIdPost</code>",
    "path": "/networks/{networkId}/unbind",
    "method": "post",
    "previousOperationId": "unbindNetwork",
    "currentOperationId": "NetworksUnbindByNetworkIdPost",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Unbind a network from a template.",
      "summary": "unbindNetwork",
      "tags": [
        "Networks"
      ],
      "operationId": "NetworksUnbindByNetworkIdPost",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/traffic` (get) - OperationId turned from `getNetworkTraffic` to `NetworksTrafficByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkTraffic</code> to <code>NetworksTrafficByNetworkIdGet</code>",
    "path": "/networks/{networkId}/traffic",
    "method": "get",
    "previousOperationId": "getNetworkTraffic",
    "currentOperationId": "NetworksTrafficByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "The traffic analysis data for this network.\n<a href=\"https://documentation.meraki.com/MR/Monitoring_and_Reporting/Hostname_Visibility\">Traffic Analysis with Hostname Visibility</a> must be enabled on the network.\n",
      "summary": "getNetworkTraffic",
      "tags": [
        "Networks"
      ],
      "operationId": "NetworksTrafficByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "timespan",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The timespan for the data. Must be an integer representing a duration in seconds between two hours and one month. (Mandatory.)"
        },
        {
          "name": "deviceType",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "Filter the data by device type: combined (default), wireless, switch, appliance. When using combined, for each rule the data will come from the device type with the most usage."
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"application\": \"Gmail\",\r\n    \"destination\": null,\r\n    \"protocol\": \"TCP\",\r\n    \"port\": 443,\r\n    \"sent\": 138.0,\r\n    \"recv\": 61.0,\r\n    \"numClients\": 7,\r\n    \"activeTime\": 77000,\r\n    \"flows\": 300\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/accessPolicies` (get) - OperationId turned from `getNetworkAccessPolicies` to `NetworksAccessPoliciesByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkAccessPolicies</code> to <code>NetworksAccessPoliciesByNetworkIdGet</code>",
    "path": "/networks/{networkId}/accessPolicies",
    "method": "get",
    "previousOperationId": "getNetworkAccessPolicies",
    "currentOperationId": "NetworksAccessPoliciesByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "List the access policies for this network. Only valid for MS networks.",
      "summary": "getNetworkAccessPolicies",
      "tags": [
        "Networks"
      ],
      "operationId": "NetworksAccessPoliciesByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"number\": 1,\r\n    \"name\": \"My access policy\",\r\n    \"accessType\": \"8021.x\",\r\n    \"guestVlan\": 3700,\r\n    \"radiusServers\": [\r\n      {\r\n        \"ip\": \"1.2.3.4\",\r\n        \"port\": 1337\r\n      },\r\n      {\r\n        \"ip\": \"2.3.4.5\",\r\n        \"port\": 1337\r\n      }\r\n    ]\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/airMarshal` (get) - OperationId turned from `getNetworkAirMarshal` to `NetworksAirMarshalByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkAirMarshal</code> to <code>NetworksAirMarshalByNetworkIdGet</code>",
    "path": "/networks/{networkId}/airMarshal",
    "method": "get",
    "previousOperationId": "getNetworkAirMarshal",
    "currentOperationId": "NetworksAirMarshalByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "List Air Marshal scan results from a network",
      "summary": "getNetworkAirMarshal",
      "tags": [
        "Networks"
      ],
      "operationId": "NetworksAirMarshalByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "t0",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
        },
        {
          "name": "timespan",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 7 days."
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"ssid\": \"linksys\",\r\n    \"bssids\": [\r\n      {\r\n        \"bssid\": \"00:11:22:33:44:55\",\r\n        \"contained\": false,\r\n        \"detectedBy\": [\r\n          {\r\n            \"device\": \"Q234-ABCD-5678\",\r\n            \"rssi\": 17\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"channels\": [\r\n      36,\r\n      40\r\n    ],\r\n    \"firstSeen\": 1518365681,\r\n    \"lastSeen\": 1526087474,\r\n    \"wiredMacs\": [\r\n      \"00:11:22:33:44:55\"\r\n    ],\r\n    \"wiredVlans\": [\r\n      0,\r\n      108\r\n    ],\r\n    \"wiredLastSeen\": 1526087474\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/organizations/{organizationId}/networks/combine` (post) - OperationId turned from `combineOrganizationNetworks` to `OrganizationsNetworksCombineByOrganizationIdPost`",
    "messageHtml": "OperationId turned from <code>combineOrganizationNetworks</code> to <code>OrganizationsNetworksCombineByOrganizationIdPost</code>",
    "path": "/organizations/{organizationId}/networks/combine",
    "method": "post",
    "previousOperationId": "combineOrganizationNetworks",
    "currentOperationId": "OrganizationsNetworksCombineByOrganizationIdPost",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Combine multiple networks into a single network",
      "summary": "combineOrganizationNetworks",
      "tags": [
        "Networks"
      ],
      "operationId": "OrganizationsNetworksCombineByOrganizationIdPost",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "combineOrganizationNetworks",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/combineOrganizationNetworks"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"resultingNetwork\": {\r\n    \"id\": \"L_123456\",\r\n    \"organizationId\": 2930418,\r\n    \"name\": \"Long Island Office\",\r\n    \"timeZone\": \"America/Los_Angeles\",\r\n    \"tags\": \" tag1 tag2 \",\r\n    \"type\": \"combined\",\r\n    \"disableMyMerakiCom\": false\r\n  }\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/split` (post) - OperationId turned from `splitNetwork` to `NetworksSplitByNetworkIdPost`",
    "messageHtml": "OperationId turned from <code>splitNetwork</code> to <code>NetworksSplitByNetworkIdPost</code>",
    "path": "/networks/{networkId}/split",
    "method": "post",
    "previousOperationId": "splitNetwork",
    "currentOperationId": "NetworksSplitByNetworkIdPost",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Split a combined network into individual networks for each type of device",
      "summary": "splitNetwork",
      "tags": [
        "Networks"
      ],
      "operationId": "NetworksSplitByNetworkIdPost",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"resultingNetworks\": [\r\n    {\r\n      \"id\": \"N_1234\",\r\n      \"organizationId\": 2930418,\r\n      \"name\": \"Long Island Office - switch\",\r\n      \"timeZone\": \"America/Los_Angeles\",\r\n      \"tags\": \" tag1 tag2 \",\r\n      \"type\": \"switch\",\r\n      \"disableMyMerakiCom\": false\r\n    },\r\n    {\r\n      \"id\": \"N_5678\",\r\n      \"organizationId\": 2930418,\r\n      \"name\": \"Long Island Office - wireless\",\r\n      \"timeZone\": \"America/Los_Angeles\",\r\n      \"tags\": \" tag1 tag2 \",\r\n      \"type\": \"wireless\",\r\n      \"disableMyMerakiCom\": false\r\n    }\r\n  ]\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/siteToSiteVpn` (get) - OperationId turned from `getNetworkSiteToSiteVpn` to `NetworksSiteToSiteVpnByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkSiteToSiteVpn</code> to <code>NetworksSiteToSiteVpnByNetworkIdGet</code>",
    "path": "/networks/{networkId}/siteToSiteVpn",
    "method": "get",
    "previousOperationId": "getNetworkSiteToSiteVpn",
    "currentOperationId": "NetworksSiteToSiteVpnByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Return the site-to-site VPN settings of a network. Only valid for MX networks.",
      "summary": "getNetworkSiteToSiteVpn",
      "tags": [
        "Networks"
      ],
      "operationId": "NetworksSiteToSiteVpnByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"mode\": \"spoke\",\r\n  \"hubs\": [\r\n    {\r\n      \"hubId\": \"N_4901849\",\r\n      \"useDefaultRoute\": true\r\n    },\r\n    {\r\n      \"hubId\": \"N_1892489\",\r\n      \"useDefaultRoute\": false\r\n    }\r\n  ],\r\n  \"subnets\": [\r\n    {\r\n      \"localSubnet\": \"192.168.1.0/24\",\r\n      \"useVpn\": true\r\n    },\r\n    {\r\n      \"localSubnet\": \"192.168.128.0/24\",\r\n      \"useVpn\": true\r\n    }\r\n  ]\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/siteToSiteVpn` (put) - OperationId turned from `updateNetworkSiteToSiteVpn` to `NetworksSiteToSiteVpnByNetworkIdPut`",
    "messageHtml": "OperationId turned from <code>updateNetworkSiteToSiteVpn</code> to <code>NetworksSiteToSiteVpnByNetworkIdPut</code>",
    "path": "/networks/{networkId}/siteToSiteVpn",
    "method": "put",
    "previousOperationId": "updateNetworkSiteToSiteVpn",
    "currentOperationId": "NetworksSiteToSiteVpnByNetworkIdPut",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Update the site-to-site VPN settings of a network. Only valid for MX networks in NAT mode.",
      "summary": "updateNetworkSiteToSiteVpn",
      "tags": [
        "Networks"
      ],
      "operationId": "NetworksSiteToSiteVpnByNetworkIdPut",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "updateNetworkSiteToSiteVpn",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/updateNetworkSiteToSiteVpn"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"mode\": \"spoke\",\r\n  \"hubs\": [\r\n    {\r\n      \"hubId\": \"N_4901849\",\r\n      \"useDefaultRoute\": true\r\n    },\r\n    {\r\n      \"hubId\": \"N_1892489\",\r\n      \"useDefaultRoute\": false\r\n    }\r\n  ],\r\n  \"subnets\": [\r\n    {\r\n      \"localSubnet\": \"192.168.1.0/24\",\r\n      \"useVpn\": true\r\n    },\r\n    {\r\n      \"localSubnet\": \"192.168.128.0/24\",\r\n      \"useVpn\": true\r\n    }\r\n  ]\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/cameras/{serial}/videoLink` (get) - OperationId turned from `getNetworkCameraVideoLink` to `NetworksCamerasVideoLinkByNetworkIdAndSerialGet`",
    "messageHtml": "OperationId turned from <code>getNetworkCameraVideoLink</code> to <code>NetworksCamerasVideoLinkByNetworkIdAndSerialGet</code>",
    "path": "/networks/{networkId}/cameras/{serial}/videoLink",
    "method": "get",
    "previousOperationId": "getNetworkCameraVideoLink",
    "currentOperationId": "NetworksCamerasVideoLinkByNetworkIdAndSerialGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Returns video link for the specified camera. If a timestamp supplied, it links to that time.",
      "summary": "getNetworkCameraVideoLink",
      "tags": [
        "Cameras"
      ],
      "operationId": "NetworksCamerasVideoLinkByNetworkIdAndSerialGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "serial",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "timestamp",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The video link will start at this timestamp. The timestamp is in UNIX Epoch time (milliseconds)."
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"url\": \"https://nxx.meraki.com/office-cameras/n/bs0a1k/manage/nodes/new_list/29048243992402?timestamp=1535732570077\"\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/cameras/{serial}/snapshot` (post) - OperationId turned from `generateNetworkCameraSnapshot` to `NetworksCamerasSnapshotByNetworkIdAndSerialPost`",
    "messageHtml": "OperationId turned from <code>generateNetworkCameraSnapshot</code> to <code>NetworksCamerasSnapshotByNetworkIdAndSerialPost</code>",
    "path": "/networks/{networkId}/cameras/{serial}/snapshot",
    "method": "post",
    "previousOperationId": "generateNetworkCameraSnapshot",
    "currentOperationId": "NetworksCamerasSnapshotByNetworkIdAndSerialPost",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Generate a snapshot of what the camera sees at the specified time and return a link to that image.",
      "summary": "generateNetworkCameraSnapshot",
      "tags": [
        "Cameras"
      ],
      "operationId": "NetworksCamerasSnapshotByNetworkIdAndSerialPost",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "serial",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "generateNetworkCameraSnapshot",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/generateNetworkCameraSnapshot"
          }
        }
      ],
      "responses": {
        "202": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"url\": \"https://spn4.meraki.com/stream/jpeg/snapshot/b2d123asdf423qd22d2\",\r\n  \"expiry\": \"Access to the image will expire at 2018-12-11T03:12:39Z.\"\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "delete-path",
    "message": "`/networks/{networkId}/clients/{idOrMacOrIp}` - Deleted",
    "messageHtml": "Deleted",
    "path": "/networks/{networkId}/clients/{idOrMacOrIp}",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/clients/provision` (post) - OperationId turned from `provisionNetworkClients` to `NetworksClientsProvisionByNetworkIdPost`",
    "messageHtml": "OperationId turned from <code>provisionNetworkClients</code> to <code>NetworksClientsProvisionByNetworkIdPost</code>",
    "path": "/networks/{networkId}/clients/provision",
    "method": "post",
    "previousOperationId": "provisionNetworkClients",
    "currentOperationId": "NetworksClientsProvisionByNetworkIdPost",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Provisions a client with a name and policy. Clients can be provisioned before they associate to the network.",
      "summary": "provisionNetworkClients",
      "tags": [
        "Clients"
      ],
      "operationId": "NetworksClientsProvisionByNetworkIdPost",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "provisionNetworkClients",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/provisionNetworkClients"
          }
        }
      ],
      "responses": {
        "201": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"mac\": \"00:11:22:33:44:55\",\r\n  \"clientId\": \"k74272e\",\r\n  \"name\": \"Miles's phone\",\r\n  \"devicePolicy\": \"Group policy\",\r\n  \"groupPolicyId\": \"101\"\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "delete-path",
    "message": "`/networks/{networkId}/clients/{idOrMacOrIp}/usageHistory` - Deleted",
    "messageHtml": "Deleted",
    "path": "/networks/{networkId}/clients/{idOrMacOrIp}/usageHistory",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "delete-path",
    "message": "`/networks/{networkId}/clients/{mac}/policy` - Deleted",
    "messageHtml": "Deleted",
    "path": "/networks/{networkId}/clients/{mac}/policy",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "delete-path",
    "message": "`/networks/{id}/clients/{mac}/splashAuthorizationStatus` - Deleted",
    "messageHtml": "Deleted",
    "path": "/networks/{id}/clients/{mac}/splashAuthorizationStatus",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/clients` (get) - OperationId turned from `getNetworkClients` to `NetworksClientsByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkClients</code> to <code>NetworksClientsByNetworkIdGet</code>",
    "path": "/networks/{networkId}/clients",
    "method": "get",
    "previousOperationId": "getNetworkClients",
    "currentOperationId": "NetworksClientsByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "List the clients that have used this network in the timespan",
      "summary": "getNetworkClients",
      "tags": [
        "Clients"
      ],
      "operationId": "NetworksClientsByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "t0",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
        },
        {
          "name": "timespan",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
        },
        {
          "name": "perPage",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 10."
        },
        {
          "name": "startingAfter",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
        },
        {
          "name": "endingBefore",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"usage\": {\r\n    \"sent\": 138.0,\r\n    \"recv\": 61.0\r\n  },\r\n  \"id\": \"k74272e\",\r\n  \"description\": \"Miles's phone\",\r\n  \"mac\": \"00:11:22:33:44:55\",\r\n  \"ip\": \"1.2.3.4\",\r\n  \"user\": \"milesmeraki\",\r\n  \"vlan\": 255,\r\n  \"switchport\": null,\r\n  \"ip6\": \"\",\r\n  \"firstSeen\": 1518365681,\r\n  \"lastSeen\": 1526087474,\r\n  \"manufacturer\": \"Apple\",\r\n  \"os\": \"iOS\"\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/devices/{serial}/clients` (get) - OperationId turned from `getDeviceClients` to `DevicesClientsBySerialGet`",
    "messageHtml": "OperationId turned from <code>getDeviceClients</code> to <code>DevicesClientsBySerialGet</code>",
    "path": "/devices/{serial}/clients",
    "method": "get",
    "previousOperationId": "getDeviceClients",
    "currentOperationId": "DevicesClientsBySerialGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "List the clients of a device, up to a maximum of a month ago. The usage of each client is returned in kilobytes. If the device is a switch, the switchport is returned; otherwise the switchport field is null.",
      "summary": "getDeviceClients",
      "tags": [
        "Clients"
      ],
      "operationId": "DevicesClientsBySerialGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "serial",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "t0",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
        },
        {
          "name": "timespan",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"usage\": {\r\n    \"sent\": 138.0,\r\n    \"recv\": 61.0\r\n  },\r\n  \"id\": \"k74272e\",\r\n  \"description\": \"Miles's phone\",\r\n  \"mac\": \"00:11:22:33:44:55\",\r\n  \"ip\": \"1.2.3.4\",\r\n  \"user\": \"milesmeraki\",\r\n  \"vlan\": 255,\r\n  \"switchport\": null,\r\n  \"mdnsName\": \"Miles's phone\",\r\n  \"dhcpHostname\": \"MilesPhone\"\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "delete-path",
    "message": "`/networks/{networkId}/clients/{idOrMacOrIp}/trafficHistory` - Deleted",
    "messageHtml": "Deleted",
    "path": "/networks/{networkId}/clients/{idOrMacOrIp}/trafficHistory",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "delete-path",
    "message": "`/networks/{networkId}/clients/{idOrMacOrIp}/events` - Deleted",
    "messageHtml": "Deleted",
    "path": "/networks/{networkId}/clients/{idOrMacOrIp}/events",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "delete-path",
    "message": "`/networks/{networkId}/clients/{idOrMacOrIp}/latencyHistory` - Deleted",
    "messageHtml": "Deleted",
    "path": "/networks/{networkId}/clients/{idOrMacOrIp}/latencyHistory",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/organizations/{organizationId}/configTemplates` (get) - OperationId turned from `getOrganizationConfigTemplates` to `OrganizationsConfigTemplatesByOrganizationIdGet`",
    "messageHtml": "OperationId turned from <code>getOrganizationConfigTemplates</code> to <code>OrganizationsConfigTemplatesByOrganizationIdGet</code>",
    "path": "/organizations/{organizationId}/configTemplates",
    "method": "get",
    "previousOperationId": "getOrganizationConfigTemplates",
    "currentOperationId": "OrganizationsConfigTemplatesByOrganizationIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "List the configuration templates for this organization",
      "summary": "getOrganizationConfigTemplates",
      "tags": [
        "Config templates"
      ],
      "operationId": "OrganizationsConfigTemplatesByOrganizationIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"id\": \"N_24329156\",\r\n    \"name\": \"My config template\"\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "delete-method",
    "message": "`/organizations/{organizationId}/configTemplates/{id}` **put** - Method Deleted",
    "messageHtml": "<strong>put</strong> - Method Deleted",
    "path": "/organizations/{organizationId}/configTemplates/{id}",
    "method": "put",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/organizations/{organizationId}/configTemplates/{id}` (delete) - OperationId turned from `deleteOrganizationConfigTemplate` to `OrganizationsConfigTemplatesByOrganizationIdAndIdDelete`",
    "messageHtml": "OperationId turned from <code>deleteOrganizationConfigTemplate</code> to <code>OrganizationsConfigTemplatesByOrganizationIdAndIdDelete</code>",
    "path": "/organizations/{organizationId}/configTemplates/{id}",
    "method": "delete",
    "previousOperationId": "deleteOrganizationConfigTemplate",
    "currentOperationId": "OrganizationsConfigTemplatesByOrganizationIdAndIdDelete",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Remove a configuration template",
      "summary": "deleteOrganizationConfigTemplate",
      "tags": [
        "Config templates"
      ],
      "operationId": "OrganizationsConfigTemplatesByOrganizationIdAndIdDelete",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/devices` (get) - OperationId turned from `getNetworkDevices` to `NetworksDevicesByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkDevices</code> to <code>NetworksDevicesByNetworkIdGet</code>",
    "path": "/networks/{networkId}/devices",
    "method": "get",
    "previousOperationId": "getNetworkDevices",
    "currentOperationId": "NetworksDevicesByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "List the devices in a network",
      "summary": "getNetworkDevices",
      "tags": [
        "Devices"
      ],
      "operationId": "NetworksDevicesByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"name\": \"My AP\",\r\n    \"lat\": 37.4180951010362,\r\n    \"lng\": -122.098531723022,\r\n    \"serial\": \"Q234-ABCD-5678\",\r\n    \"mac\": \"00:11:22:33:44:55\",\r\n    \"model\": \"MR34\",\r\n    \"address\": \"1600 Pennsylvania Ave\",\r\n    \"notes\": \"My AP's note\",\r\n    \"lanIp\": \"1.2.3.4\",\r\n    \"tags\": \" recently-added \",\r\n    \"networkId\": \"N_24329156\",\r\n    \"beaconIdParams\": {\r\n      \"uuid\": \"00000000-0000-0000-0000-000000000000\",\r\n      \"major\": 5,\r\n      \"minor\": 3\r\n    }\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/devices/{serial}` (get) - OperationId turned from `getNetworkDevice` to `NetworksDevicesByNetworkIdAndSerialGet`",
    "messageHtml": "OperationId turned from <code>getNetworkDevice</code> to <code>NetworksDevicesByNetworkIdAndSerialGet</code>",
    "path": "/networks/{networkId}/devices/{serial}",
    "method": "get",
    "previousOperationId": "getNetworkDevice",
    "currentOperationId": "NetworksDevicesByNetworkIdAndSerialGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Return a single device",
      "summary": "getNetworkDevice",
      "tags": [
        "Devices"
      ],
      "operationId": "NetworksDevicesByNetworkIdAndSerialGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "serial",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"name\": \"My AP\",\r\n  \"lat\": 37.4180951010362,\r\n  \"lng\": -122.098531723022,\r\n  \"serial\": \"Q234-ABCD-5678\",\r\n  \"mac\": \"00:11:22:33:44:55\",\r\n  \"model\": \"MR34\",\r\n  \"address\": \"1600 Pennsylvania Ave\",\r\n  \"notes\": \"My AP's note\",\r\n  \"lanIp\": \"1.2.3.4\",\r\n  \"tags\": \" recently-added \",\r\n  \"networkId\": \"N_24329156\",\r\n  \"beaconIdParams\": {\r\n    \"uuid\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"major\": 5,\r\n    \"minor\": 3\r\n  }\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/devices/{serial}` (put) - OperationId turned from `updateNetworkDevice` to `NetworksDevicesByNetworkIdAndSerialPut`",
    "messageHtml": "OperationId turned from <code>updateNetworkDevice</code> to <code>NetworksDevicesByNetworkIdAndSerialPut</code>",
    "path": "/networks/{networkId}/devices/{serial}",
    "method": "put",
    "previousOperationId": "updateNetworkDevice",
    "currentOperationId": "NetworksDevicesByNetworkIdAndSerialPut",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Update the attributes of a device",
      "summary": "updateNetworkDevice",
      "tags": [
        "Devices"
      ],
      "operationId": "NetworksDevicesByNetworkIdAndSerialPut",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "serial",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "updateNetworkDevice",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/updateNetworkDevice"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"name\": \"My AP\",\r\n  \"lat\": 37.4180951010362,\r\n  \"lng\": -122.098531723022,\r\n  \"serial\": \"Q234-ABCD-5678\",\r\n  \"mac\": \"00:11:22:33:44:55\",\r\n  \"model\": \"MR34\",\r\n  \"address\": \"1600 Pennsylvania Ave\",\r\n  \"notes\": \"My AP's note\",\r\n  \"lanIp\": \"1.2.3.4\",\r\n  \"tags\": \" recently-added \",\r\n  \"networkId\": \"N_24329156\",\r\n  \"beaconIdParams\": {\r\n    \"uuid\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"major\": 5,\r\n    \"minor\": 3\r\n  }\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-object-property-type",
    "message": "`paths//networks/{networkId}/devices/{serial}/put/parameters/updateNetworkDevice/schema` - Property `moveMapMarker` type turn from `string` to `boolean`",
    "messageHtml": "<code>paths//networks/{networkId}/devices/{serial}/put/parameters/updateNetworkDevice/schema</code> - Property <code>moveMapMarker</code> type turn from <code>string</code> to <code>boolean</code>",
    "path": "paths//networks/{networkId}/devices/{serial}/put/parameters/updateNetworkDevice/schema",
    "Property": "moveMapMarker",
    "previousType": "string",
    "currentType": "boolean",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/devices/{serial}/performance` (get) - OperationId turned from `getNetworkDevicePerformance` to `NetworksDevicesPerformanceByNetworkIdAndSerialGet`",
    "messageHtml": "OperationId turned from <code>getNetworkDevicePerformance</code> to <code>NetworksDevicesPerformanceByNetworkIdAndSerialGet</code>",
    "path": "/networks/{networkId}/devices/{serial}/performance",
    "method": "get",
    "previousOperationId": "getNetworkDevicePerformance",
    "currentOperationId": "NetworksDevicesPerformanceByNetworkIdAndSerialGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Return the performance score for a single device. Only primary MX devices supported. If no data is available, a 204 error code is returned.",
      "summary": "getNetworkDevicePerformance",
      "tags": [
        "Devices"
      ],
      "operationId": "NetworksDevicesPerformanceByNetworkIdAndSerialGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "serial",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"perfScore\": 10\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/devices/{serial}/uplink` (get) - OperationId turned from `getNetworkDeviceUplink` to `NetworksDevicesUplinkByNetworkIdAndSerialGet`",
    "messageHtml": "OperationId turned from <code>getNetworkDeviceUplink</code> to <code>NetworksDevicesUplinkByNetworkIdAndSerialGet</code>",
    "path": "/networks/{networkId}/devices/{serial}/uplink",
    "method": "get",
    "previousOperationId": "getNetworkDeviceUplink",
    "currentOperationId": "NetworksDevicesUplinkByNetworkIdAndSerialGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Return the uplink information for a device.",
      "summary": "getNetworkDeviceUplink",
      "tags": [
        "Devices"
      ],
      "operationId": "NetworksDevicesUplinkByNetworkIdAndSerialGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "serial",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"interface\": \"WAN 1\",\r\n    \"status\": \"Active\",\r\n    \"ip\": \"1.2.3.4\",\r\n    \"gateway\": \"1.2.3.5\",\r\n    \"publicIp\": \"123.123.123.1\",\r\n    \"dns\": \"8.8.8.8, 8.8.4.4\",\r\n    \"usingStaticIp\": false\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/devices/{serial}/lldp_cdp` (get) - OperationId turned from `getNetworkDeviceLldp_cdp` to `NetworksDevicesLldpCdpByNetworkIdAndSerialGet`",
    "messageHtml": "OperationId turned from <code>getNetworkDeviceLldp_cdp</code> to <code>NetworksDevicesLldpCdpByNetworkIdAndSerialGet</code>",
    "path": "/networks/{networkId}/devices/{serial}/lldp_cdp",
    "method": "get",
    "previousOperationId": "getNetworkDeviceLldp_cdp",
    "currentOperationId": "NetworksDevicesLldpCdpByNetworkIdAndSerialGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "List LLDP and CDP information for a device",
      "summary": "getNetworkDeviceLldp_cdp",
      "tags": [
        "Devices"
      ],
      "operationId": "NetworksDevicesLldpCdpByNetworkIdAndSerialGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "serial",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "timespan",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The timespan for which LLDP and CDP information will be fetched. Must be in seconds and less than or equal to a month (2592000 seconds). LLDP and CDP information is sent to the Meraki dashboard every 10 minutes. In instances where this LLDP and CDP information matches an existing entry in the Meraki dashboard, the data is updated once every two hours. Meraki recommends querying LLDP and CDP information at an interval slightly greater than two hours, to ensure that unchanged CDP / LLDP information can be queried consistently."
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"sourceMac\": \"00:11:22:33:44:55\",\r\n  \"ports\": {\r\n    \"8\": {\r\n      \"cdp\": {\r\n        \"deviceId\": \"e0553d8cdf53\",\r\n        \"portId\": \"Port 10\",\r\n        \"address\": \"00:11:22:33:44:55\",\r\n        \"sourcePort\": \"8\"\r\n      }\r\n    },\r\n    \"12\": {\r\n      \"cdp\": {\r\n        \"deviceId\": \"e0553d8cdf53\",\r\n        \"portId\": \"Port 11\",\r\n        \"address\": \"00:11:22:33:44:55\",\r\n        \"sourcePort\": \"12\"\r\n      },\r\n      \"lldp\": {\r\n        \"systemName\": \"Meraki MS350-24X - Phineas\",\r\n        \"portId\": \"11\",\r\n        \"managementAddress\": \"00:11:22:33:44:55\",\r\n        \"sourcePort\": \"12\"\r\n      }\r\n    }\r\n  }\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/devices/claim` (post) - OperationId turned from `claimNetworkDevices` to `NetworksDevicesClaimByNetworkIdPost`",
    "messageHtml": "OperationId turned from <code>claimNetworkDevices</code> to <code>NetworksDevicesClaimByNetworkIdPost</code>",
    "path": "/networks/{networkId}/devices/claim",
    "method": "post",
    "previousOperationId": "claimNetworkDevices",
    "currentOperationId": "NetworksDevicesClaimByNetworkIdPost",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Claim a device into a network",
      "summary": "claimNetworkDevices",
      "tags": [
        "Devices"
      ],
      "operationId": "NetworksDevicesClaimByNetworkIdPost",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "claimNetworkDevices",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/claimNetworkDevices"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/devices/{serial}/remove` (post) - OperationId turned from `removeNetworkDevice` to `NetworksDevicesRemoveByNetworkIdAndSerialPost`",
    "messageHtml": "OperationId turned from <code>removeNetworkDevice</code> to <code>NetworksDevicesRemoveByNetworkIdAndSerialPost</code>",
    "path": "/networks/{networkId}/devices/{serial}/remove",
    "method": "post",
    "previousOperationId": "removeNetworkDevice",
    "currentOperationId": "NetworksDevicesRemoveByNetworkIdAndSerialPost",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Remove a single device",
      "summary": "removeNetworkDevice",
      "tags": [
        "Devices"
      ],
      "operationId": "NetworksDevicesRemoveByNetworkIdAndSerialPost",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "serial",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "204": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/devices/{serial}/lossAndLatencyHistory` (get) - OperationId turned from `getNetworkDeviceLossAndLatencyHistory` to `NetworksDevicesLossAndLatencyHistoryByNetworkIdAndSerialGet`",
    "messageHtml": "OperationId turned from <code>getNetworkDeviceLossAndLatencyHistory</code> to <code>NetworksDevicesLossAndLatencyHistoryByNetworkIdAndSerialGet</code>",
    "path": "/networks/{networkId}/devices/{serial}/lossAndLatencyHistory",
    "method": "get",
    "previousOperationId": "getNetworkDeviceLossAndLatencyHistory",
    "currentOperationId": "NetworksDevicesLossAndLatencyHistoryByNetworkIdAndSerialGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Get the uplink loss percentage and latency in milliseconds for a wired network device.",
      "summary": "getNetworkDeviceLossAndLatencyHistory",
      "tags": [
        "Devices"
      ],
      "operationId": "NetworksDevicesLossAndLatencyHistoryByNetworkIdAndSerialGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "serial",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "t0",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
        },
        {
          "name": "t1",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
        },
        {
          "name": "timespan",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
        },
        {
          "name": "resolution",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "The time resolution in seconds for returned data. The valid resolutions are: 60, 600, 3600, 86400. The default is 60."
        },
        {
          "name": "uplink",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The WAN uplink used to obtain the requested stats. Valid uplinks are wan1, wan2, cellular. The default is wan1."
        },
        {
          "name": "ip",
          "in": "query",
          "required": true,
          "type": "string",
          "description": "The destination IP used to obtain the requested stats. This is required."
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"startTime\": \"2018-10-09T22:18:27Z\",\r\n    \"endTime\": \"2018-10-09T22:19:27Z\",\r\n    \"lossPercent\": 5,\r\n    \"latencyMs\": 324\r\n  },\r\n  {\r\n    \"startTime\": \"2018-10-09T22:19:27Z\",\r\n    \"endTime\": \"2018-10-09T22:20:27Z\",\r\n    \"lossPercent\": 1,\r\n    \"latencyMs\": 43\r\n  },\r\n  {\r\n    \"startTime\": \"2018-10-09T22:20:27Z\",\r\n    \"endTime\": \"2018-10-09T22:21:27Z\",\r\n    \"lossPercent\": 0,\r\n    \"latencyMs\": 44\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/devices/{serial}/reboot` (post) - OperationId turned from `rebootNetworkDevice` to `NetworksDevicesRebootByNetworkIdAndSerialPost`",
    "messageHtml": "OperationId turned from <code>rebootNetworkDevice</code> to <code>NetworksDevicesRebootByNetworkIdAndSerialPost</code>",
    "path": "/networks/{networkId}/devices/{serial}/reboot",
    "method": "post",
    "previousOperationId": "rebootNetworkDevice",
    "currentOperationId": "NetworksDevicesRebootByNetworkIdAndSerialPost",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Reboot a device",
      "summary": "rebootNetworkDevice",
      "tags": [
        "Devices"
      ],
      "operationId": "NetworksDevicesRebootByNetworkIdAndSerialPost",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "serial",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"success\": true\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/devices/{serial}/blinkLeds` (post) - OperationId turned from `blinkNetworkDeviceLeds` to `NetworksDevicesBlinkLedsByNetworkIdAndSerialPost`",
    "messageHtml": "OperationId turned from <code>blinkNetworkDeviceLeds</code> to <code>NetworksDevicesBlinkLedsByNetworkIdAndSerialPost</code>",
    "path": "/networks/{networkId}/devices/{serial}/blinkLeds",
    "method": "post",
    "previousOperationId": "blinkNetworkDeviceLeds",
    "currentOperationId": "NetworksDevicesBlinkLedsByNetworkIdAndSerialPost",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Blink the LEDs on a device",
      "summary": "blinkNetworkDeviceLeds",
      "tags": [
        "Devices"
      ],
      "operationId": "NetworksDevicesBlinkLedsByNetworkIdAndSerialPost",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "serial",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "blinkNetworkDeviceLeds",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/blinkNetworkDeviceLeds"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"sentToDevice\": true\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/cellularFirewallRules` (get) - OperationId turned from `getNetworkCellularFirewallRules` to `NetworksCellularFirewallRulesByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkCellularFirewallRules</code> to <code>NetworksCellularFirewallRulesByNetworkIdGet</code>",
    "path": "/networks/{networkId}/cellularFirewallRules",
    "method": "get",
    "previousOperationId": "getNetworkCellularFirewallRules",
    "currentOperationId": "NetworksCellularFirewallRulesByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Return the cellular firewall rules for an MX network",
      "summary": "getNetworkCellularFirewallRules",
      "tags": [
        "MX cellular firewall"
      ],
      "operationId": "NetworksCellularFirewallRulesByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n    \"policy\": \"allow\",\r\n    \"protocol\": \"tcp\",\r\n    \"destPort\": 443,\r\n    \"destCidr\": \"192.168.1.0/24\",\r\n    \"srcPort\": \"Any\",\r\n    \"srcCidr\": \"Any\",\r\n    \"syslogEnabled\": false\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/cellularFirewallRules` (put) - OperationId turned from `updateNetworkCellularFirewallRules` to `NetworksCellularFirewallRulesByNetworkIdPut`",
    "messageHtml": "OperationId turned from <code>updateNetworkCellularFirewallRules</code> to <code>NetworksCellularFirewallRulesByNetworkIdPut</code>",
    "path": "/networks/{networkId}/cellularFirewallRules",
    "method": "put",
    "previousOperationId": "updateNetworkCellularFirewallRules",
    "currentOperationId": "NetworksCellularFirewallRulesByNetworkIdPut",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Update the cellular firewall rules of an MX network",
      "summary": "updateNetworkCellularFirewallRules",
      "tags": [
        "MX cellular firewall"
      ],
      "operationId": "NetworksCellularFirewallRulesByNetworkIdPut",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "updateNetworkCellularFirewallRules",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/updateNetworkCellularFirewallRules"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n    \"policy\": \"allow\",\r\n    \"protocol\": \"tcp\",\r\n    \"destPort\": 443,\r\n    \"destCidr\": \"192.168.1.0/24\",\r\n    \"srcPort\": \"Any\",\r\n    \"srcCidr\": \"Any\",\r\n    \"syslogEnabled\": false\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/l3FirewallRules` (get) - OperationId turned from `getNetworkL3FirewallRules` to `NetworksL3FirewallRulesByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkL3FirewallRules</code> to <code>NetworksL3FirewallRulesByNetworkIdGet</code>",
    "path": "/networks/{networkId}/l3FirewallRules",
    "method": "get",
    "previousOperationId": "getNetworkL3FirewallRules",
    "currentOperationId": "NetworksL3FirewallRulesByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Return the L3 firewall rules for an MX network",
      "summary": "getNetworkL3FirewallRules",
      "tags": [
        "MX L3 firewall"
      ],
      "operationId": "NetworksL3FirewallRulesByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n    \"policy\": \"allow\",\r\n    \"protocol\": \"tcp\",\r\n    \"destPort\": 443,\r\n    \"destCidr\": \"192.168.1.0/24\",\r\n    \"srcPort\": \"Any\",\r\n    \"srcCidr\": \"Any\",\r\n    \"syslogEnabled\": false\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/l3FirewallRules` (put) - OperationId turned from `updateNetworkL3FirewallRules` to `NetworksL3FirewallRulesByNetworkIdPut`",
    "messageHtml": "OperationId turned from <code>updateNetworkL3FirewallRules</code> to <code>NetworksL3FirewallRulesByNetworkIdPut</code>",
    "path": "/networks/{networkId}/l3FirewallRules",
    "method": "put",
    "previousOperationId": "updateNetworkL3FirewallRules",
    "currentOperationId": "NetworksL3FirewallRulesByNetworkIdPut",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Update the L3 firewall rules of an MX network",
      "summary": "updateNetworkL3FirewallRules",
      "tags": [
        "MX L3 firewall"
      ],
      "operationId": "NetworksL3FirewallRulesByNetworkIdPut",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "updateNetworkL3FirewallRules",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/updateNetworkL3FirewallRules"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n    \"policy\": \"allow\",\r\n    \"protocol\": \"tcp\",\r\n    \"destPort\": 443,\r\n    \"destCidr\": \"192.168.1.0/24\",\r\n    \"srcPort\": \"Any\",\r\n    \"srcCidr\": \"Any\",\r\n    \"syslogEnabled\": false\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/l7FirewallRules/applicationCategories` (get) - OperationId turned from `getNetworkL7FirewallRulesApplicationCategories` to `NetworksL7FirewallRulesApplicationCategoriesByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkL7FirewallRulesApplicationCategories</code> to <code>NetworksL7FirewallRulesApplicationCategoriesByNetworkIdGet</code>",
    "path": "/networks/{networkId}/l7FirewallRules/applicationCategories",
    "method": "get",
    "previousOperationId": "getNetworkL7FirewallRulesApplicationCategories",
    "currentOperationId": "NetworksL7FirewallRulesApplicationCategoriesByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Return the L7 firewall application categories and their associated applications for an MX network",
      "summary": "getNetworkL7FirewallRulesApplicationCategories",
      "tags": [
        "MX L7 application categories"
      ],
      "operationId": "NetworksL7FirewallRulesApplicationCategoriesByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"applicationCategories\": [\r\n      {\r\n        \"id\": \"meraki:layer7/category/24\",\r\n        \"name\": \"Advertising\",\r\n        \"applications\": [\r\n          {\r\n            \"id\": \"meraki:layer7/application/5\",\r\n            \"name\": \"Advertising.com\"\r\n          },\r\n          {\r\n            \"id\": \"meraki:layer7/application/0\",\r\n            \"name\": \"AppNexus\"\r\n          },\r\n          {\r\n            \"id\": \"meraki:layer7/application/1\",\r\n            \"name\": \"Brightroll\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/l7FirewallRules` (get) - OperationId turned from `getNetworkL7FirewallRules` to `NetworksL7FirewallRulesByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkL7FirewallRules</code> to <code>NetworksL7FirewallRulesByNetworkIdGet</code>",
    "path": "/networks/{networkId}/l7FirewallRules",
    "method": "get",
    "previousOperationId": "getNetworkL7FirewallRules",
    "currentOperationId": "NetworksL7FirewallRulesByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "List the MX L7 firewall rules for an MX network",
      "summary": "getNetworkL7FirewallRules",
      "tags": [
        "MX L7 firewall"
      ],
      "operationId": "NetworksL7FirewallRulesByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"rules\": [\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"application\",\r\n      \"value\": {\r\n        \"id\": \"meraki:layer7/application/67\",\r\n        \"name\": \"Xbox LIVE\"\r\n      }\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"applicationCategory\",\r\n      \"value\": {\r\n        \"id\": \"meraki:layer7/category/2\",\r\n        \"name\": \"Blogging\"\r\n      }\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"host\",\r\n      \"value\": \"google.com\"\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"port\",\r\n      \"value\": \"23\"\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"ipRange\",\r\n      \"value\": \"10.11.12.00/24\"\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"ipRange\",\r\n      \"value\": \"10.11.12.00/24:5555\"\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"blacklistedCountries\",\r\n      \"value\": [\r\n        \"AX\",\r\n        \"CA\"\r\n      ]\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"whitelistedCountries\",\r\n      \"value\": [\r\n        \"US\"\r\n      ]\r\n    }\r\n  ]\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/l7FirewallRules` (put) - OperationId turned from `updateNetworkL7FirewallRules` to `NetworksL7FirewallRulesByNetworkIdPut`",
    "messageHtml": "OperationId turned from <code>updateNetworkL7FirewallRules</code> to <code>NetworksL7FirewallRulesByNetworkIdPut</code>",
    "path": "/networks/{networkId}/l7FirewallRules",
    "method": "put",
    "previousOperationId": "updateNetworkL7FirewallRules",
    "currentOperationId": "NetworksL7FirewallRulesByNetworkIdPut",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Update the MX L7 firewall rules for an MX network",
      "summary": "updateNetworkL7FirewallRules",
      "tags": [
        "MX L7 firewall"
      ],
      "operationId": "NetworksL7FirewallRulesByNetworkIdPut",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "updateNetworkL7FirewallRules",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/updateNetworkL7FirewallRules"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"rules\": [\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"application\",\r\n      \"value\": {\r\n        \"id\": \"meraki:layer7/application/67\",\r\n        \"name\": \"Xbox LIVE\"\r\n      }\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"applicationCategory\",\r\n      \"value\": {\r\n        \"id\": \"meraki:layer7/category/2\",\r\n        \"name\": \"Blogging\"\r\n      }\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"host\",\r\n      \"value\": \"google.com\"\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"port\",\r\n      \"value\": \"23\"\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"ipRange\",\r\n      \"value\": \"10.11.12.00/24\"\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"ipRange\",\r\n      \"value\": \"10.11.12.00/24:5555\"\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"blacklistedCountries\",\r\n      \"value\": [\r\n        \"AX\",\r\n        \"CA\"\r\n      ]\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"whitelistedCountries\",\r\n      \"value\": [\r\n        \"US\"\r\n      ]\r\n    }\r\n  ]\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/organizations/{organizationId}/vpnFirewallRules` (get) - OperationId turned from `getOrganizationVpnFirewallRules` to `OrganizationsVpnFirewallRulesByOrganizationIdGet`",
    "messageHtml": "OperationId turned from <code>getOrganizationVpnFirewallRules</code> to <code>OrganizationsVpnFirewallRulesByOrganizationIdGet</code>",
    "path": "/organizations/{organizationId}/vpnFirewallRules",
    "method": "get",
    "previousOperationId": "getOrganizationVpnFirewallRules",
    "currentOperationId": "OrganizationsVpnFirewallRulesByOrganizationIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Return the firewall rules for an organization's site-to-site VPN",
      "summary": "getOrganizationVpnFirewallRules",
      "tags": [
        "MX VPN firewall"
      ],
      "operationId": "OrganizationsVpnFirewallRulesByOrganizationIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n    \"policy\": \"allow\",\r\n    \"protocol\": \"tcp\",\r\n    \"destPort\": 443,\r\n    \"destCidr\": \"192.168.1.0/24\",\r\n    \"srcPort\": \"Any\",\r\n    \"srcCidr\": \"Any\",\r\n    \"syslogEnabled\": false\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/organizations/{organizationId}/vpnFirewallRules` (put) - OperationId turned from `updateOrganizationVpnFirewallRules` to `OrganizationsVpnFirewallRulesByOrganizationIdPut`",
    "messageHtml": "OperationId turned from <code>updateOrganizationVpnFirewallRules</code> to <code>OrganizationsVpnFirewallRulesByOrganizationIdPut</code>",
    "path": "/organizations/{organizationId}/vpnFirewallRules",
    "method": "put",
    "previousOperationId": "updateOrganizationVpnFirewallRules",
    "currentOperationId": "OrganizationsVpnFirewallRulesByOrganizationIdPut",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Update the firewall rules of an organization's site-to-site VPN",
      "summary": "updateOrganizationVpnFirewallRules",
      "tags": [
        "MX VPN firewall"
      ],
      "operationId": "OrganizationsVpnFirewallRulesByOrganizationIdPut",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "updateOrganizationVpnFirewallRules",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/updateOrganizationVpnFirewallRules"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n    \"policy\": \"allow\",\r\n    \"protocol\": \"tcp\",\r\n    \"destPort\": 443,\r\n    \"destCidr\": \"192.168.1.0/24\",\r\n    \"srcPort\": \"Any\",\r\n    \"srcCidr\": \"Any\",\r\n    \"syslogEnabled\": false\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/ssids/{number}/l3FirewallRules` (get) - OperationId turned from `getNetworkSsidL3FirewallRules` to `NetworksSsidsL3FirewallRulesByNetworkIdAndNumberGet`",
    "messageHtml": "OperationId turned from <code>getNetworkSsidL3FirewallRules</code> to <code>NetworksSsidsL3FirewallRulesByNetworkIdAndNumberGet</code>",
    "path": "/networks/{networkId}/ssids/{number}/l3FirewallRules",
    "method": "get",
    "previousOperationId": "getNetworkSsidL3FirewallRules",
    "currentOperationId": "NetworksSsidsL3FirewallRulesByNetworkIdAndNumberGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Return the L3 firewall rules for an SSID on an MR network",
      "summary": "getNetworkSsidL3FirewallRules",
      "tags": [
        "MR L3 firewall"
      ],
      "operationId": "NetworksSsidsL3FirewallRulesByNetworkIdAndNumberGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "number",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n    \"policy\": \"allow\",\r\n    \"protocol\": \"tcp\",\r\n    \"destPort\": 443,\r\n    \"destCidr\": \"192.168.1.0/24\"\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/ssids/{number}/l3FirewallRules` (put) - OperationId turned from `updateNetworkSsidL3FirewallRules` to `NetworksSsidsL3FirewallRulesByNetworkIdAndNumberPut`",
    "messageHtml": "OperationId turned from <code>updateNetworkSsidL3FirewallRules</code> to <code>NetworksSsidsL3FirewallRulesByNetworkIdAndNumberPut</code>",
    "path": "/networks/{networkId}/ssids/{number}/l3FirewallRules",
    "method": "put",
    "previousOperationId": "updateNetworkSsidL3FirewallRules",
    "currentOperationId": "NetworksSsidsL3FirewallRulesByNetworkIdAndNumberPut",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Update the L3 firewall rules of an SSID on an MR network",
      "summary": "updateNetworkSsidL3FirewallRules",
      "tags": [
        "MR L3 firewall"
      ],
      "operationId": "NetworksSsidsL3FirewallRulesByNetworkIdAndNumberPut",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "number",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "updateNetworkSsidL3FirewallRules",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/updateNetworkSsidL3FirewallRules"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n    \"policy\": \"allow\",\r\n    \"protocol\": \"tcp\",\r\n    \"destPort\": 443,\r\n    \"destCidr\": \"192.168.1.0/24\"\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/groupPolicies` (get) - OperationId turned from `getNetworkGroupPolicies` to `NetworksGroupPoliciesByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkGroupPolicies</code> to <code>NetworksGroupPoliciesByNetworkIdGet</code>",
    "path": "/networks/{networkId}/groupPolicies",
    "method": "get",
    "previousOperationId": "getNetworkGroupPolicies",
    "currentOperationId": "NetworksGroupPoliciesByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "List the group policies in a network",
      "summary": "getNetworkGroupPolicies",
      "tags": [
        "Group policies"
      ],
      "operationId": "NetworksGroupPoliciesByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"name\": \"No video streaming\",\r\n    \"groupPolicyId\": \"101\",\r\n    \"scheduling\": {\r\n      \"enabled\": true,\r\n      \"monday\": {\r\n        \"active\": true,\r\n        \"from\": \"9:00\",\r\n        \"to\": \"17:00\"\r\n      },\r\n      \"tuesday\": {\r\n        \"active\": true,\r\n        \"from\": \"9:00\",\r\n        \"to\": \"17:00\"\r\n      },\r\n      \"wednesday\": {\r\n        \"active\": true,\r\n        \"from\": \"9:00\",\r\n        \"to\": \"17:00\"\r\n      },\r\n      \"thursday\": {\r\n        \"active\": true,\r\n        \"from\": \"9:00\",\r\n        \"to\": \"17:00\"\r\n      },\r\n      \"friday\": {\r\n        \"active\": true,\r\n        \"from\": \"9:00\",\r\n        \"to\": \"17:00\"\r\n      },\r\n      \"saturday\": {\r\n        \"active\": false,\r\n        \"from\": \"0:00\",\r\n        \"to\": \"24:00\"\r\n      },\r\n      \"sunday\": {\r\n        \"active\": false,\r\n        \"from\": \"0:00\",\r\n        \"to\": \"24:00\"\r\n      }\r\n    },\r\n    \"bandwidth\": {\r\n      \"settings\": \"custom\",\r\n      \"bandwidthLimits\": {\r\n        \"limitUp\": 1000000,\r\n        \"limitDown\": 1000000\r\n      }\r\n    },\r\n    \"firewallAndTrafficShaping\": {\r\n      \"settings\": \"custom\",\r\n      \"trafficShapingRules\": [\r\n        {\r\n          \"definitions\": [\r\n            {\r\n              \"type\": \"host\",\r\n              \"value\": \"google.com\"\r\n            },\r\n            {\r\n              \"type\": \"port\",\r\n              \"value\": \"9090\"\r\n            },\r\n            {\r\n              \"type\": \"ipRange\",\r\n              \"value\": \"192.1.0.0\"\r\n            },\r\n            {\r\n              \"type\": \"ipRange\",\r\n              \"value\": \"192.1.0.0/16\"\r\n            },\r\n            {\r\n              \"type\": \"ipRange\",\r\n              \"value\": \"10.1.0.0/16:80\"\r\n            },\r\n            {\r\n              \"type\": \"localNet\",\r\n              \"value\": \"192.168.0.0/16\"\r\n            },\r\n            {\r\n              \"type\": \"applicationCategory\",\r\n              \"value\": {\r\n                \"id\": \"meraki:layer7/category/2\",\r\n                \"name\": \"Blogging\"\r\n              }\r\n            },\r\n            {\r\n              \"type\": \"application\",\r\n              \"value\": {\r\n                \"id\": \"meraki:layer7/application/133\",\r\n                \"name\": \"Battle.net\"\r\n              }\r\n            }\r\n          ],\r\n          \"perClientBandwidthLimits\": {\r\n            \"settings\": \"custom\",\r\n            \"bandwidthLimits\": {\r\n              \"limitUp\": 1000000,\r\n              \"limitDown\": 1000000\r\n            }\r\n          },\r\n          \"dscpTagValue\": null,\r\n          \"pcpTagValue\": null\r\n        }\r\n      ],\r\n      \"l3FirewallRules\": [\r\n        {\r\n          \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n          \"policy\": \"allow\",\r\n          \"protocol\": \"tcp\",\r\n          \"destPort\": 443,\r\n          \"destCidr\": \"192.168.1.0/24\"\r\n        }\r\n      ],\r\n      \"l7FirewallRules\": [\r\n        [\r\n          {\r\n            \"policy\": \"deny\",\r\n            \"type\": \"application\",\r\n            \"value\": {\r\n              \"id\": \"meraki:layer7/application/67\",\r\n              \"name\": \"Xbox LIVE\"\r\n            }\r\n          },\r\n          {\r\n            \"policy\": \"deny\",\r\n            \"type\": \"applicationCategory\",\r\n            \"value\": {\r\n              \"id\": \"meraki:layer7/category/2\",\r\n              \"name\": \"Blogging\"\r\n            }\r\n          },\r\n          {\r\n            \"policy\": \"deny\",\r\n            \"type\": \"host\",\r\n            \"value\": \"google.com\"\r\n          },\r\n          {\r\n            \"policy\": \"deny\",\r\n            \"type\": \"port\",\r\n            \"value\": \"23\"\r\n          },\r\n          {\r\n            \"policy\": \"deny\",\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"10.11.12.00/24\"\r\n          },\r\n          {\r\n            \"policy\": \"deny\",\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"10.11.12.00/24:5555\"\r\n          },\r\n          {\r\n            \"policy\": \"deny\",\r\n            \"type\": \"blacklistedCountries\",\r\n            \"value\": [\r\n              \"AX\",\r\n              \"CA\"\r\n            ]\r\n          },\r\n          {\r\n            \"policy\": \"deny\",\r\n            \"type\": \"whitelistedCountries\",\r\n            \"value\": [\r\n              \"US\"\r\n            ]\r\n          }\r\n        ]\r\n      ]\r\n    },\r\n    \"splashAuthSettings\": \"bypass\",\r\n    \"vlanTagging\": {\r\n      \"settings\": \"custom\",\r\n      \"vlanId\": \"1\"\r\n    },\r\n    \"bonjourForwarding\": {\r\n      \"settings\": \"custom\",\r\n      \"rules\": [\r\n        {\r\n          \"description\": \"A simple bonjour rule\",\r\n          \"vlanId\": \"1\",\r\n          \"services\": [\r\n            \"All Services\"\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/groupPolicies` (post) - OperationId turned from `createNetworkGroupPolicy` to `NetworksGroupPoliciesByNetworkIdPost`",
    "messageHtml": "OperationId turned from <code>createNetworkGroupPolicy</code> to <code>NetworksGroupPoliciesByNetworkIdPost</code>",
    "path": "/networks/{networkId}/groupPolicies",
    "method": "post",
    "previousOperationId": "createNetworkGroupPolicy",
    "currentOperationId": "NetworksGroupPoliciesByNetworkIdPost",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Create a group policy",
      "summary": "createNetworkGroupPolicy",
      "tags": [
        "Group policies"
      ],
      "operationId": "NetworksGroupPoliciesByNetworkIdPost",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "createNetworkGroupPolicy",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/createNetworkGroupPolicy"
          }
        }
      ],
      "responses": {
        "201": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"name\": \"No video streaming\",\r\n  \"groupPolicyId\": \"101\",\r\n  \"scheduling\": {\r\n    \"enabled\": true,\r\n    \"monday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"tuesday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"wednesday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"thursday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"friday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"saturday\": {\r\n      \"active\": false,\r\n      \"from\": \"0:00\",\r\n      \"to\": \"24:00\"\r\n    },\r\n    \"sunday\": {\r\n      \"active\": false,\r\n      \"from\": \"0:00\",\r\n      \"to\": \"24:00\"\r\n    }\r\n  },\r\n  \"bandwidth\": {\r\n    \"settings\": \"custom\",\r\n    \"bandwidthLimits\": {\r\n      \"limitUp\": 1000000,\r\n      \"limitDown\": 1000000\r\n    }\r\n  },\r\n  \"firewallAndTrafficShaping\": {\r\n    \"settings\": \"custom\",\r\n    \"trafficShapingRules\": [\r\n      {\r\n        \"definitions\": [\r\n          {\r\n            \"type\": \"host\",\r\n            \"value\": \"google.com\"\r\n          },\r\n          {\r\n            \"type\": \"port\",\r\n            \"value\": \"9090\"\r\n          },\r\n          {\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"192.1.0.0\"\r\n          },\r\n          {\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"192.1.0.0/16\"\r\n          },\r\n          {\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"10.1.0.0/16:80\"\r\n          },\r\n          {\r\n            \"type\": \"localNet\",\r\n            \"value\": \"192.168.0.0/16\"\r\n          },\r\n          {\r\n            \"type\": \"applicationCategory\",\r\n            \"value\": {\r\n              \"id\": \"meraki:layer7/category/2\",\r\n              \"name\": \"Blogging\"\r\n            }\r\n          },\r\n          {\r\n            \"type\": \"application\",\r\n            \"value\": {\r\n              \"id\": \"meraki:layer7/application/133\",\r\n              \"name\": \"Battle.net\"\r\n            }\r\n          }\r\n        ],\r\n        \"perClientBandwidthLimits\": {\r\n          \"settings\": \"custom\",\r\n          \"bandwidthLimits\": {\r\n            \"limitUp\": 1000000,\r\n            \"limitDown\": 1000000\r\n          }\r\n        },\r\n        \"dscpTagValue\": null,\r\n        \"pcpTagValue\": null\r\n      }\r\n    ],\r\n    \"l3FirewallRules\": [\r\n      {\r\n        \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n        \"policy\": \"allow\",\r\n        \"protocol\": \"tcp\",\r\n        \"destPort\": 443,\r\n        \"destCidr\": \"192.168.1.0/24\"\r\n      }\r\n    ],\r\n    \"l7FirewallRules\": [\r\n      [\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"application\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/application/67\",\r\n            \"name\": \"Xbox LIVE\"\r\n          }\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"applicationCategory\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/category/2\",\r\n            \"name\": \"Blogging\"\r\n          }\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"host\",\r\n          \"value\": \"google.com\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"port\",\r\n          \"value\": \"23\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"10.11.12.00/24\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"10.11.12.00/24:5555\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"blacklistedCountries\",\r\n          \"value\": [\r\n            \"AX\",\r\n            \"CA\"\r\n          ]\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"whitelistedCountries\",\r\n          \"value\": [\r\n            \"US\"\r\n          ]\r\n        }\r\n      ]\r\n    ]\r\n  },\r\n  \"splashAuthSettings\": \"bypass\",\r\n  \"vlanTagging\": {\r\n    \"settings\": \"custom\",\r\n    \"vlanId\": \"1\"\r\n  },\r\n  \"bonjourForwarding\": {\r\n    \"settings\": \"custom\",\r\n    \"rules\": [\r\n      {\r\n        \"description\": \"A simple bonjour rule\",\r\n        \"vlanId\": \"1\",\r\n        \"services\": [\r\n          \"All Services\"\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/groupPolicies/{groupPolicyId}` (get) - OperationId turned from `getNetworkGroupPolicy` to `NetworksGroupPoliciesByNetworkIdAndGroupPolicyIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkGroupPolicy</code> to <code>NetworksGroupPoliciesByNetworkIdAndGroupPolicyIdGet</code>",
    "path": "/networks/{networkId}/groupPolicies/{groupPolicyId}",
    "method": "get",
    "previousOperationId": "getNetworkGroupPolicy",
    "currentOperationId": "NetworksGroupPoliciesByNetworkIdAndGroupPolicyIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Display a group policy",
      "summary": "getNetworkGroupPolicy",
      "tags": [
        "Group policies"
      ],
      "operationId": "NetworksGroupPoliciesByNetworkIdAndGroupPolicyIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "groupPolicyId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"name\": \"No video streaming\",\r\n  \"groupPolicyId\": \"101\",\r\n  \"scheduling\": {\r\n    \"enabled\": true,\r\n    \"monday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"tuesday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"wednesday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"thursday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"friday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"saturday\": {\r\n      \"active\": false,\r\n      \"from\": \"0:00\",\r\n      \"to\": \"24:00\"\r\n    },\r\n    \"sunday\": {\r\n      \"active\": false,\r\n      \"from\": \"0:00\",\r\n      \"to\": \"24:00\"\r\n    }\r\n  },\r\n  \"bandwidth\": {\r\n    \"settings\": \"custom\",\r\n    \"bandwidthLimits\": {\r\n      \"limitUp\": 1000000,\r\n      \"limitDown\": 1000000\r\n    }\r\n  },\r\n  \"firewallAndTrafficShaping\": {\r\n    \"settings\": \"custom\",\r\n    \"trafficShapingRules\": [\r\n      {\r\n        \"definitions\": [\r\n          {\r\n            \"type\": \"host\",\r\n            \"value\": \"google.com\"\r\n          },\r\n          {\r\n            \"type\": \"port\",\r\n            \"value\": \"9090\"\r\n          },\r\n          {\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"192.1.0.0\"\r\n          },\r\n          {\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"192.1.0.0/16\"\r\n          },\r\n          {\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"10.1.0.0/16:80\"\r\n          },\r\n          {\r\n            \"type\": \"localNet\",\r\n            \"value\": \"192.168.0.0/16\"\r\n          },\r\n          {\r\n            \"type\": \"applicationCategory\",\r\n            \"value\": {\r\n              \"id\": \"meraki:layer7/category/2\",\r\n              \"name\": \"Blogging\"\r\n            }\r\n          },\r\n          {\r\n            \"type\": \"application\",\r\n            \"value\": {\r\n              \"id\": \"meraki:layer7/application/133\",\r\n              \"name\": \"Battle.net\"\r\n            }\r\n          }\r\n        ],\r\n        \"perClientBandwidthLimits\": {\r\n          \"settings\": \"custom\",\r\n          \"bandwidthLimits\": {\r\n            \"limitUp\": 1000000,\r\n            \"limitDown\": 1000000\r\n          }\r\n        },\r\n        \"dscpTagValue\": null,\r\n        \"pcpTagValue\": null\r\n      }\r\n    ],\r\n    \"l3FirewallRules\": [\r\n      {\r\n        \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n        \"policy\": \"allow\",\r\n        \"protocol\": \"tcp\",\r\n        \"destPort\": 443,\r\n        \"destCidr\": \"192.168.1.0/24\"\r\n      }\r\n    ],\r\n    \"l7FirewallRules\": [\r\n      [\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"application\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/application/67\",\r\n            \"name\": \"Xbox LIVE\"\r\n          }\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"applicationCategory\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/category/2\",\r\n            \"name\": \"Blogging\"\r\n          }\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"host\",\r\n          \"value\": \"google.com\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"port\",\r\n          \"value\": \"23\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"10.11.12.00/24\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"10.11.12.00/24:5555\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"blacklistedCountries\",\r\n          \"value\": [\r\n            \"AX\",\r\n            \"CA\"\r\n          ]\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"whitelistedCountries\",\r\n          \"value\": [\r\n            \"US\"\r\n          ]\r\n        }\r\n      ]\r\n    ]\r\n  },\r\n  \"splashAuthSettings\": \"bypass\",\r\n  \"vlanTagging\": {\r\n    \"settings\": \"custom\",\r\n    \"vlanId\": \"1\"\r\n  },\r\n  \"bonjourForwarding\": {\r\n    \"settings\": \"custom\",\r\n    \"rules\": [\r\n      {\r\n        \"description\": \"A simple bonjour rule\",\r\n        \"vlanId\": \"1\",\r\n        \"services\": [\r\n          \"All Services\"\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/groupPolicies/{groupPolicyId}` (put) - OperationId turned from `updateNetworkGroupPolicy` to `NetworksGroupPoliciesByNetworkIdAndGroupPolicyIdPut`",
    "messageHtml": "OperationId turned from <code>updateNetworkGroupPolicy</code> to <code>NetworksGroupPoliciesByNetworkIdAndGroupPolicyIdPut</code>",
    "path": "/networks/{networkId}/groupPolicies/{groupPolicyId}",
    "method": "put",
    "previousOperationId": "updateNetworkGroupPolicy",
    "currentOperationId": "NetworksGroupPoliciesByNetworkIdAndGroupPolicyIdPut",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Update a group policy",
      "summary": "updateNetworkGroupPolicy",
      "tags": [
        "Group policies"
      ],
      "operationId": "NetworksGroupPoliciesByNetworkIdAndGroupPolicyIdPut",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "groupPolicyId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "updateNetworkGroupPolicy",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/updateNetworkGroupPolicy"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"name\": \"No video streaming\",\r\n  \"groupPolicyId\": \"101\",\r\n  \"scheduling\": {\r\n    \"enabled\": true,\r\n    \"monday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"tuesday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"wednesday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"thursday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"friday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"saturday\": {\r\n      \"active\": false,\r\n      \"from\": \"0:00\",\r\n      \"to\": \"24:00\"\r\n    },\r\n    \"sunday\": {\r\n      \"active\": false,\r\n      \"from\": \"0:00\",\r\n      \"to\": \"24:00\"\r\n    }\r\n  },\r\n  \"bandwidth\": {\r\n    \"settings\": \"custom\",\r\n    \"bandwidthLimits\": {\r\n      \"limitUp\": 1000000,\r\n      \"limitDown\": 1000000\r\n    }\r\n  },\r\n  \"firewallAndTrafficShaping\": {\r\n    \"settings\": \"custom\",\r\n    \"trafficShapingRules\": [\r\n      {\r\n        \"definitions\": [\r\n          {\r\n            \"type\": \"host\",\r\n            \"value\": \"google.com\"\r\n          },\r\n          {\r\n            \"type\": \"port\",\r\n            \"value\": \"9090\"\r\n          },\r\n          {\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"192.1.0.0\"\r\n          },\r\n          {\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"192.1.0.0/16\"\r\n          },\r\n          {\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"10.1.0.0/16:80\"\r\n          },\r\n          {\r\n            \"type\": \"localNet\",\r\n            \"value\": \"192.168.0.0/16\"\r\n          },\r\n          {\r\n            \"type\": \"applicationCategory\",\r\n            \"value\": {\r\n              \"id\": \"meraki:layer7/category/2\",\r\n              \"name\": \"Blogging\"\r\n            }\r\n          },\r\n          {\r\n            \"type\": \"application\",\r\n            \"value\": {\r\n              \"id\": \"meraki:layer7/application/133\",\r\n              \"name\": \"Battle.net\"\r\n            }\r\n          }\r\n        ],\r\n        \"perClientBandwidthLimits\": {\r\n          \"settings\": \"custom\",\r\n          \"bandwidthLimits\": {\r\n            \"limitUp\": 1000000,\r\n            \"limitDown\": 1000000\r\n          }\r\n        },\r\n        \"dscpTagValue\": null,\r\n        \"pcpTagValue\": null\r\n      }\r\n    ],\r\n    \"l3FirewallRules\": [\r\n      {\r\n        \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n        \"policy\": \"allow\",\r\n        \"protocol\": \"tcp\",\r\n        \"destPort\": 443,\r\n        \"destCidr\": \"192.168.1.0/24\"\r\n      }\r\n    ],\r\n    \"l7FirewallRules\": [\r\n      [\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"application\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/application/67\",\r\n            \"name\": \"Xbox LIVE\"\r\n          }\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"applicationCategory\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/category/2\",\r\n            \"name\": \"Blogging\"\r\n          }\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"host\",\r\n          \"value\": \"google.com\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"port\",\r\n          \"value\": \"23\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"10.11.12.00/24\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"10.11.12.00/24:5555\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"blacklistedCountries\",\r\n          \"value\": [\r\n            \"AX\",\r\n            \"CA\"\r\n          ]\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"whitelistedCountries\",\r\n          \"value\": [\r\n            \"US\"\r\n          ]\r\n        }\r\n      ]\r\n    ]\r\n  },\r\n  \"splashAuthSettings\": \"bypass\",\r\n  \"vlanTagging\": {\r\n    \"settings\": \"custom\",\r\n    \"vlanId\": \"1\"\r\n  },\r\n  \"bonjourForwarding\": {\r\n    \"settings\": \"custom\",\r\n    \"rules\": [\r\n      {\r\n        \"description\": \"A simple bonjour rule\",\r\n        \"vlanId\": \"1\",\r\n        \"services\": [\r\n          \"All Services\"\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/groupPolicies/{groupPolicyId}` (delete) - OperationId turned from `deleteNetworkGroupPolicy` to `NetworksGroupPoliciesByNetworkIdAndGroupPolicyIdDelete`",
    "messageHtml": "OperationId turned from <code>deleteNetworkGroupPolicy</code> to <code>NetworksGroupPoliciesByNetworkIdAndGroupPolicyIdDelete</code>",
    "path": "/networks/{networkId}/groupPolicies/{groupPolicyId}",
    "method": "delete",
    "previousOperationId": "deleteNetworkGroupPolicy",
    "currentOperationId": "NetworksGroupPoliciesByNetworkIdAndGroupPolicyIdDelete",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Delete a group policy",
      "summary": "deleteNetworkGroupPolicy",
      "tags": [
        "Group policies"
      ],
      "operationId": "NetworksGroupPoliciesByNetworkIdAndGroupPolicyIdDelete",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "groupPolicyId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "204": {
          "description": "Successful operation",
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/httpServers` (get) - OperationId turned from `getNetworkHttpServers` to `NetworksHttpServersByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkHttpServers</code> to <code>NetworksHttpServersByNetworkIdGet</code>",
    "path": "/networks/{networkId}/httpServers",
    "method": "get",
    "previousOperationId": "getNetworkHttpServers",
    "currentOperationId": "NetworksHttpServersByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "List the HTTP servers for a network",
      "summary": "getNetworkHttpServers",
      "tags": [
        "HTTP servers"
      ],
      "operationId": "NetworksHttpServersByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"id\": \"ABC123\",\r\n    \"networkId\": \"N_123\",\r\n    \"name\": \"My HTTP server\",\r\n    \"url\": \"https://www.example.com/webhooks\",\r\n    \"sharedSecret\": \"foobar\"\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/httpServers` (post) - OperationId turned from `createNetworkHttpServer` to `NetworksHttpServersByNetworkIdPost`",
    "messageHtml": "OperationId turned from <code>createNetworkHttpServer</code> to <code>NetworksHttpServersByNetworkIdPost</code>",
    "path": "/networks/{networkId}/httpServers",
    "method": "post",
    "previousOperationId": "createNetworkHttpServer",
    "currentOperationId": "NetworksHttpServersByNetworkIdPost",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Add an HTTP server",
      "summary": "createNetworkHttpServer",
      "tags": [
        "HTTP servers"
      ],
      "operationId": "NetworksHttpServersByNetworkIdPost",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "createNetworkHttpServer",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/createNetworkHttpServer"
          }
        }
      ],
      "responses": {
        "201": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"id\": \"ABC123\",\r\n  \"networkId\": \"N_123\",\r\n  \"name\": \"My HTTP server\",\r\n  \"url\": \"https://www.example.com/webhooks\",\r\n  \"sharedSecret\": \"foobar\"\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/httpServers/{id}` (get) - OperationId turned from `getNetworkHttpServer` to `NetworksHttpServersByNetworkIdAndIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkHttpServer</code> to <code>NetworksHttpServersByNetworkIdAndIdGet</code>",
    "path": "/networks/{networkId}/httpServers/{id}",
    "method": "get",
    "previousOperationId": "getNetworkHttpServer",
    "currentOperationId": "NetworksHttpServersByNetworkIdAndIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Return an HTTP server",
      "summary": "getNetworkHttpServer",
      "tags": [
        "HTTP servers"
      ],
      "operationId": "NetworksHttpServersByNetworkIdAndIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"id\": \"ABC123\",\r\n  \"networkId\": \"N_123\",\r\n  \"name\": \"My HTTP server\",\r\n  \"url\": \"https://www.example.com/webhooks\",\r\n  \"sharedSecret\": \"foobar\"\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/httpServers/{id}` (put) - OperationId turned from `updateNetworkHttpServer` to `NetworksHttpServersByNetworkIdAndIdPut`",
    "messageHtml": "OperationId turned from <code>updateNetworkHttpServer</code> to <code>NetworksHttpServersByNetworkIdAndIdPut</code>",
    "path": "/networks/{networkId}/httpServers/{id}",
    "method": "put",
    "previousOperationId": "updateNetworkHttpServer",
    "currentOperationId": "NetworksHttpServersByNetworkIdAndIdPut",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Update an HTTP server",
      "summary": "updateNetworkHttpServer",
      "tags": [
        "HTTP servers"
      ],
      "operationId": "NetworksHttpServersByNetworkIdAndIdPut",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "updateNetworkHttpServer",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/updateNetworkHttpServer"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"id\": \"ABC123\",\r\n  \"networkId\": \"N_123\",\r\n  \"name\": \"My HTTP server\",\r\n  \"url\": \"https://www.example.com/webhooks\",\r\n  \"sharedSecret\": \"foobar\"\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/httpServers/{id}` (delete) - OperationId turned from `deleteNetworkHttpServer` to `NetworksHttpServersByNetworkIdAndIdDelete`",
    "messageHtml": "OperationId turned from <code>deleteNetworkHttpServer</code> to <code>NetworksHttpServersByNetworkIdAndIdDelete</code>",
    "path": "/networks/{networkId}/httpServers/{id}",
    "method": "delete",
    "previousOperationId": "deleteNetworkHttpServer",
    "currentOperationId": "NetworksHttpServersByNetworkIdAndIdDelete",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Delete an HTTP server",
      "summary": "deleteNetworkHttpServer",
      "tags": [
        "HTTP servers"
      ],
      "operationId": "NetworksHttpServersByNetworkIdAndIdDelete",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "204": {
          "description": "Successful operation",
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/httpServers/webhookTests` (post) - OperationId turned from `createNetworkHttpServersWebhookTest` to `NetworksHttpServersWebhookTestsByNetworkIdPost`",
    "messageHtml": "OperationId turned from <code>createNetworkHttpServersWebhookTest</code> to <code>NetworksHttpServersWebhookTestsByNetworkIdPost</code>",
    "path": "/networks/{networkId}/httpServers/webhookTests",
    "method": "post",
    "previousOperationId": "createNetworkHttpServersWebhookTest",
    "currentOperationId": "NetworksHttpServersWebhookTestsByNetworkIdPost",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Send a test webhook",
      "summary": "createNetworkHttpServersWebhookTest",
      "tags": [
        "HTTP servers"
      ],
      "operationId": "NetworksHttpServersWebhookTestsByNetworkIdPost",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "createNetworkHttpServersWebhookTest",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/createNetworkHttpServersWebhookTest"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"id\": \"1234\",\r\n  \"url\": \"https://www.example.com/path\",\r\n  \"status\": \"enqueued\"\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/httpServers/webhookTests/{id}` (get) - OperationId turned from `getNetworkHttpServersWebhookTest` to `NetworksHttpServersWebhookTestsByNetworkIdAndIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkHttpServersWebhookTest</code> to <code>NetworksHttpServersWebhookTestsByNetworkIdAndIdGet</code>",
    "path": "/networks/{networkId}/httpServers/webhookTests/{id}",
    "method": "get",
    "previousOperationId": "getNetworkHttpServersWebhookTest",
    "currentOperationId": "NetworksHttpServersWebhookTestsByNetworkIdAndIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Return the status of a webhook test",
      "summary": "getNetworkHttpServersWebhookTest",
      "tags": [
        "HTTP servers"
      ],
      "operationId": "NetworksHttpServersWebhookTestsByNetworkIdAndIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"id\": \"1234\",\r\n  \"url\": \"https://www.example.com/path\",\r\n  \"status\": \"delivered\"\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/merakiAuthUsers` (get) - OperationId turned from `getNetworkMerakiAuthUsers` to `NetworksMerakiAuthUsersByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkMerakiAuthUsers</code> to <code>NetworksMerakiAuthUsersByNetworkIdGet</code>",
    "path": "/networks/{networkId}/merakiAuthUsers",
    "method": "get",
    "previousOperationId": "getNetworkMerakiAuthUsers",
    "currentOperationId": "NetworksMerakiAuthUsersByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "List the splash or RADIUS users configured under Meraki Authentication for a network",
      "summary": "getNetworkMerakiAuthUsers",
      "tags": [
        "Meraki auth users"
      ],
      "operationId": "NetworksMerakiAuthUsersByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"id\": \"aGlAaGkuY29t\",\r\n    \"email\": \"miles@meraki.com\",\r\n    \"name\": \"Miles Meraki\",\r\n    \"createdAt\": 1518365681,\r\n    \"accountType\": \"Guest\",\r\n    \"authorizations\": [\r\n      {\r\n        \"authorizedZone\": \"Store WiFi\",\r\n        \"expiresAt\": 1526087474,\r\n        \"authorizedByName\": \"Miles Meraki\",\r\n        \"authorizedByEmail\": \"miles@meraki.com\"\r\n      }\r\n    ]\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/merakiAuthUsers/{id}` (get) - OperationId turned from `getNetworkMerakiAuthUser` to `NetworksMerakiAuthUsersByNetworkIdAndIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkMerakiAuthUser</code> to <code>NetworksMerakiAuthUsersByNetworkIdAndIdGet</code>",
    "path": "/networks/{networkId}/merakiAuthUsers/{id}",
    "method": "get",
    "previousOperationId": "getNetworkMerakiAuthUser",
    "currentOperationId": "NetworksMerakiAuthUsersByNetworkIdAndIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Return the Meraki Auth splash or RADIUS user",
      "summary": "getNetworkMerakiAuthUser",
      "tags": [
        "Meraki auth users"
      ],
      "operationId": "NetworksMerakiAuthUsersByNetworkIdAndIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"id\": \"aGlAaGkuY29t\",\r\n  \"email\": \"miles@meraki.com\",\r\n  \"name\": \"Miles Meraki\",\r\n  \"createdAt\": 1518365681,\r\n  \"accountType\": \"Guest\",\r\n  \"authorizations\": [\r\n    {\r\n      \"authorizedZone\": \"Store WiFi\",\r\n      \"expiresAt\": 1526087474,\r\n      \"authorizedByName\": \"Miles Meraki\",\r\n      \"authorizedByEmail\": \"miles@meraki.com\"\r\n    }\r\n  ]\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/organizations/{organizationId}/openapiSpec` (get) - OperationId turned from `getOrganizationOpenapiSpec` to `OrganizationsOpenapiSpecByOrganizationIdGet`",
    "messageHtml": "OperationId turned from <code>getOrganizationOpenapiSpec</code> to <code>OrganizationsOpenapiSpecByOrganizationIdGet</code>",
    "path": "/organizations/{organizationId}/openapiSpec",
    "method": "get",
    "previousOperationId": "getOrganizationOpenapiSpec",
    "currentOperationId": "OrganizationsOpenapiSpecByOrganizationIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Return the OpenAPI 2.0 Specification of the organization's API documentation in JSON",
      "summary": "getOrganizationOpenapiSpec",
      "tags": [
        "OpenAPI Spec"
      ],
      "operationId": "OrganizationsOpenapiSpecByOrganizationIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"swagger\": \"2.0\",\r\n  \"info\": {\r\n    \"version\": \"0.1.0\",\r\n    \"title\": \"Meraki Dashboard API\",\r\n    \"description\": \"This collection of API calls provides an easy way to interact with a Cisco Meraki network\"\r\n  },\r\n  \"host\": \"api.meraki.com\",\r\n  \"basePath\": \"/api/v0\",\r\n  \"schemes\": [\r\n    \"https\"\r\n  ],\r\n  \"consumes\": [\r\n    \"application/json\"\r\n  ],\r\n  \"produces\": [\r\n    \"application/json\"\r\n  ],\r\n  \"securityDefinitions\": {\r\n    \"meraki_api_key\": {\r\n      \"type\": \"apiKey\",\r\n      \"name\": \"X-Cisco-Meraki-API-Key\",\r\n      \"in\": \"header\"\r\n    }\r\n  },\r\n  \"security\": [\r\n    {\r\n      \"meraki_api_key\": []\r\n    }\r\n  ],\r\n  \"paths\": {\r\n    \"/pets\": {\r\n      \"get\": {\r\n        \"description\": \"Returns all pets from the system\",\r\n        \"operationId\": \"getPets\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Successful operation\",\r\n            \"examples\": {\r\n              \"application/json\": [\r\n                {\r\n                  \"id\": 1,\r\n                  \"name\": \"Riley\",\r\n                  \"type\": \"Cat\"\r\n                }\r\n              ]\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "delete-path",
    "message": "`/organizations/{organizationId}/alertSettings` - Deleted",
    "messageHtml": "Deleted",
    "path": "/organizations/{organizationId}/alertSettings",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/organizations` (get) - OperationId turned from `getOrganizations` to `OrganizationsGet`",
    "messageHtml": "OperationId turned from <code>getOrganizations</code> to <code>OrganizationsGet</code>",
    "path": "/organizations",
    "method": "get",
    "previousOperationId": "getOrganizations",
    "currentOperationId": "OrganizationsGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "List the organizations that the user has privileges on",
      "summary": "getOrganizations",
      "tags": [
        "Organizations"
      ],
      "operationId": "OrganizationsGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"id\": 2930418,\r\n    \"name\": \"My organization\"\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/organizations` (post) - OperationId turned from `createOrganization` to `OrganizationsPost`",
    "messageHtml": "OperationId turned from <code>createOrganization</code> to <code>OrganizationsPost</code>",
    "path": "/organizations",
    "method": "post",
    "previousOperationId": "createOrganization",
    "currentOperationId": "OrganizationsPost",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Create a new organization",
      "summary": "createOrganization",
      "tags": [
        "Organizations"
      ],
      "operationId": "OrganizationsPost",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "createOrganization",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/createOrganization"
          }
        }
      ],
      "responses": {
        "201": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"id\": 2930418,\r\n  \"name\": \"My organization\"\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/organizations/{id}` (get) - OperationId turned from `getOrganization` to `OrganizationsByIdGet`",
    "messageHtml": "OperationId turned from <code>getOrganization</code> to <code>OrganizationsByIdGet</code>",
    "path": "/organizations/{id}",
    "method": "get",
    "previousOperationId": "getOrganization",
    "currentOperationId": "OrganizationsByIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Return an organization",
      "summary": "getOrganization",
      "tags": [
        "Organizations"
      ],
      "operationId": "OrganizationsByIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"id\": 2930418,\r\n  \"name\": \"My organization\"\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/organizations/{id}` (put) - OperationId turned from `updateOrganization` to `OrganizationsByIdPut`",
    "messageHtml": "OperationId turned from <code>updateOrganization</code> to <code>OrganizationsByIdPut</code>",
    "path": "/organizations/{id}",
    "method": "put",
    "previousOperationId": "updateOrganization",
    "currentOperationId": "OrganizationsByIdPut",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Update an organization",
      "summary": "updateOrganization",
      "tags": [
        "Organizations"
      ],
      "operationId": "OrganizationsByIdPut",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "updateOrganization",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/updateOrganization"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"id\": 2930418,\r\n  \"name\": \"My organization\"\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/organizations/{id}/clone` (post) - OperationId turned from `cloneOrganization` to `OrganizationsCloneByIdPost`",
    "messageHtml": "OperationId turned from <code>cloneOrganization</code> to <code>OrganizationsCloneByIdPost</code>",
    "path": "/organizations/{id}/clone",
    "method": "post",
    "previousOperationId": "cloneOrganization",
    "currentOperationId": "OrganizationsCloneByIdPost",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Create a new organization by cloning the addressed organization",
      "summary": "cloneOrganization",
      "tags": [
        "Organizations"
      ],
      "operationId": "OrganizationsCloneByIdPost",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "cloneOrganization",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/cloneOrganization"
          }
        }
      ],
      "responses": {
        "201": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"id\": 2930418,\r\n  \"name\": \"My organization\"\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/organizations/{id}/licenseState` (get) - OperationId turned from `getOrganizationLicenseState` to `OrganizationsLicenseStateByIdGet`",
    "messageHtml": "OperationId turned from <code>getOrganizationLicenseState</code> to <code>OrganizationsLicenseStateByIdGet</code>",
    "path": "/organizations/{id}/licenseState",
    "method": "get",
    "previousOperationId": "getOrganizationLicenseState",
    "currentOperationId": "OrganizationsLicenseStateByIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Return the license state for an organization",
      "summary": "getOrganizationLicenseState",
      "tags": [
        "Organizations"
      ],
      "operationId": "OrganizationsLicenseStateByIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"status\": \"OK\",\r\n  \"expirationDate\": \"Feb 8, 2020 UTC\",\r\n  \"licensedDeviceCounts\": {\r\n    \"MS\": 100\r\n  }\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/organizations/{id}/inventory` (get) - OperationId turned from `getOrganizationInventory` to `OrganizationsInventoryByIdGet`",
    "messageHtml": "OperationId turned from <code>getOrganizationInventory</code> to <code>OrganizationsInventoryByIdGet</code>",
    "path": "/organizations/{id}/inventory",
    "method": "get",
    "previousOperationId": "getOrganizationInventory",
    "currentOperationId": "OrganizationsInventoryByIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Return the inventory for an organization",
      "summary": "getOrganizationInventory",
      "tags": [
        "Organizations"
      ],
      "operationId": "OrganizationsInventoryByIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"mac\": \"00:11:22:33:44:55\",\r\n    \"serial\": \"Q234-ABCD-5678\",\r\n    \"networkId\": \"N_24329156\",\r\n    \"model\": \"MR34\",\r\n    \"claimedAt\": 1518365681.0,\r\n    \"publicIp\": \"123.123.123.1\",\r\n    \"name\": \"My AP\"\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/organizations/{id}/deviceStatuses` (get) - OperationId turned from `getOrganizationDeviceStatuses` to `OrganizationsDeviceStatusesByIdGet`",
    "messageHtml": "OperationId turned from <code>getOrganizationDeviceStatuses</code> to <code>OrganizationsDeviceStatusesByIdGet</code>",
    "path": "/organizations/{id}/deviceStatuses",
    "method": "get",
    "previousOperationId": "getOrganizationDeviceStatuses",
    "currentOperationId": "OrganizationsDeviceStatusesByIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "List the status of every Meraki device in the organization",
      "summary": "getOrganizationDeviceStatuses",
      "tags": [
        "Organizations"
      ],
      "operationId": "OrganizationsDeviceStatusesByIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"name\": \"My AP\",\r\n    \"serial\": \"Q234-ABCD-5678\",\r\n    \"mac\": \"00:11:22:33:44:55\",\r\n    \"status\": \"online\",\r\n    \"lanIp\": \"1.2.3.4\",\r\n    \"publicIp\": \"123.123.123.1\",\r\n    \"networkId\": \"N_24329156\"\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "delete-path",
    "message": "`/organizations/{id}/snmp` - Deleted",
    "messageHtml": "Deleted",
    "path": "/organizations/{id}/snmp",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/organizations/{organizationId}/claim` (post) - OperationId turned from `claimOrganization` to `OrganizationsClaimByOrganizationIdPost`",
    "messageHtml": "OperationId turned from <code>claimOrganization</code> to <code>OrganizationsClaimByOrganizationIdPost</code>",
    "path": "/organizations/{organizationId}/claim",
    "method": "post",
    "previousOperationId": "claimOrganization",
    "currentOperationId": "OrganizationsClaimByOrganizationIdPost",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Claim a device, license key, or order into an organization. When claiming by order, all devices and licenses in the order will be claimed; licenses will be added to the organization and devices will be placed in the organization's inventory. These three types of claims are mutually exclusive and cannot be performed in one request.",
      "summary": "claimOrganization",
      "tags": [
        "Organizations"
      ],
      "operationId": "OrganizationsClaimByOrganizationIdPost",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "claimOrganization",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/claimOrganization"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/organizations/{organizationId}/uplinksLossAndLatency` (get) - OperationId turned from `getOrganizationUplinksLossAndLatency` to `OrganizationsUplinksLossAndLatencyByOrganizationIdGet`",
    "messageHtml": "OperationId turned from <code>getOrganizationUplinksLossAndLatency</code> to <code>OrganizationsUplinksLossAndLatencyByOrganizationIdGet</code>",
    "path": "/organizations/{organizationId}/uplinksLossAndLatency",
    "method": "get",
    "previousOperationId": "getOrganizationUplinksLossAndLatency",
    "currentOperationId": "OrganizationsUplinksLossAndLatencyByOrganizationIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Return the uplink loss and latency for every MX in the organization from at latest 2 minutes ago",
      "summary": "getOrganizationUplinksLossAndLatency",
      "tags": [
        "Organizations"
      ],
      "operationId": "OrganizationsUplinksLossAndLatencyByOrganizationIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "t0",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
        },
        {
          "name": "t1",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 5 minutes after t0. The latest possible time that t1 can be is 2 minutes into the past."
        },
        {
          "name": "timespan",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 5 minutes. The default is 5 minutes."
        },
        {
          "name": "uplink",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "Optional filter for a specific WAN uplink. Valid uplinks are wan1, wan2, cellular. Default will return all uplinks."
        },
        {
          "name": "ip",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "Optional filter for a specific destination IP. Default will return all destination IPs."
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"networkId\": \"N_12345\",\r\n    \"serial\": \"Q2AB-CDEF-GHIJ\",\r\n    \"uplink\": \"wan1\",\r\n    \"ip\": \"8.8.8.8\",\r\n    \"timeSeries\": [\r\n      {\r\n        \"ts\": \"2019-01-31T18:46:13Z\",\r\n        \"lossPercent\": 5.3,\r\n        \"latencyMs\": 194.9\r\n      }\r\n    ]\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/organizations/{organizationId}/thirdPartyVPNPeers` (get) - OperationId turned from `getOrganizationThirdPartyVPNPeers` to `OrganizationsThirdPartyVPNPeersByOrganizationIdGet`",
    "messageHtml": "OperationId turned from <code>getOrganizationThirdPartyVPNPeers</code> to <code>OrganizationsThirdPartyVPNPeersByOrganizationIdGet</code>",
    "path": "/organizations/{organizationId}/thirdPartyVPNPeers",
    "method": "get",
    "previousOperationId": "getOrganizationThirdPartyVPNPeers",
    "currentOperationId": "OrganizationsThirdPartyVPNPeersByOrganizationIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Return the third party VPN peers for an organization",
      "summary": "getOrganizationThirdPartyVPNPeers",
      "tags": [
        "Organizations"
      ],
      "operationId": "OrganizationsThirdPartyVPNPeersByOrganizationIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"name\": \"My peer 1\",\r\n    \"publicIp\": \"123.123.123.1\",\r\n    \"privateSubnets\": [\r\n      \"192.168.1.0/24\",\r\n      \"192.168.128.0/24\"\r\n    ],\r\n    \"secret\": \"asdf1234\",\r\n    \"ipsecPolicies\": {\r\n      \"ikeCipherAlgo\": [\r\n        \"tripledes\"\r\n      ],\r\n      \"ikeAuthAlgo\": [\r\n        \"sha1\"\r\n      ],\r\n      \"ikeDiffieHellmanGroup\": [\r\n        \"group2\"\r\n      ],\r\n      \"ikeLifetime\": 28800,\r\n      \"childCipherAlgo\": [\r\n        \"aes128\"\r\n      ],\r\n      \"childAuthAlgo\": [\r\n        \"sha1\"\r\n      ],\r\n      \"childPfsGroup\": [\r\n        \"disabled\"\r\n      ],\r\n      \"childLifetime\": 28800\r\n    }\r\n  },\r\n  {\r\n    \"name\": \"My peer 2\",\r\n    \"publicIp\": \"123.123.123.2\",\r\n    \"privateSubnets\": [\r\n      \"192.168.2.0/24\",\r\n      \"192.168.129.0/24\"\r\n    ],\r\n    \"secret\": \"asdf56785678567856785678\",\r\n    \"ipsecPoliciesPreset\": \"default\"\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/organizations/{organizationId}/thirdPartyVPNPeers` (put) - OperationId turned from `updateOrganizationThirdPartyVPNPeers` to `OrganizationsThirdPartyVPNPeersByOrganizationIdPut`",
    "messageHtml": "OperationId turned from <code>updateOrganizationThirdPartyVPNPeers</code> to <code>OrganizationsThirdPartyVPNPeersByOrganizationIdPut</code>",
    "path": "/organizations/{organizationId}/thirdPartyVPNPeers",
    "method": "put",
    "previousOperationId": "updateOrganizationThirdPartyVPNPeers",
    "currentOperationId": "OrganizationsThirdPartyVPNPeersByOrganizationIdPut",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Update the third party VPN peers for an organization",
      "summary": "updateOrganizationThirdPartyVPNPeers",
      "tags": [
        "Organizations"
      ],
      "operationId": "OrganizationsThirdPartyVPNPeersByOrganizationIdPut",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "updateOrganizationThirdPartyVPNPeers",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/updateOrganizationThirdPartyVPNPeers"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"name\": \"My peer 1\",\r\n    \"publicIp\": \"123.123.123.1\",\r\n    \"privateSubnets\": [\r\n      \"192.168.1.0/24\",\r\n      \"192.168.128.0/24\"\r\n    ],\r\n    \"secret\": \"asdf1234\",\r\n    \"ipsecPolicies\": {\r\n      \"ikeCipherAlgo\": [\r\n        \"tripledes\"\r\n      ],\r\n      \"ikeAuthAlgo\": [\r\n        \"sha1\"\r\n      ],\r\n      \"ikeDiffieHellmanGroup\": [\r\n        \"group2\"\r\n      ],\r\n      \"ikeLifetime\": 28800,\r\n      \"childCipherAlgo\": [\r\n        \"aes128\"\r\n      ],\r\n      \"childAuthAlgo\": [\r\n        \"sha1\"\r\n      ],\r\n      \"childPfsGroup\": [\r\n        \"disabled\"\r\n      ],\r\n      \"childLifetime\": 28800\r\n    }\r\n  },\r\n  {\r\n    \"name\": \"My peer 2\",\r\n    \"publicIp\": \"123.123.123.2\",\r\n    \"privateSubnets\": [\r\n      \"192.168.2.0/24\",\r\n      \"192.168.129.0/24\"\r\n    ],\r\n    \"secret\": \"asdf56785678567856785678\",\r\n    \"ipsecPoliciesPreset\": \"default\"\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/pii/piiKeys` (get) - OperationId turned from `getNetworkPiiPiiKeys` to `NetworksPiiPiiKeysByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkPiiPiiKeys</code> to <code>NetworksPiiPiiKeysByNetworkIdGet</code>",
    "path": "/networks/{networkId}/pii/piiKeys",
    "method": "get",
    "previousOperationId": "getNetworkPiiPiiKeys",
    "currentOperationId": "NetworksPiiPiiKeysByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "List the keys required to access Personally Identifiable Information (PII) for a given identifier. Exactly one identifier will be accepted. If the organization contains org-wide Systems Manager users matching the key provided then there will be an entry with the key \"0\" containing the applicable keys.\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/piiKeys\n```",
      "summary": "getNetworkPiiPiiKeys",
      "tags": [
        "PII"
      ],
      "operationId": "NetworksPiiPiiKeysByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "username",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The username of a Systems Manager user"
        },
        {
          "name": "email",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The email of a network user account or a Systems Manager device"
        },
        {
          "name": "mac",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The MAC of a network client device or a Systems Manager device"
        },
        {
          "name": "serial",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The serial of a Systems Manager device"
        },
        {
          "name": "imei",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The IMEI of a Systems Manager device"
        },
        {
          "name": "bluetoothMac",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The MAC of a Bluetooth client"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"N_1234\": {\r\n    \"macs\": [\r\n      \"00:77:00:77:00:77\"\r\n    ],\r\n    \"emails\": [\r\n      \"fake@example.com\"\r\n    ],\r\n    \"usernames\": [\r\n      \"fakename\"\r\n    ],\r\n    \"serials\": [\r\n      \"abcd1234\"\r\n    ],\r\n    \"imeis\": [\r\n      \"990000862471854\"\r\n    ],\r\n    \"bluetoothMacs\": [\r\n      \"00:77:00:77:00:77\"\r\n    ]\r\n  }\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/pii/smDevicesForKey` (get) - OperationId turned from `getNetworkPiiSmDevicesForKey` to `NetworksPiiSmDevicesForKeyByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkPiiSmDevicesForKey</code> to <code>NetworksPiiSmDevicesForKeyByNetworkIdGet</code>",
    "path": "/networks/{networkId}/pii/smDevicesForKey",
    "method": "get",
    "previousOperationId": "getNetworkPiiSmDevicesForKey",
    "currentOperationId": "NetworksPiiSmDevicesForKeyByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Given a piece of Personally Identifiable Information (PII), return the Systems Manager device ID(s) associated with that identifier. These device IDs can be used with the Systems Manager API endpoints to retrieve device details. Exactly one identifier will be accepted.\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/smDevicesForKey\n```",
      "summary": "getNetworkPiiSmDevicesForKey",
      "tags": [
        "PII"
      ],
      "operationId": "NetworksPiiSmDevicesForKeyByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "username",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The username of a Systems Manager user"
        },
        {
          "name": "email",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The email of a network user account or a Systems Manager device"
        },
        {
          "name": "mac",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The MAC of a network client device or a Systems Manager device"
        },
        {
          "name": "serial",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The serial of a Systems Manager device"
        },
        {
          "name": "imei",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The IMEI of a Systems Manager device"
        },
        {
          "name": "bluetoothMac",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The MAC of a Bluetooth client"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"N_1234\": [\r\n    \"1099541095293\",\r\n    \"8348382288234\"\r\n  ]\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/pii/smOwnersForKey` (get) - OperationId turned from `getNetworkPiiSmOwnersForKey` to `NetworksPiiSmOwnersForKeyByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkPiiSmOwnersForKey</code> to <code>NetworksPiiSmOwnersForKeyByNetworkIdGet</code>",
    "path": "/networks/{networkId}/pii/smOwnersForKey",
    "method": "get",
    "previousOperationId": "getNetworkPiiSmOwnersForKey",
    "currentOperationId": "NetworksPiiSmOwnersForKeyByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Given a piece of Personally Identifiable Information (PII), return the Systems Manager owner ID(s) associated with that identifier. These owner IDs can be used with the Systems Manager API endpoints to retrieve owner details. Exactly one identifier will be accepted.\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/smOwnersForKey\n```",
      "summary": "getNetworkPiiSmOwnersForKey",
      "tags": [
        "PII"
      ],
      "operationId": "NetworksPiiSmOwnersForKeyByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "username",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The username of a Systems Manager user"
        },
        {
          "name": "email",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The email of a network user account or a Systems Manager device"
        },
        {
          "name": "mac",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The MAC of a network client device or a Systems Manager device"
        },
        {
          "name": "serial",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The serial of a Systems Manager device"
        },
        {
          "name": "imei",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The IMEI of a Systems Manager device"
        },
        {
          "name": "bluetoothMac",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The MAC of a Bluetooth client"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"N_1234\": [\r\n    \"1099541095293\"\r\n  ]\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/pii/requests` (get) - OperationId turned from `getNetworkPiiRequests` to `NetworksPiiRequestsByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkPiiRequests</code> to <code>NetworksPiiRequestsByNetworkIdGet</code>",
    "path": "/networks/{networkId}/pii/requests",
    "method": "get",
    "previousOperationId": "getNetworkPiiRequests",
    "currentOperationId": "NetworksPiiRequestsByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "List the PII requests for this network or organization\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/requests\n```",
      "summary": "getNetworkPiiRequests",
      "tags": [
        "PII"
      ],
      "operationId": "NetworksPiiRequestsByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"id\": \"1234\",\r\n    \"organizationWide\": false,\r\n    \"networkId\": \"N_1234\",\r\n    \"type\": \"delete\",\r\n    \"mac\": \"00:77:00:77:00:77\",\r\n    \"datasets\": \"['usage', 'events']\",\r\n    \"status\": \"Completed\",\r\n    \"createdAt\": 1524692227,\r\n    \"completedAt\": 1524702227\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/pii/requests` (post) - OperationId turned from `createNetworkPiiRequest` to `NetworksPiiRequestsByNetworkIdPost`",
    "messageHtml": "OperationId turned from <code>createNetworkPiiRequest</code> to <code>NetworksPiiRequestsByNetworkIdPost</code>",
    "path": "/networks/{networkId}/pii/requests",
    "method": "post",
    "previousOperationId": "createNetworkPiiRequest",
    "currentOperationId": "NetworksPiiRequestsByNetworkIdPost",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Submit a new delete or restrict processing PII request\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/requests\n```",
      "summary": "createNetworkPiiRequest",
      "tags": [
        "PII"
      ],
      "operationId": "NetworksPiiRequestsByNetworkIdPost",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "createNetworkPiiRequest",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/createNetworkPiiRequest"
          }
        }
      ],
      "responses": {
        "201": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"id\": \"1234\",\r\n  \"organizationWide\": false,\r\n  \"networkId\": \"N_1234\",\r\n  \"type\": \"delete\",\r\n  \"mac\": \"00:77:00:77:00:77\",\r\n  \"datasets\": \"['usage', 'events']\",\r\n  \"status\": \"Not visible in Dashboard; database deletion in process\",\r\n  \"createdAt\": 1524692227,\r\n  \"completedAt\": null\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/pii/requests/{requestId}` (get) - OperationId turned from `getNetworkPiiRequest` to `NetworksPiiRequestsByNetworkIdAndRequestIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkPiiRequest</code> to <code>NetworksPiiRequestsByNetworkIdAndRequestIdGet</code>",
    "path": "/networks/{networkId}/pii/requests/{requestId}",
    "method": "get",
    "previousOperationId": "getNetworkPiiRequest",
    "currentOperationId": "NetworksPiiRequestsByNetworkIdAndRequestIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Return a PII request\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/requests/{requestId}\n```",
      "summary": "getNetworkPiiRequest",
      "tags": [
        "PII"
      ],
      "operationId": "NetworksPiiRequestsByNetworkIdAndRequestIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "requestId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"id\": \"1234\",\r\n  \"organizationWide\": false,\r\n  \"networkId\": \"N_1234\",\r\n  \"type\": \"delete\",\r\n  \"mac\": \"00:77:00:77:00:77\",\r\n  \"datasets\": \"['usage', 'events']\",\r\n  \"status\": \"Completed\",\r\n  \"createdAt\": 1524692227,\r\n  \"completedAt\": 1524702227\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/pii/requests/{requestId}` (delete) - OperationId turned from `deleteNetworkPiiRequest` to `NetworksPiiRequestsByNetworkIdAndRequestIdDelete`",
    "messageHtml": "OperationId turned from <code>deleteNetworkPiiRequest</code> to <code>NetworksPiiRequestsByNetworkIdAndRequestIdDelete</code>",
    "path": "/networks/{networkId}/pii/requests/{requestId}",
    "method": "delete",
    "previousOperationId": "deleteNetworkPiiRequest",
    "currentOperationId": "NetworksPiiRequestsByNetworkIdAndRequestIdDelete",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Delete a restrict processing PII request\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/requests/{requestId}\n```",
      "summary": "deleteNetworkPiiRequest",
      "tags": [
        "PII"
      ],
      "operationId": "NetworksPiiRequestsByNetworkIdAndRequestIdDelete",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "requestId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "204": {
          "description": "Successful operation",
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/devices/{serial}/wireless/radioSettings` (get) - OperationId turned from `getNetworkDeviceWirelessRadioSettings` to `NetworksDevicesWirelessRadioSettingsByNetworkIdAndSerialGet`",
    "messageHtml": "OperationId turned from <code>getNetworkDeviceWirelessRadioSettings</code> to <code>NetworksDevicesWirelessRadioSettingsByNetworkIdAndSerialGet</code>",
    "path": "/networks/{networkId}/devices/{serial}/wireless/radioSettings",
    "method": "get",
    "previousOperationId": "getNetworkDeviceWirelessRadioSettings",
    "currentOperationId": "NetworksDevicesWirelessRadioSettingsByNetworkIdAndSerialGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Return the radio settings of a device",
      "summary": "getNetworkDeviceWirelessRadioSettings",
      "tags": [
        "Radio settings"
      ],
      "operationId": "NetworksDevicesWirelessRadioSettingsByNetworkIdAndSerialGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "serial",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"serial\": \"Q234-ABCD-5678\",\r\n  \"rfProfileId\": \"1234\"\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/devices/{serial}/wireless/radioSettings` (put) - OperationId turned from `updateNetworkDeviceWirelessRadioSettings` to `NetworksDevicesWirelessRadioSettingsByNetworkIdAndSerialPut`",
    "messageHtml": "OperationId turned from <code>updateNetworkDeviceWirelessRadioSettings</code> to <code>NetworksDevicesWirelessRadioSettingsByNetworkIdAndSerialPut</code>",
    "path": "/networks/{networkId}/devices/{serial}/wireless/radioSettings",
    "method": "put",
    "previousOperationId": "updateNetworkDeviceWirelessRadioSettings",
    "currentOperationId": "NetworksDevicesWirelessRadioSettingsByNetworkIdAndSerialPut",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Update the radio settings of a device",
      "summary": "updateNetworkDeviceWirelessRadioSettings",
      "tags": [
        "Radio settings"
      ],
      "operationId": "NetworksDevicesWirelessRadioSettingsByNetworkIdAndSerialPut",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "serial",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "updateNetworkDeviceWirelessRadioSettings",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/updateNetworkDeviceWirelessRadioSettings"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"serial\": \"Q234-ABCD-5678\",\r\n  \"rfProfileId\": \"1234\"\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/wireless/rfProfiles` (get) - OperationId turned from `getNetworkWirelessRfProfiles` to `NetworksWirelessRfProfilesByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkWirelessRfProfiles</code> to <code>NetworksWirelessRfProfilesByNetworkIdGet</code>",
    "path": "/networks/{networkId}/wireless/rfProfiles",
    "method": "get",
    "previousOperationId": "getNetworkWirelessRfProfiles",
    "currentOperationId": "NetworksWirelessRfProfilesByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "List the non-basic RF profiles for this network",
      "summary": "getNetworkWirelessRfProfiles",
      "tags": [
        "Radio settings"
      ],
      "operationId": "NetworksWirelessRfProfilesByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "includeTemplateProfiles",
          "in": "query",
          "required": false,
          "type": "boolean",
          "description": "      If the network is bound to a template, this parameter controls whether or not the non-basic RF profiles defined on the template\n      should be included in the response alongside the non-basic profiles defined on the bound network. Defaults to false.\n"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"id\": \"1234\",\r\n    \"networkId\": \"N_24329156\",\r\n    \"name\": \"Some Custom RF Profile\"\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/organizations/{organizationId}/samlRoles` (get) - OperationId turned from `getOrganizationSamlRoles` to `OrganizationsSamlRolesByOrganizationIdGet`",
    "messageHtml": "OperationId turned from <code>getOrganizationSamlRoles</code> to <code>OrganizationsSamlRolesByOrganizationIdGet</code>",
    "path": "/organizations/{organizationId}/samlRoles",
    "method": "get",
    "previousOperationId": "getOrganizationSamlRoles",
    "currentOperationId": "OrganizationsSamlRolesByOrganizationIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "List the SAML roles for this organization",
      "summary": "getOrganizationSamlRoles",
      "tags": [
        "SAML roles"
      ],
      "operationId": "OrganizationsSamlRolesByOrganizationIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"id\": \"TEdJIEN1c3RvbWVy\",\r\n    \"role\": \"myrole\",\r\n    \"orgAccess\": \"none\",\r\n    \"networks\": [\r\n      {\r\n        \"id\": \"N_1234\",\r\n        \"access\": \"full\"\r\n      }\r\n    ],\r\n    \"tags\": [\r\n      {\r\n        \"tag\": \"west\",\r\n        \"access\": \"read-only\"\r\n      }\r\n    ]\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/organizations/{organizationId}/samlRoles` (post) - OperationId turned from `createOrganizationSamlRole` to `OrganizationsSamlRolesByOrganizationIdPost`",
    "messageHtml": "OperationId turned from <code>createOrganizationSamlRole</code> to <code>OrganizationsSamlRolesByOrganizationIdPost</code>",
    "path": "/organizations/{organizationId}/samlRoles",
    "method": "post",
    "previousOperationId": "createOrganizationSamlRole",
    "currentOperationId": "OrganizationsSamlRolesByOrganizationIdPost",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Create a SAML role",
      "summary": "createOrganizationSamlRole",
      "tags": [
        "SAML roles"
      ],
      "operationId": "OrganizationsSamlRolesByOrganizationIdPost",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "createOrganizationSamlRole",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/createOrganizationSamlRole"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"id\": \"TEdJIEN1c3RvbWVy\",\r\n  \"role\": \"myrole\",\r\n  \"orgAccess\": \"none\",\r\n  \"networks\": [\r\n    {\r\n      \"id\": \"N_1234\",\r\n      \"access\": \"full\"\r\n    }\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"tag\": \"west\",\r\n      \"access\": \"read-only\"\r\n    }\r\n  ]\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/organizations/{organizationId}/samlRoles/{id}` (get) - OperationId turned from `getOrganizationSamlRole` to `OrganizationsSamlRolesByOrganizationIdAndIdGet`",
    "messageHtml": "OperationId turned from <code>getOrganizationSamlRole</code> to <code>OrganizationsSamlRolesByOrganizationIdAndIdGet</code>",
    "path": "/organizations/{organizationId}/samlRoles/{id}",
    "method": "get",
    "previousOperationId": "getOrganizationSamlRole",
    "currentOperationId": "OrganizationsSamlRolesByOrganizationIdAndIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Return a SAML role",
      "summary": "getOrganizationSamlRole",
      "tags": [
        "SAML roles"
      ],
      "operationId": "OrganizationsSamlRolesByOrganizationIdAndIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"id\": \"TEdJIEN1c3RvbWVy\",\r\n  \"role\": \"myrole\",\r\n  \"orgAccess\": \"none\",\r\n  \"networks\": [\r\n    {\r\n      \"id\": \"N_1234\",\r\n      \"access\": \"full\"\r\n    }\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"tag\": \"west\",\r\n      \"access\": \"read-only\"\r\n    }\r\n  ]\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/organizations/{organizationId}/samlRoles/{id}` (put) - OperationId turned from `updateOrganizationSamlRole` to `OrganizationsSamlRolesByOrganizationIdAndIdPut`",
    "messageHtml": "OperationId turned from <code>updateOrganizationSamlRole</code> to <code>OrganizationsSamlRolesByOrganizationIdAndIdPut</code>",
    "path": "/organizations/{organizationId}/samlRoles/{id}",
    "method": "put",
    "previousOperationId": "updateOrganizationSamlRole",
    "currentOperationId": "OrganizationsSamlRolesByOrganizationIdAndIdPut",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Update a SAML role",
      "summary": "updateOrganizationSamlRole",
      "tags": [
        "SAML roles"
      ],
      "operationId": "OrganizationsSamlRolesByOrganizationIdAndIdPut",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "updateOrganizationSamlRole",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/updateOrganizationSamlRole"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"id\": \"TEdJIEN1c3RvbWVy\",\r\n  \"role\": \"myrole\",\r\n  \"orgAccess\": \"none\",\r\n  \"networks\": [\r\n    {\r\n      \"id\": \"N_1234\",\r\n      \"access\": \"full\"\r\n    }\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"tag\": \"west\",\r\n      \"access\": \"read-only\"\r\n    }\r\n  ]\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/organizations/{organizationId}/samlRoles/{id}` (delete) - OperationId turned from `deleteOrganizationSamlRole` to `OrganizationsSamlRolesByOrganizationIdAndIdDelete`",
    "messageHtml": "OperationId turned from <code>deleteOrganizationSamlRole</code> to <code>OrganizationsSamlRolesByOrganizationIdAndIdDelete</code>",
    "path": "/organizations/{organizationId}/samlRoles/{id}",
    "method": "delete",
    "previousOperationId": "deleteOrganizationSamlRole",
    "currentOperationId": "OrganizationsSamlRolesByOrganizationIdAndIdDelete",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Remove a SAML role",
      "summary": "deleteOrganizationSamlRole",
      "tags": [
        "SAML roles"
      ],
      "operationId": "OrganizationsSamlRolesByOrganizationIdAndIdDelete",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/clients/{clientId}/securityEvents` (get) - OperationId turned from `getNetworkClientSecurityEvents` to `NetworksClientsSecurityEventsByNetworkIdAndClientIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkClientSecurityEvents</code> to <code>NetworksClientsSecurityEventsByNetworkIdAndClientIdGet</code>",
    "path": "/networks/{networkId}/clients/{clientId}/securityEvents",
    "method": "get",
    "previousOperationId": "getNetworkClientSecurityEvents",
    "currentOperationId": "NetworksClientsSecurityEventsByNetworkIdAndClientIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "List the security events for a client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
      "summary": "getNetworkClientSecurityEvents",
      "tags": [
        "Security events"
      ],
      "operationId": "NetworksClientsSecurityEventsByNetworkIdAndClientIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "clientId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "t0",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 791 days from today."
        },
        {
          "name": "t1",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 791 days after t0."
        },
        {
          "name": "timespan",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 791 days. The default is 31 days."
        },
        {
          "name": "perPage",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100."
        },
        {
          "name": "startingAfter",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
        },
        {
          "name": "endingBefore",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"ts\": 1547683314.2703979,\r\n    \"deviceMac\": \"00:18:0a:01:02:03\",\r\n    \"clientMac\": \"A1:B2:C3:D4:E5:F6\",\r\n    \"srcIp\": \"1.2.3.4:34195\",\r\n    \"destIp\": \"10.20.30.40:80\",\r\n    \"protocol\": \"tcp/ip\",\r\n    \"priority\": \"2\",\r\n    \"classification\": \"4\",\r\n    \"blocked\": true,\r\n    \"message\": \"SERVER-WEBAPP JBoss JMX console access attempt\",\r\n    \"signature\": \"1:21516:9\",\r\n    \"sigSource\": \"\"\r\n  },\r\n  {\r\n    \"ts\": 1547683827.7232649,\r\n    \"deviceMac\": \"00:18:0a:01:02:03\",\r\n    \"clientMac\": \"A1:B2:C3:D4:E5:F6\",\r\n    \"srcIp\": \"1.2.3.4:56023\",\r\n    \"destIp\": \"10.20.30.40:80\",\r\n    \"protocol\": \"tcp/ip\",\r\n    \"priority\": \"1\",\r\n    \"classification\": \"33\",\r\n    \"blocked\": true,\r\n    \"message\": \"POLICY-OTHER Adobe ColdFusion admin interface access attempt\",\r\n    \"signature\": \"1:25975:2\",\r\n    \"sigSource\": \"\"\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/security/intrusionSettings` (get) - OperationId turned from `getNetworkSecurityIntrusionSettings` to `NetworksSecurityIntrusionSettingsByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkSecurityIntrusionSettings</code> to <code>NetworksSecurityIntrusionSettingsByNetworkIdGet</code>",
    "path": "/networks/{networkId}/security/intrusionSettings",
    "method": "get",
    "previousOperationId": "getNetworkSecurityIntrusionSettings",
    "currentOperationId": "NetworksSecurityIntrusionSettingsByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Returns all supported intrusion settings for an MX network",
      "summary": "getNetworkSecurityIntrusionSettings",
      "tags": [
        "Intrusion settings"
      ],
      "operationId": "NetworksSecurityIntrusionSettingsByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"mode\": \"prevention\",\r\n  \"idsRulesets\": \"balanced\",\r\n  \"protectedNetworks\": {\r\n    \"useDefault\": false,\r\n    \"includedCidr\": [\r\n      \"10.0.0.0/8\",\r\n      \"127.0.0.0/8\",\r\n      \"169.254.0.0/16\",\r\n      \"172.16.0.0/12\"\r\n    ],\r\n    \"excludedCidr\": [\r\n      \"10.0.0.0/8\",\r\n      \"127.0.0.0/8\"\r\n    ]\r\n  }\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/security/intrusionSettings` (put) - OperationId turned from `updateNetworkSecurityIntrusionSettings` to `NetworksSecurityIntrusionSettingsByNetworkIdPut`",
    "messageHtml": "OperationId turned from <code>updateNetworkSecurityIntrusionSettings</code> to <code>NetworksSecurityIntrusionSettingsByNetworkIdPut</code>",
    "path": "/networks/{networkId}/security/intrusionSettings",
    "method": "put",
    "previousOperationId": "updateNetworkSecurityIntrusionSettings",
    "currentOperationId": "NetworksSecurityIntrusionSettingsByNetworkIdPut",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Set the supported instrusion settings for an MX network",
      "summary": "updateNetworkSecurityIntrusionSettings",
      "tags": [
        "Intrusion settings"
      ],
      "operationId": "NetworksSecurityIntrusionSettingsByNetworkIdPut",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "updateNetworkSecurityIntrusionSettings",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/updateNetworkSecurityIntrusionSettings"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"mode\": \"prevention\",\r\n  \"idsRulesets\": \"balanced\",\r\n  \"protectedNetworks\": {\r\n    \"useDefault\": false,\r\n    \"includedCidr\": [\r\n      \"10.0.0.0/8\",\r\n      \"127.0.0.0/8\",\r\n      \"169.254.0.0/16\",\r\n      \"172.16.0.0/12\"\r\n    ],\r\n    \"excludedCidr\": [\r\n      \"10.0.0.0/8\",\r\n      \"127.0.0.0/8\"\r\n    ]\r\n  }\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/organizations/{organizationId}/security/intrusionSettings` (get) - OperationId turned from `getOrganizationSecurityIntrusionSettings` to `OrganizationsSecurityIntrusionSettingsByOrganizationIdGet`",
    "messageHtml": "OperationId turned from <code>getOrganizationSecurityIntrusionSettings</code> to <code>OrganizationsSecurityIntrusionSettingsByOrganizationIdGet</code>",
    "path": "/organizations/{organizationId}/security/intrusionSettings",
    "method": "get",
    "previousOperationId": "getOrganizationSecurityIntrusionSettings",
    "currentOperationId": "OrganizationsSecurityIntrusionSettingsByOrganizationIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Returns all supported intrusion settings for an organization",
      "summary": "getOrganizationSecurityIntrusionSettings",
      "tags": [
        "Intrusion settings"
      ],
      "operationId": "OrganizationsSecurityIntrusionSettingsByOrganizationIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"whitelistedRules\": [\r\n    {\r\n      \"ruleId\": \"meraki:intrusion/snort/GID/01/SID/688\",\r\n      \"message\": \"SQL sa login failed\"\r\n    },\r\n    {\r\n      \"ruleId\": \"meraki:intrusion/snort/GID/01/SID/5805\",\r\n      \"message\": \"MALWARE-OTHER Trackware myway speedbar runtime detection - switch engines\"\r\n    }\r\n  ]\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/organizations/{organizationId}/security/intrusionSettings` (put) - OperationId turned from `updateOrganizationSecurityIntrusionSettings` to `OrganizationsSecurityIntrusionSettingsByOrganizationIdPut`",
    "messageHtml": "OperationId turned from <code>updateOrganizationSecurityIntrusionSettings</code> to <code>OrganizationsSecurityIntrusionSettingsByOrganizationIdPut</code>",
    "path": "/organizations/{organizationId}/security/intrusionSettings",
    "method": "put",
    "previousOperationId": "updateOrganizationSecurityIntrusionSettings",
    "currentOperationId": "OrganizationsSecurityIntrusionSettingsByOrganizationIdPut",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Sets supported intrusion settings for an organization",
      "summary": "updateOrganizationSecurityIntrusionSettings",
      "tags": [
        "Intrusion settings"
      ],
      "operationId": "OrganizationsSecurityIntrusionSettingsByOrganizationIdPut",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "updateOrganizationSecurityIntrusionSettings",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/updateOrganizationSecurityIntrusionSettings"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"whitelistedRules\": [\r\n    {\r\n      \"ruleId\": \"meraki:intrusion/snort/GID/01/SID/688\",\r\n      \"message\": \"SQL sa login failed\"\r\n    },\r\n    {\r\n      \"ruleId\": \"meraki:intrusion/snort/GID/01/SID/5805\",\r\n      \"message\": \"MALWARE-OTHER Trackware myway speedbar runtime detection - switch engines\"\r\n    }\r\n  ]\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/security/malwareSettings` (get) - OperationId turned from `getNetworkSecurityMalwareSettings` to `NetworksSecurityMalwareSettingsByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkSecurityMalwareSettings</code> to <code>NetworksSecurityMalwareSettingsByNetworkIdGet</code>",
    "path": "/networks/{networkId}/security/malwareSettings",
    "method": "get",
    "previousOperationId": "getNetworkSecurityMalwareSettings",
    "currentOperationId": "NetworksSecurityMalwareSettingsByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Returns all supported malware settings for an MX network",
      "summary": "getNetworkSecurityMalwareSettings",
      "tags": [
        "Malware settings"
      ],
      "operationId": "NetworksSecurityMalwareSettingsByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"mode\": \"enabled\",\r\n  \"allowedUrls\": [\r\n    {\r\n      \"url\": \"example.org\",\r\n      \"comment\": \"allow example.org\"\r\n    },\r\n    {\r\n      \"url\": \"help.com.au\",\r\n      \"comment\": \"allow help.com.au\"\r\n    }\r\n  ],\r\n  \"allowedFiles\": [\r\n    {\r\n      \"sha256\": \"e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503\",\r\n      \"comment\": \"allow ZIP file\"\r\n    }\r\n  ]\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/security/malwareSettings` (put) - OperationId turned from `updateNetworkSecurityMalwareSettings` to `NetworksSecurityMalwareSettingsByNetworkIdPut`",
    "messageHtml": "OperationId turned from <code>updateNetworkSecurityMalwareSettings</code> to <code>NetworksSecurityMalwareSettingsByNetworkIdPut</code>",
    "path": "/networks/{networkId}/security/malwareSettings",
    "method": "put",
    "previousOperationId": "updateNetworkSecurityMalwareSettings",
    "currentOperationId": "NetworksSecurityMalwareSettingsByNetworkIdPut",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Set the supported malware settings for an MX network",
      "summary": "updateNetworkSecurityMalwareSettings",
      "tags": [
        "Malware settings"
      ],
      "operationId": "NetworksSecurityMalwareSettingsByNetworkIdPut",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "updateNetworkSecurityMalwareSettings",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/updateNetworkSecurityMalwareSettings"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"mode\": \"enabled\",\r\n  \"allowedUrls\": [\r\n    {\r\n      \"url\": \"example.org\",\r\n      \"comment\": \"allow example.org\"\r\n    },\r\n    {\r\n      \"url\": \"help.com.au\",\r\n      \"comment\": \"allow help.com.au\"\r\n    }\r\n  ],\r\n  \"allowedFiles\": [\r\n    {\r\n      \"sha256\": \"e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503\",\r\n      \"comment\": \"allow ZIP file\"\r\n    }\r\n  ]\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/securityEvents` (get) - OperationId turned from `getNetworkSecurityEvents` to `NetworksSecurityEventsByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkSecurityEvents</code> to <code>NetworksSecurityEventsByNetworkIdGet</code>",
    "path": "/networks/{networkId}/securityEvents",
    "method": "get",
    "previousOperationId": "getNetworkSecurityEvents",
    "currentOperationId": "NetworksSecurityEventsByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "List the security events for a network",
      "summary": "getNetworkSecurityEvents",
      "tags": [
        "Security events"
      ],
      "operationId": "NetworksSecurityEventsByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "t0",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
        },
        {
          "name": "t1",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 365 days after t0."
        },
        {
          "name": "timespan",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 31 days."
        },
        {
          "name": "perPage",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100."
        },
        {
          "name": "startingAfter",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
        },
        {
          "name": "endingBefore",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"ts\": 1547683314.2703979,\r\n    \"deviceMac\": \"00:18:0a:01:02:03\",\r\n    \"clientMac\": \"A1:B2:C3:D4:E5:F6\",\r\n    \"srcIp\": \"1.2.3.4:34195\",\r\n    \"destIp\": \"10.20.30.40:80\",\r\n    \"protocol\": \"tcp/ip\",\r\n    \"priority\": \"2\",\r\n    \"classification\": \"4\",\r\n    \"blocked\": true,\r\n    \"message\": \"SERVER-WEBAPP JBoss JMX console access attempt\",\r\n    \"signature\": \"1:21516:9\",\r\n    \"sigSource\": \"\"\r\n  },\r\n  {\r\n    \"ts\": 1547683827.7232649,\r\n    \"deviceMac\": \"00:18:0a:01:02:03\",\r\n    \"clientMac\": \"A1:B2:C3:D4:E5:F6\",\r\n    \"srcIp\": \"1.2.3.4:56023\",\r\n    \"destIp\": \"10.20.30.40:80\",\r\n    \"protocol\": \"tcp/ip\",\r\n    \"priority\": \"1\",\r\n    \"classification\": \"33\",\r\n    \"blocked\": true,\r\n    \"message\": \"POLICY-OTHER Adobe ColdFusion admin interface access attempt\",\r\n    \"signature\": \"1:25975:2\",\r\n    \"sigSource\": \"\"\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/organizations/{organizationId}/securityEvents` (get) - OperationId turned from `getOrganizationSecurityEvents` to `OrganizationsSecurityEventsByOrganizationIdGet`",
    "messageHtml": "OperationId turned from <code>getOrganizationSecurityEvents</code> to <code>OrganizationsSecurityEventsByOrganizationIdGet</code>",
    "path": "/organizations/{organizationId}/securityEvents",
    "method": "get",
    "previousOperationId": "getOrganizationSecurityEvents",
    "currentOperationId": "OrganizationsSecurityEventsByOrganizationIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "List the security events for an organization",
      "summary": "getOrganizationSecurityEvents",
      "tags": [
        "Security events"
      ],
      "operationId": "OrganizationsSecurityEventsByOrganizationIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "t0",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
        },
        {
          "name": "t1",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 365 days after t0."
        },
        {
          "name": "timespan",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 31 days."
        },
        {
          "name": "perPage",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100."
        },
        {
          "name": "startingAfter",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
        },
        {
          "name": "endingBefore",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"ts\": 1547683314.2703979,\r\n    \"deviceMac\": \"00:18:0a:01:02:03\",\r\n    \"clientMac\": \"A1:B2:C3:D4:E5:F6\",\r\n    \"srcIp\": \"1.2.3.4:34195\",\r\n    \"destIp\": \"10.20.30.40:80\",\r\n    \"protocol\": \"tcp/ip\",\r\n    \"priority\": \"2\",\r\n    \"classification\": \"4\",\r\n    \"blocked\": true,\r\n    \"message\": \"SERVER-WEBAPP JBoss JMX console access attempt\",\r\n    \"signature\": \"1:21516:9\",\r\n    \"sigSource\": \"\"\r\n  },\r\n  {\r\n    \"ts\": 1547683827.7232649,\r\n    \"deviceMac\": \"00:18:0a:01:02:03\",\r\n    \"clientMac\": \"A1:B2:C3:D4:E5:F6\",\r\n    \"srcIp\": \"1.2.3.4:56023\",\r\n    \"destIp\": \"10.20.30.40:80\",\r\n    \"protocol\": \"tcp/ip\",\r\n    \"priority\": \"1\",\r\n    \"classification\": \"33\",\r\n    \"blocked\": true,\r\n    \"message\": \"POLICY-OTHER Adobe ColdFusion admin interface access attempt\",\r\n    \"signature\": \"1:25975:2\",\r\n    \"sigSource\": \"\"\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "delete-path",
    "message": "`/networks/{networkId}/sm/geofences/{geofenceId}/regions` - Deleted",
    "messageHtml": "Deleted",
    "path": "/networks/{networkId}/sm/geofences/{geofenceId}/regions",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "delete-path",
    "message": "`/networks/{networkId}/sm/geofences/{geofenceId}/regions/{regionId}` - Deleted",
    "messageHtml": "Deleted",
    "path": "/networks/{networkId}/sm/geofences/{geofenceId}/regions/{regionId}",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "delete-path",
    "message": "`/networks/{networkId}/sm/geofences` - Deleted",
    "messageHtml": "Deleted",
    "path": "/networks/{networkId}/sm/geofences",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "delete-path",
    "message": "`/networks/{networkId}/sm/geofences/{geofenceId}` - Deleted",
    "messageHtml": "Deleted",
    "path": "/networks/{networkId}/sm/geofences/{geofenceId}",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "delete-path",
    "message": "`/networks/{networkId}/sm/geofences/{geofence_id}` - Deleted",
    "messageHtml": "Deleted",
    "path": "/networks/{networkId}/sm/geofences/{geofence_id}",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/sm/targetGroups` (get) - OperationId turned from `getNetworkSmTargetGroups` to `NetworksSmTargetGroupsByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkSmTargetGroups</code> to <code>NetworksSmTargetGroupsByNetworkIdGet</code>",
    "path": "/networks/{networkId}/sm/targetGroups",
    "method": "get",
    "previousOperationId": "getNetworkSmTargetGroups",
    "currentOperationId": "NetworksSmTargetGroupsByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "List the target groups in this network",
      "summary": "getNetworkSmTargetGroups",
      "tags": [
        "Named tag scope"
      ],
      "operationId": "NetworksSmTargetGroupsByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "withDetails",
          "in": "query",
          "required": false,
          "type": "boolean",
          "description": "Boolean indicating if the the ids of the devices or users scoped by the target group should be included in the response"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"name\": \"My target group\",\r\n    \"scope\": \"none\",\r\n    \"tags\": \"[]\",\r\n    \"type\": \"devices\"\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-param-type",
    "message": "`/networks/{networkId}/sm/targetGroups` (get) - Param `withDetails` type turn from `string` to `boolean`",
    "messageHtml": "Param <code>withDetails</code> type turn from <code>string</code> to <code>boolean</code>",
    "path": "/networks/{networkId}/sm/targetGroups",
    "method": "get",
    "param": "withDetails",
    "previousType": "string",
    "currentType": "boolean",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "List the target groups in this network",
      "summary": "getNetworkSmTargetGroups",
      "tags": [
        "Named tag scope"
      ],
      "operationId": "NetworksSmTargetGroupsByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "withDetails",
          "in": "query",
          "required": false,
          "type": "boolean",
          "description": "Boolean indicating if the the ids of the devices or users scoped by the target group should be included in the response"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"name\": \"My target group\",\r\n    \"scope\": \"none\",\r\n    \"tags\": \"[]\",\r\n    \"type\": \"devices\"\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/sm/targetGroups` (post) - OperationId turned from `createNetworkSmTargetGroup` to `NetworksSmTargetGroupsByNetworkIdPost`",
    "messageHtml": "OperationId turned from <code>createNetworkSmTargetGroup</code> to <code>NetworksSmTargetGroupsByNetworkIdPost</code>",
    "path": "/networks/{networkId}/sm/targetGroups",
    "method": "post",
    "previousOperationId": "createNetworkSmTargetGroup",
    "currentOperationId": "NetworksSmTargetGroupsByNetworkIdPost",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Add a target group",
      "summary": "createNetworkSmTargetGroup",
      "tags": [
        "Named tag scope"
      ],
      "operationId": "NetworksSmTargetGroupsByNetworkIdPost",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "createNetworkSmTargetGroup",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/createNetworkSmTargetGroup"
          }
        }
      ],
      "responses": {
        "201": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"name\": \"My target group\",\r\n  \"scope\": \"none\",\r\n  \"tags\": \"[]\",\r\n  \"type\": \"devices\"\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/sm/targetGroups/{targetGroupId}` (get) - OperationId turned from `getNetworkSmTargetGroup` to `NetworksSmTargetGroupsByNetworkIdAndTargetGroupIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkSmTargetGroup</code> to <code>NetworksSmTargetGroupsByNetworkIdAndTargetGroupIdGet</code>",
    "path": "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
    "method": "get",
    "previousOperationId": "getNetworkSmTargetGroup",
    "currentOperationId": "NetworksSmTargetGroupsByNetworkIdAndTargetGroupIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Return a target group",
      "summary": "getNetworkSmTargetGroup",
      "tags": [
        "Named tag scope"
      ],
      "operationId": "NetworksSmTargetGroupsByNetworkIdAndTargetGroupIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "targetGroupId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "withDetails",
          "in": "query",
          "required": false,
          "type": "boolean",
          "description": "Boolean indicating if the the ids of the devices or users scoped by the target group should be included in the response"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"name\": \"My target group\",\r\n  \"scope\": \"none\",\r\n  \"tags\": \"[]\",\r\n  \"type\": \"devices\"\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-param-type",
    "message": "`/networks/{networkId}/sm/targetGroups/{targetGroupId}` (get) - Param `withDetails` type turn from `string` to `boolean`",
    "messageHtml": "Param <code>withDetails</code> type turn from <code>string</code> to <code>boolean</code>",
    "path": "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
    "method": "get",
    "param": "withDetails",
    "previousType": "string",
    "currentType": "boolean",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Return a target group",
      "summary": "getNetworkSmTargetGroup",
      "tags": [
        "Named tag scope"
      ],
      "operationId": "NetworksSmTargetGroupsByNetworkIdAndTargetGroupIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "targetGroupId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "withDetails",
          "in": "query",
          "required": false,
          "type": "boolean",
          "description": "Boolean indicating if the the ids of the devices or users scoped by the target group should be included in the response"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"name\": \"My target group\",\r\n  \"scope\": \"none\",\r\n  \"tags\": \"[]\",\r\n  \"type\": \"devices\"\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/sm/targetGroups/{targetGroupId}` (put) - OperationId turned from `updateNetworkSmTargetGroup` to `NetworksSmTargetGroupsByNetworkIdAndTargetGroupIdPut`",
    "messageHtml": "OperationId turned from <code>updateNetworkSmTargetGroup</code> to <code>NetworksSmTargetGroupsByNetworkIdAndTargetGroupIdPut</code>",
    "path": "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
    "method": "put",
    "previousOperationId": "updateNetworkSmTargetGroup",
    "currentOperationId": "NetworksSmTargetGroupsByNetworkIdAndTargetGroupIdPut",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Update a target group",
      "summary": "updateNetworkSmTargetGroup",
      "tags": [
        "Named tag scope"
      ],
      "operationId": "NetworksSmTargetGroupsByNetworkIdAndTargetGroupIdPut",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "targetGroupId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "updateNetworkSmTargetGroup",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/updateNetworkSmTargetGroup"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"name\": \"My target group\",\r\n  \"scope\": \"none\",\r\n  \"tags\": \"[]\",\r\n  \"type\": \"devices\"\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/sm/targetGroups/{targetGroupId}` (delete) - OperationId turned from `deleteNetworkSmTargetGroup` to `NetworksSmTargetGroupsByNetworkIdAndTargetGroupIdDelete`",
    "messageHtml": "OperationId turned from <code>deleteNetworkSmTargetGroup</code> to <code>NetworksSmTargetGroupsByNetworkIdAndTargetGroupIdDelete</code>",
    "path": "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
    "method": "delete",
    "previousOperationId": "deleteNetworkSmTargetGroup",
    "currentOperationId": "NetworksSmTargetGroupsByNetworkIdAndTargetGroupIdDelete",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Delete a target group from a network",
      "summary": "deleteNetworkSmTargetGroup",
      "tags": [
        "Named tag scope"
      ],
      "operationId": "NetworksSmTargetGroupsByNetworkIdAndTargetGroupIdDelete",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "targetGroupId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "204": {
          "description": "Successful operation",
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "delete-path",
    "message": "`/networks/{networkId}/sm/tags` - Deleted",
    "messageHtml": "Deleted",
    "path": "/networks/{networkId}/sm/tags",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "delete-path",
    "message": "`/networks/{networkId}/sm/tags/{tagId}` - Deleted",
    "messageHtml": "Deleted",
    "path": "/networks/{networkId}/sm/tags/{tagId}",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "delete-path",
    "message": "`/networks/{networkId}/sm/tags/{tagId}/scopedDevices` - Deleted",
    "messageHtml": "Deleted",
    "path": "/networks/{networkId}/sm/tags/{tagId}/scopedDevices",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{network_id}/sm/profile/clarity` (post) - OperationId turned from `createNetworkSmProfileClarity` to `NetworksSmProfileClarityByNetworkIdPost`",
    "messageHtml": "OperationId turned from <code>createNetworkSmProfileClarity</code> to <code>NetworksSmProfileClarityByNetworkIdPost</code>",
    "path": "/networks/{network_id}/sm/profile/clarity",
    "method": "post",
    "previousOperationId": "createNetworkSmProfileClarity",
    "currentOperationId": "NetworksSmProfileClarityByNetworkIdPost",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Create a new profile containing a Cisco Clarity payload",
      "summary": "createNetworkSmProfileClarity",
      "tags": [
        "SM"
      ],
      "operationId": "NetworksSmProfileClarityByNetworkIdPost",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "network_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "createNetworkSmProfileClarity",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/createNetworkSmProfileClarity"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{network_id}/sm/profile/clarity/{profileId}` (get) - OperationId turned from `getNetworkSmProfileClarity` to `NetworksSmProfileClarityByNetworkIdAndProfileIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkSmProfileClarity</code> to <code>NetworksSmProfileClarityByNetworkIdAndProfileIdGet</code>",
    "path": "/networks/{network_id}/sm/profile/clarity/{profileId}",
    "method": "get",
    "previousOperationId": "getNetworkSmProfileClarity",
    "currentOperationId": "NetworksSmProfileClarityByNetworkIdAndProfileIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Get details for a Cisco Clarity payload",
      "summary": "getNetworkSmProfileClarity",
      "tags": [
        "SM"
      ],
      "operationId": "NetworksSmProfileClarityByNetworkIdAndProfileIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "network_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "profileId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{network_id}/sm/profile/clarity/{profileId}` (post) - OperationId turned from `addNetworkSmProfileClarity` to `NetworksSmProfileClarityByNetworkIdAndProfileIdPost`",
    "messageHtml": "OperationId turned from <code>addNetworkSmProfileClarity</code> to <code>NetworksSmProfileClarityByNetworkIdAndProfileIdPost</code>",
    "path": "/networks/{network_id}/sm/profile/clarity/{profileId}",
    "method": "post",
    "previousOperationId": "addNetworkSmProfileClarity",
    "currentOperationId": "NetworksSmProfileClarityByNetworkIdAndProfileIdPost",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Add a Cisco Clarity payload to an existing profile",
      "summary": "addNetworkSmProfileClarity",
      "tags": [
        "SM"
      ],
      "operationId": "NetworksSmProfileClarityByNetworkIdAndProfileIdPost",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "network_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "profileId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "addNetworkSmProfileClarity",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/addNetworkSmProfileClarity"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{network_id}/sm/profile/clarity/{profileId}` (put) - OperationId turned from `updateNetworkSmProfileClarity` to `NetworksSmProfileClarityByNetworkIdAndProfileIdPut`",
    "messageHtml": "OperationId turned from <code>updateNetworkSmProfileClarity</code> to <code>NetworksSmProfileClarityByNetworkIdAndProfileIdPut</code>",
    "path": "/networks/{network_id}/sm/profile/clarity/{profileId}",
    "method": "put",
    "previousOperationId": "updateNetworkSmProfileClarity",
    "currentOperationId": "NetworksSmProfileClarityByNetworkIdAndProfileIdPut",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Update an existing profile containing a Cisco Clarity payload",
      "summary": "updateNetworkSmProfileClarity",
      "tags": [
        "SM"
      ],
      "operationId": "NetworksSmProfileClarityByNetworkIdAndProfileIdPut",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "network_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "profileId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "updateNetworkSmProfileClarity",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/updateNetworkSmProfileClarity"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{network_id}/sm/profile/clarity/{profileId}` (delete) - OperationId turned from `deleteNetworkSmProfileClarity` to `NetworksSmProfileClarityByNetworkIdAndProfileIdDelete`",
    "messageHtml": "OperationId turned from <code>deleteNetworkSmProfileClarity</code> to <code>NetworksSmProfileClarityByNetworkIdAndProfileIdDelete</code>",
    "path": "/networks/{network_id}/sm/profile/clarity/{profileId}",
    "method": "delete",
    "previousOperationId": "deleteNetworkSmProfileClarity",
    "currentOperationId": "NetworksSmProfileClarityByNetworkIdAndProfileIdDelete",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Delete a Cisco Clarity payload. Deletes the entire profile if it's empty after removing the payload.",
      "summary": "deleteNetworkSmProfileClarity",
      "tags": [
        "SM"
      ],
      "operationId": "NetworksSmProfileClarityByNetworkIdAndProfileIdDelete",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "network_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "profileId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{network_id}/sm/profile/umbrella` (post) - OperationId turned from `createNetworkSmProfileUmbrella` to `NetworksSmProfileUmbrellaByNetworkIdPost`",
    "messageHtml": "OperationId turned from <code>createNetworkSmProfileUmbrella</code> to <code>NetworksSmProfileUmbrellaByNetworkIdPost</code>",
    "path": "/networks/{network_id}/sm/profile/umbrella",
    "method": "post",
    "previousOperationId": "createNetworkSmProfileUmbrella",
    "currentOperationId": "NetworksSmProfileUmbrellaByNetworkIdPost",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Create a new profile containing a Cisco Umbrella payload",
      "summary": "createNetworkSmProfileUmbrella",
      "tags": [
        "SM"
      ],
      "operationId": "NetworksSmProfileUmbrellaByNetworkIdPost",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "network_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "createNetworkSmProfileUmbrella",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/createNetworkSmProfileUmbrella"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{network_id}/sm/profile/umbrella/{profileId}` (get) - OperationId turned from `getNetworkSmProfileUmbrella` to `NetworksSmProfileUmbrellaByNetworkIdAndProfileIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkSmProfileUmbrella</code> to <code>NetworksSmProfileUmbrellaByNetworkIdAndProfileIdGet</code>",
    "path": "/networks/{network_id}/sm/profile/umbrella/{profileId}",
    "method": "get",
    "previousOperationId": "getNetworkSmProfileUmbrella",
    "currentOperationId": "NetworksSmProfileUmbrellaByNetworkIdAndProfileIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Get details for a Cisco Umbrella payload",
      "summary": "getNetworkSmProfileUmbrella",
      "tags": [
        "SM"
      ],
      "operationId": "NetworksSmProfileUmbrellaByNetworkIdAndProfileIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "network_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "profileId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{network_id}/sm/profile/umbrella/{profileId}` (post) - OperationId turned from `addNetworkSmProfileUmbrella` to `NetworksSmProfileUmbrellaByNetworkIdAndProfileIdPost`",
    "messageHtml": "OperationId turned from <code>addNetworkSmProfileUmbrella</code> to <code>NetworksSmProfileUmbrellaByNetworkIdAndProfileIdPost</code>",
    "path": "/networks/{network_id}/sm/profile/umbrella/{profileId}",
    "method": "post",
    "previousOperationId": "addNetworkSmProfileUmbrella",
    "currentOperationId": "NetworksSmProfileUmbrellaByNetworkIdAndProfileIdPost",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Add a Cisco Umbrella payload to an existing profile",
      "summary": "addNetworkSmProfileUmbrella",
      "tags": [
        "SM"
      ],
      "operationId": "NetworksSmProfileUmbrellaByNetworkIdAndProfileIdPost",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "network_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "profileId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "addNetworkSmProfileUmbrella",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/addNetworkSmProfileUmbrella"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{network_id}/sm/profile/umbrella/{profileId}` (put) - OperationId turned from `updateNetworkSmProfileUmbrella` to `NetworksSmProfileUmbrellaByNetworkIdAndProfileIdPut`",
    "messageHtml": "OperationId turned from <code>updateNetworkSmProfileUmbrella</code> to <code>NetworksSmProfileUmbrellaByNetworkIdAndProfileIdPut</code>",
    "path": "/networks/{network_id}/sm/profile/umbrella/{profileId}",
    "method": "put",
    "previousOperationId": "updateNetworkSmProfileUmbrella",
    "currentOperationId": "NetworksSmProfileUmbrellaByNetworkIdAndProfileIdPut",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Update an existing profile containing a Cisco Umbrella payload",
      "summary": "updateNetworkSmProfileUmbrella",
      "tags": [
        "SM"
      ],
      "operationId": "NetworksSmProfileUmbrellaByNetworkIdAndProfileIdPut",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "network_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "profileId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "updateNetworkSmProfileUmbrella",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/updateNetworkSmProfileUmbrella"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{network_id}/sm/profile/umbrella/{profileId}` (delete) - OperationId turned from `deleteNetworkSmProfileUmbrella` to `NetworksSmProfileUmbrellaByNetworkIdAndProfileIdDelete`",
    "messageHtml": "OperationId turned from <code>deleteNetworkSmProfileUmbrella</code> to <code>NetworksSmProfileUmbrellaByNetworkIdAndProfileIdDelete</code>",
    "path": "/networks/{network_id}/sm/profile/umbrella/{profileId}",
    "method": "delete",
    "previousOperationId": "deleteNetworkSmProfileUmbrella",
    "currentOperationId": "NetworksSmProfileUmbrellaByNetworkIdAndProfileIdDelete",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Delete a Cisco Umbrella payload. Deletes the entire profile if it's empty after removing the payload",
      "summary": "deleteNetworkSmProfileUmbrella",
      "tags": [
        "SM"
      ],
      "operationId": "NetworksSmProfileUmbrellaByNetworkIdAndProfileIdDelete",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "network_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "profileId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{network_id}/sm/app/polaris` (get) - OperationId turned from `getNetworkSmAppPolaris` to `NetworksSmAppPolarisByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkSmAppPolaris</code> to <code>NetworksSmAppPolarisByNetworkIdGet</code>",
    "path": "/networks/{network_id}/sm/app/polaris",
    "method": "get",
    "previousOperationId": "getNetworkSmAppPolaris",
    "currentOperationId": "NetworksSmAppPolarisByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Get details for a Cisco Polaris app if it exists",
      "summary": "getNetworkSmAppPolaris",
      "tags": [
        "SM"
      ],
      "operationId": "NetworksSmAppPolarisByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "network_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "bundleId",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The bundle ID of the app to be found, defaults to com.cisco.ciscosecurity.app"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{network_id}/sm/app/polaris` (post) - OperationId turned from `createNetworkSmAppPolaris` to `NetworksSmAppPolarisByNetworkIdPost`",
    "messageHtml": "OperationId turned from <code>createNetworkSmAppPolaris</code> to <code>NetworksSmAppPolarisByNetworkIdPost</code>",
    "path": "/networks/{network_id}/sm/app/polaris",
    "method": "post",
    "previousOperationId": "createNetworkSmAppPolaris",
    "currentOperationId": "NetworksSmAppPolarisByNetworkIdPost",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Create a new Polaris app",
      "summary": "createNetworkSmAppPolaris",
      "tags": [
        "SM"
      ],
      "operationId": "NetworksSmAppPolarisByNetworkIdPost",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "network_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "createNetworkSmAppPolaris",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/createNetworkSmAppPolaris"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{network_id}/sm/app/polaris/{appId}` (put) - OperationId turned from `updateNetworkSmAppPolaris` to `NetworksSmAppPolarisByNetworkIdAndAppIdPut`",
    "messageHtml": "OperationId turned from <code>updateNetworkSmAppPolaris</code> to <code>NetworksSmAppPolarisByNetworkIdAndAppIdPut</code>",
    "path": "/networks/{network_id}/sm/app/polaris/{appId}",
    "method": "put",
    "previousOperationId": "updateNetworkSmAppPolaris",
    "currentOperationId": "NetworksSmAppPolarisByNetworkIdAndAppIdPut",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Update an existing Polaris app",
      "summary": "updateNetworkSmAppPolaris",
      "tags": [
        "SM"
      ],
      "operationId": "NetworksSmAppPolarisByNetworkIdAndAppIdPut",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "network_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "updateNetworkSmAppPolaris",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/updateNetworkSmAppPolaris"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{network_id}/sm/app/polaris/{appId}` (delete) - OperationId turned from `deleteNetworkSmAppPolaris` to `NetworksSmAppPolarisByNetworkIdAndAppIdDelete`",
    "messageHtml": "OperationId turned from <code>deleteNetworkSmAppPolaris</code> to <code>NetworksSmAppPolarisByNetworkIdAndAppIdDelete</code>",
    "path": "/networks/{network_id}/sm/app/polaris/{appId}",
    "method": "delete",
    "previousOperationId": "deleteNetworkSmAppPolaris",
    "currentOperationId": "NetworksSmAppPolarisByNetworkIdAndAppIdDelete",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Delete a Cisco Polaris app",
      "summary": "deleteNetworkSmAppPolaris",
      "tags": [
        "SM"
      ],
      "operationId": "NetworksSmAppPolarisByNetworkIdAndAppIdDelete",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "network_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "appId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "delete-path",
    "message": "`/networks/{network_id}/sm/devices` - Deleted",
    "messageHtml": "Deleted",
    "path": "/networks/{network_id}/sm/devices",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "delete-path",
    "message": "`/networks/{network_id}/sm/users` - Deleted",
    "messageHtml": "Deleted",
    "path": "/networks/{network_id}/sm/users",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "delete-path",
    "message": "`/networks/{network_id}/sm/user/{id}/deviceProfiles` - Deleted",
    "messageHtml": "Deleted",
    "path": "/networks/{network_id}/sm/user/{id}/deviceProfiles",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "delete-path",
    "message": "`/networks/{network_id}/sm/{id}/deviceProfiles` - Deleted",
    "messageHtml": "Deleted",
    "path": "/networks/{network_id}/sm/{id}/deviceProfiles",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "delete-path",
    "message": "`/networks/{network_id}/sm/user/{id}/softwares` - Deleted",
    "messageHtml": "Deleted",
    "path": "/networks/{network_id}/sm/user/{id}/softwares",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "delete-path",
    "message": "`/networks/{network_id}/sm/{id}/softwares` - Deleted",
    "messageHtml": "Deleted",
    "path": "/networks/{network_id}/sm/{id}/softwares",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "delete-path",
    "message": "`/networks/{network_id}/sm/{id}/networkAdapters` - Deleted",
    "messageHtml": "Deleted",
    "path": "/networks/{network_id}/sm/{id}/networkAdapters",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "delete-path",
    "message": "`/networks/{network_id}/sm/{id}/wlanLists` - Deleted",
    "messageHtml": "Deleted",
    "path": "/networks/{network_id}/sm/{id}/wlanLists",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "delete-path",
    "message": "`/networks/{network_id}/sm/{id}/securityCenters` - Deleted",
    "messageHtml": "Deleted",
    "path": "/networks/{network_id}/sm/{id}/securityCenters",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "delete-path",
    "message": "`/networks/{network_id}/sm/{id}/restrictions` - Deleted",
    "messageHtml": "Deleted",
    "path": "/networks/{network_id}/sm/{id}/restrictions",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "delete-path",
    "message": "`/networks/{network_id}/sm/{id}/certs` - Deleted",
    "messageHtml": "Deleted",
    "path": "/networks/{network_id}/sm/{id}/certs",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "delete-path",
    "message": "`/networks/{network_id}/sm/devices/tags` - Deleted",
    "messageHtml": "Deleted",
    "path": "/networks/{network_id}/sm/devices/tags",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "delete-path",
    "message": "`/networks/{network_id}/sm/device/fields` - Deleted",
    "messageHtml": "Deleted",
    "path": "/networks/{network_id}/sm/device/fields",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{network_id}/sm/devices/lock` (put) - OperationId turned from `lockNetworkSmDevices` to `NetworksSmDevicesLockByNetworkIdPut`",
    "messageHtml": "OperationId turned from <code>lockNetworkSmDevices</code> to <code>NetworksSmDevicesLockByNetworkIdPut</code>",
    "path": "/networks/{network_id}/sm/devices/lock",
    "method": "put",
    "previousOperationId": "lockNetworkSmDevices",
    "currentOperationId": "NetworksSmDevicesLockByNetworkIdPut",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Lock a set of devices",
      "summary": "lockNetworkSmDevices",
      "tags": [
        "SM"
      ],
      "operationId": "NetworksSmDevicesLockByNetworkIdPut",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "network_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "lockNetworkSmDevices",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/lockNetworkSmDevices"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"success\": true\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-object-property-type",
    "message": "`paths//networks/{network_id}/sm/devices/lock/put/parameters/lockNetworkSmDevices/schema` - Property `pin` type turn from `string` to `integer`",
    "messageHtml": "<code>paths//networks/{network_id}/sm/devices/lock/put/parameters/lockNetworkSmDevices/schema</code> - Property <code>pin</code> type turn from <code>string</code> to <code>integer</code>",
    "path": "paths//networks/{network_id}/sm/devices/lock/put/parameters/lockNetworkSmDevices/schema",
    "Property": "pin",
    "previousType": "string",
    "currentType": "integer",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "delete-path",
    "message": "`/networks/{network_id}/sm/device/wipe` - Deleted",
    "messageHtml": "Deleted",
    "path": "/networks/{network_id}/sm/device/wipe",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "delete-path",
    "message": "`/networks/{network_id}/sm/devices/checkin` - Deleted",
    "messageHtml": "Deleted",
    "path": "/networks/{network_id}/sm/devices/checkin",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "delete-path",
    "message": "`/networks/{network_id}/sm/devices/move` - Deleted",
    "messageHtml": "Deleted",
    "path": "/networks/{network_id}/sm/devices/move",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "delete-path",
    "message": "`/networks/{network_id}/sm/devices/{deviceId}/unenroll` - Deleted",
    "messageHtml": "Deleted",
    "path": "/networks/{network_id}/sm/devices/{deviceId}/unenroll",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "delete-path",
    "message": "`/networks/{network_id}/sm/profiles` - Deleted",
    "messageHtml": "Deleted",
    "path": "/networks/{network_id}/sm/profiles",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "delete-path",
    "message": "`/networks/{network_id}/sm/{id}/cellularUsageHistory` - Deleted",
    "messageHtml": "Deleted",
    "path": "/networks/{network_id}/sm/{id}/cellularUsageHistory",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{network_id}/sm/{id}/performanceHistory` (get) - OperationId turned from `getNetworkSmPerformanceHistory` to `NetworksSmPerformanceHistoryByNetworkIdAndIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkSmPerformanceHistory</code> to <code>NetworksSmPerformanceHistoryByNetworkIdAndIdGet</code>",
    "path": "/networks/{network_id}/sm/{id}/performanceHistory",
    "method": "get",
    "previousOperationId": "getNetworkSmPerformanceHistory",
    "currentOperationId": "NetworksSmPerformanceHistoryByNetworkIdAndIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Return historical records of various Systems Manager client metrics for desktop devices.",
      "summary": "getNetworkSmPerformanceHistory",
      "tags": [
        "SM"
      ],
      "operationId": "NetworksSmPerformanceHistoryByNetworkIdAndIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "network_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "perPage",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The number of entries per page returned"
        },
        {
          "name": "startingAfter",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it."
        },
        {
          "name": "endingBefore",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it."
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"cpuPercentUsed\": 0.95,\r\n    \"memFree\": 1024,\r\n    \"memWired\": 4096,\r\n    \"memActive\": 1024,\r\n    \"memInactive\": 2048,\r\n    \"networkSent\": 512,\r\n    \"networkReceived\": 512,\r\n    \"swapUsed\": 768,\r\n    \"diskUsage\": {\r\n      \"c\": {\r\n        \"used\": 2048,\r\n        \"space\": 9096\r\n      }\r\n    },\r\n    \"ts\": 1526087474.0\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{network_id}/sm/{id}/desktopLogs` (get) - OperationId turned from `getNetworkSmDesktopLogs` to `NetworksSmDesktopLogsByNetworkIdAndIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkSmDesktopLogs</code> to <code>NetworksSmDesktopLogsByNetworkIdAndIdGet</code>",
    "path": "/networks/{network_id}/sm/{id}/desktopLogs",
    "method": "get",
    "previousOperationId": "getNetworkSmDesktopLogs",
    "currentOperationId": "NetworksSmDesktopLogsByNetworkIdAndIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Return historical records of various Systems Manager network connection details for desktop devices.",
      "summary": "getNetworkSmDesktopLogs",
      "tags": [
        "SM"
      ],
      "operationId": "NetworksSmDesktopLogsByNetworkIdAndIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "network_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "perPage",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The number of entries per page returned"
        },
        {
          "name": "startingAfter",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it."
        },
        {
          "name": "endingBefore",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it."
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"measuredAt\": 1526087474.0,\r\n    \"user\": \"milesmeraki\",\r\n    \"networkDevice\": \"NIC\",\r\n    \"networkDriver\": \"Driver\",\r\n    \"wifiChannel\": \"11\",\r\n    \"wifiAuth\": \"wpa-psk\",\r\n    \"wifiBssid\": \"00:11:22:33:44:55\",\r\n    \"wifiSsid\": \"ssid\",\r\n    \"wifiRssi\": \"-11\",\r\n    \"wifiNoise\": \"-99\",\r\n    \"dhcpServer\": \"1.2.3.4\",\r\n    \"ip\": \"1.2.3.4\",\r\n    \"networkMTU\": \"1500\",\r\n    \"subnet\": \"192.168.1.0/24\",\r\n    \"gateway\": \"1.2.3.5\",\r\n    \"publicIP\": \"123.123.123.1\",\r\n    \"dnsServer\": \"8\",\r\n    \"ts\": 1526087474.0\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{network_id}/sm/{id}/deviceCommandLogs` (get) - OperationId turned from `getNetworkSmDeviceCommandLogs` to `NetworksSmDeviceCommandLogsByNetworkIdAndIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkSmDeviceCommandLogs</code> to <code>NetworksSmDeviceCommandLogsByNetworkIdAndIdGet</code>",
    "path": "/networks/{network_id}/sm/{id}/deviceCommandLogs",
    "method": "get",
    "previousOperationId": "getNetworkSmDeviceCommandLogs",
    "currentOperationId": "NetworksSmDeviceCommandLogsByNetworkIdAndIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "    Return historical records of commands sent to Systems Manager devices.\n    <p>Note that this will include the name of the Dashboard user who initiated the command if it was generated\n    by a Dashboard admin rather than the automatic behavior of the system; you may wish to filter this out\n    of any reports.</p>\n",
      "summary": "getNetworkSmDeviceCommandLogs",
      "tags": [
        "SM"
      ],
      "operationId": "NetworksSmDeviceCommandLogsByNetworkIdAndIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "network_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "perPage",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The number of entries per page returned"
        },
        {
          "name": "startingAfter",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it."
        },
        {
          "name": "endingBefore",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it."
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"action\": \"UpdateProfile\",\r\n  \"name\": \"My profile\",\r\n  \"details\": \"{}\",\r\n  \"dashboardUser\": \"Miles Meraki\",\r\n  \"ts\": 1526087474.0\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{network_id}/sm/{id}/connectivity` (get) - OperationId turned from `getNetworkSmConnectivity` to `NetworksSmConnectivityByNetworkIdAndIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkSmConnectivity</code> to <code>NetworksSmConnectivityByNetworkIdAndIdGet</code>",
    "path": "/networks/{network_id}/sm/{id}/connectivity",
    "method": "get",
    "previousOperationId": "getNetworkSmConnectivity",
    "currentOperationId": "NetworksSmConnectivityByNetworkIdAndIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Returns historical connectivity data (whether a device is regularly checking in to Dashboard).",
      "summary": "getNetworkSmConnectivity",
      "tags": [
        "SM"
      ],
      "operationId": "NetworksSmConnectivityByNetworkIdAndIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "network_id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "perPage",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The number of entries per page returned"
        },
        {
          "name": "startingAfter",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it."
        },
        {
          "name": "endingBefore",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, next or prev page in the HTTP Link header should define it."
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"firstSeenAt\": 1518365681.0,\r\n  \"lastSeenAt\": 1526087474.0\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{id}/splashLoginAttempts` (get) - OperationId turned from `getNetworkSplashLoginAttempts` to `NetworksSplashLoginAttemptsByIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkSplashLoginAttempts</code> to <code>NetworksSplashLoginAttemptsByIdGet</code>",
    "path": "/networks/{id}/splashLoginAttempts",
    "method": "get",
    "previousOperationId": "getNetworkSplashLoginAttempts",
    "currentOperationId": "NetworksSplashLoginAttemptsByIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "List the splash login attempts for a network",
      "summary": "getNetworkSplashLoginAttempts",
      "tags": [
        "Splash login attempts"
      ],
      "operationId": "NetworksSplashLoginAttemptsByIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "ssidNumber",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "Only return the login attempts for the specified SSID"
        },
        {
          "name": "loginIdentifier",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The username, email, or phone number used during login"
        },
        {
          "name": "timespan",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The timespan, in seconds, for the login attempts. The period will be from [timespan] seconds ago until now. The maximum timespan is 3 months"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"name\": \"Miles Meraki\",\r\n    \"login\": \"miles@meraki.com\",\r\n    \"ssid\": \"My SSID\",\r\n    \"loginAt\": 1518365681,\r\n    \"gatewayDeviceMac\": \"00:11:22:33:44:55\",\r\n    \"clientMac\": \"22:33:44:55:66:77\",\r\n    \"clientId\": \"k74272e\",\r\n    \"authorization\": \"success\"\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/ssids/{number}/splashSettings` (get) - OperationId turned from `getNetworkSsidSplashSettings` to `NetworksSsidsSplashSettingsByNetworkIdAndNumberGet`",
    "messageHtml": "OperationId turned from <code>getNetworkSsidSplashSettings</code> to <code>NetworksSsidsSplashSettingsByNetworkIdAndNumberGet</code>",
    "path": "/networks/{networkId}/ssids/{number}/splashSettings",
    "method": "get",
    "previousOperationId": "getNetworkSsidSplashSettings",
    "currentOperationId": "NetworksSsidsSplashSettingsByNetworkIdAndNumberGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Display the splash page settings for the given SSID",
      "summary": "getNetworkSsidSplashSettings",
      "tags": [
        "Splash settings"
      ],
      "operationId": "NetworksSsidsSplashSettingsByNetworkIdAndNumberGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "number",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"ssidNumber\": 0,\r\n  \"splashPage\": \"Click-through splash page\",\r\n  \"splashUrl\": \"https://www.custom_splash_url.com\",\r\n  \"useSplashUrl\": true\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/ssids/{number}/splashSettings` (put) - OperationId turned from `updateNetworkSsidSplashSettings` to `NetworksSsidsSplashSettingsByNetworkIdAndNumberPut`",
    "messageHtml": "OperationId turned from <code>updateNetworkSsidSplashSettings</code> to <code>NetworksSsidsSplashSettingsByNetworkIdAndNumberPut</code>",
    "path": "/networks/{networkId}/ssids/{number}/splashSettings",
    "method": "put",
    "previousOperationId": "updateNetworkSsidSplashSettings",
    "currentOperationId": "NetworksSsidsSplashSettingsByNetworkIdAndNumberPut",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Modify the splash page settings for the given SSID",
      "summary": "updateNetworkSsidSplashSettings",
      "tags": [
        "Splash settings"
      ],
      "operationId": "NetworksSsidsSplashSettingsByNetworkIdAndNumberPut",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "number",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "updateNetworkSsidSplashSettings",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/updateNetworkSsidSplashSettings"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"ssidNumber\": 0,\r\n  \"splashPage\": \"Click-through splash page\",\r\n  \"splashUrl\": \"https://www.custom_splash_url.com\",\r\n  \"useSplashUrl\": true\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/ssids` (get) - OperationId turned from `getNetworkSsids` to `NetworksSsidsByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkSsids</code> to <code>NetworksSsidsByNetworkIdGet</code>",
    "path": "/networks/{networkId}/ssids",
    "method": "get",
    "previousOperationId": "getNetworkSsids",
    "currentOperationId": "NetworksSsidsByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "List the SSIDs in a network. Supports networks with access points or wireless-enabled security appliances and teleworker gateways.",
      "summary": "getNetworkSsids",
      "tags": [
        "SSIDs"
      ],
      "operationId": "NetworksSsidsByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"number\": 0,\r\n    \"name\": \"My SSID\",\r\n    \"enabled\": true,\r\n    \"splashPage\": \"Click-through splash page\",\r\n    \"ssidAdminAccessible\": false,\r\n    \"authMode\": \"open\",\r\n    \"ipAssignmentMode\": \"NAT mode\",\r\n    \"bandSelection\": \"5 GHz band only\",\r\n    \"perClientBandwidthLimitUp\": 0,\r\n    \"perClientBandwidthLimitDown\": 0\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/ssids/{number}` (get) - OperationId turned from `getNetworkSsid` to `NetworksSsidsByNetworkIdAndNumberGet`",
    "messageHtml": "OperationId turned from <code>getNetworkSsid</code> to <code>NetworksSsidsByNetworkIdAndNumberGet</code>",
    "path": "/networks/{networkId}/ssids/{number}",
    "method": "get",
    "previousOperationId": "getNetworkSsid",
    "currentOperationId": "NetworksSsidsByNetworkIdAndNumberGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Return a single SSID",
      "summary": "getNetworkSsid",
      "tags": [
        "SSIDs"
      ],
      "operationId": "NetworksSsidsByNetworkIdAndNumberGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "number",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"number\": 0,\r\n  \"name\": \"My SSID\",\r\n  \"enabled\": true,\r\n  \"splashPage\": \"Click-through splash page\",\r\n  \"ssidAdminAccessible\": false,\r\n  \"authMode\": \"open\",\r\n  \"ipAssignmentMode\": \"NAT mode\",\r\n  \"bandSelection\": \"5 GHz band only\",\r\n  \"perClientBandwidthLimitUp\": 0,\r\n  \"perClientBandwidthLimitDown\": 0\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/ssids/{number}` (put) - OperationId turned from `updateNetworkSsid` to `NetworksSsidsByNetworkIdAndNumberPut`",
    "messageHtml": "OperationId turned from <code>updateNetworkSsid</code> to <code>NetworksSsidsByNetworkIdAndNumberPut</code>",
    "path": "/networks/{networkId}/ssids/{number}",
    "method": "put",
    "previousOperationId": "updateNetworkSsid",
    "currentOperationId": "NetworksSsidsByNetworkIdAndNumberPut",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Update the attributes of an SSID",
      "summary": "updateNetworkSsid",
      "tags": [
        "SSIDs"
      ],
      "operationId": "NetworksSsidsByNetworkIdAndNumberPut",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "number",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "updateNetworkSsid",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/updateNetworkSsid"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"number\": 0,\r\n  \"name\": \"My SSID\",\r\n  \"enabled\": true,\r\n  \"splashPage\": \"Click-through splash page\",\r\n  \"ssidAdminAccessible\": false,\r\n  \"authMode\": \"open\",\r\n  \"ipAssignmentMode\": \"NAT mode\",\r\n  \"bandSelection\": \"5 GHz band only\",\r\n  \"perClientBandwidthLimitUp\": 0,\r\n  \"perClientBandwidthLimitDown\": 0\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "delete-path",
    "message": "`/networks/{networkId}/ssids/{number}/reset` - Deleted",
    "messageHtml": "Deleted",
    "path": "/networks/{networkId}/ssids/{number}/reset",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/switch/settings` (get) - OperationId turned from `getNetworkSwitchSettings` to `NetworksSwitchSettingsByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkSwitchSettings</code> to <code>NetworksSwitchSettingsByNetworkIdGet</code>",
    "path": "/networks/{networkId}/switch/settings",
    "method": "get",
    "previousOperationId": "getNetworkSwitchSettings",
    "currentOperationId": "NetworksSwitchSettingsByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Returns the switch network settings",
      "summary": "getNetworkSwitchSettings",
      "tags": [
        "Switch settings"
      ],
      "operationId": "NetworksSwitchSettingsByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/switch/settings` (put) - OperationId turned from `updateNetworkSwitchSettings` to `NetworksSwitchSettingsByNetworkIdPut`",
    "messageHtml": "OperationId turned from <code>updateNetworkSwitchSettings</code> to <code>NetworksSwitchSettingsByNetworkIdPut</code>",
    "path": "/networks/{networkId}/switch/settings",
    "method": "put",
    "previousOperationId": "updateNetworkSwitchSettings",
    "currentOperationId": "NetworksSwitchSettingsByNetworkIdPut",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Update switch network settings",
      "summary": "updateNetworkSwitchSettings",
      "tags": [
        "Switch settings"
      ],
      "operationId": "NetworksSwitchSettingsByNetworkIdPut",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "updateNetworkSwitchSettings",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/updateNetworkSwitchSettings"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"useCombinedPower\": false,\r\n  \"powerExceptions\": [\r\n    {\r\n      \"serial\": \"Q234-ABCD-0001\",\r\n      \"powerType\": \"redundant\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0002\",\r\n      \"powerType\": \"combined\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0003\",\r\n      \"powerType\": \"redundant\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0004\",\r\n      \"powerType\": \"useNetworkSetting\"\r\n    }\r\n  ]\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-object-property-required",
    "message": "`paths//networks/{networkId}/switch/settings/put/parameters/updateNetworkSwitchSettings/schema/properties/powerExceptions/items` - Property `serial` became required",
    "messageHtml": "<code>paths//networks/{networkId}/switch/settings/put/parameters/updateNetworkSwitchSettings/schema/properties/powerExceptions/items</code> - Property <code>serial</code> became required",
    "path": "paths//networks/{networkId}/switch/settings/put/parameters/updateNetworkSwitchSettings/schema/properties/powerExceptions/items",
    "property": "serial",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "edit-object-property-required",
    "message": "`paths//networks/{networkId}/switch/settings/put/parameters/updateNetworkSwitchSettings/schema/properties/powerExceptions/items` - Property `powerType` became required",
    "messageHtml": "<code>paths//networks/{networkId}/switch/settings/put/parameters/updateNetworkSwitchSettings/schema/properties/powerExceptions/items</code> - Property <code>powerType</code> became required",
    "path": "paths//networks/{networkId}/switch/settings/put/parameters/updateNetworkSwitchSettings/schema/properties/powerExceptions/items",
    "property": "powerType",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/devices/{serial}/switchPorts` (get) - OperationId turned from `getDeviceSwitchPorts` to `DevicesSwitchPortsBySerialGet`",
    "messageHtml": "OperationId turned from <code>getDeviceSwitchPorts</code> to <code>DevicesSwitchPortsBySerialGet</code>",
    "path": "/devices/{serial}/switchPorts",
    "method": "get",
    "previousOperationId": "getDeviceSwitchPorts",
    "currentOperationId": "DevicesSwitchPortsBySerialGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "List the switch ports for a switch",
      "summary": "getDeviceSwitchPorts",
      "tags": [
        "Switch ports"
      ],
      "operationId": "DevicesSwitchPortsBySerialGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "serial",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"number\": 1,\r\n    \"name\": \"My switch port\",\r\n    \"tags\": \"tag1 tag2\",\r\n    \"enabled\": true,\r\n    \"poeEnabled\": true,\r\n    \"type\": \"access\",\r\n    \"vlan\": 10,\r\n    \"voiceVlan\": 20,\r\n    \"isolationEnabled\": false,\r\n    \"rstpEnabled\": true,\r\n    \"stpGuard\": \"disabled\",\r\n    \"accessPolicyNumber\": \"1234\",\r\n    \"linkNegotiation\": \"Auto negotiate\"\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/devices/{serial}/switchPorts/{number}` (get) - OperationId turned from `getDeviceSwitchPort` to `DevicesSwitchPortsBySerialAndNumberGet`",
    "messageHtml": "OperationId turned from <code>getDeviceSwitchPort</code> to <code>DevicesSwitchPortsBySerialAndNumberGet</code>",
    "path": "/devices/{serial}/switchPorts/{number}",
    "method": "get",
    "previousOperationId": "getDeviceSwitchPort",
    "currentOperationId": "DevicesSwitchPortsBySerialAndNumberGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Return a switch port",
      "summary": "getDeviceSwitchPort",
      "tags": [
        "Switch ports"
      ],
      "operationId": "DevicesSwitchPortsBySerialAndNumberGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "serial",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "number",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"number\": 1,\r\n  \"name\": \"My switch port\",\r\n  \"tags\": \"tag1 tag2\",\r\n  \"enabled\": true,\r\n  \"poeEnabled\": true,\r\n  \"type\": \"access\",\r\n  \"vlan\": 10,\r\n  \"voiceVlan\": 20,\r\n  \"isolationEnabled\": false,\r\n  \"rstpEnabled\": true,\r\n  \"stpGuard\": \"disabled\",\r\n  \"accessPolicyNumber\": \"1234\",\r\n  \"linkNegotiation\": \"Auto negotiate\"\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/devices/{serial}/switchPorts/{number}` (put) - OperationId turned from `updateDeviceSwitchPort` to `DevicesSwitchPortsBySerialAndNumberPut`",
    "messageHtml": "OperationId turned from <code>updateDeviceSwitchPort</code> to <code>DevicesSwitchPortsBySerialAndNumberPut</code>",
    "path": "/devices/{serial}/switchPorts/{number}",
    "method": "put",
    "previousOperationId": "updateDeviceSwitchPort",
    "currentOperationId": "DevicesSwitchPortsBySerialAndNumberPut",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Update a switch port",
      "summary": "updateDeviceSwitchPort",
      "tags": [
        "Switch ports"
      ],
      "operationId": "DevicesSwitchPortsBySerialAndNumberPut",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "serial",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "number",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "updateDeviceSwitchPort",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/updateDeviceSwitchPort"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"number\": 1,\r\n  \"name\": \"My switch port\",\r\n  \"tags\": \"tag1 tag2\",\r\n  \"enabled\": true,\r\n  \"poeEnabled\": true,\r\n  \"type\": \"access\",\r\n  \"vlan\": 10,\r\n  \"voiceVlan\": 20,\r\n  \"isolationEnabled\": false,\r\n  \"rstpEnabled\": true,\r\n  \"stpGuard\": \"disabled\",\r\n  \"accessPolicyNumber\": \"1234\",\r\n  \"linkNegotiation\": \"Auto negotiate\"\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/switchStacks` (get) - OperationId turned from `getNetworkSwitchStacks` to `NetworksSwitchStacksByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkSwitchStacks</code> to <code>NetworksSwitchStacksByNetworkIdGet</code>",
    "path": "/networks/{networkId}/switchStacks",
    "method": "get",
    "previousOperationId": "getNetworkSwitchStacks",
    "currentOperationId": "NetworksSwitchStacksByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "List the switch stacks in a network",
      "summary": "getNetworkSwitchStacks",
      "tags": [
        "Switch stacks"
      ],
      "operationId": "NetworksSwitchStacksByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"id\": \"8473\",\r\n    \"name\": \"A cool stack\",\r\n    \"serials\": [\r\n      \"QBZY-XWVU-TSRQ\",\r\n      \"QBAB-CDEF-GHIJ\"\r\n    ]\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/switchStacks` (post) - OperationId turned from `createNetworkSwitchStack` to `NetworksSwitchStacksByNetworkIdPost`",
    "messageHtml": "OperationId turned from <code>createNetworkSwitchStack</code> to <code>NetworksSwitchStacksByNetworkIdPost</code>",
    "path": "/networks/{networkId}/switchStacks",
    "method": "post",
    "previousOperationId": "createNetworkSwitchStack",
    "currentOperationId": "NetworksSwitchStacksByNetworkIdPost",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Create a stack",
      "summary": "createNetworkSwitchStack",
      "tags": [
        "Switch stacks"
      ],
      "operationId": "NetworksSwitchStacksByNetworkIdPost",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "createNetworkSwitchStack",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/createNetworkSwitchStack"
          }
        }
      ],
      "responses": {
        "201": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"id\": \"8473\",\r\n  \"name\": \"A cool stack\",\r\n  \"serials\": [\r\n    \"QBZY-XWVU-TSRQ\",\r\n    \"QBAB-CDEF-GHIJ\"\r\n  ]\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/switchStacks/{switchStackId}` (get) - OperationId turned from `getNetworkSwitchStack` to `NetworksSwitchStacksByNetworkIdAndSwitchStackIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkSwitchStack</code> to <code>NetworksSwitchStacksByNetworkIdAndSwitchStackIdGet</code>",
    "path": "/networks/{networkId}/switchStacks/{switchStackId}",
    "method": "get",
    "previousOperationId": "getNetworkSwitchStack",
    "currentOperationId": "NetworksSwitchStacksByNetworkIdAndSwitchStackIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Show a switch stack",
      "summary": "getNetworkSwitchStack",
      "tags": [
        "Switch stacks"
      ],
      "operationId": "NetworksSwitchStacksByNetworkIdAndSwitchStackIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "switchStackId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"id\": \"8473\",\r\n  \"name\": \"A cool stack\",\r\n  \"serials\": [\r\n    \"QBZY-XWVU-TSRQ\",\r\n    \"QBAB-CDEF-GHIJ\"\r\n  ]\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/switchStacks/{switchStackId}` (delete) - OperationId turned from `deleteNetworkSwitchStack` to `NetworksSwitchStacksByNetworkIdAndSwitchStackIdDelete`",
    "messageHtml": "OperationId turned from <code>deleteNetworkSwitchStack</code> to <code>NetworksSwitchStacksByNetworkIdAndSwitchStackIdDelete</code>",
    "path": "/networks/{networkId}/switchStacks/{switchStackId}",
    "method": "delete",
    "previousOperationId": "deleteNetworkSwitchStack",
    "currentOperationId": "NetworksSwitchStacksByNetworkIdAndSwitchStackIdDelete",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Delete a stack",
      "summary": "deleteNetworkSwitchStack",
      "tags": [
        "Switch stacks"
      ],
      "operationId": "NetworksSwitchStacksByNetworkIdAndSwitchStackIdDelete",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "switchStackId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "204": {
          "description": "Successful operation",
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/switchStacks/{switchStackId}/add` (post) - OperationId turned from `addNetworkSwitchStack` to `NetworksSwitchStacksAddByNetworkIdAndSwitchStackIdPost`",
    "messageHtml": "OperationId turned from <code>addNetworkSwitchStack</code> to <code>NetworksSwitchStacksAddByNetworkIdAndSwitchStackIdPost</code>",
    "path": "/networks/{networkId}/switchStacks/{switchStackId}/add",
    "method": "post",
    "previousOperationId": "addNetworkSwitchStack",
    "currentOperationId": "NetworksSwitchStacksAddByNetworkIdAndSwitchStackIdPost",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Add a switch to a stack",
      "summary": "addNetworkSwitchStack",
      "tags": [
        "Switch stacks"
      ],
      "operationId": "NetworksSwitchStacksAddByNetworkIdAndSwitchStackIdPost",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "switchStackId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "addNetworkSwitchStack",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/addNetworkSwitchStack"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"id\": \"8473\",\r\n  \"name\": \"A cool stack\",\r\n  \"serials\": [\r\n    \"QBZY-XWVU-TSRQ\",\r\n    \"QBAB-CDEF-GHIJ\"\r\n  ]\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkID}/switchStacks/{switchStackId}/remove` (post) - OperationId turned from `removeNetworkSwitchStack` to `NetworksSwitchStacksRemoveByNetworkIDAndSwitchStackIdPost`",
    "messageHtml": "OperationId turned from <code>removeNetworkSwitchStack</code> to <code>NetworksSwitchStacksRemoveByNetworkIDAndSwitchStackIdPost</code>",
    "path": "/networks/{networkID}/switchStacks/{switchStackId}/remove",
    "method": "post",
    "previousOperationId": "removeNetworkSwitchStack",
    "currentOperationId": "NetworksSwitchStacksRemoveByNetworkIDAndSwitchStackIdPost",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Remove a switch from a stack",
      "summary": "removeNetworkSwitchStack",
      "tags": [
        "Switch stacks"
      ],
      "operationId": "NetworksSwitchStacksRemoveByNetworkIDAndSwitchStackIdPost",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkID",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "switchStackId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "removeNetworkSwitchStack",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/removeNetworkSwitchStack"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"id\": \"8473\",\r\n  \"name\": \"A cool stack\",\r\n  \"serials\": [\r\n    \"QBAB-CDEF-GHIJ\"\r\n  ]\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/syslogServers` (get) - OperationId turned from `getNetworkSyslogServers` to `NetworksSyslogServersByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkSyslogServers</code> to <code>NetworksSyslogServersByNetworkIdGet</code>",
    "path": "/networks/{networkId}/syslogServers",
    "method": "get",
    "previousOperationId": "getNetworkSyslogServers",
    "currentOperationId": "NetworksSyslogServersByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "List the syslog servers for a network",
      "summary": "getNetworkSyslogServers",
      "tags": [
        "Syslog servers"
      ],
      "operationId": "NetworksSyslogServersByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"host\": \"1.2.3.4\",\r\n    \"port\": 443,\r\n    \"roles\": [\r\n      \"Wireless event log\",\r\n      \"URLs\"\r\n    ]\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/syslogServers` (put) - OperationId turned from `updateNetworkSyslogServers` to `NetworksSyslogServersByNetworkIdPut`",
    "messageHtml": "OperationId turned from <code>updateNetworkSyslogServers</code> to <code>NetworksSyslogServersByNetworkIdPut</code>",
    "path": "/networks/{networkId}/syslogServers",
    "method": "put",
    "previousOperationId": "updateNetworkSyslogServers",
    "currentOperationId": "NetworksSyslogServersByNetworkIdPut",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Update the syslog servers for a network",
      "summary": "updateNetworkSyslogServers",
      "tags": [
        "Syslog servers"
      ],
      "operationId": "NetworksSyslogServersByNetworkIdPut",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "updateNetworkSyslogServers",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/updateNetworkSyslogServers"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"host\": \"1.2.3.4\",\r\n    \"port\": 443,\r\n    \"roles\": [\r\n      \"Wireless event log\",\r\n      \"URLs\"\r\n    ]\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/trafficShaping` (get) - OperationId turned from `getNetworkTrafficShaping` to `NetworksTrafficShapingByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkTrafficShaping</code> to <code>NetworksTrafficShapingByNetworkIdGet</code>",
    "path": "/networks/{networkId}/trafficShaping",
    "method": "get",
    "previousOperationId": "getNetworkTrafficShaping",
    "currentOperationId": "NetworksTrafficShapingByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Display the traffic shaping settings for an MX network",
      "summary": "getNetworkTrafficShaping",
      "tags": [
        "Traffic shaping"
      ],
      "operationId": "NetworksTrafficShapingByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"defaultRulesEnabled\": true,\r\n  \"rules\": [\r\n    {\r\n      \"definitions\": [\r\n        {\r\n          \"type\": \"host\",\r\n          \"value\": \"google.com\"\r\n        },\r\n        {\r\n          \"type\": \"port\",\r\n          \"value\": \"9090\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"192.1.0.0\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"192.1.0.0/16\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"10.1.0.0/16:80\"\r\n        },\r\n        {\r\n          \"type\": \"localNet\",\r\n          \"value\": \"192.168.0.0/16\"\r\n        },\r\n        {\r\n          \"type\": \"applicationCategory\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/category/2\",\r\n            \"name\": \"Blogging\"\r\n          }\r\n        },\r\n        {\r\n          \"type\": \"application\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/application/133\",\r\n            \"name\": \"Battle.net\"\r\n          }\r\n        }\r\n      ],\r\n      \"perClientBandwidthLimits\": {\r\n        \"settings\": \"custom\",\r\n        \"bandwidthLimits\": {\r\n          \"limitUp\": 1000000,\r\n          \"limitDown\": 1000000\r\n        }\r\n      },\r\n      \"dscpTagValue\": null,\r\n      \"priority\": \"normal\"\r\n    }\r\n  ]\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/trafficShaping` (put) - OperationId turned from `updateNetworkTrafficShaping` to `NetworksTrafficShapingByNetworkIdPut`",
    "messageHtml": "OperationId turned from <code>updateNetworkTrafficShaping</code> to <code>NetworksTrafficShapingByNetworkIdPut</code>",
    "path": "/networks/{networkId}/trafficShaping",
    "method": "put",
    "previousOperationId": "updateNetworkTrafficShaping",
    "currentOperationId": "NetworksTrafficShapingByNetworkIdPut",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Update the traffic shaping settings for an MX network",
      "summary": "updateNetworkTrafficShaping",
      "tags": [
        "Traffic shaping"
      ],
      "operationId": "NetworksTrafficShapingByNetworkIdPut",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "updateNetworkTrafficShaping",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/updateNetworkTrafficShaping"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"defaultRulesEnabled\": true,\r\n  \"rules\": [\r\n    {\r\n      \"definitions\": [\r\n        {\r\n          \"type\": \"host\",\r\n          \"value\": \"google.com\"\r\n        },\r\n        {\r\n          \"type\": \"port\",\r\n          \"value\": \"9090\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"192.1.0.0\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"192.1.0.0/16\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"10.1.0.0/16:80\"\r\n        },\r\n        {\r\n          \"type\": \"localNet\",\r\n          \"value\": \"192.168.0.0/16\"\r\n        },\r\n        {\r\n          \"type\": \"applicationCategory\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/category/2\",\r\n            \"name\": \"Blogging\"\r\n          }\r\n        },\r\n        {\r\n          \"type\": \"application\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/application/133\",\r\n            \"name\": \"Battle.net\"\r\n          }\r\n        }\r\n      ],\r\n      \"perClientBandwidthLimits\": {\r\n        \"settings\": \"custom\",\r\n        \"bandwidthLimits\": {\r\n          \"limitUp\": 1000000,\r\n          \"limitDown\": 1000000\r\n        }\r\n      },\r\n      \"dscpTagValue\": null,\r\n      \"priority\": \"normal\"\r\n    }\r\n  ]\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/ssids/{number}/trafficShaping` (get) - OperationId turned from `getNetworkSsidTrafficShaping` to `NetworksSsidsTrafficShapingByNetworkIdAndNumberGet`",
    "messageHtml": "OperationId turned from <code>getNetworkSsidTrafficShaping</code> to <code>NetworksSsidsTrafficShapingByNetworkIdAndNumberGet</code>",
    "path": "/networks/{networkId}/ssids/{number}/trafficShaping",
    "method": "get",
    "previousOperationId": "getNetworkSsidTrafficShaping",
    "currentOperationId": "NetworksSsidsTrafficShapingByNetworkIdAndNumberGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Display the traffic shaping settings for a SSID on an MR network",
      "summary": "getNetworkSsidTrafficShaping",
      "tags": [
        "Traffic shaping"
      ],
      "operationId": "NetworksSsidsTrafficShapingByNetworkIdAndNumberGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "number",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"trafficShapingEnabled\": true,\r\n  \"defaultRulesEnabled\": true,\r\n  \"rules\": [\r\n    {\r\n      \"definitions\": [\r\n        {\r\n          \"type\": \"host\",\r\n          \"value\": \"google.com\"\r\n        },\r\n        {\r\n          \"type\": \"port\",\r\n          \"value\": \"9090\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"192.1.0.0\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"192.1.0.0/16\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"10.1.0.0/16:80\"\r\n        },\r\n        {\r\n          \"type\": \"localNet\",\r\n          \"value\": \"192.168.0.0/16\"\r\n        },\r\n        {\r\n          \"type\": \"applicationCategory\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/category/2\",\r\n            \"name\": \"Blogging\"\r\n          }\r\n        },\r\n        {\r\n          \"type\": \"application\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/application/133\",\r\n            \"name\": \"Battle.net\"\r\n          }\r\n        }\r\n      ],\r\n      \"perClientBandwidthLimits\": {\r\n        \"settings\": \"custom\",\r\n        \"bandwidthLimits\": {\r\n          \"limitUp\": 1000000,\r\n          \"limitDown\": 1000000\r\n        }\r\n      },\r\n      \"dscpTagValue\": null,\r\n      \"pcpTagValue\": null\r\n    }\r\n  ]\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/ssids/{number}/trafficShaping` (put) - OperationId turned from `updateNetworkSsidTrafficShaping` to `NetworksSsidsTrafficShapingByNetworkIdAndNumberPut`",
    "messageHtml": "OperationId turned from <code>updateNetworkSsidTrafficShaping</code> to <code>NetworksSsidsTrafficShapingByNetworkIdAndNumberPut</code>",
    "path": "/networks/{networkId}/ssids/{number}/trafficShaping",
    "method": "put",
    "previousOperationId": "updateNetworkSsidTrafficShaping",
    "currentOperationId": "NetworksSsidsTrafficShapingByNetworkIdAndNumberPut",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Update the traffic shaping settings for an SSID on an MR network",
      "summary": "updateNetworkSsidTrafficShaping",
      "tags": [
        "Traffic shaping"
      ],
      "operationId": "NetworksSsidsTrafficShapingByNetworkIdAndNumberPut",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "number",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "updateNetworkSsidTrafficShaping",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/updateNetworkSsidTrafficShaping"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"trafficShapingEnabled\": true,\r\n  \"defaultRulesEnabled\": true,\r\n  \"rules\": [\r\n    {\r\n      \"definitions\": [\r\n        {\r\n          \"type\": \"host\",\r\n          \"value\": \"google.com\"\r\n        },\r\n        {\r\n          \"type\": \"port\",\r\n          \"value\": \"9090\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"192.1.0.0\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"192.1.0.0/16\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"10.1.0.0/16:80\"\r\n        },\r\n        {\r\n          \"type\": \"localNet\",\r\n          \"value\": \"192.168.0.0/16\"\r\n        },\r\n        {\r\n          \"type\": \"applicationCategory\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/category/2\",\r\n            \"name\": \"Blogging\"\r\n          }\r\n        },\r\n        {\r\n          \"type\": \"application\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/application/133\",\r\n            \"name\": \"Battle.net\"\r\n          }\r\n        }\r\n      ],\r\n      \"perClientBandwidthLimits\": {\r\n        \"settings\": \"custom\",\r\n        \"bandwidthLimits\": {\r\n          \"limitUp\": 1000000,\r\n          \"limitDown\": 1000000\r\n        }\r\n      },\r\n      \"dscpTagValue\": null,\r\n      \"pcpTagValue\": null\r\n    }\r\n  ]\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/trafficShaping/dscpTaggingOptions` (get) - OperationId turned from `getNetworkTrafficShapingDscpTaggingOptions` to `NetworksTrafficShapingDscpTaggingOptionsByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkTrafficShapingDscpTaggingOptions</code> to <code>NetworksTrafficShapingDscpTaggingOptionsByNetworkIdGet</code>",
    "path": "/networks/{networkId}/trafficShaping/dscpTaggingOptions",
    "method": "get",
    "previousOperationId": "getNetworkTrafficShapingDscpTaggingOptions",
    "currentOperationId": "NetworksTrafficShapingDscpTaggingOptionsByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Returns the available DSCP tagging options for your traffic shaping rules.",
      "summary": "getNetworkTrafficShapingDscpTaggingOptions",
      "tags": [
        "Traffic shaping"
      ],
      "operationId": "NetworksTrafficShapingDscpTaggingOptionsByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"dscpTagValue\": 10,\r\n    \"description\": \"AF11 - High Throughput, Latency Insensitive, Low Drop\"\r\n  },\r\n  {\r\n    \"dscpTagValue\": 12,\r\n    \"description\": \"AF12 - High Throughput, Latency Insensitive, Medium Drop\"\r\n  },\r\n  {\r\n    \"dscpTagValue\": 14,\r\n    \"description\": \"AF13 - High Throughput, Latency Insensitive, High Drop\"\r\n  },\r\n  {\r\n    \"dscpTagValue\": 18,\r\n    \"description\": \"AF21 - Low Latency Data, Low Drop\"\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/trafficShaping/applicationCategories` (get) - OperationId turned from `getNetworkTrafficShapingApplicationCategories` to `NetworksTrafficShapingApplicationCategoriesByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkTrafficShapingApplicationCategories</code> to <code>NetworksTrafficShapingApplicationCategoriesByNetworkIdGet</code>",
    "path": "/networks/{networkId}/trafficShaping/applicationCategories",
    "method": "get",
    "previousOperationId": "getNetworkTrafficShapingApplicationCategories",
    "currentOperationId": "NetworksTrafficShapingApplicationCategoriesByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Returns the application categories for traffic shaping rules.",
      "summary": "getNetworkTrafficShapingApplicationCategories",
      "tags": [
        "Traffic shaping"
      ],
      "operationId": "NetworksTrafficShapingApplicationCategoriesByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"applicationCategories\": [\r\n      {\r\n        \"id\": \"meraki:layer7/category/24\",\r\n        \"name\": \"Advertising\",\r\n        \"applications\": [\r\n          {\r\n            \"id\": \"meraki:layer7/application/5\",\r\n            \"name\": \"Advertising.com\"\r\n          },\r\n          {\r\n            \"id\": \"meraki:layer7/application/0\",\r\n            \"name\": \"AppNexus\"\r\n          },\r\n          {\r\n            \"id\": \"meraki:layer7/application/1\",\r\n            \"name\": \"Brightroll\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "delete-path",
    "message": "`/networks/{networkdId}/devices/{serial}/uplinkInterfaceSettings` - Deleted",
    "messageHtml": "Deleted",
    "path": "/networks/{networkdId}/devices/{serial}/uplinkInterfaceSettings",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "delete-path",
    "message": "`/networks/{networkId}/devices/{serial}/uplinkInterfaceSettings` - Deleted",
    "messageHtml": "Deleted",
    "path": "/networks/{networkId}/devices/{serial}/uplinkInterfaceSettings",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/organizations/{organizationId}/webhookLogs` (get) - OperationId turned from `getOrganizationWebhookLogs` to `OrganizationsWebhookLogsByOrganizationIdGet`",
    "messageHtml": "OperationId turned from <code>getOrganizationWebhookLogs</code> to <code>OrganizationsWebhookLogsByOrganizationIdGet</code>",
    "path": "/organizations/{organizationId}/webhookLogs",
    "method": "get",
    "previousOperationId": "getOrganizationWebhookLogs",
    "currentOperationId": "OrganizationsWebhookLogsByOrganizationIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Return the log of webhook POSTs sent",
      "summary": "getOrganizationWebhookLogs",
      "tags": [
        "Webhook logs"
      ],
      "operationId": "OrganizationsWebhookLogsByOrganizationIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "t0",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 90 days from today."
        },
        {
          "name": "t1",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
        },
        {
          "name": "timespan",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
        },
        {
          "name": "perPage",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50."
        },
        {
          "name": "startingAfter",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
        },
        {
          "name": "endingBefore",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
        },
        {
          "name": "url",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The URL the webhook was sent to"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"organizationId\": \"33619\",\r\n    \"networkId\": \"L_22742\",\r\n    \"alertType\": \"Settings changed\",\r\n    \"url\": \"https://www.example.com/path\",\r\n    \"sentAt\": \"2019-01-01T13:37:28.123456Z\",\r\n    \"loggedAt\": \"2019-01-01T13:37:28.423456Z\",\r\n    \"responseCode\": 200,\r\n    \"responseDuration\": 244\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/contentFiltering/categories` (get) - OperationId turned from `getNetworkContentFilteringCategories` to `NetworksContentFilteringCategoriesByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkContentFilteringCategories</code> to <code>NetworksContentFilteringCategoriesByNetworkIdGet</code>",
    "path": "/networks/{networkId}/contentFiltering/categories",
    "method": "get",
    "previousOperationId": "getNetworkContentFilteringCategories",
    "currentOperationId": "NetworksContentFilteringCategoriesByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "List all available content filtering categories for an MX network",
      "summary": "getNetworkContentFilteringCategories",
      "tags": [
        "Content filtering categories"
      ],
      "operationId": "NetworksContentFilteringCategoriesByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"categories\": [\r\n    {\r\n      \"id\": \"meraki:contentFiltering/category/1\",\r\n      \"name\": \"Real Estate\"\r\n    },\r\n    {\r\n      \"id\": \"meraki:contentFiltering/category/3\",\r\n      \"name\": \"Financial Services\"\r\n    },\r\n    \"...\",\r\n    {\r\n      \"id\": \"meraki:contentFiltering/category/11\",\r\n      \"name\": \"Adult and Pornography\"\r\n    }\r\n  ]\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/contentFiltering` (get) - OperationId turned from `getNetworkContentFiltering` to `NetworksContentFilteringByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkContentFiltering</code> to <code>NetworksContentFilteringByNetworkIdGet</code>",
    "path": "/networks/{networkId}/contentFiltering",
    "method": "get",
    "previousOperationId": "getNetworkContentFiltering",
    "currentOperationId": "NetworksContentFilteringByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Return the content filtering settings for an MX network",
      "summary": "getNetworkContentFiltering",
      "tags": [
        "Content filtering rules"
      ],
      "operationId": "NetworksContentFilteringByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"allowedUrlPatterns\": [\r\n    \"http://www.example.org\",\r\n    \"http://help.com.au\"\r\n  ],\r\n  \"blockedUrlPatterns\": [\r\n    \"http://www.example.com\",\r\n    \"http://www.betting.com\"\r\n  ],\r\n  \"blockedUrlCategories\": [\r\n    {\r\n      \"id\": \"meraki:contentFiltering/category/1\",\r\n      \"name\": \"Real Estate\"\r\n    },\r\n    {\r\n      \"id\": \"meraki:contentFiltering/category/7\",\r\n      \"name\": \"Shopping\"\r\n    }\r\n  ],\r\n  \"urlCategoryListSize\": \"topSites\"\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/contentFiltering` (put) - OperationId turned from `updateNetworkContentFiltering` to `NetworksContentFilteringByNetworkIdPut`",
    "messageHtml": "OperationId turned from <code>updateNetworkContentFiltering</code> to <code>NetworksContentFilteringByNetworkIdPut</code>",
    "path": "/networks/{networkId}/contentFiltering",
    "method": "put",
    "previousOperationId": "updateNetworkContentFiltering",
    "currentOperationId": "NetworksContentFilteringByNetworkIdPut",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Update the content filtering settings for an MX network",
      "summary": "updateNetworkContentFiltering",
      "tags": [
        "Content filtering rules"
      ],
      "operationId": "NetworksContentFilteringByNetworkIdPut",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "updateNetworkContentFiltering",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/updateNetworkContentFiltering"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"allowedUrlPatterns\": [\r\n    \"http://www.example.org\",\r\n    \"http://help.com.au\"\r\n  ],\r\n  \"blockedUrlPatterns\": [\r\n    \"http://www.example.com\",\r\n    \"http://www.betting.com\"\r\n  ],\r\n  \"blockedUrlCategories\": [\r\n    {\r\n      \"id\": \"meraki:contentFiltering/category/1\",\r\n      \"name\": \"Real Estate\"\r\n    },\r\n    {\r\n      \"id\": \"meraki:contentFiltering/category/7\",\r\n      \"name\": \"Shopping\"\r\n    }\r\n  ],\r\n  \"urlCategoryListSize\": \"topSites\"\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/firewalledServices` (get) - OperationId turned from `getNetworkFirewalledServices` to `NetworksFirewalledServicesByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkFirewalledServices</code> to <code>NetworksFirewalledServicesByNetworkIdGet</code>",
    "path": "/networks/{networkId}/firewalledServices",
    "method": "get",
    "previousOperationId": "getNetworkFirewalledServices",
    "currentOperationId": "NetworksFirewalledServicesByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "List the appliance services and their accessibility rules",
      "summary": "getNetworkFirewalledServices",
      "tags": [
        "Firewalled services"
      ],
      "operationId": "NetworksFirewalledServicesByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"service\": \"web\",\r\n    \"access\": \"restricted\",\r\n    \"allowedIps\": [\r\n      \"123.123.123.1\"\r\n    ]\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/firewalledServices/{service}` (get) - OperationId turned from `getNetworkFirewalledService` to `NetworksFirewalledServicesByNetworkIdAndServiceGet`",
    "messageHtml": "OperationId turned from <code>getNetworkFirewalledService</code> to <code>NetworksFirewalledServicesByNetworkIdAndServiceGet</code>",
    "path": "/networks/{networkId}/firewalledServices/{service}",
    "method": "get",
    "previousOperationId": "getNetworkFirewalledService",
    "currentOperationId": "NetworksFirewalledServicesByNetworkIdAndServiceGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Return the accessibility settings of the given service ('ICMP', 'web', or 'SNMP')",
      "summary": "getNetworkFirewalledService",
      "tags": [
        "Firewalled services"
      ],
      "operationId": "NetworksFirewalledServicesByNetworkIdAndServiceGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "service",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"service\": \"web\",\r\n  \"access\": \"restricted\",\r\n  \"allowedIps\": [\r\n    \"123.123.123.1\"\r\n  ]\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/firewalledServices/{service}` (put) - OperationId turned from `updateNetworkFirewalledService` to `NetworksFirewalledServicesByNetworkIdAndServicePut`",
    "messageHtml": "OperationId turned from <code>updateNetworkFirewalledService</code> to <code>NetworksFirewalledServicesByNetworkIdAndServicePut</code>",
    "path": "/networks/{networkId}/firewalledServices/{service}",
    "method": "put",
    "previousOperationId": "updateNetworkFirewalledService",
    "currentOperationId": "NetworksFirewalledServicesByNetworkIdAndServicePut",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Updates the accessibility settings for the given service ('ICMP', 'web', or 'SNMP')",
      "summary": "updateNetworkFirewalledService",
      "tags": [
        "Firewalled services"
      ],
      "operationId": "NetworksFirewalledServicesByNetworkIdAndServicePut",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "service",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "updateNetworkFirewalledService",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/updateNetworkFirewalledService"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"service\": \"web\",\r\n  \"access\": \"restricted\",\r\n  \"allowedIps\": [\r\n    \"123.123.123.1\"\r\n  ]\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "delete-path",
    "message": "`/ids_alerts?start_time=<float_start_time>&end_time=<optional_float_end_time>` - Deleted",
    "messageHtml": "Deleted",
    "path": "/ids_alerts?start_time=<float_start_time>&end_time=<optional_float_end_time>",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "delete-path",
    "message": "`/ids_alerts/packet?q_ts=<ids_alert_timestamp>q_organization_id=<organization_id>&q_network_id=<network_id>` - Deleted",
    "messageHtml": "Deleted",
    "path": "/ids_alerts/packet?q_ts=<ids_alert_timestamp>q_organization_id=<organization_id>&q_network_id=<network_id>",
    "type": "warnings",
    "name": "Major"
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/oneToManyNatRules` (get) - OperationId turned from `getNetworkOneToManyNatRules` to `NetworksOneToManyNatRulesByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkOneToManyNatRules</code> to <code>NetworksOneToManyNatRulesByNetworkIdGet</code>",
    "path": "/networks/{networkId}/oneToManyNatRules",
    "method": "get",
    "previousOperationId": "getNetworkOneToManyNatRules",
    "currentOperationId": "NetworksOneToManyNatRulesByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Return the 1:Many NAT mapping rules for an MX network",
      "summary": "getNetworkOneToManyNatRules",
      "tags": [
        "MX 1:Many NAT rules"
      ],
      "operationId": "NetworksOneToManyNatRulesByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"rules\": [\r\n    {\r\n      \"publicIp\": \"146.11.11.13\",\r\n      \"uplink\": \"internet1\",\r\n      \"portRules\": [\r\n        {\r\n          \"name\": \"Rule 1\",\r\n          \"protocol\": \"tcp\",\r\n          \"publicPort\": \"9443\",\r\n          \"localIp\": \"192.168.128.1\",\r\n          \"localPort\": \"443\",\r\n          \"allowedIps\": [\r\n            \"any\"\r\n          ]\r\n        },\r\n        {\r\n          \"name\": \"Rule 2\",\r\n          \"protocol\": \"tcp\",\r\n          \"publicPort\": \"8080\",\r\n          \"localIp\": \"192.168.128.1\",\r\n          \"localPort\": \"80\",\r\n          \"allowedIps\": [\r\n            \"10.82.110.0/24\",\r\n            \"10.82.111.0/24\"\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/oneToManyNatRules` (put) - OperationId turned from `updateNetworkOneToManyNatRules` to `NetworksOneToManyNatRulesByNetworkIdPut`",
    "messageHtml": "OperationId turned from <code>updateNetworkOneToManyNatRules</code> to <code>NetworksOneToManyNatRulesByNetworkIdPut</code>",
    "path": "/networks/{networkId}/oneToManyNatRules",
    "method": "put",
    "previousOperationId": "updateNetworkOneToManyNatRules",
    "currentOperationId": "NetworksOneToManyNatRulesByNetworkIdPut",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Set the 1:Many NAT mapping rules for an MX network",
      "summary": "updateNetworkOneToManyNatRules",
      "tags": [
        "MX 1:Many NAT rules"
      ],
      "operationId": "NetworksOneToManyNatRulesByNetworkIdPut",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "updateNetworkOneToManyNatRules",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/updateNetworkOneToManyNatRules"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"rules\": [\r\n    {\r\n      \"publicIp\": \"146.11.11.13\",\r\n      \"uplink\": \"internet1\",\r\n      \"portRules\": [\r\n        {\r\n          \"name\": \"Rule 1\",\r\n          \"protocol\": \"tcp\",\r\n          \"publicPort\": \"9443\",\r\n          \"localIp\": \"192.168.128.1\",\r\n          \"localPort\": \"443\",\r\n          \"allowedIps\": [\r\n            \"any\"\r\n          ]\r\n        },\r\n        {\r\n          \"name\": \"Rule 2\",\r\n          \"protocol\": \"tcp\",\r\n          \"publicPort\": \"8080\",\r\n          \"localIp\": \"192.168.128.1\",\r\n          \"localPort\": \"80\",\r\n          \"allowedIps\": [\r\n            \"10.82.110.0/24\",\r\n            \"10.82.111.0/24\"\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/oneToOneNatRules` (get) - OperationId turned from `getNetworkOneToOneNatRules` to `NetworksOneToOneNatRulesByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkOneToOneNatRules</code> to <code>NetworksOneToOneNatRulesByNetworkIdGet</code>",
    "path": "/networks/{networkId}/oneToOneNatRules",
    "method": "get",
    "previousOperationId": "getNetworkOneToOneNatRules",
    "currentOperationId": "NetworksOneToOneNatRulesByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Return the 1:1 NAT mapping rules for an MX network",
      "summary": "getNetworkOneToOneNatRules",
      "tags": [
        "MX 1:1 NAT rules"
      ],
      "operationId": "NetworksOneToOneNatRulesByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"rules\": [\r\n    {\r\n      \"name\": \"Service behind NAT\",\r\n      \"lanIp\": \"192.168.128.22\",\r\n      \"publicIp\": \"146.12.3.33\",\r\n      \"uplink\": \"internet1\",\r\n      \"allowedInbound\": [\r\n        {\r\n          \"protocol\": \"tcp\",\r\n          \"destinationPorts\": [\r\n            \"80\"\r\n          ],\r\n          \"allowedIps\": [\r\n            \"10.82.112.0/24\",\r\n            \"10.82.0.0/16\"\r\n          ]\r\n        },\r\n        {\r\n          \"protocol\": \"udp\",\r\n          \"destinationPorts\": [\r\n            \"8080\"\r\n          ],\r\n          \"allowedIps\": [\r\n            \"10.81.110.5\",\r\n            \"10.81.0.0/16\"\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/oneToOneNatRules` (put) - OperationId turned from `updateNetworkOneToOneNatRules` to `NetworksOneToOneNatRulesByNetworkIdPut`",
    "messageHtml": "OperationId turned from <code>updateNetworkOneToOneNatRules</code> to <code>NetworksOneToOneNatRulesByNetworkIdPut</code>",
    "path": "/networks/{networkId}/oneToOneNatRules",
    "method": "put",
    "previousOperationId": "updateNetworkOneToOneNatRules",
    "currentOperationId": "NetworksOneToOneNatRulesByNetworkIdPut",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Set the 1:1 NAT mapping rules for an MX network",
      "summary": "updateNetworkOneToOneNatRules",
      "tags": [
        "MX 1:1 NAT rules"
      ],
      "operationId": "NetworksOneToOneNatRulesByNetworkIdPut",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "updateNetworkOneToOneNatRules",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/updateNetworkOneToOneNatRules"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"rules\": [\r\n    {\r\n      \"name\": \"Service behind NAT\",\r\n      \"lanIp\": \"192.168.128.22\",\r\n      \"publicIp\": \"146.12.3.33\",\r\n      \"uplink\": \"internet1\",\r\n      \"allowedInbound\": [\r\n        {\r\n          \"protocol\": \"tcp\",\r\n          \"destinationPorts\": [\r\n            \"80\"\r\n          ],\r\n          \"allowedIps\": [\r\n            \"10.82.112.0/24\",\r\n            \"10.82.0.0/16\"\r\n          ]\r\n        },\r\n        {\r\n          \"protocol\": \"udp\",\r\n          \"destinationPorts\": [\r\n            \"8080\"\r\n          ],\r\n          \"allowedIps\": [\r\n            \"10.81.110.5\",\r\n            \"10.81.0.0/16\"\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/portForwardingRules` (get) - OperationId turned from `getNetworkPortForwardingRules` to `NetworksPortForwardingRulesByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkPortForwardingRules</code> to <code>NetworksPortForwardingRulesByNetworkIdGet</code>",
    "path": "/networks/{networkId}/portForwardingRules",
    "method": "get",
    "previousOperationId": "getNetworkPortForwardingRules",
    "currentOperationId": "NetworksPortForwardingRulesByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Return the port forwarding rules for an MX network",
      "summary": "getNetworkPortForwardingRules",
      "tags": [
        "MX port forwarding rules"
      ],
      "operationId": "NetworksPortForwardingRulesByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"rules\": [\r\n    {\r\n      \"lanIp\": \"192.168.128.1\",\r\n      \"allowedIps\": [\r\n        \"any\"\r\n      ],\r\n      \"name\": \"Description of Port Forwarding Rule\",\r\n      \"protocol\": \"tcp\",\r\n      \"publicPort\": \"8100-8101\",\r\n      \"localPort\": \"442-443\",\r\n      \"uplink\": \"both\"\r\n    }\r\n  ]\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/portForwardingRules` (put) - OperationId turned from `updateNetworkPortForwardingRules` to `NetworksPortForwardingRulesByNetworkIdPut`",
    "messageHtml": "OperationId turned from <code>updateNetworkPortForwardingRules</code> to <code>NetworksPortForwardingRulesByNetworkIdPut</code>",
    "path": "/networks/{networkId}/portForwardingRules",
    "method": "put",
    "previousOperationId": "updateNetworkPortForwardingRules",
    "currentOperationId": "NetworksPortForwardingRulesByNetworkIdPut",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Update the port forwarding rules for an MX network",
      "summary": "updateNetworkPortForwardingRules",
      "tags": [
        "MX port forwarding rules"
      ],
      "operationId": "NetworksPortForwardingRulesByNetworkIdPut",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "updateNetworkPortForwardingRules",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/updateNetworkPortForwardingRules"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"rules\": [\r\n    {\r\n      \"lanIp\": \"192.168.128.1\",\r\n      \"allowedIps\": [\r\n        \"any\"\r\n      ],\r\n      \"name\": \"Description of Port Forwarding Rule\",\r\n      \"protocol\": \"tcp\",\r\n      \"publicPort\": \"8100-8101\",\r\n      \"localPort\": \"442-443\",\r\n      \"uplink\": \"both\"\r\n    }\r\n  ]\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/staticRoutes` (get) - OperationId turned from `getNetworkStaticRoutes` to `NetworksStaticRoutesByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkStaticRoutes</code> to <code>NetworksStaticRoutesByNetworkIdGet</code>",
    "path": "/networks/{networkId}/staticRoutes",
    "method": "get",
    "previousOperationId": "getNetworkStaticRoutes",
    "currentOperationId": "NetworksStaticRoutesByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "List the static routes for this network",
      "summary": "getNetworkStaticRoutes",
      "tags": [
        "Static routes"
      ],
      "operationId": "NetworksStaticRoutesByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"id\": \"d7fa4948-7921-4dfa-af6b-ae8b16c20c39\",\r\n    \"networkId\": \"N_24329156\",\r\n    \"name\": \"My route\",\r\n    \"gatewayIp\": \"1.2.3.5\",\r\n    \"subnet\": \"192.168.1.0/24\",\r\n    \"fixedIpAssignments\": \"{}\",\r\n    \"reservedIpRanges\": \"[]\",\r\n    \"enabled\": true\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/staticRoutes` (post) - OperationId turned from `createNetworkStaticRoute` to `NetworksStaticRoutesByNetworkIdPost`",
    "messageHtml": "OperationId turned from <code>createNetworkStaticRoute</code> to <code>NetworksStaticRoutesByNetworkIdPost</code>",
    "path": "/networks/{networkId}/staticRoutes",
    "method": "post",
    "previousOperationId": "createNetworkStaticRoute",
    "currentOperationId": "NetworksStaticRoutesByNetworkIdPost",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Add a static route",
      "summary": "createNetworkStaticRoute",
      "tags": [
        "Static routes"
      ],
      "operationId": "NetworksStaticRoutesByNetworkIdPost",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "createNetworkStaticRoute",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/createNetworkStaticRoute"
          }
        }
      ],
      "responses": {
        "201": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"name\": \"My route\",\r\n  \"subnet\": \"192.168.1.0/24\",\r\n  \"gatewayIp\": \"1.2.3.5\"\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/staticRoutes/{srId}` (get) - OperationId turned from `getNetworkStaticRoute` to `NetworksStaticRoutesByNetworkIdAndSrIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkStaticRoute</code> to <code>NetworksStaticRoutesByNetworkIdAndSrIdGet</code>",
    "path": "/networks/{networkId}/staticRoutes/{srId}",
    "method": "get",
    "previousOperationId": "getNetworkStaticRoute",
    "currentOperationId": "NetworksStaticRoutesByNetworkIdAndSrIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Return a static route",
      "summary": "getNetworkStaticRoute",
      "tags": [
        "Static routes"
      ],
      "operationId": "NetworksStaticRoutesByNetworkIdAndSrIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "srId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"id\": \"d7fa4948-7921-4dfa-af6b-ae8b16c20c39\",\r\n  \"networkId\": \"N_24329156\",\r\n  \"name\": \"My route\",\r\n  \"gatewayIp\": \"1.2.3.5\",\r\n  \"subnet\": \"192.168.1.0/24\",\r\n  \"fixedIpAssignments\": \"{}\",\r\n  \"reservedIpRanges\": \"[]\",\r\n  \"enabled\": true\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/staticRoutes/{srId}` (put) - OperationId turned from `updateNetworkStaticRoute` to `NetworksStaticRoutesByNetworkIdAndSrIdPut`",
    "messageHtml": "OperationId turned from <code>updateNetworkStaticRoute</code> to <code>NetworksStaticRoutesByNetworkIdAndSrIdPut</code>",
    "path": "/networks/{networkId}/staticRoutes/{srId}",
    "method": "put",
    "previousOperationId": "updateNetworkStaticRoute",
    "currentOperationId": "NetworksStaticRoutesByNetworkIdAndSrIdPut",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Update a static route",
      "summary": "updateNetworkStaticRoute",
      "tags": [
        "Static routes"
      ],
      "operationId": "NetworksStaticRoutesByNetworkIdAndSrIdPut",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "srId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "updateNetworkStaticRoute",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/updateNetworkStaticRoute"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"id\": \"d7fa4948-7921-4dfa-af6b-ae8b16c20c39\",\r\n  \"networkId\": \"N_24329156\",\r\n  \"name\": \"My route\",\r\n  \"gatewayIp\": \"1.2.3.5\",\r\n  \"subnet\": \"192.168.1.0/24\",\r\n  \"fixedIpAssignments\": \"{}\",\r\n  \"reservedIpRanges\": \"[]\",\r\n  \"enabled\": true\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/staticRoutes/{srId}` (delete) - OperationId turned from `deleteNetworkStaticRoute` to `NetworksStaticRoutesByNetworkIdAndSrIdDelete`",
    "messageHtml": "OperationId turned from <code>deleteNetworkStaticRoute</code> to <code>NetworksStaticRoutesByNetworkIdAndSrIdDelete</code>",
    "path": "/networks/{networkId}/staticRoutes/{srId}",
    "method": "delete",
    "previousOperationId": "deleteNetworkStaticRoute",
    "currentOperationId": "NetworksStaticRoutesByNetworkIdAndSrIdDelete",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Delete a static route from a network",
      "summary": "deleteNetworkStaticRoute",
      "tags": [
        "Static routes"
      ],
      "operationId": "NetworksStaticRoutesByNetworkIdAndSrIdDelete",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "srId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "204": {
          "description": "Successful operation",
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/uplinkSettings` (get) - OperationId turned from `getNetworkUplinkSettings` to `NetworksUplinkSettingsByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkUplinkSettings</code> to <code>NetworksUplinkSettingsByNetworkIdGet</code>",
    "path": "/networks/{networkId}/uplinkSettings",
    "method": "get",
    "previousOperationId": "getNetworkUplinkSettings",
    "currentOperationId": "NetworksUplinkSettingsByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Returns the uplink settings for your MX network.",
      "summary": "getNetworkUplinkSettings",
      "tags": [
        "Uplink settings"
      ],
      "operationId": "NetworksUplinkSettingsByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"bandwidthLimits\": {\r\n    \"wan1\": {\r\n      \"limitUp\": 1000000,\r\n      \"limitDown\": 1000000\r\n    },\r\n    \"wan2\": {\r\n      \"limitUp\": 1000000,\r\n      \"limitDown\": 1000000\r\n    },\r\n    \"cellular\": {\r\n      \"limitUp\": 51200,\r\n      \"limitDown\": 51200\r\n    }\r\n  }\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/uplinkSettings` (put) - OperationId turned from `updateNetworkUplinkSettings` to `NetworksUplinkSettingsByNetworkIdPut`",
    "messageHtml": "OperationId turned from <code>updateNetworkUplinkSettings</code> to <code>NetworksUplinkSettingsByNetworkIdPut</code>",
    "path": "/networks/{networkId}/uplinkSettings",
    "method": "put",
    "previousOperationId": "updateNetworkUplinkSettings",
    "currentOperationId": "NetworksUplinkSettingsByNetworkIdPut",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Updates the uplink settings for your MX network.",
      "summary": "updateNetworkUplinkSettings",
      "tags": [
        "Uplink settings"
      ],
      "operationId": "NetworksUplinkSettingsByNetworkIdPut",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "updateNetworkUplinkSettings",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/updateNetworkUplinkSettings"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"bandwidthLimits\": {\r\n    \"wan1\": {\r\n      \"limitUp\": 1000000,\r\n      \"limitDown\": 1000000\r\n    },\r\n    \"wan2\": {\r\n      \"limitUp\": 1000000,\r\n      \"limitDown\": 1000000\r\n    },\r\n    \"cellular\": {\r\n      \"limitUp\": 51200,\r\n      \"limitDown\": 51200\r\n    }\r\n  }\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/vlans` (get) - OperationId turned from `getNetworkVlans` to `NetworksVlansByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkVlans</code> to <code>NetworksVlansByNetworkIdGet</code>",
    "path": "/networks/{networkId}/vlans",
    "method": "get",
    "previousOperationId": "getNetworkVlans",
    "currentOperationId": "NetworksVlansByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "List the VLANs for an MX network",
      "summary": "getNetworkVlans",
      "tags": [
        "VLANs"
      ],
      "operationId": "NetworksVlansByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"id\": \"1234\",\r\n    \"networkId\": \"N_24329156\",\r\n    \"name\": \"My VLAN\",\r\n    \"applianceIp\": \"1.2.3.4\",\r\n    \"subnet\": \"192.168.1.0/24\",\r\n    \"fixedIpAssignments\": {\r\n      \"22:33:44:55:66:77\": {\r\n        \"ip\": \"1.2.3.4\",\r\n        \"name\": \"Some client name\"\r\n      }\r\n    },\r\n    \"reservedIpRanges\": [\r\n      {\r\n        \"start\": \"192.168.1.0\",\r\n        \"end\": \"192.168.1.1\",\r\n        \"comment\": \"A reserved IP range\"\r\n      }\r\n    ],\r\n    \"dnsNameservers\": \"google_dns\",\r\n    \"dhcpHandling\": \"Run a DHCP server\",\r\n    \"dhcpLeaseTime\": \"1 day\",\r\n    \"dhcpBootOptionsEnabled\": false,\r\n    \"dhcpBootNextServer\": null,\r\n    \"dhcpBootFilename\": null,\r\n    \"dhcpOptions\": [\r\n      {\r\n        \"code\": 5,\r\n        \"type\": \"text\",\r\n        \"value\": \"five\"\r\n      }\r\n    ]\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/vlans` (post) - OperationId turned from `createNetworkVlan` to `NetworksVlansByNetworkIdPost`",
    "messageHtml": "OperationId turned from <code>createNetworkVlan</code> to <code>NetworksVlansByNetworkIdPost</code>",
    "path": "/networks/{networkId}/vlans",
    "method": "post",
    "previousOperationId": "createNetworkVlan",
    "currentOperationId": "NetworksVlansByNetworkIdPost",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Add a VLAN",
      "summary": "createNetworkVlan",
      "tags": [
        "VLANs"
      ],
      "operationId": "NetworksVlansByNetworkIdPost",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "createNetworkVlan",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/createNetworkVlan"
          }
        }
      ],
      "responses": {
        "201": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"id\": \"1234\",\r\n  \"networkId\": \"N_24329156\",\r\n  \"name\": \"My VLAN\",\r\n  \"applianceIp\": \"1.2.3.4\",\r\n  \"subnet\": \"192.168.1.0/24\",\r\n  \"fixedIpAssignments\": {},\r\n  \"reservedIpRanges\": [],\r\n  \"dnsNameservers\": \"google_dns\",\r\n  \"dhcpHandling\": \"Run a DHCP server\",\r\n  \"dhcpLeaseTime\": \"1 day\",\r\n  \"dhcpBootOptionsEnabled\": false,\r\n  \"dhcpBootNextServer\": null,\r\n  \"dhcpBootFilename\": null,\r\n  \"dhcpOptions\": []\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/vlans/{vlanId}` (get) - OperationId turned from `getNetworkVlan` to `NetworksVlansByNetworkIdAndVlanIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkVlan</code> to <code>NetworksVlansByNetworkIdAndVlanIdGet</code>",
    "path": "/networks/{networkId}/vlans/{vlanId}",
    "method": "get",
    "previousOperationId": "getNetworkVlan",
    "currentOperationId": "NetworksVlansByNetworkIdAndVlanIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Return a VLAN",
      "summary": "getNetworkVlan",
      "tags": [
        "VLANs"
      ],
      "operationId": "NetworksVlansByNetworkIdAndVlanIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "vlanId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"id\": \"1234\",\r\n  \"networkId\": \"N_24329156\",\r\n  \"name\": \"My VLAN\",\r\n  \"applianceIp\": \"1.2.3.4\",\r\n  \"subnet\": \"192.168.1.0/24\",\r\n  \"fixedIpAssignments\": {\r\n    \"22:33:44:55:66:77\": {\r\n      \"ip\": \"1.2.3.4\",\r\n      \"name\": \"Some client name\"\r\n    }\r\n  },\r\n  \"reservedIpRanges\": [\r\n    {\r\n      \"start\": \"192.168.1.0\",\r\n      \"end\": \"192.168.1.1\",\r\n      \"comment\": \"A reserved IP range\"\r\n    }\r\n  ],\r\n  \"dnsNameservers\": \"google_dns\",\r\n  \"dhcpHandling\": \"Run a DHCP server\",\r\n  \"dhcpLeaseTime\": \"1 day\",\r\n  \"dhcpBootOptionsEnabled\": false,\r\n  \"dhcpBootNextServer\": null,\r\n  \"dhcpBootFilename\": null,\r\n  \"dhcpOptions\": [\r\n    {\r\n      \"code\": 5,\r\n      \"type\": \"text\",\r\n      \"value\": \"five\"\r\n    }\r\n  ]\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/vlans/{vlanId}` (put) - OperationId turned from `updateNetworkVlan` to `NetworksVlansByNetworkIdAndVlanIdPut`",
    "messageHtml": "OperationId turned from <code>updateNetworkVlan</code> to <code>NetworksVlansByNetworkIdAndVlanIdPut</code>",
    "path": "/networks/{networkId}/vlans/{vlanId}",
    "method": "put",
    "previousOperationId": "updateNetworkVlan",
    "currentOperationId": "NetworksVlansByNetworkIdAndVlanIdPut",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Update a VLAN",
      "summary": "updateNetworkVlan",
      "tags": [
        "VLANs"
      ],
      "operationId": "NetworksVlansByNetworkIdAndVlanIdPut",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "vlanId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "updateNetworkVlan",
          "in": "body",
          "required": false,
          "schema": {
            "$ref": "#/definitions/updateNetworkVlan"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"id\": \"1234\",\r\n  \"networkId\": \"N_24329156\",\r\n  \"name\": \"My VLAN\",\r\n  \"applianceIp\": \"1.2.3.4\",\r\n  \"subnet\": \"192.168.1.0/24\",\r\n  \"fixedIpAssignments\": {\r\n    \"22:33:44:55:66:77\": {\r\n      \"ip\": \"1.2.3.4\",\r\n      \"name\": \"Some client name\"\r\n    }\r\n  },\r\n  \"reservedIpRanges\": [\r\n    {\r\n      \"start\": \"192.168.1.0\",\r\n      \"end\": \"192.168.1.1\",\r\n      \"comment\": \"A reserved IP range\"\r\n    }\r\n  ],\r\n  \"dnsNameservers\": \"google_dns\",\r\n  \"dhcpHandling\": \"Run a DHCP server\",\r\n  \"dhcpLeaseTime\": \"1 day\",\r\n  \"dhcpBootOptionsEnabled\": false,\r\n  \"dhcpBootNextServer\": null,\r\n  \"dhcpBootFilename\": null,\r\n  \"dhcpOptions\": [\r\n    {\r\n      \"code\": 5,\r\n      \"type\": \"text\",\r\n      \"value\": \"five\"\r\n    }\r\n  ]\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/vlans/{vlanId}` (delete) - OperationId turned from `deleteNetworkVlan` to `NetworksVlansByNetworkIdAndVlanIdDelete`",
    "messageHtml": "OperationId turned from <code>deleteNetworkVlan</code> to <code>NetworksVlansByNetworkIdAndVlanIdDelete</code>",
    "path": "/networks/{networkId}/vlans/{vlanId}",
    "method": "delete",
    "previousOperationId": "deleteNetworkVlan",
    "currentOperationId": "NetworksVlansByNetworkIdAndVlanIdDelete",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Delete a VLAN from a network",
      "summary": "deleteNetworkVlan",
      "tags": [
        "VLANs"
      ],
      "operationId": "NetworksVlansByNetworkIdAndVlanIdDelete",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "vlanId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "204": {
          "description": "Successful operation",
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/vlansEnabledState` (get) - OperationId turned from `getNetworkVlansEnabledState` to `NetworksVlansEnabledStateByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkVlansEnabledState</code> to <code>NetworksVlansEnabledStateByNetworkIdGet</code>",
    "path": "/networks/{networkId}/vlansEnabledState",
    "method": "get",
    "previousOperationId": "getNetworkVlansEnabledState",
    "currentOperationId": "NetworksVlansEnabledStateByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Returns the enabled status of VLANs for the network",
      "summary": "getNetworkVlansEnabledState",
      "tags": [
        "VLANs"
      ],
      "operationId": "NetworksVlansEnabledStateByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"enabled\": true,\r\n  \"networkId\": \"N_24329156\"\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/vlansEnabledState` (put) - OperationId turned from `updateNetworkVlansEnabledState` to `NetworksVlansEnabledStateByNetworkIdPut`",
    "messageHtml": "OperationId turned from <code>updateNetworkVlansEnabledState</code> to <code>NetworksVlansEnabledStateByNetworkIdPut</code>",
    "path": "/networks/{networkId}/vlansEnabledState",
    "method": "put",
    "previousOperationId": "updateNetworkVlansEnabledState",
    "currentOperationId": "NetworksVlansEnabledStateByNetworkIdPut",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Enable/Disable VLANs for the given network",
      "summary": "updateNetworkVlansEnabledState",
      "tags": [
        "VLANs"
      ],
      "operationId": "NetworksVlansEnabledStateByNetworkIdPut",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "updateNetworkVlansEnabledState",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/updateNetworkVlansEnabledState"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"enabled\": true,\r\n  \"networkId\": \"N_24329156\"\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/connectionStats` (get) - OperationId turned from `getNetworkConnectionStats` to `NetworksConnectionStatsByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkConnectionStats</code> to <code>NetworksConnectionStatsByNetworkIdGet</code>",
    "path": "/networks/{networkId}/connectionStats",
    "method": "get",
    "previousOperationId": "getNetworkConnectionStats",
    "currentOperationId": "NetworksConnectionStatsByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Aggregated connectivity info for this network",
      "summary": "getNetworkConnectionStats",
      "tags": [
        "Wireless health"
      ],
      "operationId": "NetworksConnectionStatsByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "t0",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
        },
        {
          "name": "t1",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
        },
        {
          "name": "timespan",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
        },
        {
          "name": "ssid",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "Filter results by SSID"
        },
        {
          "name": "vlan",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "Filter results by VLAN"
        },
        {
          "name": "apTag",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "Filter results by AP Tag"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"assoc\": 1,\r\n  \"auth\": 5,\r\n  \"dhcp\": 0,\r\n  \"dns\": 0,\r\n  \"success\": 51\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/devices/connectionStats` (get) - OperationId turned from `getNetworkDevicesConnectionStats` to `NetworksDevicesConnectionStatsByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkDevicesConnectionStats</code> to <code>NetworksDevicesConnectionStatsByNetworkIdGet</code>",
    "path": "/networks/{networkId}/devices/connectionStats",
    "method": "get",
    "previousOperationId": "getNetworkDevicesConnectionStats",
    "currentOperationId": "NetworksDevicesConnectionStatsByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Aggregated connectivity info for this network, grouped by node",
      "summary": "getNetworkDevicesConnectionStats",
      "tags": [
        "Wireless health"
      ],
      "operationId": "NetworksDevicesConnectionStatsByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "t0",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
        },
        {
          "name": "t1",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
        },
        {
          "name": "timespan",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
        },
        {
          "name": "ssid",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "Filter results by SSID"
        },
        {
          "name": "vlan",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "Filter results by VLAN"
        },
        {
          "name": "apTag",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "Filter results by AP Tag"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"serial\": \"Q2JC-2MJM-FHRD\",\r\n    \"connectionStats\": {\r\n      \"assoc\": 0,\r\n      \"auth\": 1,\r\n      \"dhcp\": 0,\r\n      \"dns\": 0,\r\n      \"success\": 43\r\n    }\r\n  },\r\n  {\r\n    \"serial\": \"Q2FJ-3SHB-Y2K2\",\r\n    \"connectionStats\": {\r\n      \"assoc\": 1,\r\n      \"auth\": 4,\r\n      \"dhcp\": 0,\r\n      \"dns\": 0,\r\n      \"success\": 8\r\n    }\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/devices/{serial}/connectionStats` (get) - OperationId turned from `getNetworkDeviceConnectionStats` to `NetworksDevicesConnectionStatsByNetworkIdAndSerialGet`",
    "messageHtml": "OperationId turned from <code>getNetworkDeviceConnectionStats</code> to <code>NetworksDevicesConnectionStatsByNetworkIdAndSerialGet</code>",
    "path": "/networks/{networkId}/devices/{serial}/connectionStats",
    "method": "get",
    "previousOperationId": "getNetworkDeviceConnectionStats",
    "currentOperationId": "NetworksDevicesConnectionStatsByNetworkIdAndSerialGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Aggregated connectivity info for a given AP on this network",
      "summary": "getNetworkDeviceConnectionStats",
      "tags": [
        "Wireless health"
      ],
      "operationId": "NetworksDevicesConnectionStatsByNetworkIdAndSerialGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "serial",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "t0",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
        },
        {
          "name": "t1",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
        },
        {
          "name": "timespan",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
        },
        {
          "name": "ssid",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "Filter results by SSID"
        },
        {
          "name": "vlan",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "Filter results by VLAN"
        },
        {
          "name": "apTag",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "Filter results by AP Tag"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"serial\": \"Q2JC-2MJM-FHRD\",\r\n  \"connectionStats\": {\r\n    \"assoc\": 0,\r\n    \"auth\": 1,\r\n    \"dhcp\": 0,\r\n    \"dns\": 0,\r\n    \"success\": 43\r\n  }\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/clients/connectionStats` (get) - OperationId turned from `getNetworkClientsConnectionStats` to `NetworksClientsConnectionStatsByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkClientsConnectionStats</code> to <code>NetworksClientsConnectionStatsByNetworkIdGet</code>",
    "path": "/networks/{networkId}/clients/connectionStats",
    "method": "get",
    "previousOperationId": "getNetworkClientsConnectionStats",
    "currentOperationId": "NetworksClientsConnectionStatsByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Aggregated connectivity info for this network, grouped by clients",
      "summary": "getNetworkClientsConnectionStats",
      "tags": [
        "Wireless health"
      ],
      "operationId": "NetworksClientsConnectionStatsByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "t0",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
        },
        {
          "name": "t1",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
        },
        {
          "name": "timespan",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
        },
        {
          "name": "ssid",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "Filter results by SSID"
        },
        {
          "name": "vlan",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "Filter results by VLAN"
        },
        {
          "name": "apTag",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "Filter results by AP Tag"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"mac\": \"00:61:71:c8:51:27\",\r\n    \"connectionStats\": {\r\n      \"assoc\": 0,\r\n      \"auth\": 4,\r\n      \"dhcp\": 0,\r\n      \"dns\": 0,\r\n      \"success\": 10\r\n    }\r\n  },\r\n  {\r\n    \"mac\": \"1c:4d:70:7f:5e:5e\",\r\n    \"connectionStats\": {\r\n      \"assoc\": 0,\r\n      \"auth\": 1,\r\n      \"dhcp\": 0,\r\n      \"dns\": 0,\r\n      \"success\": 24\r\n    }\r\n  },\r\n  {\r\n    \"mac\": \"1c:4d:70:81:8d:0a\",\r\n    \"connectionStats\": {\r\n      \"assoc\": 1,\r\n      \"auth\": 0,\r\n      \"dhcp\": 0,\r\n      \"dns\": 0,\r\n      \"success\": 16\r\n    }\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/clients/{clientId}/connectionStats` (get) - OperationId turned from `getNetworkClientConnectionStats` to `NetworksClientsConnectionStatsByNetworkIdAndClientIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkClientConnectionStats</code> to <code>NetworksClientsConnectionStatsByNetworkIdAndClientIdGet</code>",
    "path": "/networks/{networkId}/clients/{clientId}/connectionStats",
    "method": "get",
    "previousOperationId": "getNetworkClientConnectionStats",
    "currentOperationId": "NetworksClientsConnectionStatsByNetworkIdAndClientIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Aggregated connectivity info for a given client on this network. Clients are identified by their MAC.",
      "summary": "getNetworkClientConnectionStats",
      "tags": [
        "Wireless health"
      ],
      "operationId": "NetworksClientsConnectionStatsByNetworkIdAndClientIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "clientId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "t0",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
        },
        {
          "name": "t1",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
        },
        {
          "name": "timespan",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
        },
        {
          "name": "ssid",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "Filter results by SSID"
        },
        {
          "name": "vlan",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "Filter results by VLAN"
        },
        {
          "name": "apTag",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "Filter results by AP Tag"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"mac\": \"00:61:71:c8:51:27\",\r\n  \"connectionStats\": {\r\n    \"assoc\": 0,\r\n    \"auth\": 4,\r\n    \"dhcp\": 0,\r\n    \"dns\": 0,\r\n    \"success\": 10\r\n  }\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/latencyStats` (get) - OperationId turned from `getNetworkLatencyStats` to `NetworksLatencyStatsByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkLatencyStats</code> to <code>NetworksLatencyStatsByNetworkIdGet</code>",
    "path": "/networks/{networkId}/latencyStats",
    "method": "get",
    "previousOperationId": "getNetworkLatencyStats",
    "currentOperationId": "NetworksLatencyStatsByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Aggregated latency info for this network",
      "summary": "getNetworkLatencyStats",
      "tags": [
        "Wireless health"
      ],
      "operationId": "NetworksLatencyStatsByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "t0",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
        },
        {
          "name": "t1",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
        },
        {
          "name": "timespan",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
        },
        {
          "name": "ssid",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "Filter results by SSID"
        },
        {
          "name": "vlan",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "Filter results by VLAN"
        },
        {
          "name": "apTag",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "Filter results by AP Tag"
        },
        {
          "name": "fields",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"backgroundTraffic\": {\r\n    \"rawDistribution\": {\r\n      \"0\": 1234,\r\n      \"1\": 2345,\r\n      \"2\": 3456,\r\n      \"4\": 4567,\r\n      \"8\": 5678,\r\n      \"16\": 6789,\r\n      \"32\": 7890,\r\n      \"64\": 8901,\r\n      \"128\": 9012,\r\n      \"256\": 83,\r\n      \"512\": 1234,\r\n      \"1024\": 2345,\r\n      \"2048\": 9999\r\n    },\r\n    \"avg\": 606.52\r\n  },\r\n  \"bestEffortTraffic\": \"same shape as backgroundTraffic\",\r\n  \"videoTraffic\": \"same shape as backgroundTraffic\",\r\n  \"voiceTraffic\": \"same shape as backgroundTraffic\"\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/devices/latencyStats` (get) - OperationId turned from `getNetworkDevicesLatencyStats` to `NetworksDevicesLatencyStatsByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkDevicesLatencyStats</code> to <code>NetworksDevicesLatencyStatsByNetworkIdGet</code>",
    "path": "/networks/{networkId}/devices/latencyStats",
    "method": "get",
    "previousOperationId": "getNetworkDevicesLatencyStats",
    "currentOperationId": "NetworksDevicesLatencyStatsByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Aggregated latency info for this network, grouped by node",
      "summary": "getNetworkDevicesLatencyStats",
      "tags": [
        "Wireless health"
      ],
      "operationId": "NetworksDevicesLatencyStatsByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "t0",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
        },
        {
          "name": "t1",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
        },
        {
          "name": "timespan",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
        },
        {
          "name": "ssid",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "Filter results by SSID"
        },
        {
          "name": "vlan",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "Filter results by VLAN"
        },
        {
          "name": "apTag",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "Filter results by AP Tag"
        },
        {
          "name": "fields",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"serial\": \"Q2JC-2MJM-FHRD\",\r\n    \"latencyStats\": {\r\n      \"backgroundTraffic\": {\r\n        \"rawDistribution\": {\r\n          \"0\": 1234,\r\n          \"1\": 2345,\r\n          \"2\": 3456,\r\n          \"4\": 4567,\r\n          \"8\": 5678,\r\n          \"16\": 6789,\r\n          \"32\": 7890,\r\n          \"64\": 8901,\r\n          \"128\": 9012,\r\n          \"256\": 83,\r\n          \"512\": 1234,\r\n          \"1024\": 2345,\r\n          \"2048\": 9999\r\n        },\r\n        \"avg\": 606.52\r\n      },\r\n      \"bestEffortTraffic\": \"same shape as backgroundTraffic\",\r\n      \"videoTraffic\": \"same shape as backgroundTraffic\",\r\n      \"voiceTraffic\": \"same shape as backgroundTraffic\"\r\n    }\r\n  },\r\n  {\r\n    \"serial\": \"Q2FJ-3SHB-Y2K2\",\r\n    \"latencyStats\": {\r\n      \"backgroundTraffic\": {\r\n        \"rawDistribution\": {\r\n          \"0\": 1234,\r\n          \"1\": 2345,\r\n          \"2\": 3456,\r\n          \"4\": 4567,\r\n          \"8\": 5678,\r\n          \"16\": 6789,\r\n          \"32\": 7890,\r\n          \"64\": 8901,\r\n          \"128\": 9012,\r\n          \"256\": 83,\r\n          \"512\": 1234,\r\n          \"1024\": 2345,\r\n          \"2048\": 9999\r\n        },\r\n        \"avg\": 606.52\r\n      },\r\n      \"bestEffortTraffic\": \"same shape as backgroundTraffic\",\r\n      \"videoTraffic\": \"same shape as backgroundTraffic\",\r\n      \"voiceTraffic\": \"same shape as backgroundTraffic\"\r\n    }\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/devices/{serial}/latencyStats` (get) - OperationId turned from `getNetworkDeviceLatencyStats` to `NetworksDevicesLatencyStatsByNetworkIdAndSerialGet`",
    "messageHtml": "OperationId turned from <code>getNetworkDeviceLatencyStats</code> to <code>NetworksDevicesLatencyStatsByNetworkIdAndSerialGet</code>",
    "path": "/networks/{networkId}/devices/{serial}/latencyStats",
    "method": "get",
    "previousOperationId": "getNetworkDeviceLatencyStats",
    "currentOperationId": "NetworksDevicesLatencyStatsByNetworkIdAndSerialGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Aggregated latency info for a given AP on this network",
      "summary": "getNetworkDeviceLatencyStats",
      "tags": [
        "Wireless health"
      ],
      "operationId": "NetworksDevicesLatencyStatsByNetworkIdAndSerialGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "serial",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "t0",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
        },
        {
          "name": "t1",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
        },
        {
          "name": "timespan",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
        },
        {
          "name": "ssid",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "Filter results by SSID"
        },
        {
          "name": "vlan",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "Filter results by VLAN"
        },
        {
          "name": "apTag",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "Filter results by AP Tag"
        },
        {
          "name": "fields",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"serial\": \"Q2JC-2MJM-FHRD\",\r\n  \"latencyStats\": {\r\n    \"backgroundTraffic\": {\r\n      \"rawDistribution\": {\r\n        \"0\": 1234,\r\n        \"1\": 2345,\r\n        \"2\": 3456,\r\n        \"4\": 4567,\r\n        \"8\": 5678,\r\n        \"16\": 6789,\r\n        \"32\": 7890,\r\n        \"64\": 8901,\r\n        \"128\": 9012,\r\n        \"256\": 83,\r\n        \"512\": 1234,\r\n        \"1024\": 2345,\r\n        \"2048\": 9999\r\n      },\r\n      \"avg\": 606.52\r\n    },\r\n    \"bestEffortTraffic\": \"same shape as backgroundTraffic\",\r\n    \"videoTraffic\": \"same shape as backgroundTraffic\",\r\n    \"voiceTraffic\": \"same shape as backgroundTraffic\"\r\n  }\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/clients/latencyStats` (get) - OperationId turned from `getNetworkClientsLatencyStats` to `NetworksClientsLatencyStatsByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkClientsLatencyStats</code> to <code>NetworksClientsLatencyStatsByNetworkIdGet</code>",
    "path": "/networks/{networkId}/clients/latencyStats",
    "method": "get",
    "previousOperationId": "getNetworkClientsLatencyStats",
    "currentOperationId": "NetworksClientsLatencyStatsByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Aggregated latency info for this network, grouped by clients",
      "summary": "getNetworkClientsLatencyStats",
      "tags": [
        "Wireless health"
      ],
      "operationId": "NetworksClientsLatencyStatsByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "t0",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
        },
        {
          "name": "t1",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
        },
        {
          "name": "timespan",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
        },
        {
          "name": "ssid",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "Filter results by SSID"
        },
        {
          "name": "vlan",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "Filter results by VLAN"
        },
        {
          "name": "apTag",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "Filter results by AP Tag"
        },
        {
          "name": "fields",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"mac\": \"00:61:71:c8:51:27\",\r\n    \"latencyStats\": {\r\n      \"backgroundTraffic\": {\r\n        \"rawDistribution\": {\r\n          \"0\": 1234,\r\n          \"1\": 2345,\r\n          \"2\": 3456,\r\n          \"4\": 4567,\r\n          \"8\": 5678,\r\n          \"16\": 6789,\r\n          \"32\": 7890,\r\n          \"64\": 8901,\r\n          \"128\": 9012,\r\n          \"256\": 83,\r\n          \"512\": 1234,\r\n          \"1024\": 2345,\r\n          \"2048\": 9999\r\n        },\r\n        \"avg\": 606.52\r\n      },\r\n      \"bestEffortTraffic\": \"same shape as backgroundTraffic\",\r\n      \"videoTraffic\": \"same shape as backgroundTraffic\",\r\n      \"voiceTraffic\": \"same shape as backgroundTraffic\"\r\n    }\r\n  },\r\n  {\r\n    \"mac\": \"1c:4d:70:7f:5e:5e\",\r\n    \"latencyStats\": {\r\n      \"backgroundTraffic\": {\r\n        \"rawDistribution\": {\r\n          \"0\": 1234,\r\n          \"1\": 2345,\r\n          \"2\": 3456,\r\n          \"4\": 4567,\r\n          \"8\": 5678,\r\n          \"16\": 6789,\r\n          \"32\": 7890,\r\n          \"64\": 8901,\r\n          \"128\": 9012,\r\n          \"256\": 83,\r\n          \"512\": 1234,\r\n          \"1024\": 2345,\r\n          \"2048\": 9999\r\n        },\r\n        \"avg\": 606.52\r\n      },\r\n      \"bestEffortTraffic\": \"same shape as backgroundTraffic\",\r\n      \"videoTraffic\": \"same shape as backgroundTraffic\",\r\n      \"voiceTraffic\": \"same shape as backgroundTraffic\"\r\n    }\r\n  },\r\n  {\r\n    \"mac\": \"1c:4d:70:81:8d:0a\",\r\n    \"latencyStats\": {\r\n      \"backgroundTraffic\": {\r\n        \"rawDistribution\": {\r\n          \"0\": 1234,\r\n          \"1\": 2345,\r\n          \"2\": 3456,\r\n          \"4\": 4567,\r\n          \"8\": 5678,\r\n          \"16\": 6789,\r\n          \"32\": 7890,\r\n          \"64\": 8901,\r\n          \"128\": 9012,\r\n          \"256\": 83,\r\n          \"512\": 1234,\r\n          \"1024\": 2345,\r\n          \"2048\": 9999\r\n        },\r\n        \"avg\": 606.52\r\n      },\r\n      \"bestEffortTraffic\": \"same shape as backgroundTraffic\",\r\n      \"videoTraffic\": \"same shape as backgroundTraffic\",\r\n      \"voiceTraffic\": \"same shape as backgroundTraffic\"\r\n    }\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/clients/{clientId}/latencyStats` (get) - OperationId turned from `getNetworkClientLatencyStats` to `NetworksClientsLatencyStatsByNetworkIdAndClientIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkClientLatencyStats</code> to <code>NetworksClientsLatencyStatsByNetworkIdAndClientIdGet</code>",
    "path": "/networks/{networkId}/clients/{clientId}/latencyStats",
    "method": "get",
    "previousOperationId": "getNetworkClientLatencyStats",
    "currentOperationId": "NetworksClientsLatencyStatsByNetworkIdAndClientIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "Aggregated latency info for a given client on this network. Clients are identified by their MAC.",
      "summary": "getNetworkClientLatencyStats",
      "tags": [
        "Wireless health"
      ],
      "operationId": "NetworksClientsLatencyStatsByNetworkIdAndClientIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "clientId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "t0",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
        },
        {
          "name": "t1",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
        },
        {
          "name": "timespan",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
        },
        {
          "name": "ssid",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "Filter results by SSID"
        },
        {
          "name": "vlan",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "Filter results by VLAN"
        },
        {
          "name": "apTag",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "Filter results by AP Tag"
        },
        {
          "name": "fields",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "{\r\n  \"mac\": \"00:61:71:c8:51:27\",\r\n  \"latencyStats\": {\r\n    \"backgroundTraffic\": {\r\n      \"rawDistribution\": {\r\n        \"0\": 1234,\r\n        \"1\": 2345,\r\n        \"2\": 3456,\r\n        \"4\": 4567,\r\n        \"8\": 5678,\r\n        \"16\": 6789,\r\n        \"32\": 7890,\r\n        \"64\": 8901,\r\n        \"128\": 9012,\r\n        \"256\": 83,\r\n        \"512\": 1234,\r\n        \"1024\": 2345,\r\n        \"2048\": 9999\r\n      },\r\n      \"avg\": 606.52\r\n    },\r\n    \"bestEffortTraffic\": \"same shape as backgroundTraffic\",\r\n    \"videoTraffic\": \"same shape as backgroundTraffic\",\r\n    \"voiceTraffic\": \"same shape as backgroundTraffic\"\r\n  }\r\n}"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-operation-id",
    "message": "`/networks/{networkId}/failedConnections` (get) - OperationId turned from `getNetworkFailedConnections` to `NetworksFailedConnectionsByNetworkIdGet`",
    "messageHtml": "OperationId turned from <code>getNetworkFailedConnections</code> to <code>NetworksFailedConnectionsByNetworkIdGet</code>",
    "path": "/networks/{networkId}/failedConnections",
    "method": "get",
    "previousOperationId": "getNetworkFailedConnections",
    "currentOperationId": "NetworksFailedConnectionsByNetworkIdGet",
    "type": "warnings",
    "name": "Major",
    "apiDetails": {
      "description": "List of all failed client connection events on this network in a given time range",
      "summary": "getNetworkFailedConnections",
      "tags": [
        "Wireless health"
      ],
      "operationId": "NetworksFailedConnectionsByNetworkIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "networkId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "t0",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
        },
        {
          "name": "t1",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
        },
        {
          "name": "timespan",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
        },
        {
          "name": "ssid",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "Filter results by SSID"
        },
        {
          "name": "vlan",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "Filter results by VLAN"
        },
        {
          "name": "apTag",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "Filter results by AP Tag"
        },
        {
          "name": "serial",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "Filter by AP"
        },
        {
          "name": "clientId",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "Filter by client MAC"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"ssidNumber\": 0,\r\n    \"vlan\": -1,\r\n    \"clientMac\": \"00:61:71:c8:51:27\",\r\n    \"serial\": \"Q2JC-2MJM-FHRD\",\r\n    \"failureStep\": \"auth\",\r\n    \"type\": \"802.1X auth fail\",\r\n    \"ts\": 1532032592\r\n  },\r\n  {\r\n    \"ssidNumber\": 0,\r\n    \"vlan\": -1,\r\n    \"clientMac\": \"00:61:71:c8:51:27\",\r\n    \"nodeId\": \"Q2FJ-3SHB-Y2K2\",\r\n    \"failureStep\": \"auth\",\r\n    \"type\": \"802.1X auth fail\",\r\n    \"ts\": 1532032593\r\n  },\r\n  {\r\n    \"ssidNumber\": 0,\r\n    \"vlan\": -1,\r\n    \"clientMac\": \"00:61:71:c8:51:27\",\r\n    \"nodeId\": \"Q2FJ-3SHB-Y2K2\",\r\n    \"failureStep\": \"auth\",\r\n    \"type\": \"802.1X auth fail\",\r\n    \"ts\": 1532032594\r\n  },\r\n  {\r\n    \"ssidNumber\": 0,\r\n    \"vlan\": -1,\r\n    \"clientMac\": \"00:61:71:c8:51:27\",\r\n    \"nodeId\": \"Q2FJ-3SHB-Y2K2\",\r\n    \"failureStep\": \"auth\",\r\n    \"type\": \"802.1X auth fail\",\r\n    \"ts\": 1532032595\r\n  },\r\n  {\r\n    \"ssidNumber\": 0,\r\n    \"vlan\": -1,\r\n    \"clientMac\": \"1c:4d:70:7f:5e:5e\",\r\n    \"nodeId\": \"Q2FJ-3SHB-Y2K2\",\r\n    \"failureStep\": \"assoc\",\r\n    \"type\": \"802.1X auth fail\",\r\n    \"ts\": 1532032592\r\n  },\r\n  {\r\n    \"ssidNumber\": 0,\r\n    \"vlan\": -1,\r\n    \"clientMac\": \"1c:4d:70:81:8d:0a\",\r\n    \"nodeId\": \"Q2FJ-3SHB-Y2K2\",\r\n    \"failureStep\": \"auth\",\r\n    \"type\": \"802.1X auth fail\",\r\n    \"ts\": 1532032595\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-summary",
    "message": "`/organizations/{organizationId}/actionBatches` (get) - Summary turned from `Return the list of action batches in the organization` to `getOrganizationActionBatches`",
    "messageHtml": "Summary changed from <code>Return the list of action batches in the organization</code> to <code>getOrganizationActionBatches</code>",
    "method": "get",
    "previousSummary": "Return the list of action batches in the organization",
    "currentSummary": "getOrganizationActionBatches",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/organizations/{organizationId}/actionBatches` (post) - Summary turned from `Create an action batch` to `createOrganizationActionBatch`",
    "messageHtml": "Summary changed from <code>Create an action batch</code> to <code>createOrganizationActionBatch</code>",
    "method": "post",
    "previousSummary": "Create an action batch",
    "currentSummary": "createOrganizationActionBatch",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//organizations/{organizationId}/actionBatches/post/parameters/createOrganizationActionBatch/schema/properties/actions/` - Description turned from `A set of changes to make as part of this action` to `A set of changes to make as part of this action (<a href='https://developer.cisco.com/meraki/api/#/rest/guides/action-batches/'>more details</a>)`",
    "messageHtml": "Description turned from <code>A set of changes to make as part of this action</code> to <code>A set of changes to make as part of this action (<a href='https://developer.cisco.com/meraki/api/#/rest/guides/action-batches/'>more details</a>)</code>",
    "descriptionPath": "/paths//organizations/{organizationId}/actionBatches/post/parameters/createOrganizationActionBatch/schema/properties/actions/",
    "previousDescription": "A set of changes to make as part of this action",
    "currentDescription": "A set of changes to make as part of this action (<a href='https://developer.cisco.com/meraki/api/#/rest/guides/action-batches/'>more details</a>)",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/organizations/{organizationId}/actionBatches/{id}` (get) - Summary turned from `Return an action batch` to `getOrganizationActionBatch`",
    "messageHtml": "Summary changed from <code>Return an action batch</code> to <code>getOrganizationActionBatch</code>",
    "method": "get",
    "previousSummary": "Return an action batch",
    "currentSummary": "getOrganizationActionBatch",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/organizations/{organizationId}/actionBatches/{id}` (put) - Summary turned from `Update an action batch` to `updateOrganizationActionBatch`",
    "messageHtml": "Summary changed from <code>Update an action batch</code> to <code>updateOrganizationActionBatch</code>",
    "method": "put",
    "previousSummary": "Update an action batch",
    "currentSummary": "updateOrganizationActionBatch",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/organizations/{organizationId}/actionBatches/{id}` (delete) - Summary turned from `Delete an action batch` to `deleteOrganizationActionBatch`",
    "messageHtml": "Summary changed from <code>Delete an action batch</code> to <code>deleteOrganizationActionBatch</code>",
    "method": "delete",
    "previousSummary": "Delete an action batch",
    "currentSummary": "deleteOrganizationActionBatch",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/organizations/{organizationId}/admins` (get) - Summary turned from `List the dashboard administrators in this organization` to `getOrganizationAdmins`",
    "messageHtml": "Summary changed from <code>List the dashboard administrators in this organization</code> to <code>getOrganizationAdmins</code>",
    "method": "get",
    "previousSummary": "List the dashboard administrators in this organization",
    "currentSummary": "getOrganizationAdmins",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/organizations/{organizationId}/admins` (post) - Summary turned from `Create a new dashboard administrator` to `createOrganizationAdmin`",
    "messageHtml": "Summary changed from <code>Create a new dashboard administrator</code> to <code>createOrganizationAdmin</code>",
    "method": "post",
    "previousSummary": "Create a new dashboard administrator",
    "currentSummary": "createOrganizationAdmin",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/organizations/{organizationId}/admins/{id}` (put) - Summary turned from `Update an administrator` to `updateOrganizationAdmin`",
    "messageHtml": "Summary changed from <code>Update an administrator</code> to <code>updateOrganizationAdmin</code>",
    "method": "put",
    "previousSummary": "Update an administrator",
    "currentSummary": "updateOrganizationAdmin",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/organizations/{organizationId}/admins/{id}` (delete) - Summary turned from `Revoke all access for a dashboard administrator within this organization` to `deleteOrganizationAdmin`",
    "messageHtml": "Summary changed from <code>Revoke all access for a dashboard administrator within this organization</code> to <code>deleteOrganizationAdmin</code>",
    "method": "delete",
    "previousSummary": "Revoke all access for a dashboard administrator within this organization",
    "currentSummary": "deleteOrganizationAdmin",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/alertSettings` (get) - Summary turned from `Return the alert configuration for this network` to `getNetworkAlertSettings`",
    "messageHtml": "Summary changed from <code>Return the alert configuration for this network</code> to <code>getNetworkAlertSettings</code>",
    "method": "get",
    "previousSummary": "Return the alert configuration for this network",
    "currentSummary": "getNetworkAlertSettings",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/alertSettings` (put) - Summary turned from `Update the alert configuration for this network` to `updateNetworkAlertSettings`",
    "messageHtml": "Summary changed from <code>Update the alert configuration for this network</code> to <code>updateNetworkAlertSettings</code>",
    "method": "put",
    "previousSummary": "Update the alert configuration for this network",
    "currentSummary": "updateNetworkAlertSettings",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/devices/{serial}/camera/analytics/overview` (get) - Summary turned from `Returns an overview of aggregate analytics data for a timespan` to `getDeviceCameraAnalyticsOverview`",
    "messageHtml": "Summary changed from <code>Returns an overview of aggregate analytics data for a timespan</code> to <code>getDeviceCameraAnalyticsOverview</code>",
    "method": "get",
    "previousSummary": "Returns an overview of aggregate analytics data for a timespan",
    "currentSummary": "getDeviceCameraAnalyticsOverview",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/devices/{serial}/camera/analytics/zones` (get) - Summary turned from `Returns all configured analytic zones for this camera` to `getDeviceCameraAnalyticsZones`",
    "messageHtml": "Summary changed from <code>Returns all configured analytic zones for this camera</code> to <code>getDeviceCameraAnalyticsZones</code>",
    "method": "get",
    "previousSummary": "Returns all configured analytic zones for this camera",
    "currentSummary": "getDeviceCameraAnalyticsZones",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/devices/{serial}/camera/analytics/zones/{zoneId}/history` (get) - Summary turned from `Return historical records for analytic zones` to `getDeviceCameraAnalyticsZoneHistory`",
    "messageHtml": "Summary changed from <code>Return historical records for analytic zones</code> to <code>getDeviceCameraAnalyticsZoneHistory</code>",
    "method": "get",
    "previousSummary": "Return historical records for analytic zones",
    "currentSummary": "getDeviceCameraAnalyticsZoneHistory",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/devices/{serial}/camera/analytics/recent` (get) - Summary turned from `Returns most recent record for analytics zones` to `getDeviceCameraAnalyticsRecent`",
    "messageHtml": "Summary changed from <code>Returns most recent record for analytics zones</code> to <code>getDeviceCameraAnalyticsRecent</code>",
    "method": "get",
    "previousSummary": "Returns most recent record for analytics zones",
    "currentSummary": "getDeviceCameraAnalyticsRecent",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/devices/{serial}/camera/analytics/live` (get) - Summary turned from `Returns live state from camera of analytics zones` to `getDeviceCameraAnalyticsLive`",
    "messageHtml": "Summary changed from <code>Returns live state from camera of analytics zones</code> to <code>getDeviceCameraAnalyticsLive</code>",
    "method": "get",
    "previousSummary": "Returns live state from camera of analytics zones",
    "currentSummary": "getDeviceCameraAnalyticsLive",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/organizations/{organizationId}/apiRequests` (get) - Summary turned from `List the API requests made by an organization` to `getOrganizationApiRequests`",
    "messageHtml": "Summary changed from <code>List the API requests made by an organization</code> to <code>getOrganizationApiRequests</code>",
    "method": "get",
    "previousSummary": "List the API requests made by an organization",
    "currentSummary": "getOrganizationApiRequests",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "add-optional-param",
    "message": "`/organizations/{organizationId}/apiRequests` (get) - Optional param `responseCode` added",
    "messageHtml": "Optional param <code>responseCode</code> added",
    "path": "/organizations/{organizationId}/apiRequests",
    "method": "get",
    "param": "responseCode",
    "type": "infos",
    "name": "Changes",
    "apiDetails": {
      "description": "List the API requests made by an organization",
      "summary": "getOrganizationApiRequests",
      "tags": [
        "API usage"
      ],
      "operationId": "OrganizationsApiRequestsByOrganizationIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "t0",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
        },
        {
          "name": "t1",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
        },
        {
          "name": "timespan",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 31 days."
        },
        {
          "name": "perPage",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50."
        },
        {
          "name": "startingAfter",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
        },
        {
          "name": "endingBefore",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
        },
        {
          "name": "adminId",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "Filter the results by the ID of the admin who made the API requests"
        },
        {
          "name": "path",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "Filter the results by the path of the API requests"
        },
        {
          "name": "method",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "Filter the results by the method of the API requests (must be 'GET', 'PUT', 'POST' or 'DELETE')"
        },
        {
          "name": "responseCode",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "Filter the results by the response code of the API requests"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"adminId\": \"212406\",\r\n    \"method\": \"GET\",\r\n    \"host\": \"api.meraki.com\",\r\n    \"path\": \"/api/v0/organizations/33349/apiRequests\",\r\n    \"queryString\": \"timespan=604800\",\r\n    \"userAgent\": \"PostmanRuntime/7.6.0\",\r\n    \"ts\": \"2019-02-20T17:31:23Z\",\r\n    \"responseCode\": 200\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/bluetoothClients` (get) - Summary turned from `List the Bluetooth clients seen by APs in this network` to `getNetworkBluetoothClients`",
    "messageHtml": "Summary changed from <code>List the Bluetooth clients seen by APs in this network</code> to <code>getNetworkBluetoothClients</code>",
    "method": "get",
    "previousSummary": "List the Bluetooth clients seen by APs in this network",
    "currentSummary": "getNetworkBluetoothClients",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/bluetoothSettings` (get) - Summary turned from `Return the Bluetooth settings for a network. <a href=\"https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)\">Bluetooth settings</a> must be enabled on the network.` to `getNetworkBluetoothSettings`",
    "messageHtml": "Summary changed from <code>Return the Bluetooth settings for a network. <a href=\"https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)\">Bluetooth settings</a> must be enabled on the network.</code> to <code>getNetworkBluetoothSettings</code>",
    "method": "get",
    "previousSummary": "Return the Bluetooth settings for a network. <a href=\"https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)\">Bluetooth settings</a> must be enabled on the network.",
    "currentSummary": "getNetworkBluetoothSettings",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/bluetoothSettings` (put) - Summary turned from `Update the Bluetooth settings for a network. See the docs page for <a href=\"https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)\">Bluetooth settings</a>.` to `updateNetworkBluetoothSettings`",
    "messageHtml": "Summary changed from <code>Update the Bluetooth settings for a network. See the docs page for <a href=\"https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)\">Bluetooth settings</a>.</code> to <code>updateNetworkBluetoothSettings</code>",
    "method": "put",
    "previousSummary": "Update the Bluetooth settings for a network. See the docs page for <a href=\"https://documentation.meraki.com/MR/Bluetooth/Bluetooth_Low_Energy_(BLE)\">Bluetooth settings</a>.",
    "currentSummary": "updateNetworkBluetoothSettings",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/organizations/{organizationId}/networks` (get) - Summary turned from `List the networks in an organization` to `getOrganizationNetworks`",
    "messageHtml": "Summary changed from <code>List the networks in an organization</code> to <code>getOrganizationNetworks</code>",
    "method": "get",
    "previousSummary": "List the networks in an organization",
    "currentSummary": "getOrganizationNetworks",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/organizations/{organizationId}/networks` (post) - Summary turned from `Create a network` to `createOrganizationNetwork`",
    "messageHtml": "Summary changed from <code>Create a network</code> to <code>createOrganizationNetwork</code>",
    "method": "post",
    "previousSummary": "Create a network",
    "currentSummary": "createOrganizationNetwork",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//organizations/{organizationId}/networks/post/parameters/createOrganizationNetwork/schema/properties/type/` - Description turned from `The type of the new network. Valid types are wireless, appliance, switch, phone, systemsManager, camera or a space-separated list of those for a combined network.` to `The type of the new network. Valid types are wireless, appliance, switch, systemsManager, camera, or a space-separated list of those for a combined network.`",
    "messageHtml": "Description turned from <code>The type of the new network. Valid types are wireless, appliance, switch, phone, systemsManager, camera or a space-separated list of those for a combined network.</code> to <code>The type of the new network. Valid types are wireless, appliance, switch, systemsManager, camera, or a space-separated list of those for a combined network.</code>",
    "descriptionPath": "/paths//organizations/{organizationId}/networks/post/parameters/createOrganizationNetwork/schema/properties/type/",
    "previousDescription": "The type of the new network. Valid types are wireless, appliance, switch, phone, systemsManager, camera or a space-separated list of those for a combined network.",
    "currentDescription": "The type of the new network. Valid types are wireless, appliance, switch, systemsManager, camera, or a space-separated list of those for a combined network.",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}` (get) - Summary turned from `Return a network` to `getNetwork`",
    "messageHtml": "Summary changed from <code>Return a network</code> to <code>getNetwork</code>",
    "method": "get",
    "previousSummary": "Return a network",
    "currentSummary": "getNetwork",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}` (put) - Summary turned from `Update a network` to `updateNetwork`",
    "messageHtml": "Summary changed from <code>Update a network</code> to <code>updateNetwork</code>",
    "method": "put",
    "previousSummary": "Update a network",
    "currentSummary": "updateNetwork",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}` (delete) - Summary turned from `Delete a network` to `deleteNetwork`",
    "messageHtml": "Summary changed from <code>Delete a network</code> to <code>deleteNetwork</code>",
    "method": "delete",
    "previousSummary": "Delete a network",
    "currentSummary": "deleteNetwork",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/bind` (post) - Summary turned from `Bind a network to a template.` to `bindNetwork`",
    "messageHtml": "Summary changed from <code>Bind a network to a template.</code> to <code>bindNetwork</code>",
    "method": "post",
    "previousSummary": "Bind a network to a template.",
    "currentSummary": "bindNetwork",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/unbind` (post) - Summary turned from `Unbind a network from a template.` to `unbindNetwork`",
    "messageHtml": "Summary changed from <code>Unbind a network from a template.</code> to <code>unbindNetwork</code>",
    "method": "post",
    "previousSummary": "Unbind a network from a template.",
    "currentSummary": "unbindNetwork",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/traffic` (get) - Summary turned from `The traffic analysis data for this network.\n<a href=\"https://documentation.meraki.com/MR/Monitoring_and_Reporting/Hostname_Visibility\">Traffic Analysis with Hostname Visibility</a> must be enabled on the network.\n` to `getNetworkTraffic`",
    "messageHtml": "Summary changed from <code>The traffic analysis data for this network.\n<a href=\"https://documentation.meraki.com/MR/Monitoring_and_Reporting/Hostname_Visibility\">Traffic Analysis with Hostname Visibility</a> must be enabled on the network.\n</code> to <code>getNetworkTraffic</code>",
    "method": "get",
    "previousSummary": "The traffic analysis data for this network.\n<a href=\"https://documentation.meraki.com/MR/Monitoring_and_Reporting/Hostname_Visibility\">Traffic Analysis with Hostname Visibility</a> must be enabled on the network.\n",
    "currentSummary": "getNetworkTraffic",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/accessPolicies` (get) - Summary turned from `List the access policies for this network. Only valid for MS networks.` to `getNetworkAccessPolicies`",
    "messageHtml": "Summary changed from <code>List the access policies for this network. Only valid for MS networks.</code> to <code>getNetworkAccessPolicies</code>",
    "method": "get",
    "previousSummary": "List the access policies for this network. Only valid for MS networks.",
    "currentSummary": "getNetworkAccessPolicies",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/airMarshal` (get) - Summary turned from `List Air Marshal scan results from a network` to `getNetworkAirMarshal`",
    "messageHtml": "Summary changed from <code>List Air Marshal scan results from a network</code> to <code>getNetworkAirMarshal</code>",
    "method": "get",
    "previousSummary": "List Air Marshal scan results from a network",
    "currentSummary": "getNetworkAirMarshal",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/organizations/{organizationId}/networks/combine` (post) - Summary turned from `Combine multiple networks into a single network` to `combineOrganizationNetworks`",
    "messageHtml": "Summary changed from <code>Combine multiple networks into a single network</code> to <code>combineOrganizationNetworks</code>",
    "method": "post",
    "previousSummary": "Combine multiple networks into a single network",
    "currentSummary": "combineOrganizationNetworks",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/split` (post) - Summary turned from `Split a combined network into individual networks for each type of device` to `splitNetwork`",
    "messageHtml": "Summary changed from <code>Split a combined network into individual networks for each type of device</code> to <code>splitNetwork</code>",
    "method": "post",
    "previousSummary": "Split a combined network into individual networks for each type of device",
    "currentSummary": "splitNetwork",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/siteToSiteVpn` (get) - Summary turned from `Return the site-to-site VPN settings of a network. Only valid for MX networks.` to `getNetworkSiteToSiteVpn`",
    "messageHtml": "Summary changed from <code>Return the site-to-site VPN settings of a network. Only valid for MX networks.</code> to <code>getNetworkSiteToSiteVpn</code>",
    "method": "get",
    "previousSummary": "Return the site-to-site VPN settings of a network. Only valid for MX networks.",
    "currentSummary": "getNetworkSiteToSiteVpn",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/siteToSiteVpn` (put) - Summary turned from `Update the site-to-site VPN settings of a network. Only valid for MX networks in NAT mode.` to `updateNetworkSiteToSiteVpn`",
    "messageHtml": "Summary changed from <code>Update the site-to-site VPN settings of a network. Only valid for MX networks in NAT mode.</code> to <code>updateNetworkSiteToSiteVpn</code>",
    "method": "put",
    "previousSummary": "Update the site-to-site VPN settings of a network. Only valid for MX networks in NAT mode.",
    "currentSummary": "updateNetworkSiteToSiteVpn",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/cameras/{serial}/videoLink` (get) - Summary turned from `Returns video link for the specified camera. If a timestamp supplied, it links to that time.` to `getNetworkCameraVideoLink`",
    "messageHtml": "Summary changed from <code>Returns video link for the specified camera. If a timestamp supplied, it links to that time.</code> to <code>getNetworkCameraVideoLink</code>",
    "method": "get",
    "previousSummary": "Returns video link for the specified camera. If a timestamp supplied, it links to that time.",
    "currentSummary": "getNetworkCameraVideoLink",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/cameras/{serial}/snapshot` (post) - Summary turned from `Generate a snapshot of what the camera sees at the specified time and return a link to that image.` to `generateNetworkCameraSnapshot`",
    "messageHtml": "Summary changed from <code>Generate a snapshot of what the camera sees at the specified time and return a link to that image.</code> to <code>generateNetworkCameraSnapshot</code>",
    "method": "post",
    "previousSummary": "Generate a snapshot of what the camera sees at the specified time and return a link to that image.",
    "currentSummary": "generateNetworkCameraSnapshot",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/clients/provision` (post) - Summary turned from `Provisions a client with a name and policy. Clients can be provisioned before they associate to the network.` to `provisionNetworkClients`",
    "messageHtml": "Summary changed from <code>Provisions a client with a name and policy. Clients can be provisioned before they associate to the network.</code> to <code>provisionNetworkClients</code>",
    "method": "post",
    "previousSummary": "Provisions a client with a name and policy. Clients can be provisioned before they associate to the network.",
    "currentSummary": "provisionNetworkClients",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/clients` (get) - Summary turned from `List the clients that have used this network in the timespan` to `getNetworkClients`",
    "messageHtml": "Summary changed from <code>List the clients that have used this network in the timespan</code> to <code>getNetworkClients</code>",
    "method": "get",
    "previousSummary": "List the clients that have used this network in the timespan",
    "currentSummary": "getNetworkClients",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/devices/{serial}/clients` (get) - Summary turned from `List the clients of a device, up to a maximum of a month ago. The usage of each client is returned in kilobytes. If the device is a switch, the switchport is returned; otherwise the switchport field is null.` to `getDeviceClients`",
    "messageHtml": "Summary changed from <code>List the clients of a device, up to a maximum of a month ago. The usage of each client is returned in kilobytes. If the device is a switch, the switchport is returned; otherwise the switchport field is null.</code> to <code>getDeviceClients</code>",
    "method": "get",
    "previousSummary": "List the clients of a device, up to a maximum of a month ago. The usage of each client is returned in kilobytes. If the device is a switch, the switchport is returned; otherwise the switchport field is null.",
    "currentSummary": "getDeviceClients",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/organizations/{organizationId}/configTemplates` (get) - Summary turned from `List the configuration templates for this organization` to `getOrganizationConfigTemplates`",
    "messageHtml": "Summary changed from <code>List the configuration templates for this organization</code> to <code>getOrganizationConfigTemplates</code>",
    "method": "get",
    "previousSummary": "List the configuration templates for this organization",
    "currentSummary": "getOrganizationConfigTemplates",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/organizations/{organizationId}/configTemplates/{id}` (delete) - Summary turned from `Remove a configuration template` to `deleteOrganizationConfigTemplate`",
    "messageHtml": "Summary changed from <code>Remove a configuration template</code> to <code>deleteOrganizationConfigTemplate</code>",
    "method": "delete",
    "previousSummary": "Remove a configuration template",
    "currentSummary": "deleteOrganizationConfigTemplate",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/devices` (get) - Summary turned from `List the devices in a network` to `getNetworkDevices`",
    "messageHtml": "Summary changed from <code>List the devices in a network</code> to <code>getNetworkDevices</code>",
    "method": "get",
    "previousSummary": "List the devices in a network",
    "currentSummary": "getNetworkDevices",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/devices/{serial}` (get) - Summary turned from `Return a single device` to `getNetworkDevice`",
    "messageHtml": "Summary changed from <code>Return a single device</code> to <code>getNetworkDevice</code>",
    "method": "get",
    "previousSummary": "Return a single device",
    "currentSummary": "getNetworkDevice",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/devices/{serial}` (put) - Summary turned from `Update the attributes of a device` to `updateNetworkDevice`",
    "messageHtml": "Summary changed from <code>Update the attributes of a device</code> to <code>updateNetworkDevice</code>",
    "method": "put",
    "previousSummary": "Update the attributes of a device",
    "currentSummary": "updateNetworkDevice",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "add-optional-object-property",
    "message": "`paths//networks/{networkId}/devices/{serial}/put/parameters/updateNetworkDevice/schema` - Optional property `switchProfileId` Added",
    "messageHtml": "Optional property <code>switchProfileId</code> Added",
    "path": "paths//networks/{networkId}/devices/{serial}/put/parameters/updateNetworkDevice/schema",
    "property": "switchProfileId",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/devices/{serial}/performance` (get) - Summary turned from `Return the performance score for a single device. Only primary MX devices supported. If no data is available, a 204 error code is returned.` to `getNetworkDevicePerformance`",
    "messageHtml": "Summary changed from <code>Return the performance score for a single device. Only primary MX devices supported. If no data is available, a 204 error code is returned.</code> to <code>getNetworkDevicePerformance</code>",
    "method": "get",
    "previousSummary": "Return the performance score for a single device. Only primary MX devices supported. If no data is available, a 204 error code is returned.",
    "currentSummary": "getNetworkDevicePerformance",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/devices/{serial}/uplink` (get) - Summary turned from `Return the uplink information for a device.` to `getNetworkDeviceUplink`",
    "messageHtml": "Summary changed from <code>Return the uplink information for a device.</code> to <code>getNetworkDeviceUplink</code>",
    "method": "get",
    "previousSummary": "Return the uplink information for a device.",
    "currentSummary": "getNetworkDeviceUplink",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/devices/{serial}/lldp_cdp` (get) - Summary turned from `List LLDP and CDP information for a device` to `getNetworkDeviceLldp_cdp`",
    "messageHtml": "Summary changed from <code>List LLDP and CDP information for a device</code> to <code>getNetworkDeviceLldp_cdp</code>",
    "method": "get",
    "previousSummary": "List LLDP and CDP information for a device",
    "currentSummary": "getNetworkDeviceLldp_cdp",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/devices/claim` (post) - Summary turned from `Claim a device into a network` to `claimNetworkDevices`",
    "messageHtml": "Summary changed from <code>Claim a device into a network</code> to <code>claimNetworkDevices</code>",
    "method": "post",
    "previousSummary": "Claim a device into a network",
    "currentSummary": "claimNetworkDevices",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/devices/{serial}/remove` (post) - Summary turned from `Remove a single device` to `removeNetworkDevice`",
    "messageHtml": "Summary changed from <code>Remove a single device</code> to <code>removeNetworkDevice</code>",
    "method": "post",
    "previousSummary": "Remove a single device",
    "currentSummary": "removeNetworkDevice",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/devices/{serial}/lossAndLatencyHistory` (get) - Summary turned from `Get the uplink loss percentage and latency in milliseconds for a wired network device.` to `getNetworkDeviceLossAndLatencyHistory`",
    "messageHtml": "Summary changed from <code>Get the uplink loss percentage and latency in milliseconds for a wired network device.</code> to <code>getNetworkDeviceLossAndLatencyHistory</code>",
    "method": "get",
    "previousSummary": "Get the uplink loss percentage and latency in milliseconds for a wired network device.",
    "currentSummary": "getNetworkDeviceLossAndLatencyHistory",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/devices/{serial}/reboot` (post) - Summary turned from `Reboot a device` to `rebootNetworkDevice`",
    "messageHtml": "Summary changed from <code>Reboot a device</code> to <code>rebootNetworkDevice</code>",
    "method": "post",
    "previousSummary": "Reboot a device",
    "currentSummary": "rebootNetworkDevice",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/devices/{serial}/blinkLeds` (post) - Summary turned from `Blink the LEDs on a device` to `blinkNetworkDeviceLeds`",
    "messageHtml": "Summary changed from <code>Blink the LEDs on a device</code> to <code>blinkNetworkDeviceLeds</code>",
    "method": "post",
    "previousSummary": "Blink the LEDs on a device",
    "currentSummary": "blinkNetworkDeviceLeds",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/cellularFirewallRules` (get) - Summary turned from `Return the cellular firewall rules for an MX network` to `getNetworkCellularFirewallRules`",
    "messageHtml": "Summary changed from <code>Return the cellular firewall rules for an MX network</code> to <code>getNetworkCellularFirewallRules</code>",
    "method": "get",
    "previousSummary": "Return the cellular firewall rules for an MX network",
    "currentSummary": "getNetworkCellularFirewallRules",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/cellularFirewallRules` (put) - Summary turned from `Update the cellular firewall rules of an MX network` to `updateNetworkCellularFirewallRules`",
    "messageHtml": "Summary changed from <code>Update the cellular firewall rules of an MX network</code> to <code>updateNetworkCellularFirewallRules</code>",
    "method": "put",
    "previousSummary": "Update the cellular firewall rules of an MX network",
    "currentSummary": "updateNetworkCellularFirewallRules",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/cellularFirewallRules/put/parameters/updateNetworkCellularFirewallRules/schema/properties/rules/items/properties/policy/` - Description turned from `'Allow' or 'Deny' traffic specified by this rule` to `'allow' or 'deny' traffic specified by this rule`",
    "messageHtml": "Description turned from <code>'Allow' or 'Deny' traffic specified by this rule</code> to <code>'allow' or 'deny' traffic specified by this rule</code>",
    "descriptionPath": "/paths//networks/{networkId}/cellularFirewallRules/put/parameters/updateNetworkCellularFirewallRules/schema/properties/rules/items/properties/policy/",
    "previousDescription": "'Allow' or 'Deny' traffic specified by this rule",
    "currentDescription": "'allow' or 'deny' traffic specified by this rule",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/l3FirewallRules` (get) - Summary turned from `Return the L3 firewall rules for an MX network` to `getNetworkL3FirewallRules`",
    "messageHtml": "Summary changed from <code>Return the L3 firewall rules for an MX network</code> to <code>getNetworkL3FirewallRules</code>",
    "method": "get",
    "previousSummary": "Return the L3 firewall rules for an MX network",
    "currentSummary": "getNetworkL3FirewallRules",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/l3FirewallRules` (put) - Summary turned from `Update the L3 firewall rules of an MX network` to `updateNetworkL3FirewallRules`",
    "messageHtml": "Summary changed from <code>Update the L3 firewall rules of an MX network</code> to <code>updateNetworkL3FirewallRules</code>",
    "method": "put",
    "previousSummary": "Update the L3 firewall rules of an MX network",
    "currentSummary": "updateNetworkL3FirewallRules",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/l3FirewallRules/put/parameters/updateNetworkL3FirewallRules/schema/properties/rules/items/properties/policy/` - Description turned from `'Allow' or 'Deny' traffic specified by this rule` to `'allow' or 'deny' traffic specified by this rule`",
    "messageHtml": "Description turned from <code>'Allow' or 'Deny' traffic specified by this rule</code> to <code>'allow' or 'deny' traffic specified by this rule</code>",
    "descriptionPath": "/paths//networks/{networkId}/l3FirewallRules/put/parameters/updateNetworkL3FirewallRules/schema/properties/rules/items/properties/policy/",
    "previousDescription": "'Allow' or 'Deny' traffic specified by this rule",
    "currentDescription": "'allow' or 'deny' traffic specified by this rule",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/l7FirewallRules/applicationCategories` (get) - Summary turned from `Return the L7 firewall application categories and their associated applications for an MX network` to `getNetworkL7FirewallRulesApplicationCategories`",
    "messageHtml": "Summary changed from <code>Return the L7 firewall application categories and their associated applications for an MX network</code> to <code>getNetworkL7FirewallRulesApplicationCategories</code>",
    "method": "get",
    "previousSummary": "Return the L7 firewall application categories and their associated applications for an MX network",
    "currentSummary": "getNetworkL7FirewallRulesApplicationCategories",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/l7FirewallRules` (get) - Summary turned from `List the MX L7 firewall rules for an MX network` to `getNetworkL7FirewallRules`",
    "messageHtml": "Summary changed from <code>List the MX L7 firewall rules for an MX network</code> to <code>getNetworkL7FirewallRules</code>",
    "method": "get",
    "previousSummary": "List the MX L7 firewall rules for an MX network",
    "currentSummary": "getNetworkL7FirewallRules",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/l7FirewallRules` (put) - Summary turned from `Update the MX L7 firewall rules for an MX network` to `updateNetworkL7FirewallRules`",
    "messageHtml": "Summary changed from <code>Update the MX L7 firewall rules for an MX network</code> to <code>updateNetworkL7FirewallRules</code>",
    "method": "put",
    "previousSummary": "Update the MX L7 firewall rules for an MX network",
    "currentSummary": "updateNetworkL7FirewallRules",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/organizations/{organizationId}/vpnFirewallRules` (get) - Summary turned from `Return the firewall rules for an organization's site-to-site VPN` to `getOrganizationVpnFirewallRules`",
    "messageHtml": "Summary changed from <code>Return the firewall rules for an organization's site-to-site VPN</code> to <code>getOrganizationVpnFirewallRules</code>",
    "method": "get",
    "previousSummary": "Return the firewall rules for an organization's site-to-site VPN",
    "currentSummary": "getOrganizationVpnFirewallRules",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/organizations/{organizationId}/vpnFirewallRules` (put) - Summary turned from `Update the firewall rules of an organization's site-to-site VPN` to `updateOrganizationVpnFirewallRules`",
    "messageHtml": "Summary changed from <code>Update the firewall rules of an organization's site-to-site VPN</code> to <code>updateOrganizationVpnFirewallRules</code>",
    "method": "put",
    "previousSummary": "Update the firewall rules of an organization's site-to-site VPN",
    "currentSummary": "updateOrganizationVpnFirewallRules",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//organizations/{organizationId}/vpnFirewallRules/put/parameters/updateOrganizationVpnFirewallRules/schema/properties/rules/items/properties/policy/` - Description turned from `'Allow' or 'Deny' traffic specified by this rule` to `'allow' or 'deny' traffic specified by this rule`",
    "messageHtml": "Description turned from <code>'Allow' or 'Deny' traffic specified by this rule</code> to <code>'allow' or 'deny' traffic specified by this rule</code>",
    "descriptionPath": "/paths//organizations/{organizationId}/vpnFirewallRules/put/parameters/updateOrganizationVpnFirewallRules/schema/properties/rules/items/properties/policy/",
    "previousDescription": "'Allow' or 'Deny' traffic specified by this rule",
    "currentDescription": "'allow' or 'deny' traffic specified by this rule",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/ssids/{number}/l3FirewallRules` (get) - Summary turned from `Return the L3 firewall rules for an SSID on an MR network` to `getNetworkSsidL3FirewallRules`",
    "messageHtml": "Summary changed from <code>Return the L3 firewall rules for an SSID on an MR network</code> to <code>getNetworkSsidL3FirewallRules</code>",
    "method": "get",
    "previousSummary": "Return the L3 firewall rules for an SSID on an MR network",
    "currentSummary": "getNetworkSsidL3FirewallRules",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/ssids/{number}/l3FirewallRules` (put) - Summary turned from `Update the L3 firewall rules of an SSID on an MR network` to `updateNetworkSsidL3FirewallRules`",
    "messageHtml": "Summary changed from <code>Update the L3 firewall rules of an SSID on an MR network</code> to <code>updateNetworkSsidL3FirewallRules</code>",
    "method": "put",
    "previousSummary": "Update the L3 firewall rules of an SSID on an MR network",
    "currentSummary": "updateNetworkSsidL3FirewallRules",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/ssids/{number}/l3FirewallRules/put/parameters/updateNetworkSsidL3FirewallRules/schema/properties/rules/items/properties/policy/` - Description turned from `'Allow' or 'Deny' traffic specified by this rule` to `'allow' or 'deny' traffic specified by this rule`",
    "messageHtml": "Description turned from <code>'Allow' or 'Deny' traffic specified by this rule</code> to <code>'allow' or 'deny' traffic specified by this rule</code>",
    "descriptionPath": "/paths//networks/{networkId}/ssids/{number}/l3FirewallRules/put/parameters/updateNetworkSsidL3FirewallRules/schema/properties/rules/items/properties/policy/",
    "previousDescription": "'Allow' or 'Deny' traffic specified by this rule",
    "currentDescription": "'allow' or 'deny' traffic specified by this rule",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/groupPolicies` (get) - Summary turned from `List the group policies in a network` to `getNetworkGroupPolicies`",
    "messageHtml": "Summary changed from <code>List the group policies in a network</code> to <code>getNetworkGroupPolicies</code>",
    "method": "get",
    "previousSummary": "List the group policies in a network",
    "currentSummary": "getNetworkGroupPolicies",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/groupPolicies` (post) - Summary turned from `Create a group policy` to `createNetworkGroupPolicy`",
    "messageHtml": "Summary changed from <code>Create a group policy</code> to <code>createNetworkGroupPolicy</code>",
    "method": "post",
    "previousSummary": "Create a group policy",
    "currentSummary": "createNetworkGroupPolicy",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/groupPolicies/post/parameters/createNetworkGroupPolicy/schema/properties/scheduling/` - Description turned from `    The schedule for the group policy. Schedules are applied to days of the week.\n` to `The schedule for the group policy. Schedules are applied to days of the week.`",
    "messageHtml": "Description turned from <code>    The schedule for the group policy. Schedules are applied to days of the week.\n</code> to <code>The schedule for the group policy. Schedules are applied to days of the week.</code>",
    "descriptionPath": "/paths//networks/{networkId}/groupPolicies/post/parameters/createNetworkGroupPolicy/schema/properties/scheduling/",
    "previousDescription": "    The schedule for the group policy. Schedules are applied to days of the week.\n",
    "currentDescription": "The schedule for the group policy. Schedules are applied to days of the week.",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/groupPolicies/post/parameters/createNetworkGroupPolicy/schema/properties/bandwidth/` - Description turned from `    The bandwidth settings for clients bound to your group policy.\n` to `The bandwidth settings for clients bound to your group policy.`",
    "messageHtml": "Description turned from <code>    The bandwidth settings for clients bound to your group policy.\n</code> to <code>The bandwidth settings for clients bound to your group policy.</code>",
    "descriptionPath": "/paths//networks/{networkId}/groupPolicies/post/parameters/createNetworkGroupPolicy/schema/properties/bandwidth/",
    "previousDescription": "    The bandwidth settings for clients bound to your group policy.\n",
    "currentDescription": "The bandwidth settings for clients bound to your group policy.",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/groupPolicies/post/parameters/createNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/trafficShapingRules/items/properties/definitions/items/properties/value/` - Description turned from `    If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).\n` to `If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).`",
    "messageHtml": "Description turned from <code>    If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).\n</code> to <code>If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).</code>",
    "descriptionPath": "/paths//networks/{networkId}/groupPolicies/post/parameters/createNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/trafficShapingRules/items/properties/definitions/items/properties/value/",
    "previousDescription": "    If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).\n",
    "currentDescription": "If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/groupPolicies/post/parameters/createNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/trafficShapingRules/items/properties/definitions/` - Description turned from `    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\n` to `A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.`",
    "messageHtml": "Description turned from <code>    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\n</code> to <code>A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.</code>",
    "descriptionPath": "/paths//networks/{networkId}/groupPolicies/post/parameters/createNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/trafficShapingRules/items/properties/definitions/",
    "previousDescription": "    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\n",
    "currentDescription": "A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/groupPolicies/post/parameters/createNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/trafficShapingRules/items/properties/perClientBandwidthLimits/` - Description turned from `    An object describing the bandwidth settings for your rule.\n` to `An object describing the bandwidth settings for your rule.`",
    "messageHtml": "Description turned from <code>    An object describing the bandwidth settings for your rule.\n</code> to <code>An object describing the bandwidth settings for your rule.</code>",
    "descriptionPath": "/paths//networks/{networkId}/groupPolicies/post/parameters/createNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/trafficShapingRules/items/properties/perClientBandwidthLimits/",
    "previousDescription": "    An object describing the bandwidth settings for your rule.\n",
    "currentDescription": "An object describing the bandwidth settings for your rule.",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/groupPolicies/post/parameters/createNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/trafficShapingRules/items/properties/dscpTagValue/` - Description turned from `    The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.\n` to `The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.`",
    "messageHtml": "Description turned from <code>    The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.\n</code> to <code>The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.</code>",
    "descriptionPath": "/paths//networks/{networkId}/groupPolicies/post/parameters/createNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/trafficShapingRules/items/properties/dscpTagValue/",
    "previousDescription": "    The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.\n",
    "currentDescription": "The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/groupPolicies/post/parameters/createNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/trafficShapingRules/items/properties/pcpTagValue/` - Description turned from `    The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).\n    null means 'Do not set PCP tag'.\n` to `The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).\n    null means 'Do not set PCP tag'.`",
    "messageHtml": "Description turned from <code>    The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).\n    null means 'Do not set PCP tag'.\n</code> to <code>The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).\n    null means 'Do not set PCP tag'.</code>",
    "descriptionPath": "/paths//networks/{networkId}/groupPolicies/post/parameters/createNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/trafficShapingRules/items/properties/pcpTagValue/",
    "previousDescription": "    The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).\n    null means 'Do not set PCP tag'.\n",
    "currentDescription": "The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).\n    null means 'Do not set PCP tag'.",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/groupPolicies/post/parameters/createNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/trafficShapingRules/items/properties/priority/` - Description turned from `    A string, indicating the priority level for packets bound to your rule.\n    Can be 'low', 'normal' or 'high'.\n` to `A string, indicating the priority level for packets bound to your rule.\n    Can be 'low', 'normal' or 'high'.`",
    "messageHtml": "Description turned from <code>    A string, indicating the priority level for packets bound to your rule.\n    Can be 'low', 'normal' or 'high'.\n</code> to <code>A string, indicating the priority level for packets bound to your rule.\n    Can be 'low', 'normal' or 'high'.</code>",
    "descriptionPath": "/paths//networks/{networkId}/groupPolicies/post/parameters/createNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/trafficShapingRules/items/properties/priority/",
    "previousDescription": "    A string, indicating the priority level for packets bound to your rule.\n    Can be 'low', 'normal' or 'high'.\n",
    "currentDescription": "A string, indicating the priority level for packets bound to your rule.\n    Can be 'low', 'normal' or 'high'.",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/groupPolicies/post/parameters/createNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/trafficShapingRules/` - Description turned from `    An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.\n` to `An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.`",
    "messageHtml": "Description turned from <code>    An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.\n</code> to <code>An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.</code>",
    "descriptionPath": "/paths//networks/{networkId}/groupPolicies/post/parameters/createNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/trafficShapingRules/",
    "previousDescription": "    An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.\n",
    "currentDescription": "An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/groupPolicies/post/parameters/createNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/l3FirewallRules/items/properties/policy/` - Description turned from `'Allow' or 'Deny' traffic specified by this rule` to `'allow' or 'deny' traffic specified by this rule`",
    "messageHtml": "Description turned from <code>'Allow' or 'Deny' traffic specified by this rule</code> to <code>'allow' or 'deny' traffic specified by this rule</code>",
    "descriptionPath": "/paths//networks/{networkId}/groupPolicies/post/parameters/createNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/l3FirewallRules/items/properties/policy/",
    "previousDescription": "'Allow' or 'Deny' traffic specified by this rule",
    "currentDescription": "'allow' or 'deny' traffic specified by this rule",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "delete-object-property",
    "message": "`paths//networks/{networkId}/groupPolicies/post/parameters/createNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/l3FirewallRules/items` - Property `srcPort` Deleted",
    "messageHtml": "Property <code>srcPort</code> Deleted",
    "path": "paths//networks/{networkId}/groupPolicies/post/parameters/createNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/l3FirewallRules/items",
    "property": "srcPort",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "delete-object-property",
    "message": "`paths//networks/{networkId}/groupPolicies/post/parameters/createNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/l3FirewallRules/items` - Property `srcCidr` Deleted",
    "messageHtml": "Property <code>srcCidr</code> Deleted",
    "path": "paths//networks/{networkId}/groupPolicies/post/parameters/createNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/l3FirewallRules/items",
    "property": "srcCidr",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/groupPolicies/post/parameters/createNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/l3FirewallRules/items/properties/destPort/` - Description turned from `Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'` to `Destination port (integer in the range 1-65535), a port range (e.g. 8080-9090), or 'any'`",
    "messageHtml": "Description turned from <code>Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'</code> to <code>Destination port (integer in the range 1-65535), a port range (e.g. 8080-9090), or 'any'</code>",
    "descriptionPath": "/paths//networks/{networkId}/groupPolicies/post/parameters/createNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/l3FirewallRules/items/properties/destPort/",
    "previousDescription": "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'",
    "currentDescription": "Destination port (integer in the range 1-65535), a port range (e.g. 8080-9090), or 'any'",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/groupPolicies/post/parameters/createNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/l3FirewallRules/items/properties/destCidr/` - Description turned from `Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'` to `Destination IP address (in IP or CIDR notation), a fully-qualified domain name (FQDN, if your network supports it) or 'any'.`",
    "messageHtml": "Description turned from <code>Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'</code> to <code>Destination IP address (in IP or CIDR notation), a fully-qualified domain name (FQDN, if your network supports it) or 'any'.</code>",
    "descriptionPath": "/paths//networks/{networkId}/groupPolicies/post/parameters/createNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/l3FirewallRules/items/properties/destCidr/",
    "previousDescription": "Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'",
    "currentDescription": "Destination IP address (in IP or CIDR notation), a fully-qualified domain name (FQDN, if your network supports it) or 'any'.",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/groupPolicies/post/parameters/createNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/` - Description turned from `    The firewall and traffic shaping rules and settings for your policy.\n` to `The firewall and traffic shaping rules and settings for your policy.`",
    "messageHtml": "Description turned from <code>    The firewall and traffic shaping rules and settings for your policy.\n</code> to <code>The firewall and traffic shaping rules and settings for your policy.</code>",
    "descriptionPath": "/paths//networks/{networkId}/groupPolicies/post/parameters/createNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/",
    "previousDescription": "    The firewall and traffic shaping rules and settings for your policy.\n",
    "currentDescription": "The firewall and traffic shaping rules and settings for your policy.",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "add-optional-object-property",
    "message": "`paths//networks/{networkId}/groupPolicies/post/parameters/createNetworkGroupPolicy/schema` - Optional property `splashAuthSettings` Added",
    "messageHtml": "Optional property <code>splashAuthSettings</code> Added",
    "path": "paths//networks/{networkId}/groupPolicies/post/parameters/createNetworkGroupPolicy/schema",
    "property": "splashAuthSettings",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "add-optional-object-property",
    "message": "`paths//networks/{networkId}/groupPolicies/post/parameters/createNetworkGroupPolicy/schema` - Optional property `vlanTagging` Added",
    "messageHtml": "Optional property <code>vlanTagging</code> Added",
    "path": "paths//networks/{networkId}/groupPolicies/post/parameters/createNetworkGroupPolicy/schema",
    "property": "vlanTagging",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "add-optional-object-property",
    "message": "`paths//networks/{networkId}/groupPolicies/post/parameters/createNetworkGroupPolicy/schema` - Optional property `bonjourForwarding` Added",
    "messageHtml": "Optional property <code>bonjourForwarding</code> Added",
    "path": "paths//networks/{networkId}/groupPolicies/post/parameters/createNetworkGroupPolicy/schema",
    "property": "bonjourForwarding",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/groupPolicies/{groupPolicyId}` (get) - Summary turned from `Display a group policy` to `getNetworkGroupPolicy`",
    "messageHtml": "Summary changed from <code>Display a group policy</code> to <code>getNetworkGroupPolicy</code>",
    "method": "get",
    "previousSummary": "Display a group policy",
    "currentSummary": "getNetworkGroupPolicy",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/groupPolicies/{groupPolicyId}` (put) - Summary turned from `Update a group policy` to `updateNetworkGroupPolicy`",
    "messageHtml": "Summary changed from <code>Update a group policy</code> to <code>updateNetworkGroupPolicy</code>",
    "method": "put",
    "previousSummary": "Update a group policy",
    "currentSummary": "updateNetworkGroupPolicy",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/groupPolicies/{groupPolicyId}/put/parameters/updateNetworkGroupPolicy/schema/properties/scheduling/` - Description turned from `    The schedule for the group policy. Schedules are applied to days of the week.\n` to `The schedule for the group policy. Schedules are applied to days of the week.`",
    "messageHtml": "Description turned from <code>    The schedule for the group policy. Schedules are applied to days of the week.\n</code> to <code>The schedule for the group policy. Schedules are applied to days of the week.</code>",
    "descriptionPath": "/paths//networks/{networkId}/groupPolicies/{groupPolicyId}/put/parameters/updateNetworkGroupPolicy/schema/properties/scheduling/",
    "previousDescription": "    The schedule for the group policy. Schedules are applied to days of the week.\n",
    "currentDescription": "The schedule for the group policy. Schedules are applied to days of the week.",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/groupPolicies/{groupPolicyId}/put/parameters/updateNetworkGroupPolicy/schema/properties/bandwidth/` - Description turned from `    The bandwidth settings for clients bound to your group policy.\n` to `The bandwidth settings for clients bound to your group policy.`",
    "messageHtml": "Description turned from <code>    The bandwidth settings for clients bound to your group policy.\n</code> to <code>The bandwidth settings for clients bound to your group policy.</code>",
    "descriptionPath": "/paths//networks/{networkId}/groupPolicies/{groupPolicyId}/put/parameters/updateNetworkGroupPolicy/schema/properties/bandwidth/",
    "previousDescription": "    The bandwidth settings for clients bound to your group policy.\n",
    "currentDescription": "The bandwidth settings for clients bound to your group policy.",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/groupPolicies/{groupPolicyId}/put/parameters/updateNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/trafficShapingRules/items/properties/definitions/items/properties/value/` - Description turned from `    If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).\n` to `If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).`",
    "messageHtml": "Description turned from <code>    If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).\n</code> to <code>If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).</code>",
    "descriptionPath": "/paths//networks/{networkId}/groupPolicies/{groupPolicyId}/put/parameters/updateNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/trafficShapingRules/items/properties/definitions/items/properties/value/",
    "previousDescription": "    If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).\n",
    "currentDescription": "If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/groupPolicies/{groupPolicyId}/put/parameters/updateNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/trafficShapingRules/items/properties/definitions/` - Description turned from `    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\n` to `A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.`",
    "messageHtml": "Description turned from <code>    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\n</code> to <code>A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.</code>",
    "descriptionPath": "/paths//networks/{networkId}/groupPolicies/{groupPolicyId}/put/parameters/updateNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/trafficShapingRules/items/properties/definitions/",
    "previousDescription": "    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\n",
    "currentDescription": "A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/groupPolicies/{groupPolicyId}/put/parameters/updateNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/trafficShapingRules/items/properties/perClientBandwidthLimits/` - Description turned from `    An object describing the bandwidth settings for your rule.\n` to `An object describing the bandwidth settings for your rule.`",
    "messageHtml": "Description turned from <code>    An object describing the bandwidth settings for your rule.\n</code> to <code>An object describing the bandwidth settings for your rule.</code>",
    "descriptionPath": "/paths//networks/{networkId}/groupPolicies/{groupPolicyId}/put/parameters/updateNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/trafficShapingRules/items/properties/perClientBandwidthLimits/",
    "previousDescription": "    An object describing the bandwidth settings for your rule.\n",
    "currentDescription": "An object describing the bandwidth settings for your rule.",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/groupPolicies/{groupPolicyId}/put/parameters/updateNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/trafficShapingRules/items/properties/dscpTagValue/` - Description turned from `    The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.\n` to `The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.`",
    "messageHtml": "Description turned from <code>    The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.\n</code> to <code>The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.</code>",
    "descriptionPath": "/paths//networks/{networkId}/groupPolicies/{groupPolicyId}/put/parameters/updateNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/trafficShapingRules/items/properties/dscpTagValue/",
    "previousDescription": "    The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.\n",
    "currentDescription": "The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/groupPolicies/{groupPolicyId}/put/parameters/updateNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/trafficShapingRules/items/properties/pcpTagValue/` - Description turned from `    The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).\n    null means 'Do not set PCP tag'.\n` to `The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).\n    null means 'Do not set PCP tag'.`",
    "messageHtml": "Description turned from <code>    The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).\n    null means 'Do not set PCP tag'.\n</code> to <code>The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).\n    null means 'Do not set PCP tag'.</code>",
    "descriptionPath": "/paths//networks/{networkId}/groupPolicies/{groupPolicyId}/put/parameters/updateNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/trafficShapingRules/items/properties/pcpTagValue/",
    "previousDescription": "    The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).\n    null means 'Do not set PCP tag'.\n",
    "currentDescription": "The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).\n    null means 'Do not set PCP tag'.",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/groupPolicies/{groupPolicyId}/put/parameters/updateNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/trafficShapingRules/items/properties/priority/` - Description turned from `    A string, indicating the priority level for packets bound to your rule.\n    Can be 'low', 'normal' or 'high'.\n` to `A string, indicating the priority level for packets bound to your rule.\n    Can be 'low', 'normal' or 'high'.`",
    "messageHtml": "Description turned from <code>    A string, indicating the priority level for packets bound to your rule.\n    Can be 'low', 'normal' or 'high'.\n</code> to <code>A string, indicating the priority level for packets bound to your rule.\n    Can be 'low', 'normal' or 'high'.</code>",
    "descriptionPath": "/paths//networks/{networkId}/groupPolicies/{groupPolicyId}/put/parameters/updateNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/trafficShapingRules/items/properties/priority/",
    "previousDescription": "    A string, indicating the priority level for packets bound to your rule.\n    Can be 'low', 'normal' or 'high'.\n",
    "currentDescription": "A string, indicating the priority level for packets bound to your rule.\n    Can be 'low', 'normal' or 'high'.",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/groupPolicies/{groupPolicyId}/put/parameters/updateNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/trafficShapingRules/` - Description turned from `    An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.\n` to `An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.`",
    "messageHtml": "Description turned from <code>    An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.\n</code> to <code>An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.</code>",
    "descriptionPath": "/paths//networks/{networkId}/groupPolicies/{groupPolicyId}/put/parameters/updateNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/trafficShapingRules/",
    "previousDescription": "    An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.\n",
    "currentDescription": "An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/groupPolicies/{groupPolicyId}/put/parameters/updateNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/l3FirewallRules/items/properties/policy/` - Description turned from `'Allow' or 'Deny' traffic specified by this rule` to `'allow' or 'deny' traffic specified by this rule`",
    "messageHtml": "Description turned from <code>'Allow' or 'Deny' traffic specified by this rule</code> to <code>'allow' or 'deny' traffic specified by this rule</code>",
    "descriptionPath": "/paths//networks/{networkId}/groupPolicies/{groupPolicyId}/put/parameters/updateNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/l3FirewallRules/items/properties/policy/",
    "previousDescription": "'Allow' or 'Deny' traffic specified by this rule",
    "currentDescription": "'allow' or 'deny' traffic specified by this rule",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "delete-object-property",
    "message": "`paths//networks/{networkId}/groupPolicies/{groupPolicyId}/put/parameters/updateNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/l3FirewallRules/items` - Property `srcPort` Deleted",
    "messageHtml": "Property <code>srcPort</code> Deleted",
    "path": "paths//networks/{networkId}/groupPolicies/{groupPolicyId}/put/parameters/updateNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/l3FirewallRules/items",
    "property": "srcPort",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "delete-object-property",
    "message": "`paths//networks/{networkId}/groupPolicies/{groupPolicyId}/put/parameters/updateNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/l3FirewallRules/items` - Property `srcCidr` Deleted",
    "messageHtml": "Property <code>srcCidr</code> Deleted",
    "path": "paths//networks/{networkId}/groupPolicies/{groupPolicyId}/put/parameters/updateNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/l3FirewallRules/items",
    "property": "srcCidr",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/groupPolicies/{groupPolicyId}/put/parameters/updateNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/l3FirewallRules/items/properties/destPort/` - Description turned from `Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'` to `Destination port (integer in the range 1-65535), a port range (e.g. 8080-9090), or 'any'`",
    "messageHtml": "Description turned from <code>Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'</code> to <code>Destination port (integer in the range 1-65535), a port range (e.g. 8080-9090), or 'any'</code>",
    "descriptionPath": "/paths//networks/{networkId}/groupPolicies/{groupPolicyId}/put/parameters/updateNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/l3FirewallRules/items/properties/destPort/",
    "previousDescription": "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'",
    "currentDescription": "Destination port (integer in the range 1-65535), a port range (e.g. 8080-9090), or 'any'",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/groupPolicies/{groupPolicyId}/put/parameters/updateNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/l3FirewallRules/items/properties/destCidr/` - Description turned from `Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'` to `Destination IP address (in IP or CIDR notation), a fully-qualified domain name (FQDN, if your network supports it) or 'any'.`",
    "messageHtml": "Description turned from <code>Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'</code> to <code>Destination IP address (in IP or CIDR notation), a fully-qualified domain name (FQDN, if your network supports it) or 'any'.</code>",
    "descriptionPath": "/paths//networks/{networkId}/groupPolicies/{groupPolicyId}/put/parameters/updateNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/properties/l3FirewallRules/items/properties/destCidr/",
    "previousDescription": "Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'",
    "currentDescription": "Destination IP address (in IP or CIDR notation), a fully-qualified domain name (FQDN, if your network supports it) or 'any'.",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/groupPolicies/{groupPolicyId}/put/parameters/updateNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/` - Description turned from `    The firewall and traffic shaping rules and settings for your policy.\n` to `The firewall and traffic shaping rules and settings for your policy.`",
    "messageHtml": "Description turned from <code>    The firewall and traffic shaping rules and settings for your policy.\n</code> to <code>The firewall and traffic shaping rules and settings for your policy.</code>",
    "descriptionPath": "/paths//networks/{networkId}/groupPolicies/{groupPolicyId}/put/parameters/updateNetworkGroupPolicy/schema/properties/firewallAndTrafficShaping/",
    "previousDescription": "    The firewall and traffic shaping rules and settings for your policy.\n",
    "currentDescription": "The firewall and traffic shaping rules and settings for your policy.",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "add-optional-object-property",
    "message": "`paths//networks/{networkId}/groupPolicies/{groupPolicyId}/put/parameters/updateNetworkGroupPolicy/schema` - Optional property `splashAuthSettings` Added",
    "messageHtml": "Optional property <code>splashAuthSettings</code> Added",
    "path": "paths//networks/{networkId}/groupPolicies/{groupPolicyId}/put/parameters/updateNetworkGroupPolicy/schema",
    "property": "splashAuthSettings",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "add-optional-object-property",
    "message": "`paths//networks/{networkId}/groupPolicies/{groupPolicyId}/put/parameters/updateNetworkGroupPolicy/schema` - Optional property `vlanTagging` Added",
    "messageHtml": "Optional property <code>vlanTagging</code> Added",
    "path": "paths//networks/{networkId}/groupPolicies/{groupPolicyId}/put/parameters/updateNetworkGroupPolicy/schema",
    "property": "vlanTagging",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "add-optional-object-property",
    "message": "`paths//networks/{networkId}/groupPolicies/{groupPolicyId}/put/parameters/updateNetworkGroupPolicy/schema` - Optional property `bonjourForwarding` Added",
    "messageHtml": "Optional property <code>bonjourForwarding</code> Added",
    "path": "paths//networks/{networkId}/groupPolicies/{groupPolicyId}/put/parameters/updateNetworkGroupPolicy/schema",
    "property": "bonjourForwarding",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/groupPolicies/{groupPolicyId}` (delete) - Summary turned from `Delete a group policy` to `deleteNetworkGroupPolicy`",
    "messageHtml": "Summary changed from <code>Delete a group policy</code> to <code>deleteNetworkGroupPolicy</code>",
    "method": "delete",
    "previousSummary": "Delete a group policy",
    "currentSummary": "deleteNetworkGroupPolicy",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/httpServers` (get) - Summary turned from `List the HTTP servers for a network` to `getNetworkHttpServers`",
    "messageHtml": "Summary changed from <code>List the HTTP servers for a network</code> to <code>getNetworkHttpServers</code>",
    "method": "get",
    "previousSummary": "List the HTTP servers for a network",
    "currentSummary": "getNetworkHttpServers",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/httpServers` (post) - Summary turned from `Add an HTTP server` to `createNetworkHttpServer`",
    "messageHtml": "Summary changed from <code>Add an HTTP server</code> to <code>createNetworkHttpServer</code>",
    "method": "post",
    "previousSummary": "Add an HTTP server",
    "currentSummary": "createNetworkHttpServer",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/httpServers/{id}` (get) - Summary turned from `Return an HTTP server` to `getNetworkHttpServer`",
    "messageHtml": "Summary changed from <code>Return an HTTP server</code> to <code>getNetworkHttpServer</code>",
    "method": "get",
    "previousSummary": "Return an HTTP server",
    "currentSummary": "getNetworkHttpServer",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/httpServers/{id}` (put) - Summary turned from `Update an HTTP server` to `updateNetworkHttpServer`",
    "messageHtml": "Summary changed from <code>Update an HTTP server</code> to <code>updateNetworkHttpServer</code>",
    "method": "put",
    "previousSummary": "Update an HTTP server",
    "currentSummary": "updateNetworkHttpServer",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/httpServers/{id}` (delete) - Summary turned from `Delete an HTTP server` to `deleteNetworkHttpServer`",
    "messageHtml": "Summary changed from <code>Delete an HTTP server</code> to <code>deleteNetworkHttpServer</code>",
    "method": "delete",
    "previousSummary": "Delete an HTTP server",
    "currentSummary": "deleteNetworkHttpServer",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/httpServers/webhookTests` (post) - Summary turned from `Send a test webhook` to `createNetworkHttpServersWebhookTest`",
    "messageHtml": "Summary changed from <code>Send a test webhook</code> to <code>createNetworkHttpServersWebhookTest</code>",
    "method": "post",
    "previousSummary": "Send a test webhook",
    "currentSummary": "createNetworkHttpServersWebhookTest",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/httpServers/webhookTests/{id}` (get) - Summary turned from `Return the status of a webhook test` to `getNetworkHttpServersWebhookTest`",
    "messageHtml": "Summary changed from <code>Return the status of a webhook test</code> to <code>getNetworkHttpServersWebhookTest</code>",
    "method": "get",
    "previousSummary": "Return the status of a webhook test",
    "currentSummary": "getNetworkHttpServersWebhookTest",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/merakiAuthUsers` (get) - Summary turned from `List the splash or RADIUS users configured under Meraki Authentication for a network` to `getNetworkMerakiAuthUsers`",
    "messageHtml": "Summary changed from <code>List the splash or RADIUS users configured under Meraki Authentication for a network</code> to <code>getNetworkMerakiAuthUsers</code>",
    "method": "get",
    "previousSummary": "List the splash or RADIUS users configured under Meraki Authentication for a network",
    "currentSummary": "getNetworkMerakiAuthUsers",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/merakiAuthUsers/{id}` (get) - Summary turned from `Return the Meraki Auth splash or RADIUS user` to `getNetworkMerakiAuthUser`",
    "messageHtml": "Summary changed from <code>Return the Meraki Auth splash or RADIUS user</code> to <code>getNetworkMerakiAuthUser</code>",
    "method": "get",
    "previousSummary": "Return the Meraki Auth splash or RADIUS user",
    "currentSummary": "getNetworkMerakiAuthUser",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/organizations/{organizationId}/openapiSpec` (get) - Summary turned from `Return the OpenAPI Specification of the organization's API documentation in JSON` to `getOrganizationOpenapiSpec`",
    "messageHtml": "Summary changed from <code>Return the OpenAPI Specification of the organization's API documentation in JSON</code> to <code>getOrganizationOpenapiSpec</code>",
    "method": "get",
    "previousSummary": "Return the OpenAPI Specification of the organization's API documentation in JSON",
    "currentSummary": "getOrganizationOpenapiSpec",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//organizations/{organizationId}/openapiSpec/get/` - Description turned from `Return the OpenAPI Specification of the organization's API documentation in JSON` to `Return the OpenAPI 2.0 Specification of the organization's API documentation in JSON`",
    "messageHtml": "Description turned from <code>Return the OpenAPI Specification of the organization's API documentation in JSON</code> to <code>Return the OpenAPI 2.0 Specification of the organization's API documentation in JSON</code>",
    "descriptionPath": "/paths//organizations/{organizationId}/openapiSpec/get/",
    "previousDescription": "Return the OpenAPI Specification of the organization's API documentation in JSON",
    "currentDescription": "Return the OpenAPI 2.0 Specification of the organization's API documentation in JSON",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/organizations` (get) - Summary turned from `List the organizations that the user has privileges on` to `getOrganizations`",
    "messageHtml": "Summary changed from <code>List the organizations that the user has privileges on</code> to <code>getOrganizations</code>",
    "method": "get",
    "previousSummary": "List the organizations that the user has privileges on",
    "currentSummary": "getOrganizations",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/organizations` (post) - Summary turned from `Create a new organization` to `createOrganization`",
    "messageHtml": "Summary changed from <code>Create a new organization</code> to <code>createOrganization</code>",
    "method": "post",
    "previousSummary": "Create a new organization",
    "currentSummary": "createOrganization",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/organizations/{id}` (get) - Summary turned from `Return an organization` to `getOrganization`",
    "messageHtml": "Summary changed from <code>Return an organization</code> to <code>getOrganization</code>",
    "method": "get",
    "previousSummary": "Return an organization",
    "currentSummary": "getOrganization",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/organizations/{id}` (put) - Summary turned from `Update an organization` to `updateOrganization`",
    "messageHtml": "Summary changed from <code>Update an organization</code> to <code>updateOrganization</code>",
    "method": "put",
    "previousSummary": "Update an organization",
    "currentSummary": "updateOrganization",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/organizations/{id}/clone` (post) - Summary turned from `Create a new organization by cloning the addressed organization` to `cloneOrganization`",
    "messageHtml": "Summary changed from <code>Create a new organization by cloning the addressed organization</code> to <code>cloneOrganization</code>",
    "method": "post",
    "previousSummary": "Create a new organization by cloning the addressed organization",
    "currentSummary": "cloneOrganization",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/organizations/{id}/licenseState` (get) - Summary turned from `Return the license state for an organization` to `getOrganizationLicenseState`",
    "messageHtml": "Summary changed from <code>Return the license state for an organization</code> to <code>getOrganizationLicenseState</code>",
    "method": "get",
    "previousSummary": "Return the license state for an organization",
    "currentSummary": "getOrganizationLicenseState",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/organizations/{id}/inventory` (get) - Summary turned from `Return the inventory for an organization` to `getOrganizationInventory`",
    "messageHtml": "Summary changed from <code>Return the inventory for an organization</code> to <code>getOrganizationInventory</code>",
    "method": "get",
    "previousSummary": "Return the inventory for an organization",
    "currentSummary": "getOrganizationInventory",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/organizations/{id}/deviceStatuses` (get) - Summary turned from `List the status of every Meraki device in the organization` to `getOrganizationDeviceStatuses`",
    "messageHtml": "Summary changed from <code>List the status of every Meraki device in the organization</code> to <code>getOrganizationDeviceStatuses</code>",
    "method": "get",
    "previousSummary": "List the status of every Meraki device in the organization",
    "currentSummary": "getOrganizationDeviceStatuses",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/organizations/{organizationId}/claim` (post) - Summary turned from `Claim a device, license key, or order into an organization. When claiming by order, all devices and licenses in the order will be claimed; licenses will be added to the organization and devices will be placed in the organization's inventory. These three types of claims are mutually exclusive and cannot be performed in one request.` to `claimOrganization`",
    "messageHtml": "Summary changed from <code>Claim a device, license key, or order into an organization. When claiming by order, all devices and licenses in the order will be claimed; licenses will be added to the organization and devices will be placed in the organization's inventory. These three types of claims are mutually exclusive and cannot be performed in one request.</code> to <code>claimOrganization</code>",
    "method": "post",
    "previousSummary": "Claim a device, license key, or order into an organization. When claiming by order, all devices and licenses in the order will be claimed; licenses will be added to the organization and devices will be placed in the organization's inventory. These three types of claims are mutually exclusive and cannot be performed in one request.",
    "currentSummary": "claimOrganization",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/organizations/{organizationId}/uplinksLossAndLatency` (get) - Summary turned from `Return the uplink loss and latency for every MX in the organization from 2 - 7 minutes ago` to `getOrganizationUplinksLossAndLatency`",
    "messageHtml": "Summary changed from <code>Return the uplink loss and latency for every MX in the organization from 2 - 7 minutes ago</code> to <code>getOrganizationUplinksLossAndLatency</code>",
    "method": "get",
    "previousSummary": "Return the uplink loss and latency for every MX in the organization from 2 - 7 minutes ago",
    "currentSummary": "getOrganizationUplinksLossAndLatency",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//organizations/{organizationId}/uplinksLossAndLatency/get/` - Description turned from `Return the uplink loss and latency for every MX in the organization from 2 - 7 minutes ago` to `Return the uplink loss and latency for every MX in the organization from at latest 2 minutes ago`",
    "messageHtml": "Description turned from <code>Return the uplink loss and latency for every MX in the organization from 2 - 7 minutes ago</code> to <code>Return the uplink loss and latency for every MX in the organization from at latest 2 minutes ago</code>",
    "descriptionPath": "/paths//organizations/{organizationId}/uplinksLossAndLatency/get/",
    "previousDescription": "Return the uplink loss and latency for every MX in the organization from 2 - 7 minutes ago",
    "currentDescription": "Return the uplink loss and latency for every MX in the organization from at latest 2 minutes ago",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "add-optional-param",
    "message": "`/organizations/{organizationId}/uplinksLossAndLatency` (get) - Optional param `t0` added",
    "messageHtml": "Optional param <code>t0</code> added",
    "path": "/organizations/{organizationId}/uplinksLossAndLatency",
    "method": "get",
    "param": "t0",
    "type": "infos",
    "name": "Changes",
    "apiDetails": {
      "description": "Return the uplink loss and latency for every MX in the organization from at latest 2 minutes ago",
      "summary": "getOrganizationUplinksLossAndLatency",
      "tags": [
        "Organizations"
      ],
      "operationId": "OrganizationsUplinksLossAndLatencyByOrganizationIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "t0",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
        },
        {
          "name": "t1",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 5 minutes after t0. The latest possible time that t1 can be is 2 minutes into the past."
        },
        {
          "name": "timespan",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 5 minutes. The default is 5 minutes."
        },
        {
          "name": "uplink",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "Optional filter for a specific WAN uplink. Valid uplinks are wan1, wan2, cellular. Default will return all uplinks."
        },
        {
          "name": "ip",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "Optional filter for a specific destination IP. Default will return all destination IPs."
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"networkId\": \"N_12345\",\r\n    \"serial\": \"Q2AB-CDEF-GHIJ\",\r\n    \"uplink\": \"wan1\",\r\n    \"ip\": \"8.8.8.8\",\r\n    \"timeSeries\": [\r\n      {\r\n        \"ts\": \"2019-01-31T18:46:13Z\",\r\n        \"lossPercent\": 5.3,\r\n        \"latencyMs\": 194.9\r\n      }\r\n    ]\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "add-optional-param",
    "message": "`/organizations/{organizationId}/uplinksLossAndLatency` (get) - Optional param `t1` added",
    "messageHtml": "Optional param <code>t1</code> added",
    "path": "/organizations/{organizationId}/uplinksLossAndLatency",
    "method": "get",
    "param": "t1",
    "type": "infos",
    "name": "Changes",
    "apiDetails": {
      "description": "Return the uplink loss and latency for every MX in the organization from at latest 2 minutes ago",
      "summary": "getOrganizationUplinksLossAndLatency",
      "tags": [
        "Organizations"
      ],
      "operationId": "OrganizationsUplinksLossAndLatencyByOrganizationIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "t0",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
        },
        {
          "name": "t1",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 5 minutes after t0. The latest possible time that t1 can be is 2 minutes into the past."
        },
        {
          "name": "timespan",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 5 minutes. The default is 5 minutes."
        },
        {
          "name": "uplink",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "Optional filter for a specific WAN uplink. Valid uplinks are wan1, wan2, cellular. Default will return all uplinks."
        },
        {
          "name": "ip",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "Optional filter for a specific destination IP. Default will return all destination IPs."
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"networkId\": \"N_12345\",\r\n    \"serial\": \"Q2AB-CDEF-GHIJ\",\r\n    \"uplink\": \"wan1\",\r\n    \"ip\": \"8.8.8.8\",\r\n    \"timeSeries\": [\r\n      {\r\n        \"ts\": \"2019-01-31T18:46:13Z\",\r\n        \"lossPercent\": 5.3,\r\n        \"latencyMs\": 194.9\r\n      }\r\n    ]\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "add-optional-param",
    "message": "`/organizations/{organizationId}/uplinksLossAndLatency` (get) - Optional param `timespan` added",
    "messageHtml": "Optional param <code>timespan</code> added",
    "path": "/organizations/{organizationId}/uplinksLossAndLatency",
    "method": "get",
    "param": "timespan",
    "type": "infos",
    "name": "Changes",
    "apiDetails": {
      "description": "Return the uplink loss and latency for every MX in the organization from at latest 2 minutes ago",
      "summary": "getOrganizationUplinksLossAndLatency",
      "tags": [
        "Organizations"
      ],
      "operationId": "OrganizationsUplinksLossAndLatencyByOrganizationIdGet",
      "deprecated": false,
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "t0",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
        },
        {
          "name": "t1",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "The end of the timespan for the data. t1 can be a maximum of 5 minutes after t0. The latest possible time that t1 can be is 2 minutes into the past."
        },
        {
          "name": "timespan",
          "in": "query",
          "required": false,
          "type": "integer",
          "format": "int32",
          "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 5 minutes. The default is 5 minutes."
        },
        {
          "name": "uplink",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "Optional filter for a specific WAN uplink. Valid uplinks are wan1, wan2, cellular. Default will return all uplinks."
        },
        {
          "name": "ip",
          "in": "query",
          "required": false,
          "type": "string",
          "description": "Optional filter for a specific destination IP. Default will return all destination IPs."
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "schema": {
            "type": "object"
          },
          "examples": {
            "text/plain": "[\r\n  {\r\n    \"networkId\": \"N_12345\",\r\n    \"serial\": \"Q2AB-CDEF-GHIJ\",\r\n    \"uplink\": \"wan1\",\r\n    \"ip\": \"8.8.8.8\",\r\n    \"timeSeries\": [\r\n      {\r\n        \"ts\": \"2019-01-31T18:46:13Z\",\r\n        \"lossPercent\": 5.3,\r\n        \"latencyMs\": 194.9\r\n      }\r\n    ]\r\n  }\r\n]"
          },
          "headers": {}
        }
      }
    }
  },
  {
    "ruleId": "edit-summary",
    "message": "`/organizations/{organizationId}/thirdPartyVPNPeers` (get) - Summary turned from `Return the third party VPN peers for an organization` to `getOrganizationThirdPartyVPNPeers`",
    "messageHtml": "Summary changed from <code>Return the third party VPN peers for an organization</code> to <code>getOrganizationThirdPartyVPNPeers</code>",
    "method": "get",
    "previousSummary": "Return the third party VPN peers for an organization",
    "currentSummary": "getOrganizationThirdPartyVPNPeers",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/organizations/{organizationId}/thirdPartyVPNPeers` (put) - Summary turned from `Update the third party VPN peers for an organization` to `updateOrganizationThirdPartyVPNPeers`",
    "messageHtml": "Summary changed from <code>Update the third party VPN peers for an organization</code> to <code>updateOrganizationThirdPartyVPNPeers</code>",
    "method": "put",
    "previousSummary": "Update the third party VPN peers for an organization",
    "currentSummary": "updateOrganizationThirdPartyVPNPeers",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/pii/piiKeys` (get) - Summary turned from `List the keys required to access Personally Identifiable Information (PII) for a given identifier. Exactly one identifier will be accepted. If the organization contains org-wide Systems Manager users matching the key provided then there will be an entry with the key \"0\" containing the applicable keys.` to `getNetworkPiiPiiKeys`",
    "messageHtml": "Summary changed from <code>List the keys required to access Personally Identifiable Information (PII) for a given identifier. Exactly one identifier will be accepted. If the organization contains org-wide Systems Manager users matching the key provided then there will be an entry with the key \"0\" containing the applicable keys.</code> to <code>getNetworkPiiPiiKeys</code>",
    "method": "get",
    "previousSummary": "List the keys required to access Personally Identifiable Information (PII) for a given identifier. Exactly one identifier will be accepted. If the organization contains org-wide Systems Manager users matching the key provided then there will be an entry with the key \"0\" containing the applicable keys.",
    "currentSummary": "getNetworkPiiPiiKeys",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/pii/smDevicesForKey` (get) - Summary turned from `Given a piece of Personally Identifiable Information (PII), return the Systems Manager device ID(s) associated with that identifier. These device IDs can be used with the Systems Manager API endpoints to retrieve device details. Exactly one identifier will be accepted.` to `getNetworkPiiSmDevicesForKey`",
    "messageHtml": "Summary changed from <code>Given a piece of Personally Identifiable Information (PII), return the Systems Manager device ID(s) associated with that identifier. These device IDs can be used with the Systems Manager API endpoints to retrieve device details. Exactly one identifier will be accepted.</code> to <code>getNetworkPiiSmDevicesForKey</code>",
    "method": "get",
    "previousSummary": "Given a piece of Personally Identifiable Information (PII), return the Systems Manager device ID(s) associated with that identifier. These device IDs can be used with the Systems Manager API endpoints to retrieve device details. Exactly one identifier will be accepted.",
    "currentSummary": "getNetworkPiiSmDevicesForKey",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/pii/smOwnersForKey` (get) - Summary turned from `Given a piece of Personally Identifiable Information (PII), return the Systems Manager owner ID(s) associated with that identifier. These owner IDs can be used with the Systems Manager API endpoints to retrieve owner details. Exactly one identifier will be accepted.` to `getNetworkPiiSmOwnersForKey`",
    "messageHtml": "Summary changed from <code>Given a piece of Personally Identifiable Information (PII), return the Systems Manager owner ID(s) associated with that identifier. These owner IDs can be used with the Systems Manager API endpoints to retrieve owner details. Exactly one identifier will be accepted.</code> to <code>getNetworkPiiSmOwnersForKey</code>",
    "method": "get",
    "previousSummary": "Given a piece of Personally Identifiable Information (PII), return the Systems Manager owner ID(s) associated with that identifier. These owner IDs can be used with the Systems Manager API endpoints to retrieve owner details. Exactly one identifier will be accepted.",
    "currentSummary": "getNetworkPiiSmOwnersForKey",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/pii/requests` (get) - Summary turned from `List the PII requests for this network or organization` to `getNetworkPiiRequests`",
    "messageHtml": "Summary changed from <code>List the PII requests for this network or organization</code> to <code>getNetworkPiiRequests</code>",
    "method": "get",
    "previousSummary": "List the PII requests for this network or organization",
    "currentSummary": "getNetworkPiiRequests",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/pii/requests` (post) - Summary turned from `Submit a new delete or restrict processing PII request` to `createNetworkPiiRequest`",
    "messageHtml": "Summary changed from <code>Submit a new delete or restrict processing PII request</code> to <code>createNetworkPiiRequest</code>",
    "method": "post",
    "previousSummary": "Submit a new delete or restrict processing PII request",
    "currentSummary": "createNetworkPiiRequest",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/pii/requests/{requestId}` (get) - Summary turned from `Return a PII request` to `getNetworkPiiRequest`",
    "messageHtml": "Summary changed from <code>Return a PII request</code> to <code>getNetworkPiiRequest</code>",
    "method": "get",
    "previousSummary": "Return a PII request",
    "currentSummary": "getNetworkPiiRequest",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/pii/requests/{requestId}` (delete) - Summary turned from `Delete a restrict processing PII request` to `deleteNetworkPiiRequest`",
    "messageHtml": "Summary changed from <code>Delete a restrict processing PII request</code> to <code>deleteNetworkPiiRequest</code>",
    "method": "delete",
    "previousSummary": "Delete a restrict processing PII request",
    "currentSummary": "deleteNetworkPiiRequest",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/devices/{serial}/wireless/radioSettings` (get) - Summary turned from `Return the radio settings of a device` to `getNetworkDeviceWirelessRadioSettings`",
    "messageHtml": "Summary changed from <code>Return the radio settings of a device</code> to <code>getNetworkDeviceWirelessRadioSettings</code>",
    "method": "get",
    "previousSummary": "Return the radio settings of a device",
    "currentSummary": "getNetworkDeviceWirelessRadioSettings",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/devices/{serial}/wireless/radioSettings` (put) - Summary turned from `Update the radio settings of a device` to `updateNetworkDeviceWirelessRadioSettings`",
    "messageHtml": "Summary changed from <code>Update the radio settings of a device</code> to <code>updateNetworkDeviceWirelessRadioSettings</code>",
    "method": "put",
    "previousSummary": "Update the radio settings of a device",
    "currentSummary": "updateNetworkDeviceWirelessRadioSettings",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/devices/{serial}/wireless/radioSettings/put/parameters/updateNetworkDeviceWirelessRadioSettings/schema/properties/rfProfileId/` - Description turned from `The ID of an RF profile to assign to the device. If the value of this parameter is null, the appropriate basic RF profile\n(indoor or outdoor) will be assigned to the device. Assigning an RF profile will clear ALL manually configured overrides\non the device (channel width, channel, power).\n` to `The ID of an RF profile to assign to the device. If the value of this parameter is null, the appropriate basic RF profile\n(indoor or outdoor) will be assigned to the device. Assigning an RF profile will clear ALL manually configured overrides\non the device (channel width, channel, power).`",
    "messageHtml": "Description turned from <code>The ID of an RF profile to assign to the device. If the value of this parameter is null, the appropriate basic RF profile\n(indoor or outdoor) will be assigned to the device. Assigning an RF profile will clear ALL manually configured overrides\non the device (channel width, channel, power).\n</code> to <code>The ID of an RF profile to assign to the device. If the value of this parameter is null, the appropriate basic RF profile\n(indoor or outdoor) will be assigned to the device. Assigning an RF profile will clear ALL manually configured overrides\non the device (channel width, channel, power).</code>",
    "descriptionPath": "/paths//networks/{networkId}/devices/{serial}/wireless/radioSettings/put/parameters/updateNetworkDeviceWirelessRadioSettings/schema/properties/rfProfileId/",
    "previousDescription": "The ID of an RF profile to assign to the device. If the value of this parameter is null, the appropriate basic RF profile\n(indoor or outdoor) will be assigned to the device. Assigning an RF profile will clear ALL manually configured overrides\non the device (channel width, channel, power).\n",
    "currentDescription": "The ID of an RF profile to assign to the device. If the value of this parameter is null, the appropriate basic RF profile\n(indoor or outdoor) will be assigned to the device. Assigning an RF profile will clear ALL manually configured overrides\non the device (channel width, channel, power).",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/wireless/rfProfiles` (get) - Summary turned from `List the non-basic RF profiles for this network` to `getNetworkWirelessRfProfiles`",
    "messageHtml": "Summary changed from <code>List the non-basic RF profiles for this network</code> to <code>getNetworkWirelessRfProfiles</code>",
    "method": "get",
    "previousSummary": "List the non-basic RF profiles for this network",
    "currentSummary": "getNetworkWirelessRfProfiles",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/organizations/{organizationId}/samlRoles` (get) - Summary turned from `List the SAML roles for this organization` to `getOrganizationSamlRoles`",
    "messageHtml": "Summary changed from <code>List the SAML roles for this organization</code> to <code>getOrganizationSamlRoles</code>",
    "method": "get",
    "previousSummary": "List the SAML roles for this organization",
    "currentSummary": "getOrganizationSamlRoles",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/organizations/{organizationId}/samlRoles` (post) - Summary turned from `Create a SAML role` to `createOrganizationSamlRole`",
    "messageHtml": "Summary changed from <code>Create a SAML role</code> to <code>createOrganizationSamlRole</code>",
    "method": "post",
    "previousSummary": "Create a SAML role",
    "currentSummary": "createOrganizationSamlRole",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/organizations/{organizationId}/samlRoles/{id}` (get) - Summary turned from `Return a SAML role` to `getOrganizationSamlRole`",
    "messageHtml": "Summary changed from <code>Return a SAML role</code> to <code>getOrganizationSamlRole</code>",
    "method": "get",
    "previousSummary": "Return a SAML role",
    "currentSummary": "getOrganizationSamlRole",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/organizations/{organizationId}/samlRoles/{id}` (put) - Summary turned from `Update a SAML role` to `updateOrganizationSamlRole`",
    "messageHtml": "Summary changed from <code>Update a SAML role</code> to <code>updateOrganizationSamlRole</code>",
    "method": "put",
    "previousSummary": "Update a SAML role",
    "currentSummary": "updateOrganizationSamlRole",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/organizations/{organizationId}/samlRoles/{id}` (delete) - Summary turned from `Remove a SAML role` to `deleteOrganizationSamlRole`",
    "messageHtml": "Summary changed from <code>Remove a SAML role</code> to <code>deleteOrganizationSamlRole</code>",
    "method": "delete",
    "previousSummary": "Remove a SAML role",
    "currentSummary": "deleteOrganizationSamlRole",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/clients/{clientId}/securityEvents` (get) - Summary turned from `List the security events` to `getNetworkClientSecurityEvents`",
    "messageHtml": "Summary changed from <code>List the security events</code> to <code>getNetworkClientSecurityEvents</code>",
    "method": "get",
    "previousSummary": "List the security events",
    "currentSummary": "getNetworkClientSecurityEvents",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/clients/{clientId}/securityEvents/get/` - Description turned from `List the security events` to `List the security events for a client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.`",
    "messageHtml": "Description turned from <code>List the security events</code> to <code>List the security events for a client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.</code>",
    "descriptionPath": "/paths//networks/{networkId}/clients/{clientId}/securityEvents/get/",
    "previousDescription": "List the security events",
    "currentDescription": "List the security events for a client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/clients/{clientId}/securityEvents/get/parameters/perPage/` - Description turned from `The number of entries per page returned. Acceptable range is 3 - 1000.` to `The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.`",
    "messageHtml": "Description turned from <code>The number of entries per page returned. Acceptable range is 3 - 1000.</code> to <code>The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.</code>",
    "descriptionPath": "/paths//networks/{networkId}/clients/{clientId}/securityEvents/get/parameters/perPage/",
    "previousDescription": "The number of entries per page returned. Acceptable range is 3 - 1000.",
    "currentDescription": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/security/intrusionSettings` (get) - Summary turned from `Returns all supported intrusion settings for an MX network` to `getNetworkSecurityIntrusionSettings`",
    "messageHtml": "Summary changed from <code>Returns all supported intrusion settings for an MX network</code> to <code>getNetworkSecurityIntrusionSettings</code>",
    "method": "get",
    "previousSummary": "Returns all supported intrusion settings for an MX network",
    "currentSummary": "getNetworkSecurityIntrusionSettings",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/security/intrusionSettings` (put) - Summary turned from `Set the supported instrusion settings for an MX network` to `updateNetworkSecurityIntrusionSettings`",
    "messageHtml": "Summary changed from <code>Set the supported instrusion settings for an MX network</code> to <code>updateNetworkSecurityIntrusionSettings</code>",
    "method": "put",
    "previousSummary": "Set the supported instrusion settings for an MX network",
    "currentSummary": "updateNetworkSecurityIntrusionSettings",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "add-optional-object-property",
    "message": "`paths//networks/{networkId}/security/intrusionSettings/put/parameters/updateNetworkSecurityIntrusionSettings/schema/properties/protectedNetworks` - Optional property `excludedCidr` Added",
    "messageHtml": "Optional property <code>excludedCidr</code> Added",
    "path": "paths//networks/{networkId}/security/intrusionSettings/put/parameters/updateNetworkSecurityIntrusionSettings/schema/properties/protectedNetworks",
    "property": "excludedCidr",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "add-optional-object-property",
    "message": "`paths//networks/{networkId}/security/intrusionSettings/put/parameters/updateNetworkSecurityIntrusionSettings/schema` - Optional property `idsRulesets` Added",
    "messageHtml": "Optional property <code>idsRulesets</code> Added",
    "path": "paths//networks/{networkId}/security/intrusionSettings/put/parameters/updateNetworkSecurityIntrusionSettings/schema",
    "property": "idsRulesets",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/organizations/{organizationId}/security/intrusionSettings` (get) - Summary turned from `Returns all supported intrusion settings for an organization.` to `getOrganizationSecurityIntrusionSettings`",
    "messageHtml": "Summary changed from <code>Returns all supported intrusion settings for an organization.</code> to <code>getOrganizationSecurityIntrusionSettings</code>",
    "method": "get",
    "previousSummary": "Returns all supported intrusion settings for an organization.",
    "currentSummary": "getOrganizationSecurityIntrusionSettings",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//organizations/{organizationId}/security/intrusionSettings/get/` - Description turned from `Returns all supported intrusion settings for an organization.` to `Returns all supported intrusion settings for an organization`",
    "messageHtml": "Description turned from <code>Returns all supported intrusion settings for an organization.</code> to <code>Returns all supported intrusion settings for an organization</code>",
    "descriptionPath": "/paths//organizations/{organizationId}/security/intrusionSettings/get/",
    "previousDescription": "Returns all supported intrusion settings for an organization.",
    "currentDescription": "Returns all supported intrusion settings for an organization",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/organizations/{organizationId}/security/intrusionSettings` (put) - Summary turned from `Sets supported intrusion settings for an organization.` to `updateOrganizationSecurityIntrusionSettings`",
    "messageHtml": "Summary changed from <code>Sets supported intrusion settings for an organization.</code> to <code>updateOrganizationSecurityIntrusionSettings</code>",
    "method": "put",
    "previousSummary": "Sets supported intrusion settings for an organization.",
    "currentSummary": "updateOrganizationSecurityIntrusionSettings",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//organizations/{organizationId}/security/intrusionSettings/put/` - Description turned from `Sets supported intrusion settings for an organization.` to `Sets supported intrusion settings for an organization`",
    "messageHtml": "Description turned from <code>Sets supported intrusion settings for an organization.</code> to <code>Sets supported intrusion settings for an organization</code>",
    "descriptionPath": "/paths//organizations/{organizationId}/security/intrusionSettings/put/",
    "previousDescription": "Sets supported intrusion settings for an organization.",
    "currentDescription": "Sets supported intrusion settings for an organization",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/security/malwareSettings` (get) - Summary turned from `Returns all supported malware settings for an MX network` to `getNetworkSecurityMalwareSettings`",
    "messageHtml": "Summary changed from <code>Returns all supported malware settings for an MX network</code> to <code>getNetworkSecurityMalwareSettings</code>",
    "method": "get",
    "previousSummary": "Returns all supported malware settings for an MX network",
    "currentSummary": "getNetworkSecurityMalwareSettings",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/security/malwareSettings` (put) - Summary turned from `Set the supported malware settings for an MX network` to `updateNetworkSecurityMalwareSettings`",
    "messageHtml": "Summary changed from <code>Set the supported malware settings for an MX network</code> to <code>updateNetworkSecurityMalwareSettings</code>",
    "method": "put",
    "previousSummary": "Set the supported malware settings for an MX network",
    "currentSummary": "updateNetworkSecurityMalwareSettings",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "add-optional-object-property",
    "message": "`paths//networks/{networkId}/security/malwareSettings/put/parameters/updateNetworkSecurityMalwareSettings/schema` - Optional property `allowedUrls` Added",
    "messageHtml": "Optional property <code>allowedUrls</code> Added",
    "path": "paths//networks/{networkId}/security/malwareSettings/put/parameters/updateNetworkSecurityMalwareSettings/schema",
    "property": "allowedUrls",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "add-optional-object-property",
    "message": "`paths//networks/{networkId}/security/malwareSettings/put/parameters/updateNetworkSecurityMalwareSettings/schema` - Optional property `allowedFiles` Added",
    "messageHtml": "Optional property <code>allowedFiles</code> Added",
    "path": "paths//networks/{networkId}/security/malwareSettings/put/parameters/updateNetworkSecurityMalwareSettings/schema",
    "property": "allowedFiles",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/securityEvents` (get) - Summary turned from `List the security events for a network` to `getNetworkSecurityEvents`",
    "messageHtml": "Summary changed from <code>List the security events for a network</code> to <code>getNetworkSecurityEvents</code>",
    "method": "get",
    "previousSummary": "List the security events for a network",
    "currentSummary": "getNetworkSecurityEvents",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/securityEvents/get/parameters/perPage/` - Description turned from `The number of entries per page returned. Acceptable range is 3 - 1000.` to `The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.`",
    "messageHtml": "Description turned from <code>The number of entries per page returned. Acceptable range is 3 - 1000.</code> to <code>The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.</code>",
    "descriptionPath": "/paths//networks/{networkId}/securityEvents/get/parameters/perPage/",
    "previousDescription": "The number of entries per page returned. Acceptable range is 3 - 1000.",
    "currentDescription": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/organizations/{organizationId}/securityEvents` (get) - Summary turned from `List the security events for an organization` to `getOrganizationSecurityEvents`",
    "messageHtml": "Summary changed from <code>List the security events for an organization</code> to <code>getOrganizationSecurityEvents</code>",
    "method": "get",
    "previousSummary": "List the security events for an organization",
    "currentSummary": "getOrganizationSecurityEvents",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//organizations/{organizationId}/securityEvents/get/parameters/perPage/` - Description turned from `The number of entries per page returned. Acceptable range is 3 - 1000.` to `The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.`",
    "messageHtml": "Description turned from <code>The number of entries per page returned. Acceptable range is 3 - 1000.</code> to <code>The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.</code>",
    "descriptionPath": "/paths//organizations/{organizationId}/securityEvents/get/parameters/perPage/",
    "previousDescription": "The number of entries per page returned. Acceptable range is 3 - 1000.",
    "currentDescription": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/sm/targetGroups` (get) - Summary turned from `List the target groups in this network` to `getNetworkSmTargetGroups`",
    "messageHtml": "Summary changed from <code>List the target groups in this network</code> to <code>getNetworkSmTargetGroups</code>",
    "method": "get",
    "previousSummary": "List the target groups in this network",
    "currentSummary": "getNetworkSmTargetGroups",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/sm/targetGroups` (post) - Summary turned from `Add a target group` to `createNetworkSmTargetGroup`",
    "messageHtml": "Summary changed from <code>Add a target group</code> to <code>createNetworkSmTargetGroup</code>",
    "method": "post",
    "previousSummary": "Add a target group",
    "currentSummary": "createNetworkSmTargetGroup",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/sm/targetGroups/post/parameters/createNetworkSmTargetGroup/schema/properties/scope/` - Description turned from `The scope and tag options of the target group. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none, followed by tags` to `The scope and tag options of the target group. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none, followed by tags. Default to none if empty.`",
    "messageHtml": "Description turned from <code>The scope and tag options of the target group. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none, followed by tags</code> to <code>The scope and tag options of the target group. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none, followed by tags. Default to none if empty.</code>",
    "descriptionPath": "/paths//networks/{networkId}/sm/targetGroups/post/parameters/createNetworkSmTargetGroup/schema/properties/scope/",
    "previousDescription": "The scope and tag options of the target group. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none, followed by tags",
    "currentDescription": "The scope and tag options of the target group. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none, followed by tags. Default to none if empty.",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/sm/targetGroups/{targetGroupId}` (get) - Summary turned from `Return a target group` to `getNetworkSmTargetGroup`",
    "messageHtml": "Summary changed from <code>Return a target group</code> to <code>getNetworkSmTargetGroup</code>",
    "method": "get",
    "previousSummary": "Return a target group",
    "currentSummary": "getNetworkSmTargetGroup",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/sm/targetGroups/{targetGroupId}/get/parameters/withDetails/` - Description turned from `Boolean indicating if the the ids of devices or users scoped by the target group should be included in the response` to `Boolean indicating if the the ids of the devices or users scoped by the target group should be included in the response`",
    "messageHtml": "Description turned from <code>Boolean indicating if the the ids of devices or users scoped by the target group should be included in the response</code> to <code>Boolean indicating if the the ids of the devices or users scoped by the target group should be included in the response</code>",
    "descriptionPath": "/paths//networks/{networkId}/sm/targetGroups/{targetGroupId}/get/parameters/withDetails/",
    "previousDescription": "Boolean indicating if the the ids of devices or users scoped by the target group should be included in the response",
    "currentDescription": "Boolean indicating if the the ids of the devices or users scoped by the target group should be included in the response",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/sm/targetGroups/{targetGroupId}` (put) - Summary turned from `Update a target group` to `updateNetworkSmTargetGroup`",
    "messageHtml": "Summary changed from <code>Update a target group</code> to <code>updateNetworkSmTargetGroup</code>",
    "method": "put",
    "previousSummary": "Update a target group",
    "currentSummary": "updateNetworkSmTargetGroup",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/sm/targetGroups/{targetGroupId}/put/parameters/updateNetworkSmTargetGroup/schema/properties/scope/` - Description turned from `The scope and tag options of the target group. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none, followed by tags` to `The scope and tag options of the target group. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none, followed by tags. Default to none if empty.`",
    "messageHtml": "Description turned from <code>The scope and tag options of the target group. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none, followed by tags</code> to <code>The scope and tag options of the target group. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none, followed by tags. Default to none if empty.</code>",
    "descriptionPath": "/paths//networks/{networkId}/sm/targetGroups/{targetGroupId}/put/parameters/updateNetworkSmTargetGroup/schema/properties/scope/",
    "previousDescription": "The scope and tag options of the target group. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none, followed by tags",
    "currentDescription": "The scope and tag options of the target group. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none, followed by tags. Default to none if empty.",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/sm/targetGroups/{targetGroupId}` (delete) - Summary turned from `Delete a target group from a network` to `deleteNetworkSmTargetGroup`",
    "messageHtml": "Summary changed from <code>Delete a target group from a network</code> to <code>deleteNetworkSmTargetGroup</code>",
    "method": "delete",
    "previousSummary": "Delete a target group from a network",
    "currentSummary": "deleteNetworkSmTargetGroup",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{network_id}/sm/profile/clarity` (post) - Summary turned from `Create a new profile containing a Cisco Clarity payload` to `createNetworkSmProfileClarity`",
    "messageHtml": "Summary changed from <code>Create a new profile containing a Cisco Clarity payload</code> to <code>createNetworkSmProfileClarity</code>",
    "method": "post",
    "previousSummary": "Create a new profile containing a Cisco Clarity payload",
    "currentSummary": "createNetworkSmProfileClarity",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{network_id}/sm/profile/clarity/post/parameters/createNetworkSmProfileClarity/schema/properties/VendorConfig/` - Description turned from `The specific VendorConfig to be passed to the filtering framework, as JSON. VendorConfig should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name\n` to `The specific VendorConfig to be passed to the filtering framework, as JSON. VendorConfig should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name`",
    "messageHtml": "Description turned from <code>The specific VendorConfig to be passed to the filtering framework, as JSON. VendorConfig should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name\n</code> to <code>The specific VendorConfig to be passed to the filtering framework, as JSON. VendorConfig should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name</code>",
    "descriptionPath": "/paths//networks/{network_id}/sm/profile/clarity/post/parameters/createNetworkSmProfileClarity/schema/properties/VendorConfig/",
    "previousDescription": "The specific VendorConfig to be passed to the filtering framework, as JSON. VendorConfig should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name\n",
    "currentDescription": "The specific VendorConfig to be passed to the filtering framework, as JSON. VendorConfig should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{network_id}/sm/profile/clarity/{profileId}` (get) - Summary turned from `Get details for a Cisco Clarity payload` to `getNetworkSmProfileClarity`",
    "messageHtml": "Summary changed from <code>Get details for a Cisco Clarity payload</code> to <code>getNetworkSmProfileClarity</code>",
    "method": "get",
    "previousSummary": "Get details for a Cisco Clarity payload",
    "currentSummary": "getNetworkSmProfileClarity",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{network_id}/sm/profile/clarity/{profileId}` (post) - Summary turned from `Add a Cisco Clarity payload to an existing profile` to `addNetworkSmProfileClarity`",
    "messageHtml": "Summary changed from <code>Add a Cisco Clarity payload to an existing profile</code> to <code>addNetworkSmProfileClarity</code>",
    "method": "post",
    "previousSummary": "Add a Cisco Clarity payload to an existing profile",
    "currentSummary": "addNetworkSmProfileClarity",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{network_id}/sm/profile/clarity/{profileId}/post/parameters/addNetworkSmProfileClarity/schema/properties/VendorConfig/` - Description turned from `The specific VendorConfig to be passed to the filtering framework, as JSON. VendorConfig should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name\n` to `The specific VendorConfig to be passed to the filtering framework, as JSON. VendorConfig should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name`",
    "messageHtml": "Description turned from <code>The specific VendorConfig to be passed to the filtering framework, as JSON. VendorConfig should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name\n</code> to <code>The specific VendorConfig to be passed to the filtering framework, as JSON. VendorConfig should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name</code>",
    "descriptionPath": "/paths//networks/{network_id}/sm/profile/clarity/{profileId}/post/parameters/addNetworkSmProfileClarity/schema/properties/VendorConfig/",
    "previousDescription": "The specific VendorConfig to be passed to the filtering framework, as JSON. VendorConfig should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name\n",
    "currentDescription": "The specific VendorConfig to be passed to the filtering framework, as JSON. VendorConfig should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{network_id}/sm/profile/clarity/{profileId}` (put) - Summary turned from `Update an existing profile containing a Cisco Clarity payload` to `updateNetworkSmProfileClarity`",
    "messageHtml": "Summary changed from <code>Update an existing profile containing a Cisco Clarity payload</code> to <code>updateNetworkSmProfileClarity</code>",
    "method": "put",
    "previousSummary": "Update an existing profile containing a Cisco Clarity payload",
    "currentSummary": "updateNetworkSmProfileClarity",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{network_id}/sm/profile/clarity/{profileId}/put/parameters/updateNetworkSmProfileClarity/schema/properties/VendorConfig/` - Description turned from `optional: The specific VendorConfig to be passed to the filtering framework, as JSON. VendorConfig should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name\n` to `optional: The specific VendorConfig to be passed to the filtering framework, as JSON. VendorConfig should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name`",
    "messageHtml": "Description turned from <code>optional: The specific VendorConfig to be passed to the filtering framework, as JSON. VendorConfig should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name\n</code> to <code>optional: The specific VendorConfig to be passed to the filtering framework, as JSON. VendorConfig should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name</code>",
    "descriptionPath": "/paths//networks/{network_id}/sm/profile/clarity/{profileId}/put/parameters/updateNetworkSmProfileClarity/schema/properties/VendorConfig/",
    "previousDescription": "optional: The specific VendorConfig to be passed to the filtering framework, as JSON. VendorConfig should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name\n",
    "currentDescription": "optional: The specific VendorConfig to be passed to the filtering framework, as JSON. VendorConfig should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{network_id}/sm/profile/clarity/{profileId}` (delete) - Summary turned from `Delete a Cisco Clarity payload. Deletes the entire profile if it's empty after removing the payload.` to `deleteNetworkSmProfileClarity`",
    "messageHtml": "Summary changed from <code>Delete a Cisco Clarity payload. Deletes the entire profile if it's empty after removing the payload.</code> to <code>deleteNetworkSmProfileClarity</code>",
    "method": "delete",
    "previousSummary": "Delete a Cisco Clarity payload. Deletes the entire profile if it's empty after removing the payload.",
    "currentSummary": "deleteNetworkSmProfileClarity",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{network_id}/sm/profile/umbrella` (post) - Summary turned from `Create a new profile containing a Cisco Umbrella payload` to `createNetworkSmProfileUmbrella`",
    "messageHtml": "Summary changed from <code>Create a new profile containing a Cisco Umbrella payload</code> to <code>createNetworkSmProfileUmbrella</code>",
    "method": "post",
    "previousSummary": "Create a new profile containing a Cisco Umbrella payload",
    "currentSummary": "createNetworkSmProfileUmbrella",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{network_id}/sm/profile/umbrella/post/parameters/createNetworkSmProfileUmbrella/schema/properties/ProviderConfiguration/` - Description turned from `The specific ProviderConfiguration to be passed to the filtering framework, as JSON. ProviderConfiguration should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name\n` to `The specific ProviderConfiguration to be passed to the filtering framework, as JSON. ProviderConfiguration should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name`",
    "messageHtml": "Description turned from <code>The specific ProviderConfiguration to be passed to the filtering framework, as JSON. ProviderConfiguration should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name\n</code> to <code>The specific ProviderConfiguration to be passed to the filtering framework, as JSON. ProviderConfiguration should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name</code>",
    "descriptionPath": "/paths//networks/{network_id}/sm/profile/umbrella/post/parameters/createNetworkSmProfileUmbrella/schema/properties/ProviderConfiguration/",
    "previousDescription": "The specific ProviderConfiguration to be passed to the filtering framework, as JSON. ProviderConfiguration should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name\n",
    "currentDescription": "The specific ProviderConfiguration to be passed to the filtering framework, as JSON. ProviderConfiguration should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{network_id}/sm/profile/umbrella/{profileId}` (get) - Summary turned from `Get details for a Cisco Umbrella payload` to `getNetworkSmProfileUmbrella`",
    "messageHtml": "Summary changed from <code>Get details for a Cisco Umbrella payload</code> to <code>getNetworkSmProfileUmbrella</code>",
    "method": "get",
    "previousSummary": "Get details for a Cisco Umbrella payload",
    "currentSummary": "getNetworkSmProfileUmbrella",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{network_id}/sm/profile/umbrella/{profileId}` (post) - Summary turned from `Add a Cisco Umbrella payload to an existing profile` to `addNetworkSmProfileUmbrella`",
    "messageHtml": "Summary changed from <code>Add a Cisco Umbrella payload to an existing profile</code> to <code>addNetworkSmProfileUmbrella</code>",
    "method": "post",
    "previousSummary": "Add a Cisco Umbrella payload to an existing profile",
    "currentSummary": "addNetworkSmProfileUmbrella",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{network_id}/sm/profile/umbrella/{profileId}/post/parameters/addNetworkSmProfileUmbrella/schema/properties/ProviderConfiguration/` - Description turned from `The specific ProviderConfiguration to be passed to the filtering framework, as JSON. ProviderConfiguration should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name\n` to `The specific ProviderConfiguration to be passed to the filtering framework, as JSON. ProviderConfiguration should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name`",
    "messageHtml": "Description turned from <code>The specific ProviderConfiguration to be passed to the filtering framework, as JSON. ProviderConfiguration should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name\n</code> to <code>The specific ProviderConfiguration to be passed to the filtering framework, as JSON. ProviderConfiguration should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name</code>",
    "descriptionPath": "/paths//networks/{network_id}/sm/profile/umbrella/{profileId}/post/parameters/addNetworkSmProfileUmbrella/schema/properties/ProviderConfiguration/",
    "previousDescription": "The specific ProviderConfiguration to be passed to the filtering framework, as JSON. ProviderConfiguration should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name\n",
    "currentDescription": "The specific ProviderConfiguration to be passed to the filtering framework, as JSON. ProviderConfiguration should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{network_id}/sm/profile/umbrella/{profileId}` (put) - Summary turned from `Update an existing profile containing a Cisco Umbrella payload` to `updateNetworkSmProfileUmbrella`",
    "messageHtml": "Summary changed from <code>Update an existing profile containing a Cisco Umbrella payload</code> to <code>updateNetworkSmProfileUmbrella</code>",
    "method": "put",
    "previousSummary": "Update an existing profile containing a Cisco Umbrella payload",
    "currentSummary": "updateNetworkSmProfileUmbrella",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{network_id}/sm/profile/umbrella/{profileId}/put/parameters/updateNetworkSmProfileUmbrella/schema/properties/ProviderConfiguration/` - Description turned from `optional: The specific ProviderConfiguration to be passed to the filtering framework, as JSON. ProviderConfiguration should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name\n` to `optional: The specific ProviderConfiguration to be passed to the filtering framework, as JSON. ProviderConfiguration should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name`",
    "messageHtml": "Description turned from <code>optional: The specific ProviderConfiguration to be passed to the filtering framework, as JSON. ProviderConfiguration should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name\n</code> to <code>optional: The specific ProviderConfiguration to be passed to the filtering framework, as JSON. ProviderConfiguration should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name</code>",
    "descriptionPath": "/paths//networks/{network_id}/sm/profile/umbrella/{profileId}/put/parameters/updateNetworkSmProfileUmbrella/schema/properties/ProviderConfiguration/",
    "previousDescription": "optional: The specific ProviderConfiguration to be passed to the filtering framework, as JSON. ProviderConfiguration should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name\n",
    "currentDescription": "optional: The specific ProviderConfiguration to be passed to the filtering framework, as JSON. ProviderConfiguration should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{network_id}/sm/profile/umbrella/{profileId}` (delete) - Summary turned from `Delete a Cisco Umbrella payload. Deletes the entire profile if it's empty after removing the payload` to `deleteNetworkSmProfileUmbrella`",
    "messageHtml": "Summary changed from <code>Delete a Cisco Umbrella payload. Deletes the entire profile if it's empty after removing the payload</code> to <code>deleteNetworkSmProfileUmbrella</code>",
    "method": "delete",
    "previousSummary": "Delete a Cisco Umbrella payload. Deletes the entire profile if it's empty after removing the payload",
    "currentSummary": "deleteNetworkSmProfileUmbrella",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{network_id}/sm/app/polaris` (get) - Summary turned from `Get details for a Cisco Polaris app if it exists` to `getNetworkSmAppPolaris`",
    "messageHtml": "Summary changed from <code>Get details for a Cisco Polaris app if it exists</code> to <code>getNetworkSmAppPolaris</code>",
    "method": "get",
    "previousSummary": "Get details for a Cisco Polaris app if it exists",
    "currentSummary": "getNetworkSmAppPolaris",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{network_id}/sm/app/polaris` (post) - Summary turned from `Create a new Polaris app` to `createNetworkSmAppPolaris`",
    "messageHtml": "Summary changed from <code>Create a new Polaris app</code> to <code>createNetworkSmAppPolaris</code>",
    "method": "post",
    "previousSummary": "Create a new Polaris app",
    "currentSummary": "createNetworkSmAppPolaris",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{network_id}/sm/app/polaris/{appId}` (put) - Summary turned from `Update an existing Polaris app` to `updateNetworkSmAppPolaris`",
    "messageHtml": "Summary changed from <code>Update an existing Polaris app</code> to <code>updateNetworkSmAppPolaris</code>",
    "method": "put",
    "previousSummary": "Update an existing Polaris app",
    "currentSummary": "updateNetworkSmAppPolaris",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{network_id}/sm/app/polaris/{appId}` (delete) - Summary turned from `Delete a Cisco Polaris app` to `deleteNetworkSmAppPolaris`",
    "messageHtml": "Summary changed from <code>Delete a Cisco Polaris app</code> to <code>deleteNetworkSmAppPolaris</code>",
    "method": "delete",
    "previousSummary": "Delete a Cisco Polaris app",
    "currentSummary": "deleteNetworkSmAppPolaris",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{network_id}/sm/devices/lock` (put) - Summary turned from `Lock a set of devices` to `lockNetworkSmDevices`",
    "messageHtml": "Summary changed from <code>Lock a set of devices</code> to <code>lockNetworkSmDevices</code>",
    "method": "put",
    "previousSummary": "Lock a set of devices",
    "currentSummary": "lockNetworkSmDevices",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{network_id}/sm/{id}/performanceHistory` (get) - Summary turned from `Return historical records of various Systems Manager client metrics for desktop devices.` to `getNetworkSmPerformanceHistory`",
    "messageHtml": "Summary changed from <code>Return historical records of various Systems Manager client metrics for desktop devices.</code> to <code>getNetworkSmPerformanceHistory</code>",
    "method": "get",
    "previousSummary": "Return historical records of various Systems Manager client metrics for desktop devices.",
    "currentSummary": "getNetworkSmPerformanceHistory",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{network_id}/sm/{id}/desktopLogs` (get) - Summary turned from `Return historical records of various Systems Manager network connection details for desktop devices.` to `getNetworkSmDesktopLogs`",
    "messageHtml": "Summary changed from <code>Return historical records of various Systems Manager network connection details for desktop devices.</code> to <code>getNetworkSmDesktopLogs</code>",
    "method": "get",
    "previousSummary": "Return historical records of various Systems Manager network connection details for desktop devices.",
    "currentSummary": "getNetworkSmDesktopLogs",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{network_id}/sm/{id}/deviceCommandLogs` (get) - Summary turned from `    Return historical records of commands sent to Systems Manager devices.\n    <p>Note that this will include the name of the Dashboard user who initiated the command if it was generated\n    by a Dashboard admin rather than the automatic behavior of the system; you may wish to filter this out\n    of any reports.</p>\n` to `getNetworkSmDeviceCommandLogs`",
    "messageHtml": "Summary changed from <code>    Return historical records of commands sent to Systems Manager devices.\n    <p>Note that this will include the name of the Dashboard user who initiated the command if it was generated\n    by a Dashboard admin rather than the automatic behavior of the system; you may wish to filter this out\n    of any reports.</p>\n</code> to <code>getNetworkSmDeviceCommandLogs</code>",
    "method": "get",
    "previousSummary": "    Return historical records of commands sent to Systems Manager devices.\n    <p>Note that this will include the name of the Dashboard user who initiated the command if it was generated\n    by a Dashboard admin rather than the automatic behavior of the system; you may wish to filter this out\n    of any reports.</p>\n",
    "currentSummary": "getNetworkSmDeviceCommandLogs",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{network_id}/sm/{id}/connectivity` (get) - Summary turned from `Returns historical connectivity data (whether a device is regularly checking in to Dashboard).` to `getNetworkSmConnectivity`",
    "messageHtml": "Summary changed from <code>Returns historical connectivity data (whether a device is regularly checking in to Dashboard).</code> to <code>getNetworkSmConnectivity</code>",
    "method": "get",
    "previousSummary": "Returns historical connectivity data (whether a device is regularly checking in to Dashboard).",
    "currentSummary": "getNetworkSmConnectivity",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{id}/splashLoginAttempts` (get) - Summary turned from `List the splash login attempts for a network` to `getNetworkSplashLoginAttempts`",
    "messageHtml": "Summary changed from <code>List the splash login attempts for a network</code> to <code>getNetworkSplashLoginAttempts</code>",
    "method": "get",
    "previousSummary": "List the splash login attempts for a network",
    "currentSummary": "getNetworkSplashLoginAttempts",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/ssids/{number}/splashSettings` (get) - Summary turned from `Display the splash page settings for the given SSID` to `getNetworkSsidSplashSettings`",
    "messageHtml": "Summary changed from <code>Display the splash page settings for the given SSID</code> to <code>getNetworkSsidSplashSettings</code>",
    "method": "get",
    "previousSummary": "Display the splash page settings for the given SSID",
    "currentSummary": "getNetworkSsidSplashSettings",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/ssids/{number}/splashSettings` (put) - Summary turned from `Modify the splash page settings for the given SSID` to `updateNetworkSsidSplashSettings`",
    "messageHtml": "Summary changed from <code>Modify the splash page settings for the given SSID</code> to <code>updateNetworkSsidSplashSettings</code>",
    "method": "put",
    "previousSummary": "Modify the splash page settings for the given SSID",
    "currentSummary": "updateNetworkSsidSplashSettings",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/ssids` (get) - Summary turned from `List the SSIDs in a network. Supports networks with access points or wireless-enabled security appliances and teleworker gateways.` to `getNetworkSsids`",
    "messageHtml": "Summary changed from <code>List the SSIDs in a network. Supports networks with access points or wireless-enabled security appliances and teleworker gateways.</code> to <code>getNetworkSsids</code>",
    "method": "get",
    "previousSummary": "List the SSIDs in a network. Supports networks with access points or wireless-enabled security appliances and teleworker gateways.",
    "currentSummary": "getNetworkSsids",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/ssids/{number}` (get) - Summary turned from `Return a single SSID` to `getNetworkSsid`",
    "messageHtml": "Summary changed from <code>Return a single SSID</code> to <code>getNetworkSsid</code>",
    "method": "get",
    "previousSummary": "Return a single SSID",
    "currentSummary": "getNetworkSsid",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/ssids/{number}` (put) - Summary turned from `Update the attributes of an SSID` to `updateNetworkSsid`",
    "messageHtml": "Summary changed from <code>Update the attributes of an SSID</code> to <code>updateNetworkSsid</code>",
    "method": "put",
    "previousSummary": "Update the attributes of an SSID",
    "currentSummary": "updateNetworkSsid",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "delete-object-property",
    "message": "`paths//networks/{networkId}/ssids/{number}/put/parameters/updateNetworkSsid/schema` - Property `radiusAttributeForGroupPolicies` Deleted",
    "messageHtml": "Property <code>radiusAttributeForGroupPolicies</code> Deleted",
    "path": "paths//networks/{networkId}/ssids/{number}/put/parameters/updateNetworkSsid/schema",
    "property": "radiusAttributeForGroupPolicies",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "delete-object-property",
    "message": "`paths//networks/{networkId}/ssids/{number}/put/parameters/updateNetworkSsid/schema` - Property `radiusOverride` Deleted",
    "messageHtml": "Property <code>radiusOverride</code> Deleted",
    "path": "paths//networks/{networkId}/ssids/{number}/put/parameters/updateNetworkSsid/schema",
    "property": "radiusOverride",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/switch/settings` (get) - Summary turned from `Returns the switch network settings` to `getNetworkSwitchSettings`",
    "messageHtml": "Summary changed from <code>Returns the switch network settings</code> to <code>getNetworkSwitchSettings</code>",
    "method": "get",
    "previousSummary": "Returns the switch network settings",
    "currentSummary": "getNetworkSwitchSettings",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/switch/settings` (put) - Summary turned from `Update switch network settings` to `updateNetworkSwitchSettings`",
    "messageHtml": "Summary changed from <code>Update switch network settings</code> to <code>updateNetworkSwitchSettings</code>",
    "method": "put",
    "previousSummary": "Update switch network settings",
    "currentSummary": "updateNetworkSwitchSettings",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/switch/settings/put/parameters/updateNetworkSwitchSettings/schema/properties/useCombinedPower/` - Description turned from `The behavior of secondary power supplies on supported devices (\"redundant\", \"combined\")` to `The use Combined Power as the default behavior of secondary power supplies on supported devices.`",
    "messageHtml": "Description turned from <code>The behavior of secondary power supplies on supported devices (\"redundant\", \"combined\")</code> to <code>The use Combined Power as the default behavior of secondary power supplies on supported devices.</code>",
    "descriptionPath": "/paths//networks/{networkId}/switch/settings/put/parameters/updateNetworkSwitchSettings/schema/properties/useCombinedPower/",
    "previousDescription": "The behavior of secondary power supplies on supported devices (\"redundant\", \"combined\")",
    "currentDescription": "The use Combined Power as the default behavior of secondary power supplies on supported devices.",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/devices/{serial}/switchPorts` (get) - Summary turned from `List the switch ports for a switch` to `getDeviceSwitchPorts`",
    "messageHtml": "Summary changed from <code>List the switch ports for a switch</code> to <code>getDeviceSwitchPorts</code>",
    "method": "get",
    "previousSummary": "List the switch ports for a switch",
    "currentSummary": "getDeviceSwitchPorts",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/devices/{serial}/switchPorts/{number}` (get) - Summary turned from `Return a switch port` to `getDeviceSwitchPort`",
    "messageHtml": "Summary changed from <code>Return a switch port</code> to <code>getDeviceSwitchPort</code>",
    "method": "get",
    "previousSummary": "Return a switch port",
    "currentSummary": "getDeviceSwitchPort",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/devices/{serial}/switchPorts/{number}` (put) - Summary turned from `Update a switch port` to `updateDeviceSwitchPort`",
    "messageHtml": "Summary changed from <code>Update a switch port</code> to <code>updateDeviceSwitchPort</code>",
    "method": "put",
    "previousSummary": "Update a switch port",
    "currentSummary": "updateDeviceSwitchPort",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/switchStacks` (get) - Summary turned from `List the switch stacks in a network` to `getNetworkSwitchStacks`",
    "messageHtml": "Summary changed from <code>List the switch stacks in a network</code> to <code>getNetworkSwitchStacks</code>",
    "method": "get",
    "previousSummary": "List the switch stacks in a network",
    "currentSummary": "getNetworkSwitchStacks",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/switchStacks` (post) - Summary turned from `Create a stack` to `createNetworkSwitchStack`",
    "messageHtml": "Summary changed from <code>Create a stack</code> to <code>createNetworkSwitchStack</code>",
    "method": "post",
    "previousSummary": "Create a stack",
    "currentSummary": "createNetworkSwitchStack",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/switchStacks/{switchStackId}` (get) - Summary turned from `Show a switch stack` to `getNetworkSwitchStack`",
    "messageHtml": "Summary changed from <code>Show a switch stack</code> to <code>getNetworkSwitchStack</code>",
    "method": "get",
    "previousSummary": "Show a switch stack",
    "currentSummary": "getNetworkSwitchStack",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/switchStacks/{switchStackId}` (delete) - Summary turned from `Delete a stack` to `deleteNetworkSwitchStack`",
    "messageHtml": "Summary changed from <code>Delete a stack</code> to <code>deleteNetworkSwitchStack</code>",
    "method": "delete",
    "previousSummary": "Delete a stack",
    "currentSummary": "deleteNetworkSwitchStack",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/switchStacks/{switchStackId}/add` (post) - Summary turned from `Add a switch to a stack` to `addNetworkSwitchStack`",
    "messageHtml": "Summary changed from <code>Add a switch to a stack</code> to <code>addNetworkSwitchStack</code>",
    "method": "post",
    "previousSummary": "Add a switch to a stack",
    "currentSummary": "addNetworkSwitchStack",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkID}/switchStacks/{switchStackId}/remove` (post) - Summary turned from `Remove a switch from a stack` to `removeNetworkSwitchStack`",
    "messageHtml": "Summary changed from <code>Remove a switch from a stack</code> to <code>removeNetworkSwitchStack</code>",
    "method": "post",
    "previousSummary": "Remove a switch from a stack",
    "currentSummary": "removeNetworkSwitchStack",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/syslogServers` (get) - Summary turned from `List the syslog servers for a network` to `getNetworkSyslogServers`",
    "messageHtml": "Summary changed from <code>List the syslog servers for a network</code> to <code>getNetworkSyslogServers</code>",
    "method": "get",
    "previousSummary": "List the syslog servers for a network",
    "currentSummary": "getNetworkSyslogServers",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/syslogServers` (put) - Summary turned from `Update the syslog servers for a network` to `updateNetworkSyslogServers`",
    "messageHtml": "Summary changed from <code>Update the syslog servers for a network</code> to <code>updateNetworkSyslogServers</code>",
    "method": "put",
    "previousSummary": "Update the syslog servers for a network",
    "currentSummary": "updateNetworkSyslogServers",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/trafficShaping` (get) - Summary turned from `Display the traffic shaping settings for an MX network` to `getNetworkTrafficShaping`",
    "messageHtml": "Summary changed from <code>Display the traffic shaping settings for an MX network</code> to <code>getNetworkTrafficShaping</code>",
    "method": "get",
    "previousSummary": "Display the traffic shaping settings for an MX network",
    "currentSummary": "getNetworkTrafficShaping",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/trafficShaping` (put) - Summary turned from `Update the traffic shaping settings for an MX network` to `updateNetworkTrafficShaping`",
    "messageHtml": "Summary changed from <code>Update the traffic shaping settings for an MX network</code> to <code>updateNetworkTrafficShaping</code>",
    "method": "put",
    "previousSummary": "Update the traffic shaping settings for an MX network",
    "currentSummary": "updateNetworkTrafficShaping",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/trafficShaping/put/parameters/updateNetworkTrafficShaping/schema/properties/defaultRulesEnabled/` - Description turned from `    Whether default traffic shaping rules are enabled (true) or disabled (false).\n    There are 4 default rules, which can\n    be seen on your network's traffic shaping page. Note that default rules\n    count against the rule limit of 8.\n` to `Whether default traffic shaping rules are enabled (true) or disabled (false).\n    There are 4 default rules, which can\n    be seen on your network's traffic shaping page. Note that default rules\n    count against the rule limit of 8.`",
    "messageHtml": "Description turned from <code>    Whether default traffic shaping rules are enabled (true) or disabled (false).\n    There are 4 default rules, which can\n    be seen on your network's traffic shaping page. Note that default rules\n    count against the rule limit of 8.\n</code> to <code>Whether default traffic shaping rules are enabled (true) or disabled (false).\n    There are 4 default rules, which can\n    be seen on your network's traffic shaping page. Note that default rules\n    count against the rule limit of 8.</code>",
    "descriptionPath": "/paths//networks/{networkId}/trafficShaping/put/parameters/updateNetworkTrafficShaping/schema/properties/defaultRulesEnabled/",
    "previousDescription": "    Whether default traffic shaping rules are enabled (true) or disabled (false).\n    There are 4 default rules, which can\n    be seen on your network's traffic shaping page. Note that default rules\n    count against the rule limit of 8.\n",
    "currentDescription": "Whether default traffic shaping rules are enabled (true) or disabled (false).\n    There are 4 default rules, which can\n    be seen on your network's traffic shaping page. Note that default rules\n    count against the rule limit of 8.",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/trafficShaping/put/parameters/updateNetworkTrafficShaping/schema/properties/rules/items/properties/definitions/items/properties/value/` - Description turned from `    If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).\n` to `If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).`",
    "messageHtml": "Description turned from <code>    If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).\n</code> to <code>If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).</code>",
    "descriptionPath": "/paths//networks/{networkId}/trafficShaping/put/parameters/updateNetworkTrafficShaping/schema/properties/rules/items/properties/definitions/items/properties/value/",
    "previousDescription": "    If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).\n",
    "currentDescription": "If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/trafficShaping/put/parameters/updateNetworkTrafficShaping/schema/properties/rules/items/properties/definitions/` - Description turned from `    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\n` to `A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.`",
    "messageHtml": "Description turned from <code>    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\n</code> to <code>A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.</code>",
    "descriptionPath": "/paths//networks/{networkId}/trafficShaping/put/parameters/updateNetworkTrafficShaping/schema/properties/rules/items/properties/definitions/",
    "previousDescription": "    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\n",
    "currentDescription": "A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/trafficShaping/put/parameters/updateNetworkTrafficShaping/schema/properties/rules/items/properties/perClientBandwidthLimits/` - Description turned from `    An object describing the bandwidth settings for your rule.\n` to `An object describing the bandwidth settings for your rule.`",
    "messageHtml": "Description turned from <code>    An object describing the bandwidth settings for your rule.\n</code> to <code>An object describing the bandwidth settings for your rule.</code>",
    "descriptionPath": "/paths//networks/{networkId}/trafficShaping/put/parameters/updateNetworkTrafficShaping/schema/properties/rules/items/properties/perClientBandwidthLimits/",
    "previousDescription": "    An object describing the bandwidth settings for your rule.\n",
    "currentDescription": "An object describing the bandwidth settings for your rule.",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/trafficShaping/put/parameters/updateNetworkTrafficShaping/schema/properties/rules/items/properties/dscpTagValue/` - Description turned from `    The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.\n` to `The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.`",
    "messageHtml": "Description turned from <code>    The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.\n</code> to <code>The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.</code>",
    "descriptionPath": "/paths//networks/{networkId}/trafficShaping/put/parameters/updateNetworkTrafficShaping/schema/properties/rules/items/properties/dscpTagValue/",
    "previousDescription": "    The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.\n",
    "currentDescription": "The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/trafficShaping/put/parameters/updateNetworkTrafficShaping/schema/properties/rules/items/properties/priority/` - Description turned from `    A string, indicating the priority level for packets bound to your rule.\n    Can be 'low', 'normal' or 'high'.\n` to `A string, indicating the priority level for packets bound to your rule.\n    Can be 'low', 'normal' or 'high'.`",
    "messageHtml": "Description turned from <code>    A string, indicating the priority level for packets bound to your rule.\n    Can be 'low', 'normal' or 'high'.\n</code> to <code>A string, indicating the priority level for packets bound to your rule.\n    Can be 'low', 'normal' or 'high'.</code>",
    "descriptionPath": "/paths//networks/{networkId}/trafficShaping/put/parameters/updateNetworkTrafficShaping/schema/properties/rules/items/properties/priority/",
    "previousDescription": "    A string, indicating the priority level for packets bound to your rule.\n    Can be 'low', 'normal' or 'high'.\n",
    "currentDescription": "A string, indicating the priority level for packets bound to your rule.\n    Can be 'low', 'normal' or 'high'.",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/trafficShaping/put/parameters/updateNetworkTrafficShaping/schema/properties/rules/` - Description turned from `    An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.\n` to `An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.`",
    "messageHtml": "Description turned from <code>    An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.\n</code> to <code>An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.</code>",
    "descriptionPath": "/paths//networks/{networkId}/trafficShaping/put/parameters/updateNetworkTrafficShaping/schema/properties/rules/",
    "previousDescription": "    An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.\n",
    "currentDescription": "An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/ssids/{number}/trafficShaping` (get) - Summary turned from `Display the traffic shaping settings for a SSID on an MR network` to `getNetworkSsidTrafficShaping`",
    "messageHtml": "Summary changed from <code>Display the traffic shaping settings for a SSID on an MR network</code> to <code>getNetworkSsidTrafficShaping</code>",
    "method": "get",
    "previousSummary": "Display the traffic shaping settings for a SSID on an MR network",
    "currentSummary": "getNetworkSsidTrafficShaping",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/ssids/{number}/trafficShaping` (put) - Summary turned from `Update the traffic shaping settings for an SSID on an MR network` to `updateNetworkSsidTrafficShaping`",
    "messageHtml": "Summary changed from <code>Update the traffic shaping settings for an SSID on an MR network</code> to <code>updateNetworkSsidTrafficShaping</code>",
    "method": "put",
    "previousSummary": "Update the traffic shaping settings for an SSID on an MR network",
    "currentSummary": "updateNetworkSsidTrafficShaping",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/ssids/{number}/trafficShaping/put/parameters/updateNetworkSsidTrafficShaping/schema/properties/defaultRulesEnabled/` - Description turned from `    Whether default traffic shaping rules are enabled (true) or disabled (false).\n    There are 4 default rules, which can\n    be seen on your network's traffic shaping page. Note that default rules\n    count against the rule limit of 8.\n` to `Whether default traffic shaping rules are enabled (true) or disabled (false).\n    There are 4 default rules, which can\n    be seen on your network's traffic shaping page. Note that default rules\n    count against the rule limit of 8.`",
    "messageHtml": "Description turned from <code>    Whether default traffic shaping rules are enabled (true) or disabled (false).\n    There are 4 default rules, which can\n    be seen on your network's traffic shaping page. Note that default rules\n    count against the rule limit of 8.\n</code> to <code>Whether default traffic shaping rules are enabled (true) or disabled (false).\n    There are 4 default rules, which can\n    be seen on your network's traffic shaping page. Note that default rules\n    count against the rule limit of 8.</code>",
    "descriptionPath": "/paths//networks/{networkId}/ssids/{number}/trafficShaping/put/parameters/updateNetworkSsidTrafficShaping/schema/properties/defaultRulesEnabled/",
    "previousDescription": "    Whether default traffic shaping rules are enabled (true) or disabled (false).\n    There are 4 default rules, which can\n    be seen on your network's traffic shaping page. Note that default rules\n    count against the rule limit of 8.\n",
    "currentDescription": "Whether default traffic shaping rules are enabled (true) or disabled (false).\n    There are 4 default rules, which can\n    be seen on your network's traffic shaping page. Note that default rules\n    count against the rule limit of 8.",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/ssids/{number}/trafficShaping/put/parameters/updateNetworkSsidTrafficShaping/schema/properties/rules/items/properties/definitions/items/properties/value/` - Description turned from `    If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).\n` to `If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).`",
    "messageHtml": "Description turned from <code>    If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).\n</code> to <code>If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).</code>",
    "descriptionPath": "/paths//networks/{networkId}/ssids/{number}/trafficShaping/put/parameters/updateNetworkSsidTrafficShaping/schema/properties/rules/items/properties/definitions/items/properties/value/",
    "previousDescription": "    If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).\n",
    "currentDescription": "If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/ssids/{number}/trafficShaping/put/parameters/updateNetworkSsidTrafficShaping/schema/properties/rules/items/properties/definitions/` - Description turned from `    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\n` to `A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.`",
    "messageHtml": "Description turned from <code>    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\n</code> to <code>A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.</code>",
    "descriptionPath": "/paths//networks/{networkId}/ssids/{number}/trafficShaping/put/parameters/updateNetworkSsidTrafficShaping/schema/properties/rules/items/properties/definitions/",
    "previousDescription": "    A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.\n",
    "currentDescription": "A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/ssids/{number}/trafficShaping/put/parameters/updateNetworkSsidTrafficShaping/schema/properties/rules/items/properties/perClientBandwidthLimits/` - Description turned from `    An object describing the bandwidth settings for your rule.\n` to `An object describing the bandwidth settings for your rule.`",
    "messageHtml": "Description turned from <code>    An object describing the bandwidth settings for your rule.\n</code> to <code>An object describing the bandwidth settings for your rule.</code>",
    "descriptionPath": "/paths//networks/{networkId}/ssids/{number}/trafficShaping/put/parameters/updateNetworkSsidTrafficShaping/schema/properties/rules/items/properties/perClientBandwidthLimits/",
    "previousDescription": "    An object describing the bandwidth settings for your rule.\n",
    "currentDescription": "An object describing the bandwidth settings for your rule.",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/ssids/{number}/trafficShaping/put/parameters/updateNetworkSsidTrafficShaping/schema/properties/rules/items/properties/dscpTagValue/` - Description turned from `    The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.\n` to `The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.`",
    "messageHtml": "Description turned from <code>    The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.\n</code> to <code>The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.</code>",
    "descriptionPath": "/paths//networks/{networkId}/ssids/{number}/trafficShaping/put/parameters/updateNetworkSsidTrafficShaping/schema/properties/rules/items/properties/dscpTagValue/",
    "previousDescription": "    The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.\n",
    "currentDescription": "The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/ssids/{number}/trafficShaping/put/parameters/updateNetworkSsidTrafficShaping/schema/properties/rules/items/properties/pcpTagValue/` - Description turned from `    The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).\n    null means 'Do not set PCP tag'.\n` to `The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).\n    null means 'Do not set PCP tag'.`",
    "messageHtml": "Description turned from <code>    The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).\n    null means 'Do not set PCP tag'.\n</code> to <code>The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).\n    null means 'Do not set PCP tag'.</code>",
    "descriptionPath": "/paths//networks/{networkId}/ssids/{number}/trafficShaping/put/parameters/updateNetworkSsidTrafficShaping/schema/properties/rules/items/properties/pcpTagValue/",
    "previousDescription": "    The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).\n    null means 'Do not set PCP tag'.\n",
    "currentDescription": "The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).\n    null means 'Do not set PCP tag'.",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/ssids/{number}/trafficShaping/put/parameters/updateNetworkSsidTrafficShaping/schema/properties/rules/` - Description turned from `    An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.\n` to `An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.`",
    "messageHtml": "Description turned from <code>    An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.\n</code> to <code>An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.</code>",
    "descriptionPath": "/paths//networks/{networkId}/ssids/{number}/trafficShaping/put/parameters/updateNetworkSsidTrafficShaping/schema/properties/rules/",
    "previousDescription": "    An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.\n",
    "currentDescription": "An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/trafficShaping/dscpTaggingOptions` (get) - Summary turned from `Returns the available DSCP tagging options for your traffic shaping rules.` to `getNetworkTrafficShapingDscpTaggingOptions`",
    "messageHtml": "Summary changed from <code>Returns the available DSCP tagging options for your traffic shaping rules.</code> to <code>getNetworkTrafficShapingDscpTaggingOptions</code>",
    "method": "get",
    "previousSummary": "Returns the available DSCP tagging options for your traffic shaping rules.",
    "currentSummary": "getNetworkTrafficShapingDscpTaggingOptions",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/trafficShaping/applicationCategories` (get) - Summary turned from `Returns the application categories for traffic shaping rules.` to `getNetworkTrafficShapingApplicationCategories`",
    "messageHtml": "Summary changed from <code>Returns the application categories for traffic shaping rules.</code> to <code>getNetworkTrafficShapingApplicationCategories</code>",
    "method": "get",
    "previousSummary": "Returns the application categories for traffic shaping rules.",
    "currentSummary": "getNetworkTrafficShapingApplicationCategories",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/organizations/{organizationId}/webhookLogs` (get) - Summary turned from `Return the log of webhook POSTs sent` to `getOrganizationWebhookLogs`",
    "messageHtml": "Summary changed from <code>Return the log of webhook POSTs sent</code> to <code>getOrganizationWebhookLogs</code>",
    "method": "get",
    "previousSummary": "Return the log of webhook POSTs sent",
    "currentSummary": "getOrganizationWebhookLogs",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/contentFiltering/categories` (get) - Summary turned from `List all available content filtering categories for an MX network` to `getNetworkContentFilteringCategories`",
    "messageHtml": "Summary changed from <code>List all available content filtering categories for an MX network</code> to <code>getNetworkContentFilteringCategories</code>",
    "method": "get",
    "previousSummary": "List all available content filtering categories for an MX network",
    "currentSummary": "getNetworkContentFilteringCategories",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/contentFiltering` (get) - Summary turned from `Return the content filtering settings for an MX network` to `getNetworkContentFiltering`",
    "messageHtml": "Summary changed from <code>Return the content filtering settings for an MX network</code> to <code>getNetworkContentFiltering</code>",
    "method": "get",
    "previousSummary": "Return the content filtering settings for an MX network",
    "currentSummary": "getNetworkContentFiltering",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/contentFiltering` (put) - Summary turned from `Update the content filtering settings for an MX network` to `updateNetworkContentFiltering`",
    "messageHtml": "Summary changed from <code>Update the content filtering settings for an MX network</code> to <code>updateNetworkContentFiltering</code>",
    "method": "put",
    "previousSummary": "Update the content filtering settings for an MX network",
    "currentSummary": "updateNetworkContentFiltering",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/firewalledServices` (get) - Summary turned from `List the appliance services and their accessibility rules` to `getNetworkFirewalledServices`",
    "messageHtml": "Summary changed from <code>List the appliance services and their accessibility rules</code> to <code>getNetworkFirewalledServices</code>",
    "method": "get",
    "previousSummary": "List the appliance services and their accessibility rules",
    "currentSummary": "getNetworkFirewalledServices",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/firewalledServices/{service}` (get) - Summary turned from `Return the accessibility settings of the given service ('ICMP', 'web', or 'SNMP')` to `getNetworkFirewalledService`",
    "messageHtml": "Summary changed from <code>Return the accessibility settings of the given service ('ICMP', 'web', or 'SNMP')</code> to <code>getNetworkFirewalledService</code>",
    "method": "get",
    "previousSummary": "Return the accessibility settings of the given service ('ICMP', 'web', or 'SNMP')",
    "currentSummary": "getNetworkFirewalledService",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/firewalledServices/{service}` (put) - Summary turned from `Updates the accessibility settings for the given service ('ICMP', 'web', or 'SNMP')` to `updateNetworkFirewalledService`",
    "messageHtml": "Summary changed from <code>Updates the accessibility settings for the given service ('ICMP', 'web', or 'SNMP')</code> to <code>updateNetworkFirewalledService</code>",
    "method": "put",
    "previousSummary": "Updates the accessibility settings for the given service ('ICMP', 'web', or 'SNMP')",
    "currentSummary": "updateNetworkFirewalledService",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/oneToManyNatRules` (get) - Summary turned from `Return the 1:Many NAT mapping rules for an MX network` to `getNetworkOneToManyNatRules`",
    "messageHtml": "Summary changed from <code>Return the 1:Many NAT mapping rules for an MX network</code> to <code>getNetworkOneToManyNatRules</code>",
    "method": "get",
    "previousSummary": "Return the 1:Many NAT mapping rules for an MX network",
    "currentSummary": "getNetworkOneToManyNatRules",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/oneToManyNatRules` (put) - Summary turned from `Set the 1:Many NAT mapping rules for an MX network` to `updateNetworkOneToManyNatRules`",
    "messageHtml": "Summary changed from <code>Set the 1:Many NAT mapping rules for an MX network</code> to <code>updateNetworkOneToManyNatRules</code>",
    "method": "put",
    "previousSummary": "Set the 1:Many NAT mapping rules for an MX network",
    "currentSummary": "updateNetworkOneToManyNatRules",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/oneToOneNatRules` (get) - Summary turned from `Return the 1:1 NAT mapping rules for an MX network` to `getNetworkOneToOneNatRules`",
    "messageHtml": "Summary changed from <code>Return the 1:1 NAT mapping rules for an MX network</code> to <code>getNetworkOneToOneNatRules</code>",
    "method": "get",
    "previousSummary": "Return the 1:1 NAT mapping rules for an MX network",
    "currentSummary": "getNetworkOneToOneNatRules",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/oneToOneNatRules` (put) - Summary turned from `Set the 1:1 NAT mapping rules for an MX network` to `updateNetworkOneToOneNatRules`",
    "messageHtml": "Summary changed from <code>Set the 1:1 NAT mapping rules for an MX network</code> to <code>updateNetworkOneToOneNatRules</code>",
    "method": "put",
    "previousSummary": "Set the 1:1 NAT mapping rules for an MX network",
    "currentSummary": "updateNetworkOneToOneNatRules",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/portForwardingRules` (get) - Summary turned from `Return the port forwarding rules for an MX network` to `getNetworkPortForwardingRules`",
    "messageHtml": "Summary changed from <code>Return the port forwarding rules for an MX network</code> to <code>getNetworkPortForwardingRules</code>",
    "method": "get",
    "previousSummary": "Return the port forwarding rules for an MX network",
    "currentSummary": "getNetworkPortForwardingRules",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/portForwardingRules` (put) - Summary turned from `Update the port forwarding rules for an MX network` to `updateNetworkPortForwardingRules`",
    "messageHtml": "Summary changed from <code>Update the port forwarding rules for an MX network</code> to <code>updateNetworkPortForwardingRules</code>",
    "method": "put",
    "previousSummary": "Update the port forwarding rules for an MX network",
    "currentSummary": "updateNetworkPortForwardingRules",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/staticRoutes` (get) - Summary turned from `List the static routes for this network` to `getNetworkStaticRoutes`",
    "messageHtml": "Summary changed from <code>List the static routes for this network</code> to <code>getNetworkStaticRoutes</code>",
    "method": "get",
    "previousSummary": "List the static routes for this network",
    "currentSummary": "getNetworkStaticRoutes",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/staticRoutes` (post) - Summary turned from `Add a static route` to `createNetworkStaticRoute`",
    "messageHtml": "Summary changed from <code>Add a static route</code> to <code>createNetworkStaticRoute</code>",
    "method": "post",
    "previousSummary": "Add a static route",
    "currentSummary": "createNetworkStaticRoute",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/staticRoutes/{srId}` (get) - Summary turned from `Return a static route` to `getNetworkStaticRoute`",
    "messageHtml": "Summary changed from <code>Return a static route</code> to <code>getNetworkStaticRoute</code>",
    "method": "get",
    "previousSummary": "Return a static route",
    "currentSummary": "getNetworkStaticRoute",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/staticRoutes/{srId}` (put) - Summary turned from `Update a static route` to `updateNetworkStaticRoute`",
    "messageHtml": "Summary changed from <code>Update a static route</code> to <code>updateNetworkStaticRoute</code>",
    "method": "put",
    "previousSummary": "Update a static route",
    "currentSummary": "updateNetworkStaticRoute",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/staticRoutes/{srId}` (delete) - Summary turned from `Delete a static route from a network` to `deleteNetworkStaticRoute`",
    "messageHtml": "Summary changed from <code>Delete a static route from a network</code> to <code>deleteNetworkStaticRoute</code>",
    "method": "delete",
    "previousSummary": "Delete a static route from a network",
    "currentSummary": "deleteNetworkStaticRoute",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/uplinkSettings` (get) - Summary turned from `Returns the uplink settings for your MX network.` to `getNetworkUplinkSettings`",
    "messageHtml": "Summary changed from <code>Returns the uplink settings for your MX network.</code> to <code>getNetworkUplinkSettings</code>",
    "method": "get",
    "previousSummary": "Returns the uplink settings for your MX network.",
    "currentSummary": "getNetworkUplinkSettings",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/uplinkSettings` (put) - Summary turned from `Updates the uplink settings for your MX network.` to `updateNetworkUplinkSettings`",
    "messageHtml": "Summary changed from <code>Updates the uplink settings for your MX network.</code> to <code>updateNetworkUplinkSettings</code>",
    "method": "put",
    "previousSummary": "Updates the uplink settings for your MX network.",
    "currentSummary": "updateNetworkUplinkSettings",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/vlans` (get) - Summary turned from `List the VLANs for this network` to `getNetworkVlans`",
    "messageHtml": "Summary changed from <code>List the VLANs for this network</code> to <code>getNetworkVlans</code>",
    "method": "get",
    "previousSummary": "List the VLANs for this network",
    "currentSummary": "getNetworkVlans",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/vlans/get/` - Description turned from `List the VLANs for this network` to `List the VLANs for an MX network`",
    "messageHtml": "Description turned from <code>List the VLANs for this network</code> to <code>List the VLANs for an MX network</code>",
    "descriptionPath": "/paths//networks/{networkId}/vlans/get/",
    "previousDescription": "List the VLANs for this network",
    "currentDescription": "List the VLANs for an MX network",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/vlans` (post) - Summary turned from `Add a VLAN` to `createNetworkVlan`",
    "messageHtml": "Summary changed from <code>Add a VLAN</code> to <code>createNetworkVlan</code>",
    "method": "post",
    "previousSummary": "Add a VLAN",
    "currentSummary": "createNetworkVlan",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/vlans/{vlanId}` (get) - Summary turned from `Return a VLAN` to `getNetworkVlan`",
    "messageHtml": "Summary changed from <code>Return a VLAN</code> to <code>getNetworkVlan</code>",
    "method": "get",
    "previousSummary": "Return a VLAN",
    "currentSummary": "getNetworkVlan",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/vlans/{vlanId}` (put) - Summary turned from `Update a VLAN` to `updateNetworkVlan`",
    "messageHtml": "Summary changed from <code>Update a VLAN</code> to <code>updateNetworkVlan</code>",
    "method": "put",
    "previousSummary": "Update a VLAN",
    "currentSummary": "updateNetworkVlan",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/vlans/{vlanId}` (delete) - Summary turned from `Delete a VLAN from a network` to `deleteNetworkVlan`",
    "messageHtml": "Summary changed from <code>Delete a VLAN from a network</code> to <code>deleteNetworkVlan</code>",
    "method": "delete",
    "previousSummary": "Delete a VLAN from a network",
    "currentSummary": "deleteNetworkVlan",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/vlansEnabledState` (get) - Summary turned from `Returns the enabled status of VLANs for the network` to `getNetworkVlansEnabledState`",
    "messageHtml": "Summary changed from <code>Returns the enabled status of VLANs for the network</code> to <code>getNetworkVlansEnabledState</code>",
    "method": "get",
    "previousSummary": "Returns the enabled status of VLANs for the network",
    "currentSummary": "getNetworkVlansEnabledState",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/vlansEnabledState` (put) - Summary turned from `Enable/Disable VLANs for the given network` to `updateNetworkVlansEnabledState`",
    "messageHtml": "Summary changed from <code>Enable/Disable VLANs for the given network</code> to <code>updateNetworkVlansEnabledState</code>",
    "method": "put",
    "previousSummary": "Enable/Disable VLANs for the given network",
    "currentSummary": "updateNetworkVlansEnabledState",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/connectionStats` (get) - Summary turned from `Aggregated connectivity info for this network` to `getNetworkConnectionStats`",
    "messageHtml": "Summary changed from <code>Aggregated connectivity info for this network</code> to <code>getNetworkConnectionStats</code>",
    "method": "get",
    "previousSummary": "Aggregated connectivity info for this network",
    "currentSummary": "getNetworkConnectionStats",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/devices/connectionStats` (get) - Summary turned from `Aggregated connectivity info for this network, grouped by node` to `getNetworkDevicesConnectionStats`",
    "messageHtml": "Summary changed from <code>Aggregated connectivity info for this network, grouped by node</code> to <code>getNetworkDevicesConnectionStats</code>",
    "method": "get",
    "previousSummary": "Aggregated connectivity info for this network, grouped by node",
    "currentSummary": "getNetworkDevicesConnectionStats",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/devices/{serial}/connectionStats` (get) - Summary turned from `Aggregated connectivity info for a given AP on this network` to `getNetworkDeviceConnectionStats`",
    "messageHtml": "Summary changed from <code>Aggregated connectivity info for a given AP on this network</code> to <code>getNetworkDeviceConnectionStats</code>",
    "method": "get",
    "previousSummary": "Aggregated connectivity info for a given AP on this network",
    "currentSummary": "getNetworkDeviceConnectionStats",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/clients/connectionStats` (get) - Summary turned from `Aggregated connectivity info for this network, grouped by clients` to `getNetworkClientsConnectionStats`",
    "messageHtml": "Summary changed from <code>Aggregated connectivity info for this network, grouped by clients</code> to <code>getNetworkClientsConnectionStats</code>",
    "method": "get",
    "previousSummary": "Aggregated connectivity info for this network, grouped by clients",
    "currentSummary": "getNetworkClientsConnectionStats",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/clients/{clientId}/connectionStats` (get) - Summary turned from `Aggregated connectivity info for a given client on this network` to `getNetworkClientConnectionStats`",
    "messageHtml": "Summary changed from <code>Aggregated connectivity info for a given client on this network</code> to <code>getNetworkClientConnectionStats</code>",
    "method": "get",
    "previousSummary": "Aggregated connectivity info for a given client on this network",
    "currentSummary": "getNetworkClientConnectionStats",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/clients/{clientId}/connectionStats/get/` - Description turned from `Aggregated connectivity info for a given client on this network` to `Aggregated connectivity info for a given client on this network. Clients are identified by their MAC.`",
    "messageHtml": "Description turned from <code>Aggregated connectivity info for a given client on this network</code> to <code>Aggregated connectivity info for a given client on this network. Clients are identified by their MAC.</code>",
    "descriptionPath": "/paths//networks/{networkId}/clients/{clientId}/connectionStats/get/",
    "previousDescription": "Aggregated connectivity info for a given client on this network",
    "currentDescription": "Aggregated connectivity info for a given client on this network. Clients are identified by their MAC.",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/latencyStats` (get) - Summary turned from `Aggregated latency info for this network` to `getNetworkLatencyStats`",
    "messageHtml": "Summary changed from <code>Aggregated latency info for this network</code> to <code>getNetworkLatencyStats</code>",
    "method": "get",
    "previousSummary": "Aggregated latency info for this network",
    "currentSummary": "getNetworkLatencyStats",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/devices/latencyStats` (get) - Summary turned from `Aggregated latency info for this network, grouped by node` to `getNetworkDevicesLatencyStats`",
    "messageHtml": "Summary changed from <code>Aggregated latency info for this network, grouped by node</code> to <code>getNetworkDevicesLatencyStats</code>",
    "method": "get",
    "previousSummary": "Aggregated latency info for this network, grouped by node",
    "currentSummary": "getNetworkDevicesLatencyStats",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/devices/{serial}/latencyStats` (get) - Summary turned from `Aggregated latency info for a given AP on this network` to `getNetworkDeviceLatencyStats`",
    "messageHtml": "Summary changed from <code>Aggregated latency info for a given AP on this network</code> to <code>getNetworkDeviceLatencyStats</code>",
    "method": "get",
    "previousSummary": "Aggregated latency info for a given AP on this network",
    "currentSummary": "getNetworkDeviceLatencyStats",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/clients/latencyStats` (get) - Summary turned from `Aggregated latency info for this network, grouped by clients` to `getNetworkClientsLatencyStats`",
    "messageHtml": "Summary changed from <code>Aggregated latency info for this network, grouped by clients</code> to <code>getNetworkClientsLatencyStats</code>",
    "method": "get",
    "previousSummary": "Aggregated latency info for this network, grouped by clients",
    "currentSummary": "getNetworkClientsLatencyStats",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/clients/{clientId}/latencyStats` (get) - Summary turned from `Aggregated latency info for a given client on this network` to `getNetworkClientLatencyStats`",
    "messageHtml": "Summary changed from <code>Aggregated latency info for a given client on this network</code> to <code>getNetworkClientLatencyStats</code>",
    "method": "get",
    "previousSummary": "Aggregated latency info for a given client on this network",
    "currentSummary": "getNetworkClientLatencyStats",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/clients/{clientId}/latencyStats/get/` - Description turned from `Aggregated latency info for a given client on this network` to `Aggregated latency info for a given client on this network. Clients are identified by their MAC.`",
    "messageHtml": "Description turned from <code>Aggregated latency info for a given client on this network</code> to <code>Aggregated latency info for a given client on this network. Clients are identified by their MAC.</code>",
    "descriptionPath": "/paths//networks/{networkId}/clients/{clientId}/latencyStats/get/",
    "previousDescription": "Aggregated latency info for a given client on this network",
    "currentDescription": "Aggregated latency info for a given client on this network. Clients are identified by their MAC.",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-summary",
    "message": "`/networks/{networkId}/failedConnections` (get) - Summary turned from `List of all failed client connection events on this network in a given time range` to `getNetworkFailedConnections`",
    "messageHtml": "Summary changed from <code>List of all failed client connection events on this network in a given time range</code> to <code>getNetworkFailedConnections</code>",
    "method": "get",
    "previousSummary": "List of all failed client connection events on this network in a given time range",
    "currentSummary": "getNetworkFailedConnections",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "edit-description",
    "message": "`/paths//networks/{networkId}/failedConnections/get/parameters/clientId/` - Description turned from `Filter by client` to `Filter by client MAC`",
    "messageHtml": "Description turned from <code>Filter by client</code> to <code>Filter by client MAC</code>",
    "descriptionPath": "/paths//networks/{networkId}/failedConnections/get/parameters/clientId/",
    "previousDescription": "Filter by client",
    "currentDescription": "Filter by client MAC",
    "type": "infos",
    "name": "Changes"
  },
  {
    "ruleId": "add-path",
    "message": "`/networks/{networkId}/bluetoothClients/{bluetoothClientId}` - Added",
    "messageHtml": "Path Added",
    "path": "/networks/{networkId}/bluetoothClients/{bluetoothClientId}",
    "type": "infos",
    "name": "Changes",
    "apiDetails": {
      "get": {
        "description": "Return a Bluetooth client. Bluetooth clients can be identified by their ID or their MAC.",
        "summary": "getNetworkBluetoothClient",
        "tags": [
          "Bluetooth clients"
        ],
        "operationId": "NetworksBluetoothClientsByNetworkIdAndBluetoothClientIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "bluetoothClientId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "includeConnectivityHistory",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Include the connectivity history for this client"
          },
          {
            "name": "connectivityHistoryTimespan",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The timespan, in seconds, for the connectivityHistory data. By default 1 day, 86400, will be used."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "text/plain": "{\r\n  \"mac\": \"00:11:22:33:44:55\",\r\n  \"networkId\": \"N_24329156\"\r\n}"
            },
            "headers": {}
          }
        }
      }
    }
  },
  {
    "ruleId": "add-path",
    "message": "`/networks/{networkId}/clients/{clientId}/latencyHistory` - Added",
    "messageHtml": "Path Added",
    "path": "/networks/{networkId}/clients/{clientId}/latencyHistory",
    "type": "infos",
    "name": "Changes",
    "apiDetails": {
      "get": {
        "description": "Return the latency history for a client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP. The latency data is from a sample of 2% of packets and is grouped into 4 traffic categories: background, best effort, video, voice. Within these categories the sampled packet counters are bucketed by latency in milliseconds.",
        "summary": "getNetworkClientLatencyHistory",
        "tags": [
          "Clients"
        ],
        "operationId": "NetworksClientsLatencyHistoryByNetworkIdAndClientIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "t0",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 791 days from today."
          },
          {
            "name": "t1",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The end of the timespan for the data. t1 can be a maximum of 791 days after t0."
          },
          {
            "name": "timespan",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 791 days. The default is 1 day."
          },
          {
            "name": "resolution",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The time resolution in seconds for returned data. The valid resolutions are: 86400. The default is 86400."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "text/plain": "[\r\n  {\r\n    \"t0\": 1550534400,\r\n    \"t1\": 1550620800,\r\n    \"latencyBinsByCategory\": {\r\n      \"backgroundTraffic\": {\r\n        \"0.5\": 41750,\r\n        \"1.0\": 21552,\r\n        \"2.0\": 59940,\r\n        \"4.0\": 146622,\r\n        \"8.0\": 57354,\r\n        \"16.0\": 0,\r\n        \"32.0\": 9954,\r\n        \"64.0\": 0,\r\n        \"128.0\": 0,\r\n        \"256.0\": 1896,\r\n        \"512.0\": 0,\r\n        \"1024.0\": 0,\r\n        \"2048.0\": 0\r\n      },\r\n      \"bestEffortTraffic\": {\r\n        \"0.5\": 1840899,\r\n        \"1.0\": 1644506,\r\n        \"2.0\": 629958,\r\n        \"4.0\": 449564,\r\n        \"8.0\": 2009658,\r\n        \"16.0\": 1329568,\r\n        \"32.0\": 282168,\r\n        \"64.0\": 97573,\r\n        \"128.0\": 191977,\r\n        \"256.0\": 30560,\r\n        \"512.0\": 26032,\r\n        \"1024.0\": 4943,\r\n        \"2048.0\": 12072\r\n      },\r\n      \"videoTraffic\": {\r\n        \"0.5\": 0,\r\n        \"1.0\": 0,\r\n        \"2.0\": 0,\r\n        \"4.0\": 0,\r\n        \"8.0\": 0,\r\n        \"16.0\": 0,\r\n        \"32.0\": 0,\r\n        \"64.0\": 0,\r\n        \"128.0\": 0,\r\n        \"256.0\": 0,\r\n        \"512.0\": 0,\r\n        \"1024.0\": 0,\r\n        \"2048.0\": 0\r\n      },\r\n      \"voiceTraffic\": {\r\n        \"0.5\": 716,\r\n        \"1.0\": 948,\r\n        \"2.0\": 474,\r\n        \"4.0\": 78,\r\n        \"8.0\": 0,\r\n        \"16.0\": 0,\r\n        \"32.0\": 0,\r\n        \"64.0\": 0,\r\n        \"128.0\": 0,\r\n        \"256.0\": 0,\r\n        \"512.0\": 0,\r\n        \"1024.0\": 0,\r\n        \"2048.0\": 0\r\n      }\r\n    }\r\n  }\r\n]"
            },
            "headers": {}
          }
        }
      }
    }
  },
  {
    "ruleId": "add-path",
    "message": "`/networks/{networkId}/clients/{clientId}/splashAuthorizationStatus` - Added",
    "messageHtml": "Path Added",
    "path": "/networks/{networkId}/clients/{clientId}/splashAuthorizationStatus",
    "type": "infos",
    "name": "Changes",
    "apiDetails": {
      "get": {
        "description": "Return the splash authorization for a client, for each SSID they've associated with through splash. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
        "summary": "getNetworkClientSplashAuthorizationStatus",
        "tags": [
          "Clients"
        ],
        "operationId": "NetworksClientsSplashAuthorizationStatusByNetworkIdAndClientIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "text/plain": "{\r\n  \"ssids\": {\r\n    \"0\": {\r\n      \"isAuthorized\": true,\r\n      \"authorizedAt\": \"2017-07-19 16:24:13 UTC\",\r\n      \"expiresAt\": \"2017-07-20 16:24:13 UTC\"\r\n    },\r\n    \"2\": {\r\n      \"isAuthorized\": false\r\n    }\r\n  }\r\n}"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update a client's splash authorization. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
        "summary": "updateNetworkClientSplashAuthorizationStatus",
        "tags": [
          "Clients"
        ],
        "operationId": "NetworksClientsSplashAuthorizationStatusByNetworkIdAndClientIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "updateNetworkClientSplashAuthorizationStatus",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/updateNetworkClientSplashAuthorizationStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "text/plain": "{\r\n  \"ssids\": {\r\n    \"0\": {\r\n      \"isAuthorized\": true,\r\n      \"authorizedAt\": \"2017-07-19 16:24:13 UTC\",\r\n      \"expiresAt\": \"2017-07-20 16:24:13 UTC\"\r\n    },\r\n    \"2\": {\r\n      \"isAuthorized\": false\r\n    }\r\n  }\r\n}"
            },
            "headers": {}
          }
        }
      }
    }
  },
  {
    "ruleId": "add-path",
    "message": "`/networks/{networkId}/clients/{clientId}/policy` - Added",
    "messageHtml": "Path Added",
    "path": "/networks/{networkId}/clients/{clientId}/policy",
    "type": "infos",
    "name": "Changes",
    "apiDetails": {
      "get": {
        "description": "Return the policy assigned to a client on the network. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
        "summary": "getNetworkClientPolicy",
        "tags": [
          "Clients"
        ],
        "operationId": "NetworksClientsPolicyByNetworkIdAndClientIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "text/plain": "{\r\n  \"mac\": \"00:11:22:33:44:55\",\r\n  \"type\": \"Group policy\",\r\n  \"groupPolicyId\": \"101\"\r\n}"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "description": "Update the policy assigned to a client on the network. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
        "summary": "updateNetworkClientPolicy",
        "tags": [
          "Clients"
        ],
        "operationId": "NetworksClientsPolicyByNetworkIdAndClientIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "updateNetworkClientPolicy",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/updateNetworkClientPolicy"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "text/plain": "{\r\n  \"mac\": \"00:11:22:33:44:55\",\r\n  \"type\": \"Group policy\",\r\n  \"groupPolicyId\": \"101\"\r\n}"
            },
            "headers": {}
          }
        }
      }
    }
  },
  {
    "ruleId": "add-path",
    "message": "`/networks/{networkId}/clients/{clientId}/usageHistory` - Added",
    "messageHtml": "Path Added",
    "path": "/networks/{networkId}/clients/{clientId}/usageHistory",
    "type": "infos",
    "name": "Changes",
    "apiDetails": {
      "get": {
        "description": "Return the client's daily usage history. Usage data is in kilobytes. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
        "summary": "getNetworkClientUsageHistory",
        "tags": [
          "Clients"
        ],
        "operationId": "NetworksClientsUsageHistoryByNetworkIdAndClientIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "text/plain": "[\r\n  {\r\n    \"sent\": 500,\r\n    \"received\": 680,\r\n    \"ts\": 1518365681\r\n  }\r\n]"
            },
            "headers": {}
          }
        }
      }
    }
  },
  {
    "ruleId": "add-path",
    "message": "`/networks/{networkId}/clients/{clientId}/events` - Added",
    "messageHtml": "Path Added",
    "path": "/networks/{networkId}/clients/{clientId}/events",
    "type": "infos",
    "name": "Changes",
    "apiDetails": {
      "get": {
        "description": "Return the events associated with this client. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
        "summary": "getNetworkClientEvents",
        "tags": [
          "Clients"
        ],
        "operationId": "NetworksClientsEventsByNetworkIdAndClientIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of entries per page returned. Acceptable range is 3 - 100. Default is 100."
          },
          {
            "name": "startingAfter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "name": "endingBefore",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "text/plain": "[\r\n  {\r\n    \"deviceSerial\": \"Q234-ABCD-5678\",\r\n    \"occurredAt\": 1518365681,\r\n    \"type\": \"l3roaming_assoc_start\",\r\n    \"details\": {\r\n      \"vap\": \"1\",\r\n      \"on_packet\": \"true\"\r\n    }\r\n  }\r\n]"
            },
            "headers": {}
          }
        }
      }
    }
  },
  {
    "ruleId": "add-path",
    "message": "`/networks/{networkId}/clients/{clientId}/trafficHistory` - Added",
    "messageHtml": "Path Added",
    "path": "/networks/{networkId}/clients/{clientId}/trafficHistory",
    "type": "infos",
    "name": "Changes",
    "apiDetails": {
      "get": {
        "description": "Return the client's network traffic data over time. Usage data is in kilobytes. This endpoint requires detailed traffic analysis to be enabled on the Network-wide > General page. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
        "summary": "getNetworkClientTrafficHistory",
        "tags": [
          "Clients"
        ],
        "operationId": "NetworksClientsTrafficHistoryByNetworkIdAndClientIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of entries per page returned. Acceptable range is 3 - 1000."
          },
          {
            "name": "startingAfter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "name": "endingBefore",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "text/plain": "[\r\n  {\r\n    \"ts\": 1518365681,\r\n    \"application\": \"Google\",\r\n    \"destination\": \"www.google.com\",\r\n    \"protocol\": \"UDP\",\r\n    \"port\": 443,\r\n    \"recv\": 383,\r\n    \"sent\": 56,\r\n    \"numFlows\": 5,\r\n    \"activeSeconds\": 240\r\n  }\r\n]"
            },
            "headers": {}
          }
        }
      }
    }
  },
  {
    "ruleId": "add-path",
    "message": "`/networks/{networkId}/clients/{clientId}` - Added",
    "messageHtml": "Path Added",
    "path": "/networks/{networkId}/clients/{clientId}",
    "type": "infos",
    "name": "Changes",
    "apiDetails": {
      "get": {
        "description": "Return the client associated with the given identifier. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
        "summary": "getNetworkClient",
        "tags": [
          "Clients"
        ],
        "operationId": "NetworksClientsByNetworkIdAndClientIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "text/plain": "{\r\n  \"id\": \"k74272e\",\r\n  \"description\": \"Miles's phone\",\r\n  \"mac\": \"00:11:22:33:44:55\",\r\n  \"ip\": \"1.2.3.4\",\r\n  \"user\": \"null\",\r\n  \"vlan\": \"255\",\r\n  \"switchport\": null,\r\n  \"ip6\": \"\",\r\n  \"firstSeen\": 1518365681,\r\n  \"lastSeen\": 1526087474,\r\n  \"manufacturer\": \"Apple\",\r\n  \"os\": \"iOS\",\r\n  \"ssid\": \"My SSID\",\r\n  \"wirelessCapabilities\": \"802.11ac - 2.4 and 5 GHz\",\r\n  \"smInstalled\": true,\r\n  \"recentDeviceMac\": \"00:11:22:33:44:55\",\r\n  \"clientVpnConnections\": [\r\n    {\r\n      \"remoteIp\": \"1.2.3.4\",\r\n      \"connectedAt\": 1522613355,\r\n      \"disconnectedAt\": 1522613360\r\n    }\r\n  ],\r\n  \"lldp\": [\r\n    [\r\n      \"System name\",\r\n      \"Some system name\"\r\n    ],\r\n    [\r\n      \"System description\",\r\n      \"Some system description\"\r\n    ],\r\n    [\r\n      \"Port ID\",\r\n      \"1\"\r\n    ],\r\n    [\r\n      \"Chassis ID\",\r\n      \"00:18:0a:00:00:00\"\r\n    ],\r\n    [\r\n      \"Port description\",\r\n      \"eth0\"\r\n    ],\r\n    [\r\n      \"System capabilities\",\r\n      \"Two-port MAC Relay\"\r\n    ]\r\n  ],\r\n  \"cdp\": null\r\n}"
            },
            "headers": {}
          }
        }
      }
    }
  },
  {
    "ruleId": "add-path",
    "message": "`/organizations/{organizationId}/devices` - Added",
    "messageHtml": "Path Added",
    "path": "/organizations/{organizationId}/devices",
    "type": "infos",
    "name": "Changes",
    "apiDetails": {
      "get": {
        "description": "List the devices in an organization",
        "summary": "getOrganizationDevices",
        "tags": [
          "Devices"
        ],
        "operationId": "OrganizationsDevicesByOrganizationIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
          },
          {
            "name": "startingAfter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "name": "endingBefore",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "text/plain": "{\r\n  \"name\": \"My AP\",\r\n  \"lat\": 37.4180951010362,\r\n  \"lng\": -122.098531723022,\r\n  \"address\": \"1600 Pennsylvania Ave\",\r\n  \"notes\": \"My AP's note\",\r\n  \"tags\": \" recently-added \",\r\n  \"networkId\": \"N_24329156\",\r\n  \"serial\": \"Q234-ABCD-5678\",\r\n  \"model\": \"MR34\",\r\n  \"mac\": \"00:11:22:33:44:55\",\r\n  \"lanIp\": \"1.2.3.4\"\r\n}"
            },
            "headers": {}
          }
        }
      }
    }
  },
  {
    "ruleId": "add-path",
    "message": "`/networks/{networkId}/devices/{serial}/managementInterfaceSettings` - Added",
    "messageHtml": "Path Added",
    "path": "/networks/{networkId}/devices/{serial}/managementInterfaceSettings",
    "type": "infos",
    "name": "Changes",
    "apiDetails": {
      "put": {
        "description": "Update the management interface settings for a device",
        "summary": "updateNetworkDeviceManagementInterfaceSettings",
        "tags": [
          "Management interface settings"
        ],
        "operationId": "NetworksDevicesManagementInterfaceSettingsByNetworkIdAndSerialPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "serial",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "updateNetworkDeviceManagementInterfaceSettings",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/updateNetworkDeviceManagementInterfaceSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "text/plain": "{\r\n  \"wan1\": {\r\n    \"wanEnabled\": \"not configured\",\r\n    \"usingStaticIp\": true,\r\n    \"staticIp\": \"1.2.3.4\",\r\n    \"staticSubnetMask\": \"255.255.255.0\",\r\n    \"staticGatewayIp\": \"1.2.3.1\",\r\n    \"staticDns\": [\r\n      \"1.2.3.2\",\r\n      \"1.2.3.3\"\r\n    ],\r\n    \"vlan\": 7\r\n  },\r\n  \"wan2\": {\r\n    \"wanEnabled\": \"enabled\",\r\n    \"usingStaticIp\": false,\r\n    \"vlan\": 2\r\n  }\r\n}"
            },
            "headers": {}
          }
        }
      },
      "get": {
        "description": "Return the management interface settings for a device",
        "summary": "getNetworkDeviceManagementInterfaceSettings",
        "tags": [
          "Management interface settings"
        ],
        "operationId": "NetworksDevicesManagementInterfaceSettingsByNetworkIdAndSerialGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "serial",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "text/plain": "{\r\n  \"wan1\": {\r\n    \"wanEnabled\": \"not configured\",\r\n    \"usingStaticIp\": true,\r\n    \"staticIp\": \"1.2.3.4\",\r\n    \"staticSubnetMask\": \"255.255.255.0\",\r\n    \"staticGatewayIp\": \"1.2.3.1\",\r\n    \"staticDns\": [\r\n      \"1.2.3.2\",\r\n      \"1.2.3.3\"\r\n    ],\r\n    \"vlan\": 7\r\n  },\r\n  \"wan2\": {\r\n    \"wanEnabled\": \"enabled\",\r\n    \"usingStaticIp\": false,\r\n    \"vlan\": 2\r\n  }\r\n}"
            },
            "headers": {}
          }
        }
      }
    }
  },
  {
    "ruleId": "add-path",
    "message": "`/networks/{networkId}/netflowSettings` - Added",
    "messageHtml": "Path Added",
    "path": "/networks/{networkId}/netflowSettings",
    "type": "infos",
    "name": "Changes",
    "apiDetails": {
      "put": {
        "description": "Update the NetFlow traffic reporting settings for a network",
        "summary": "updateNetworkNetflowSettings",
        "tags": [
          "NetFlow settings"
        ],
        "operationId": "NetworksNetflowSettingsByNetworkIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "updateNetworkNetflowSettings",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/updateNetworkNetflowSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "text/plain": "{\r\n  \"reportingEnabled\": true,\r\n  \"collectorIp\": \"1.2.3.4\",\r\n  \"collectorPort\": 443\r\n}"
            },
            "headers": {}
          }
        }
      },
      "get": {
        "description": "Return the NetFlow traffic reporting settings for a network",
        "summary": "getNetworkNetflowSettings",
        "tags": [
          "NetFlow settings"
        ],
        "operationId": "NetworksNetflowSettingsByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "text/plain": "{\r\n  \"reportingEnabled\": true,\r\n  \"collectorIp\": \"1.2.3.4\",\r\n  \"collectorPort\": 443\r\n}"
            },
            "headers": {}
          }
        }
      }
    }
  },
  {
    "ruleId": "add-path",
    "message": "`/networks/{networkId}/sm/{deviceId}/softwares` - Added",
    "messageHtml": "Path Added",
    "path": "/networks/{networkId}/sm/{deviceId}/softwares",
    "type": "infos",
    "name": "Changes",
    "apiDetails": {
      "get": {
        "description": "Get a list of softwares associated with a device",
        "summary": "getNetworkSmSoftwares",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmSoftwaresByNetworkIdAndDeviceIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "text/plain": "[\r\n  {\r\n    \"bundleSize\": null,\r\n    \"createdAt\": \"2018-02-11T00:00:00Z\",\r\n    \"dynamicSize\": null,\r\n    \"id\": \"1284392014819\",\r\n    \"identifier\": \"com.test.app\",\r\n    \"installedAt\": \"2018-05-12T00:00:00Z\",\r\n    \"toInstall\": null,\r\n    \"iosRedemptionCode\": null,\r\n    \"isManaged\": true,\r\n    \"itunesId\": null,\r\n    \"licenseKey\": null,\r\n    \"name\": \"My app\",\r\n    \"path\": \"/Path/to/app.app\",\r\n    \"redemptionCode\": null,\r\n    \"shortVersion\": null,\r\n    \"status\": null,\r\n    \"toUninstall\": false,\r\n    \"uninstalledAt\": null,\r\n    \"updatedAt\": \"2018-05-12T00:00:00Z\",\r\n    \"vendor\": \"Apple\",\r\n    \"version\": \"0.1\"\r\n  }\r\n]"
            },
            "headers": {}
          }
        }
      }
    }
  },
  {
    "ruleId": "add-path",
    "message": "`/networks/{networkId}/sm/user/{userId}/softwares` - Added",
    "messageHtml": "Path Added",
    "path": "/networks/{networkId}/sm/user/{userId}/softwares",
    "type": "infos",
    "name": "Changes",
    "apiDetails": {
      "get": {
        "description": "Get a list of softwares associated with a user",
        "summary": "getNetworkSmUserSoftwares",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmUserSoftwaresByNetworkIdAndUserIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "text/plain": "[\r\n  {\r\n    \"bundleSize\": null,\r\n    \"createdAt\": \"2018-02-11T00:00:00Z\",\r\n    \"dynamicSize\": null,\r\n    \"id\": \"1284392014819\",\r\n    \"identifier\": \"com.test.app\",\r\n    \"installedAt\": \"2018-05-12T00:00:00Z\",\r\n    \"toInstall\": null,\r\n    \"iosRedemptionCode\": null,\r\n    \"isManaged\": true,\r\n    \"itunesId\": null,\r\n    \"licenseKey\": null,\r\n    \"name\": \"My app\",\r\n    \"path\": \"/Path/to/app.app\",\r\n    \"redemptionCode\": null,\r\n    \"shortVersion\": null,\r\n    \"status\": null,\r\n    \"toUninstall\": false,\r\n    \"uninstalledAt\": null,\r\n    \"updatedAt\": \"2018-05-12T00:00:00Z\",\r\n    \"vendor\": \"Apple\",\r\n    \"version\": \"0.1\"\r\n  }\r\n]"
            },
            "headers": {}
          }
        }
      }
    }
  },
  {
    "ruleId": "add-path",
    "message": "`/networks/{networkId}/sm/{deviceId}/cellularUsageHistory` - Added",
    "messageHtml": "Path Added",
    "path": "/networks/{networkId}/sm/{deviceId}/cellularUsageHistory",
    "type": "infos",
    "name": "Changes",
    "apiDetails": {
      "get": {
        "description": "Return the client's daily cellular data usage history. Usage data is in kilobytes.",
        "summary": "getNetworkSmCellularUsageHistory",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmCellularUsageHistoryByNetworkIdAndDeviceIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "text/plain": "{\r\n  \"sent\": 138.0,\r\n  \"recv\": 61.0,\r\n  \"ts\": 1526087474\r\n}"
            },
            "headers": {}
          }
        }
      }
    }
  },
  {
    "ruleId": "add-path",
    "message": "`/networks/{networkId}/sm/{deviceId}/certs` - Added",
    "messageHtml": "Path Added",
    "path": "/networks/{networkId}/sm/{deviceId}/certs",
    "type": "infos",
    "name": "Changes",
    "apiDetails": {
      "get": {
        "description": "List the certs on a device",
        "summary": "getNetworkSmCerts",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmCertsByNetworkIdAndDeviceIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "text/plain": "[\r\n  {\r\n    \"name\": \"My Cert\",\r\n    \"notValidAfter\": \"May 12, 2018\",\r\n    \"notValidBefore\": \"Feb 11, 2018\",\r\n    \"certPem\": \"-----BEGIN CERTIFICATE-----\\n-----END CERTIFICATE-----\\n\",\r\n    \"issuer\": \"\",\r\n    \"subject\": \"\",\r\n    \"id\": 15\r\n  }\r\n]"
            },
            "headers": {}
          }
        }
      }
    }
  },
  {
    "ruleId": "add-path",
    "message": "`/networks/{networkId}/sm/{deviceId}/restrictions` - Added",
    "messageHtml": "Path Added",
    "path": "/networks/{networkId}/sm/{deviceId}/restrictions",
    "type": "infos",
    "name": "Changes",
    "apiDetails": {
      "get": {
        "description": "List the restrictions on a device",
        "summary": "getNetworkSmRestrictions",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmRestrictionsByNetworkIdAndDeviceIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "text/plain": "[\r\n  {\r\n    \"profile\": \"com.meraki.sm.1\",\r\n    \"restrictions\": {\r\n      \"myRestriction\": {\r\n        \"value\": true\r\n      }\r\n    }\r\n  }\r\n]"
            },
            "headers": {}
          }
        }
      }
    }
  },
  {
    "ruleId": "add-path",
    "message": "`/networks/{networkId}/sm/{deviceId}/securityCenters` - Added",
    "messageHtml": "Path Added",
    "path": "/networks/{networkId}/sm/{deviceId}/securityCenters",
    "type": "infos",
    "name": "Changes",
    "apiDetails": {
      "get": {
        "description": "List the security centers on a device",
        "summary": "getNetworkSmSecurityCenters",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmSecurityCentersByNetworkIdAndDeviceIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "text/plain": "[\r\n  {\r\n    \"isRooted\": true,\r\n    \"hasAntiVirus\": true,\r\n    \"antiVirusName\": \"meraki_av\",\r\n    \"isFireWallEnabled\": true,\r\n    \"hasFireWallInstalled\": true,\r\n    \"fireWallName\": \"meraki_fw\",\r\n    \"isDiskEncrypted\": true,\r\n    \"isAutoLoginDisabled\": true,\r\n    \"id\": \"1284392014819\",\r\n    \"runningProcs\": \"/software,/software_2\"\r\n  }\r\n]"
            },
            "headers": {}
          }
        }
      }
    }
  },
  {
    "ruleId": "add-path",
    "message": "`/networks/{networkId}/sm/{deviceId}/wlanLists` - Added",
    "messageHtml": "Path Added",
    "path": "/networks/{networkId}/sm/{deviceId}/wlanLists",
    "type": "infos",
    "name": "Changes",
    "apiDetails": {
      "get": {
        "description": "List the saved SSID names on a device",
        "summary": "getNetworkSmWlanLists",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmWlanListsByNetworkIdAndDeviceIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "text/plain": "[\r\n  {\r\n    \"createdAt\": \"2018-02-11T00:00:00Z\",\r\n    \"id\": \"1284392014819\",\r\n    \"xml\": \"Preferred networks on en0:\"\r\n  }\r\n]"
            },
            "headers": {}
          }
        }
      }
    }
  },
  {
    "ruleId": "add-path",
    "message": "`/networks/{networkId}/sm/{deviceId}/networkAdapters` - Added",
    "messageHtml": "Path Added",
    "path": "/networks/{networkId}/sm/{deviceId}/networkAdapters",
    "type": "infos",
    "name": "Changes",
    "apiDetails": {
      "get": {
        "description": "List the network adapters of a device",
        "summary": "getNetworkSmNetworkAdapters",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmNetworkAdaptersByNetworkIdAndDeviceIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "text/plain": "[\r\n  {\r\n    \"dhcpServer\": \"123.123.123.1\",\r\n    \"dnsServer\": \"8.8.8.8, 8.8.4.4\",\r\n    \"gateway\": \"1.2.3.5\",\r\n    \"id\": \"1284392014819\",\r\n    \"ip\": \"1.2.3.4\",\r\n    \"mac\": \"00:11:22:33:44:55\",\r\n    \"name\": \"en0\",\r\n    \"subnet\": \"255.255.255.0\"\r\n  }\r\n]"
            },
            "headers": {}
          }
        }
      }
    }
  },
  {
    "ruleId": "add-path",
    "message": "`/networks/{networkId}/sm/{deviceId}/deviceProfiles` - Added",
    "messageHtml": "Path Added",
    "path": "/networks/{networkId}/sm/{deviceId}/deviceProfiles",
    "type": "infos",
    "name": "Changes",
    "apiDetails": {
      "get": {
        "description": "Get the profiles associated with a device",
        "summary": "getNetworkSmDeviceProfiles",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmDeviceProfilesByNetworkIdAndDeviceIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "text/plain": "{\r\n  \"id\": \"1284392014819\",\r\n  \"isEncrypted\": true,\r\n  \"isManaged\": true,\r\n  \"profileData\": {},\r\n  \"profileIdentifier\": \"com.test.app\",\r\n  \"name\": \"My profile\",\r\n  \"version\": \"0.0.1\"\r\n}"
            },
            "headers": {}
          }
        }
      }
    }
  },
  {
    "ruleId": "add-path",
    "message": "`/networks/{networkId}/sm/user/{userId}/deviceProfiles` - Added",
    "messageHtml": "Path Added",
    "path": "/networks/{networkId}/sm/user/{userId}/deviceProfiles",
    "type": "infos",
    "name": "Changes",
    "apiDetails": {
      "get": {
        "description": "Get the profiles associated with a user",
        "summary": "getNetworkSmUserDeviceProfiles",
        "tags": [
          "SM"
        ],
        "operationId": "NetworksSmUserDeviceProfilesByNetworkIdAndUserIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "text/plain": "{\r\n  \"id\": \"1284392014819\",\r\n  \"isEncrypted\": true,\r\n  \"isManaged\": true,\r\n  \"profileData\": {},\r\n  \"profileIdentifier\": \"com.test.app\",\r\n  \"name\": \"My profile\",\r\n  \"version\": \"0.0.1\"\r\n}"
            },
            "headers": {}
          }
        }
      }
    }
  },
  {
    "ruleId": "add-path",
    "message": "`/organizations/{organizationId}/snmp` - Added",
    "messageHtml": "Path Added",
    "path": "/organizations/{organizationId}/snmp",
    "type": "infos",
    "name": "Changes",
    "apiDetails": {
      "put": {
        "description": "Update the SNMP settings for an organization",
        "summary": "updateOrganizationSnmp",
        "tags": [
          "SNMP settings"
        ],
        "operationId": "OrganizationsSnmpByOrganizationIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "updateOrganizationSnmp",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/updateOrganizationSnmp"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "text/plain": "{\r\n  \"v2cEnabled\": false,\r\n  \"v3Enabled\": true,\r\n  \"v3AuthMode\": \"SHA\",\r\n  \"v3PrivMode\": \"AES128\",\r\n  \"peerIps\": \"123.123.123.1\",\r\n  \"hostname\": \"n1.meraki.com\",\r\n  \"port\": 443\r\n}"
            },
            "headers": {}
          }
        }
      },
      "get": {
        "description": "Return the SNMP settings for an organization",
        "summary": "getOrganizationSnmp",
        "tags": [
          "SNMP settings"
        ],
        "operationId": "OrganizationsSnmpByOrganizationIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "text/plain": "{\r\n  \"v2cEnabled\": false,\r\n  \"v3Enabled\": true,\r\n  \"v3AuthMode\": \"SHA\",\r\n  \"v3PrivMode\": \"AES128\",\r\n  \"peerIps\": \"123.123.123.1\",\r\n  \"hostname\": \"n1.meraki.com\",\r\n  \"port\": 443\r\n}"
            },
            "headers": {}
          }
        }
      }
    }
  },
  {
    "ruleId": "add-path",
    "message": "`/networks/{networkId}/snmpSettings` - Added",
    "messageHtml": "Path Added",
    "path": "/networks/{networkId}/snmpSettings",
    "type": "infos",
    "name": "Changes",
    "apiDetails": {
      "put": {
        "description": "Update the SNMP settings for a network",
        "summary": "updateNetworkSnmpSettings",
        "tags": [
          "SNMP settings"
        ],
        "operationId": "NetworksSnmpSettingsByNetworkIdPut",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "updateNetworkSnmpSettings",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/updateNetworkSnmpSettings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "text/plain": "{\r\n  \"access\": \"users\",\r\n  \"users\": [\r\n    {\r\n      \"username\": \"AzureDiamond\",\r\n      \"passphrase\": \"hunter2\"\r\n    }\r\n  ]\r\n}"
            },
            "headers": {}
          }
        }
      },
      "get": {
        "description": "Return the SNMP settings for a network",
        "summary": "getNetworkSnmpSettings",
        "tags": [
          "SNMP settings"
        ],
        "operationId": "NetworksSnmpSettingsByNetworkIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "text/plain": "{\r\n  \"access\": \"users\",\r\n  \"users\": [\r\n    {\r\n      \"username\": \"AzureDiamond\",\r\n      \"passphrase\": \"hunter2\"\r\n    }\r\n  ]\r\n}"
            },
            "headers": {}
          }
        }
      }
    }
  },
  {
    "ruleId": "add-path",
    "message": "`/organizations/{organizationId}/configTemplates/{configTemplateId}/switchProfiles` - Added",
    "messageHtml": "Path Added",
    "path": "/organizations/{organizationId}/configTemplates/{configTemplateId}/switchProfiles",
    "type": "infos",
    "name": "Changes",
    "apiDetails": {
      "get": {
        "description": "List the switch profiles for your switch template configuration",
        "summary": "getOrganizationConfigTemplateSwitchProfiles",
        "tags": [
          "Switch profiles"
        ],
        "operationId": "OrganizationsConfigTemplatesSwitchProfilesByOrganizationIdAndConfigTemplateIdGet",
        "deprecated": false,
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "configTemplateId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object"
            },
            "examples": {
              "text/plain": "[\r\n  {\r\n    \"switchProfileId\": \"1234\",\r\n    \"name\": \"A Simple Switch Profile\",\r\n    \"model\": \"MS450-24\"\r\n  }\r\n]"
            },
            "headers": {}
          }
        }
      }
    }
  },
  {
    "kind": "D",
    "path": [
      "info",
      "x-codegen-settings"
    ],
    "lhs": {
      "appendContentHeaders": true,
      "brandLabel": "meraki",
      "collectParameters": true,
      "doNotSplitWords": [
        "SSIDs",
        "VLANs"
      ],
      "generateAsyncCode": true,
      "projectName": "meraki",
      "sortResources": true,
      "useEnumPostfix": true,
      "useMethodPrefix": false,
      "useModelPostfix": true,
      "validateRequiredParameters": true
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "info",
      "contact"
    ],
    "rhs": {
      "url": "https://create.meraki.io"
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "securityDefinitions",
      "meraki_api_key"
    ],
    "lhs": {
      "type": "apiKey",
      "name": "X-Cisco-Meraki-API-Key",
      "in": "header"
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "securityDefinitions",
      "Cisco-Meraki-API-Key"
    ],
    "rhs": {
      "type": "apiKey",
      "description": "Demo DevNet Sandbox",
      "name": "X-Cisco-Meraki-API-Key",
      "in": "header"
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/actionBatches",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/actionBatches",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "id": "123",
        "status": "in progress",
        "confirmed": true,
        "synchronous": false,
        "actions": [
          {
            "resource": "/devices/QXXX-XXXX-XXXX/switchPorts/3",
            "operation": "update",
            "body": {
              "enabled": false
            }
          }
        ]
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/actionBatches",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"id\": \"123\",\r\n    \"status\": \"in progress\",\r\n    \"confirmed\": true,\r\n    \"synchronous\": false,\r\n    \"actions\": [\r\n      {\r\n        \"resource\": \"/devices/QXXX-XXXX-XXXX/switchPorts/3\",\r\n        \"operation\": \"update\",\r\n        \"body\": {\r\n          \"enabled\": false\r\n        }\r\n      }\r\n    ]\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/actionBatches",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/actionBatches",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/actionBatches",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/actionBatches",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/actionBatches",
      "post",
      "parameters",
      "createOrganizationActionBatch",
      "schema",
      "properties",
      "actions",
      "items",
      "title"
    ],
    "rhs": "Action",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/actionBatches",
      "post",
      "parameters",
      "createOrganizationActionBatch",
      "schema",
      "title"
    ],
    "rhs": "createOrganizationActionBatch",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/actionBatches",
      "post",
      "parameters",
      "createOrganizationActionBatch",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/actionBatches",
      "post",
      "responses",
      "201",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/actionBatches",
      "post",
      "responses",
      "201",
      "examples",
      "application/json"
    ],
    "lhs": {
      "id": "123",
      "status": "in progress",
      "confirmed": true,
      "synchronous": false,
      "actions": [
        {
          "resource": "/devices/QXXX-XXXX-XXXX/switchPorts/3",
          "operation": "update",
          "body": {
            "enabled": false
          }
        }
      ]
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/actionBatches",
      "post",
      "responses",
      "201",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"id\": \"123\",\r\n  \"status\": \"in progress\",\r\n  \"confirmed\": true,\r\n  \"synchronous\": false,\r\n  \"actions\": [\r\n    {\r\n      \"resource\": \"/devices/QXXX-XXXX-XXXX/switchPorts/3\",\r\n      \"operation\": \"update\",\r\n      \"body\": {\r\n        \"enabled\": false\r\n      }\r\n    }\r\n  ]\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/actionBatches",
      "post",
      "responses",
      "201",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/actionBatches",
      "post",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/actionBatches",
      "post",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/actionBatches",
      "post",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/actionBatches/{id}",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/actionBatches/{id}",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "id": "123",
      "status": "in progress",
      "confirmed": true,
      "synchronous": false,
      "actions": [
        {
          "resource": "/devices/QXXX-XXXX-XXXX/switchPorts/3",
          "operation": "update",
          "body": {
            "enabled": false
          }
        }
      ]
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/actionBatches/{id}",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"id\": \"123\",\r\n  \"status\": \"in progress\",\r\n  \"confirmed\": true,\r\n  \"synchronous\": false,\r\n  \"actions\": [\r\n    {\r\n      \"resource\": \"/devices/QXXX-XXXX-XXXX/switchPorts/3\",\r\n      \"operation\": \"update\",\r\n      \"body\": {\r\n        \"enabled\": false\r\n      }\r\n    }\r\n  ]\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/actionBatches/{id}",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/actionBatches/{id}",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/actionBatches/{id}",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/actionBatches/{id}",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/actionBatches/{id}",
      "put",
      "parameters",
      "updateOrganizationActionBatch",
      "schema",
      "title"
    ],
    "rhs": "updateOrganizationActionBatch",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/actionBatches/{id}",
      "put",
      "parameters",
      "updateOrganizationActionBatch",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/actionBatches/{id}",
      "put",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/actionBatches/{id}",
      "put",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "id": "123",
      "status": "in progress",
      "confirmed": true,
      "synchronous": false,
      "actions": [
        {
          "resource": "/devices/QXXX-XXXX-XXXX/switchPorts/3",
          "operation": "update",
          "body": {
            "enabled": false
          }
        }
      ]
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/actionBatches/{id}",
      "put",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"id\": \"123\",\r\n  \"status\": \"in progress\",\r\n  \"confirmed\": true,\r\n  \"synchronous\": false,\r\n  \"actions\": [\r\n    {\r\n      \"resource\": \"/devices/QXXX-XXXX-XXXX/switchPorts/3\",\r\n      \"operation\": \"update\",\r\n      \"body\": {\r\n        \"enabled\": false\r\n      }\r\n    }\r\n  ]\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/actionBatches/{id}",
      "put",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/actionBatches/{id}",
      "put",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/actionBatches/{id}",
      "put",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/actionBatches/{id}",
      "put",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/actionBatches/{id}",
      "delete",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/actionBatches/{id}",
      "delete",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/actionBatches/{id}",
      "delete",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/actionBatches/{id}",
      "delete",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/admins",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/admins",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "id": "212406",
        "name": "Miles Meraki",
        "email": "miles@meraki.com",
        "orgAccess": "none",
        "accountStatus": "ok",
        "twoFactorAuthEnabled": false,
        "hasApiKey": true,
        "lastActive": "2019-01-28 14:58:56 -0800",
        "tags": [
          {
            "tag": "west",
            "access": "read-only"
          }
        ],
        "networks": [
          {
            "id": "N_24329156",
            "access": "full"
          }
        ]
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/admins",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"id\": \"212406\",\r\n    \"name\": \"Miles Meraki\",\r\n    \"email\": \"miles@meraki.com\",\r\n    \"orgAccess\": \"none\",\r\n    \"accountStatus\": \"ok\",\r\n    \"twoFactorAuthEnabled\": false,\r\n    \"hasApiKey\": true,\r\n    \"lastActive\": \"2019-01-28 14:58:56 -0800\",\r\n    \"tags\": [\r\n      {\r\n        \"tag\": \"west\",\r\n        \"access\": \"read-only\"\r\n      }\r\n    ],\r\n    \"networks\": [\r\n      {\r\n        \"id\": \"N_24329156\",\r\n        \"access\": \"full\"\r\n      }\r\n    ]\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/admins",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/admins",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/admins",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/admins",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/admins",
      "post",
      "parameters",
      "createOrganizationAdmin",
      "schema",
      "properties",
      "tags",
      "items",
      "title"
    ],
    "rhs": "Tag",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/admins",
      "post",
      "parameters",
      "createOrganizationAdmin",
      "schema",
      "properties",
      "networks",
      "items",
      "title"
    ],
    "rhs": "Network",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/admins",
      "post",
      "parameters",
      "createOrganizationAdmin",
      "schema",
      "title"
    ],
    "rhs": "createOrganizationAdmin",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/admins",
      "post",
      "responses",
      "201",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/admins",
      "post",
      "responses",
      "201",
      "examples",
      "application/json"
    ],
    "lhs": {
      "id": "212406",
      "name": "Miles Meraki",
      "email": "miles@meraki.com",
      "orgAccess": "none",
      "accountStatus": "ok",
      "twoFactorAuthEnabled": false,
      "hasApiKey": true,
      "lastActive": "2019-01-28 14:58:56 -0800",
      "tags": [
        {
          "tag": "west",
          "access": "read-only"
        }
      ],
      "networks": [
        {
          "id": "N_24329156",
          "access": "full"
        }
      ]
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/admins",
      "post",
      "responses",
      "201",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"id\": \"212406\",\r\n  \"name\": \"Miles Meraki\",\r\n  \"email\": \"miles@meraki.com\",\r\n  \"orgAccess\": \"none\",\r\n  \"accountStatus\": \"ok\",\r\n  \"twoFactorAuthEnabled\": false,\r\n  \"hasApiKey\": true,\r\n  \"lastActive\": \"2019-01-28 14:58:56 -0800\",\r\n  \"tags\": [\r\n    {\r\n      \"tag\": \"west\",\r\n      \"access\": \"read-only\"\r\n    }\r\n  ],\r\n  \"networks\": [\r\n    {\r\n      \"id\": \"N_24329156\",\r\n      \"access\": \"full\"\r\n    }\r\n  ]\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/admins",
      "post",
      "responses",
      "201",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/admins",
      "post",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/admins",
      "post",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/admins",
      "post",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/admins/{id}",
      "put",
      "parameters",
      "updateOrganizationAdmin",
      "schema",
      "properties",
      "tags",
      "items",
      "title"
    ],
    "rhs": "Tag",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/admins/{id}",
      "put",
      "parameters",
      "updateOrganizationAdmin",
      "schema",
      "properties",
      "networks",
      "items",
      "title"
    ],
    "rhs": "Network",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/admins/{id}",
      "put",
      "parameters",
      "updateOrganizationAdmin",
      "schema",
      "title"
    ],
    "rhs": "updateOrganizationAdmin",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/admins/{id}",
      "put",
      "parameters",
      "updateOrganizationAdmin",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/admins/{id}",
      "put",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/admins/{id}",
      "put",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "id": "212406",
      "name": "Miles Meraki",
      "email": "miles@meraki.com",
      "orgAccess": "none",
      "accountStatus": "ok",
      "twoFactorAuthEnabled": false,
      "hasApiKey": true,
      "lastActive": "2019-01-28 14:58:56 -0800",
      "tags": [
        {
          "tag": "west",
          "access": "read-only"
        }
      ],
      "networks": [
        {
          "id": "N_24329156",
          "access": "full"
        }
      ]
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/admins/{id}",
      "put",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"id\": \"212406\",\r\n  \"name\": \"Miles Meraki\",\r\n  \"email\": \"miles@meraki.com\",\r\n  \"orgAccess\": \"none\",\r\n  \"accountStatus\": \"ok\",\r\n  \"twoFactorAuthEnabled\": false,\r\n  \"hasApiKey\": true,\r\n  \"lastActive\": \"2019-01-28 14:58:56 -0800\",\r\n  \"tags\": [\r\n    {\r\n      \"tag\": \"west\",\r\n      \"access\": \"read-only\"\r\n    }\r\n  ],\r\n  \"networks\": [\r\n    {\r\n      \"id\": \"N_24329156\",\r\n      \"access\": \"full\"\r\n    }\r\n  ]\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/admins/{id}",
      "put",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/admins/{id}",
      "put",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/admins/{id}",
      "put",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/admins/{id}",
      "put",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/admins/{id}",
      "delete",
      "responses",
      "204",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/admins/{id}",
      "delete",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/admins/{id}",
      "delete",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/admins/{id}",
      "delete",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/alertSettings",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/alertSettings",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "defaultDestinations": {
        "emails": [
          "miles@meraki.com"
        ],
        "allAdmins": true,
        "snmp": true
      },
      "alerts": [
        {
          "type": "gatewayDown",
          "enabled": true,
          "alertDestinations": {
            "emails": [
              "miles@meraki.com"
            ],
            "allAdmins": false,
            "snmp": false
          },
          "filters": {
            "timeout": 60
          }
        }
      ]
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/alertSettings",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"defaultDestinations\": {\r\n    \"emails\": [\r\n      \"miles@meraki.com\"\r\n    ],\r\n    \"allAdmins\": true,\r\n    \"snmp\": true\r\n  },\r\n  \"alerts\": [\r\n    {\r\n      \"type\": \"gatewayDown\",\r\n      \"enabled\": true,\r\n      \"alertDestinations\": {\r\n        \"emails\": [\r\n          \"miles@meraki.com\"\r\n        ],\r\n        \"allAdmins\": false,\r\n        \"snmp\": false\r\n      },\r\n      \"filters\": {\r\n        \"timeout\": 60\r\n      }\r\n    }\r\n  ]\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/alertSettings",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/alertSettings",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/alertSettings",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/alertSettings",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/alertSettings",
      "put",
      "parameters",
      "updateNetworkAlertSettings",
      "schema",
      "properties",
      "defaultDestinations",
      "title"
    ],
    "rhs": "DefaultDestinations",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/alertSettings",
      "put",
      "parameters",
      "updateNetworkAlertSettings",
      "schema",
      "properties",
      "alerts",
      "items",
      "title"
    ],
    "rhs": "Alert",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/alertSettings",
      "put",
      "parameters",
      "updateNetworkAlertSettings",
      "schema",
      "title"
    ],
    "rhs": "updateNetworkAlertSettings",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/alertSettings",
      "put",
      "parameters",
      "updateNetworkAlertSettings",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/alertSettings",
      "put",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/alertSettings",
      "put",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "defaultDestinations": {
        "emails": [
          "miles@meraki.com"
        ],
        "allAdmins": true,
        "snmp": true
      },
      "alerts": [
        {
          "type": "gatewayDown",
          "enabled": true,
          "alertDestinations": {
            "emails": [
              "miles@meraki.com"
            ],
            "allAdmins": false,
            "snmp": false
          },
          "filters": {
            "timeout": 60
          }
        }
      ]
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/alertSettings",
      "put",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"defaultDestinations\": {\r\n    \"emails\": [\r\n      \"miles@meraki.com\"\r\n    ],\r\n    \"allAdmins\": true,\r\n    \"snmp\": true\r\n  },\r\n  \"alerts\": [\r\n    {\r\n      \"type\": \"gatewayDown\",\r\n      \"enabled\": true,\r\n      \"alertDestinations\": {\r\n        \"emails\": [\r\n          \"miles@meraki.com\"\r\n        ],\r\n        \"allAdmins\": false,\r\n        \"snmp\": false\r\n      },\r\n      \"filters\": {\r\n        \"timeout\": 60\r\n      }\r\n    }\r\n  ]\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/alertSettings",
      "put",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/alertSettings",
      "put",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/alertSettings",
      "put",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/alertSettings",
      "put",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/overview",
      "get",
      "parameters",
      "t0",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/overview",
      "get",
      "parameters",
      "t1",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/overview",
      "get",
      "parameters",
      "timespan",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/overview",
      "get",
      "parameters",
      "timespan",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/overview",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/overview",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "startTs": "2018-08-15T18:32:38.123Z",
        "endTs": "2018-08-15T18:33:38.123Z",
        "zoneId": 0,
        "entrances": 254,
        "averageCount": 5
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/overview",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"startTs\": \"2018-08-15T18:32:38.123Z\",\r\n    \"endTs\": \"2018-08-15T18:33:38.123Z\",\r\n    \"zoneId\": 0,\r\n    \"entrances\": 254,\r\n    \"averageCount\": 5\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/overview",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/overview",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/overview",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/overview",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/zones",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/zones",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "id": "0",
        "type": "occupancy",
        "label": "Full Frame"
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/zones",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"id\": \"0\",\r\n    \"type\": \"occupancy\",\r\n    \"label\": \"Full Frame\"\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/zones",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/zones",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/zones",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/zones",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/zones/{zoneId}/history",
      "get",
      "parameters",
      "t0",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/zones/{zoneId}/history",
      "get",
      "parameters",
      "t1",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/zones/{zoneId}/history",
      "get",
      "parameters",
      "timespan",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/zones/{zoneId}/history",
      "get",
      "parameters",
      "timespan",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/zones/{zoneId}/history",
      "get",
      "parameters",
      "resolution",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/zones/{zoneId}/history",
      "get",
      "parameters",
      "resolution",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/zones/{zoneId}/history",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/zones/{zoneId}/history",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "startTs": "2018-08-15T18:32:38.123Z",
        "endTs": "2018-08-15T18:33:38.123Z",
        "entrances": 5,
        "averageCount": 1.5
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/zones/{zoneId}/history",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"startTs\": \"2018-08-15T18:32:38.123Z\",\r\n    \"endTs\": \"2018-08-15T18:33:38.123Z\",\r\n    \"entrances\": 5,\r\n    \"averageCount\": 1.5\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/zones/{zoneId}/history",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/zones/{zoneId}/history",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/zones/{zoneId}/history",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/zones/{zoneId}/history",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/recent",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/recent",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "startTs": "2018-08-15T18:32:38.123Z",
        "endTs": "2018-08-15T18:33:38.123Z",
        "zoneId": 0,
        "entrances": 10,
        "averageCount": 2.54
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/recent",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"startTs\": \"2018-08-15T18:32:38.123Z\",\r\n    \"endTs\": \"2018-08-15T18:33:38.123Z\",\r\n    \"zoneId\": 0,\r\n    \"entrances\": 10,\r\n    \"averageCount\": 2.54\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/recent",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/recent",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/recent",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/recent",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/live",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/live",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "ts": "2018-08-15T18:32:38.123Z",
      "zones": {
        "0": {
          "person": 0
        }
      }
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/live",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"ts\": \"2018-08-15T18:32:38.123Z\",\r\n  \"zones\": {\r\n    \"0\": {\r\n      \"person\": 0\r\n    }\r\n  }\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/live",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/live",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/live",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/camera/analytics/live",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/apiRequests",
      "get",
      "parameters",
      "t0",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/apiRequests",
      "get",
      "parameters",
      "t1",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/apiRequests",
      "get",
      "parameters",
      "timespan",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/apiRequests",
      "get",
      "parameters",
      "timespan",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/apiRequests",
      "get",
      "parameters",
      "perPage",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/apiRequests",
      "get",
      "parameters",
      "perPage",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/apiRequests",
      "get",
      "parameters",
      "startingAfter",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/apiRequests",
      "get",
      "parameters",
      "endingBefore",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/apiRequests",
      "get",
      "parameters",
      "adminId",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/apiRequests",
      "get",
      "parameters",
      "path",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/apiRequests",
      "get",
      "parameters",
      "method",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/apiRequests",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/apiRequests",
      "get",
      "responses",
      "200",
      "headers",
      "Link"
    ],
    "lhs": {
      "type": "string",
      "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/apiRequests",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "adminId": "212406",
        "method": "GET",
        "host": "api.meraki.com",
        "path": "/api/v0/organizations/33349/apiRequests",
        "queryString": "timespan=604800",
        "userAgent": "PostmanRuntime/7.6.0",
        "ts": "2019-02-20T17:31:23Z"
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/apiRequests",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"adminId\": \"212406\",\r\n    \"method\": \"GET\",\r\n    \"host\": \"api.meraki.com\",\r\n    \"path\": \"/api/v0/organizations/33349/apiRequests\",\r\n    \"queryString\": \"timespan=604800\",\r\n    \"userAgent\": \"PostmanRuntime/7.6.0\",\r\n    \"ts\": \"2019-02-20T17:31:23Z\",\r\n    \"responseCode\": 200\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/apiRequests",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/apiRequests",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/apiRequests",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/bluetoothClients",
      "get",
      "parameters",
      "perPage",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/bluetoothClients",
      "get",
      "parameters",
      "perPage",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/bluetoothClients",
      "get",
      "parameters",
      "startingAfter",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/bluetoothClients",
      "get",
      "parameters",
      "endingBefore",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/bluetoothClients",
      "get",
      "parameters",
      "timespan",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/bluetoothClients",
      "get",
      "parameters",
      "includeConnectivityHistory",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/bluetoothClients",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/bluetoothClients",
      "get",
      "responses",
      "200",
      "headers",
      "Link"
    ],
    "lhs": {
      "type": "string",
      "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/bluetoothClients",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "mac": "00:11:22:33:44:55",
        "networkId": "N_24329156"
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/bluetoothClients",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"mac\": \"00:11:22:33:44:55\",\r\n    \"networkId\": \"N_24329156\"\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/bluetoothClients",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/bluetoothClients",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/bluetoothClients",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/bluetoothSettings",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/bluetoothSettings",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "scanningEnabled": true,
      "advertisingEnabled": true,
      "uuid": "00000000-0000-0000-000-000000000000",
      "majorMinorAssignmentMode": "Non-unique",
      "major": 1
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/bluetoothSettings",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"scanningEnabled\": true,\r\n  \"advertisingEnabled\": true,\r\n  \"uuid\": \"00000000-0000-0000-000-000000000000\",\r\n  \"majorMinorAssignmentMode\": \"Non-unique\",\r\n  \"major\": 1\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/bluetoothSettings",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/bluetoothSettings",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/bluetoothSettings",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/bluetoothSettings",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/bluetoothSettings",
      "put",
      "parameters",
      "updateNetworkBluetoothSettings",
      "schema",
      "properties",
      "major",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/bluetoothSettings",
      "put",
      "parameters",
      "updateNetworkBluetoothSettings",
      "schema",
      "properties",
      "minor",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/bluetoothSettings",
      "put",
      "parameters",
      "updateNetworkBluetoothSettings",
      "schema",
      "title"
    ],
    "rhs": "updateNetworkBluetoothSettings",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/bluetoothSettings",
      "put",
      "parameters",
      "updateNetworkBluetoothSettings",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/bluetoothSettings",
      "put",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/bluetoothSettings",
      "put",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "scanningEnabled": true,
      "advertisingEnabled": true,
      "uuid": "00000000-0000-0000-000-000000000000",
      "majorMinorAssignmentMode": "Non-unique",
      "major": 1
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/bluetoothSettings",
      "put",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"scanningEnabled\": true,\r\n  \"advertisingEnabled\": true,\r\n  \"uuid\": \"00000000-0000-0000-000-000000000000\",\r\n  \"majorMinorAssignmentMode\": \"Non-unique\",\r\n  \"major\": 1\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/bluetoothSettings",
      "put",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/bluetoothSettings",
      "put",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/bluetoothSettings",
      "put",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/bluetoothSettings",
      "put",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/networks",
      "get",
      "parameters",
      "configTemplateId",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/networks",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/networks",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "id": "L_123456",
        "organizationId": 2930418,
        "name": "Long Island Office",
        "timeZone": "America/Los_Angeles",
        "tags": " tag1 tag2 ",
        "type": "combined",
        "disableMyMerakiCom": false
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/networks",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"id\": \"L_123456\",\r\n    \"organizationId\": 2930418,\r\n    \"name\": \"Long Island Office\",\r\n    \"timeZone\": \"America/Los_Angeles\",\r\n    \"tags\": \" tag1 tag2 \",\r\n    \"type\": \"combined\",\r\n    \"disableMyMerakiCom\": false\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/networks",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/networks",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/networks",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/networks",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/networks",
      "post",
      "parameters",
      "createOrganizationNetwork",
      "schema",
      "title"
    ],
    "rhs": "createOrganizationNetwork",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/networks",
      "post",
      "responses",
      "201",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/networks",
      "post",
      "responses",
      "201",
      "examples",
      "application/json"
    ],
    "lhs": {
      "id": "L_123456",
      "organizationId": 2930418,
      "name": "Long Island Office",
      "timeZone": "America/Los_Angeles",
      "tags": " tag1 tag2 ",
      "type": "combined",
      "disableMyMerakiCom": false
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/networks",
      "post",
      "responses",
      "201",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"id\": \"L_123456\",\r\n  \"organizationId\": 2930418,\r\n  \"name\": \"Long Island Office\",\r\n  \"timeZone\": \"America/Los_Angeles\",\r\n  \"tags\": \" tag1 tag2 \",\r\n  \"type\": \"combined\",\r\n  \"disableMyMerakiCom\": false\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/networks",
      "post",
      "responses",
      "201",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/networks",
      "post",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/networks",
      "post",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/networks",
      "post",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "id": "L_123456",
      "organizationId": 2930418,
      "name": "Long Island Office",
      "timeZone": "America/Los_Angeles",
      "tags": " tag1 tag2 ",
      "type": "combined",
      "disableMyMerakiCom": false
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"id\": \"L_123456\",\r\n  \"organizationId\": 2930418,\r\n  \"name\": \"Long Island Office\",\r\n  \"timeZone\": \"America/Los_Angeles\",\r\n  \"tags\": \" tag1 tag2 \",\r\n  \"type\": \"combined\",\r\n  \"disableMyMerakiCom\": false\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}",
      "put",
      "parameters",
      "updateNetwork",
      "schema",
      "title"
    ],
    "rhs": "updateNetwork",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}",
      "put",
      "parameters",
      "updateNetwork",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}",
      "put",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}",
      "put",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "id": "L_123456",
      "organizationId": 2930418,
      "name": "Long Island Office",
      "timeZone": "America/Los_Angeles",
      "tags": " tag1 tag2 ",
      "type": "combined",
      "disableMyMerakiCom": false
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}",
      "put",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"id\": \"L_123456\",\r\n  \"organizationId\": 2930418,\r\n  \"name\": \"Long Island Office\",\r\n  \"timeZone\": \"America/Los_Angeles\",\r\n  \"tags\": \" tag1 tag2 \",\r\n  \"type\": \"combined\",\r\n  \"disableMyMerakiCom\": false\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}",
      "put",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}",
      "put",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}",
      "put",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}",
      "put",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}",
      "delete",
      "responses",
      "204",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}",
      "delete",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}",
      "delete",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}",
      "delete",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/bind",
      "post",
      "parameters",
      "bindNetwork",
      "schema",
      "title"
    ],
    "rhs": "bindNetwork",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/bind",
      "post",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/bind",
      "post",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/bind",
      "post",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/bind",
      "post",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/bind",
      "post",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/unbind",
      "post",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/unbind",
      "post",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/unbind",
      "post",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/unbind",
      "post",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/unbind",
      "post",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/traffic",
      "get",
      "parameters",
      "deviceType",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/traffic",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/traffic",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "application": "Gmail",
        "destination": null,
        "protocol": "TCP",
        "port": 443,
        "sent": 138,
        "recv": 61,
        "numClients": 7,
        "activeTime": 77000,
        "flows": 300
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/traffic",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"application\": \"Gmail\",\r\n    \"destination\": null,\r\n    \"protocol\": \"TCP\",\r\n    \"port\": 443,\r\n    \"sent\": 138.0,\r\n    \"recv\": 61.0,\r\n    \"numClients\": 7,\r\n    \"activeTime\": 77000,\r\n    \"flows\": 300\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/traffic",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/traffic",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/traffic",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/traffic",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/accessPolicies",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/accessPolicies",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "number": 1,
        "name": "My access policy",
        "accessType": "8021.x",
        "guestVlan": 3700,
        "radiusServers": [
          {
            "ip": "1.2.3.4",
            "port": 1337
          },
          {
            "ip": "2.3.4.5",
            "port": 1337
          }
        ]
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/accessPolicies",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"number\": 1,\r\n    \"name\": \"My access policy\",\r\n    \"accessType\": \"8021.x\",\r\n    \"guestVlan\": 3700,\r\n    \"radiusServers\": [\r\n      {\r\n        \"ip\": \"1.2.3.4\",\r\n        \"port\": 1337\r\n      },\r\n      {\r\n        \"ip\": \"2.3.4.5\",\r\n        \"port\": 1337\r\n      }\r\n    ]\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/accessPolicies",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/accessPolicies",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/accessPolicies",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/accessPolicies",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/airMarshal",
      "get",
      "parameters",
      "t0",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/airMarshal",
      "get",
      "parameters",
      "timespan",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/airMarshal",
      "get",
      "parameters",
      "timespan",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/airMarshal",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/airMarshal",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "ssid": "linksys",
        "bssids": [
          {
            "bssid": "00:11:22:33:44:55",
            "contained": false,
            "detectedBy": [
              {
                "device": "Q234-ABCD-5678",
                "rssi": 17
              }
            ]
          }
        ],
        "channels": [
          36,
          40
        ],
        "firstSeen": 1518365681,
        "lastSeen": 1526087474,
        "wiredMacs": [
          "00:11:22:33:44:55"
        ],
        "wiredVlans": [
          0,
          108
        ],
        "wiredLastSeen": 1526087474
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/airMarshal",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"ssid\": \"linksys\",\r\n    \"bssids\": [\r\n      {\r\n        \"bssid\": \"00:11:22:33:44:55\",\r\n        \"contained\": false,\r\n        \"detectedBy\": [\r\n          {\r\n            \"device\": \"Q234-ABCD-5678\",\r\n            \"rssi\": 17\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    \"channels\": [\r\n      36,\r\n      40\r\n    ],\r\n    \"firstSeen\": 1518365681,\r\n    \"lastSeen\": 1526087474,\r\n    \"wiredMacs\": [\r\n      \"00:11:22:33:44:55\"\r\n    ],\r\n    \"wiredVlans\": [\r\n      0,\r\n      108\r\n    ],\r\n    \"wiredLastSeen\": 1526087474\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/airMarshal",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/airMarshal",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/airMarshal",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/airMarshal",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/networks/combine",
      "post",
      "parameters",
      "combineOrganizationNetworks",
      "schema",
      "title"
    ],
    "rhs": "combineOrganizationNetworks",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/networks/combine",
      "post",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/networks/combine",
      "post",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "resultingNetwork": {
        "id": "L_123456",
        "organizationId": 2930418,
        "name": "Long Island Office",
        "timeZone": "America/Los_Angeles",
        "tags": " tag1 tag2 ",
        "type": "combined",
        "disableMyMerakiCom": false
      }
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/networks/combine",
      "post",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"resultingNetwork\": {\r\n    \"id\": \"L_123456\",\r\n    \"organizationId\": 2930418,\r\n    \"name\": \"Long Island Office\",\r\n    \"timeZone\": \"America/Los_Angeles\",\r\n    \"tags\": \" tag1 tag2 \",\r\n    \"type\": \"combined\",\r\n    \"disableMyMerakiCom\": false\r\n  }\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/networks/combine",
      "post",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/networks/combine",
      "post",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/networks/combine",
      "post",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/networks/combine",
      "post",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/split",
      "post",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/split",
      "post",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "resultingNetworks": [
        {
          "id": "N_1234",
          "organizationId": 2930418,
          "name": "Long Island Office - switch",
          "timeZone": "America/Los_Angeles",
          "tags": " tag1 tag2 ",
          "type": "switch",
          "disableMyMerakiCom": false
        },
        {
          "id": "N_5678",
          "organizationId": 2930418,
          "name": "Long Island Office - wireless",
          "timeZone": "America/Los_Angeles",
          "tags": " tag1 tag2 ",
          "type": "wireless",
          "disableMyMerakiCom": false
        }
      ]
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/split",
      "post",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"resultingNetworks\": [\r\n    {\r\n      \"id\": \"N_1234\",\r\n      \"organizationId\": 2930418,\r\n      \"name\": \"Long Island Office - switch\",\r\n      \"timeZone\": \"America/Los_Angeles\",\r\n      \"tags\": \" tag1 tag2 \",\r\n      \"type\": \"switch\",\r\n      \"disableMyMerakiCom\": false\r\n    },\r\n    {\r\n      \"id\": \"N_5678\",\r\n      \"organizationId\": 2930418,\r\n      \"name\": \"Long Island Office - wireless\",\r\n      \"timeZone\": \"America/Los_Angeles\",\r\n      \"tags\": \" tag1 tag2 \",\r\n      \"type\": \"wireless\",\r\n      \"disableMyMerakiCom\": false\r\n    }\r\n  ]\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/split",
      "post",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/split",
      "post",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/split",
      "post",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/split",
      "post",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/siteToSiteVpn",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/siteToSiteVpn",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "mode": "spoke",
      "hubs": [
        {
          "hubId": "N_4901849",
          "useDefaultRoute": true
        },
        {
          "hubId": "N_1892489",
          "useDefaultRoute": false
        }
      ],
      "subnets": [
        {
          "localSubnet": "192.168.1.0/24",
          "useVpn": true
        },
        {
          "localSubnet": "192.168.128.0/24",
          "useVpn": true
        }
      ]
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/siteToSiteVpn",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"mode\": \"spoke\",\r\n  \"hubs\": [\r\n    {\r\n      \"hubId\": \"N_4901849\",\r\n      \"useDefaultRoute\": true\r\n    },\r\n    {\r\n      \"hubId\": \"N_1892489\",\r\n      \"useDefaultRoute\": false\r\n    }\r\n  ],\r\n  \"subnets\": [\r\n    {\r\n      \"localSubnet\": \"192.168.1.0/24\",\r\n      \"useVpn\": true\r\n    },\r\n    {\r\n      \"localSubnet\": \"192.168.128.0/24\",\r\n      \"useVpn\": true\r\n    }\r\n  ]\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/siteToSiteVpn",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/siteToSiteVpn",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/siteToSiteVpn",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/siteToSiteVpn",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/siteToSiteVpn",
      "put",
      "parameters",
      "updateNetworkSiteToSiteVpn",
      "schema",
      "properties",
      "hubs",
      "items",
      "title"
    ],
    "rhs": "Hub",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/siteToSiteVpn",
      "put",
      "parameters",
      "updateNetworkSiteToSiteVpn",
      "schema",
      "properties",
      "subnets",
      "items",
      "title"
    ],
    "rhs": "Subnet",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/siteToSiteVpn",
      "put",
      "parameters",
      "updateNetworkSiteToSiteVpn",
      "schema",
      "title"
    ],
    "rhs": "updateNetworkSiteToSiteVpn",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/siteToSiteVpn",
      "put",
      "parameters",
      "updateNetworkSiteToSiteVpn",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/siteToSiteVpn",
      "put",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/siteToSiteVpn",
      "put",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "mode": "spoke",
      "hubs": [
        {
          "hubId": "N_4901849",
          "useDefaultRoute": true
        },
        {
          "hubId": "N_1892489",
          "useDefaultRoute": false
        }
      ],
      "subnets": [
        {
          "localSubnet": "192.168.1.0/24",
          "useVpn": true
        },
        {
          "localSubnet": "192.168.128.0/24",
          "useVpn": true
        }
      ]
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/siteToSiteVpn",
      "put",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"mode\": \"spoke\",\r\n  \"hubs\": [\r\n    {\r\n      \"hubId\": \"N_4901849\",\r\n      \"useDefaultRoute\": true\r\n    },\r\n    {\r\n      \"hubId\": \"N_1892489\",\r\n      \"useDefaultRoute\": false\r\n    }\r\n  ],\r\n  \"subnets\": [\r\n    {\r\n      \"localSubnet\": \"192.168.1.0/24\",\r\n      \"useVpn\": true\r\n    },\r\n    {\r\n      \"localSubnet\": \"192.168.128.0/24\",\r\n      \"useVpn\": true\r\n    }\r\n  ]\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/siteToSiteVpn",
      "put",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/siteToSiteVpn",
      "put",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/siteToSiteVpn",
      "put",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/siteToSiteVpn",
      "put",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/cameras/{serial}/videoLink",
      "get",
      "parameters",
      "timestamp",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/cameras/{serial}/videoLink",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/cameras/{serial}/videoLink",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "url": "https://nxx.meraki.com/office-cameras/n/bs0a1k/manage/nodes/new_list/29048243992402?timestamp=1535732570077"
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/cameras/{serial}/videoLink",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"url\": \"https://nxx.meraki.com/office-cameras/n/bs0a1k/manage/nodes/new_list/29048243992402?timestamp=1535732570077\"\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/cameras/{serial}/videoLink",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/cameras/{serial}/videoLink",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/cameras/{serial}/videoLink",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/cameras/{serial}/videoLink",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/cameras/{serial}/snapshot",
      "post",
      "parameters",
      "generateNetworkCameraSnapshot",
      "schema",
      "title"
    ],
    "rhs": "generateNetworkCameraSnapshot",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/cameras/{serial}/snapshot",
      "post",
      "parameters",
      "generateNetworkCameraSnapshot",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/cameras/{serial}/snapshot",
      "post",
      "responses",
      "202",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/cameras/{serial}/snapshot",
      "post",
      "responses",
      "202",
      "examples",
      "application/json"
    ],
    "lhs": {
      "url": "https://spn4.meraki.com/stream/jpeg/snapshot/b2d123asdf423qd22d2",
      "expiry": "Access to the image will expire at 2018-12-11T03:12:39Z."
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/cameras/{serial}/snapshot",
      "post",
      "responses",
      "202",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"url\": \"https://spn4.meraki.com/stream/jpeg/snapshot/b2d123asdf423qd22d2\",\r\n  \"expiry\": \"Access to the image will expire at 2018-12-11T03:12:39Z.\"\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/cameras/{serial}/snapshot",
      "post",
      "responses",
      "202",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/cameras/{serial}/snapshot",
      "post",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/cameras/{serial}/snapshot",
      "post",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/cameras/{serial}/snapshot",
      "post",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/provision",
      "post",
      "parameters",
      "provisionNetworkClients",
      "schema",
      "title"
    ],
    "rhs": "provisionNetworkClients",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/provision",
      "post",
      "parameters",
      "provisionNetworkClients",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/clients/provision",
      "post",
      "responses",
      "201",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/clients/provision",
      "post",
      "responses",
      "201",
      "examples",
      "application/json"
    ],
    "lhs": {
      "mac": "00:11:22:33:44:55",
      "clientId": "k74272e",
      "name": "Miles's phone",
      "devicePolicy": "Group policy",
      "groupPolicyId": "101"
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/provision",
      "post",
      "responses",
      "201",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"mac\": \"00:11:22:33:44:55\",\r\n  \"clientId\": \"k74272e\",\r\n  \"name\": \"Miles's phone\",\r\n  \"devicePolicy\": \"Group policy\",\r\n  \"groupPolicyId\": \"101\"\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/provision",
      "post",
      "responses",
      "201",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/clients/provision",
      "post",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/provision",
      "post",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/provision",
      "post",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients",
      "get",
      "parameters",
      "t0",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients",
      "get",
      "parameters",
      "timespan",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients",
      "get",
      "parameters",
      "timespan",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients",
      "get",
      "parameters",
      "perPage",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients",
      "get",
      "parameters",
      "perPage",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients",
      "get",
      "parameters",
      "startingAfter",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients",
      "get",
      "parameters",
      "endingBefore",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/clients",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/clients",
      "get",
      "responses",
      "200",
      "headers",
      "Link"
    ],
    "lhs": {
      "type": "string",
      "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/clients",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "usage": {
        "sent": 138,
        "recv": 61
      },
      "id": "k74272e",
      "description": "Miles's phone",
      "mac": "00:11:22:33:44:55",
      "ip": "1.2.3.4",
      "user": "milesmeraki",
      "vlan": 255,
      "switchport": null,
      "ip6": "",
      "firstSeen": 1518365681,
      "lastSeen": 1526087474,
      "manufacturer": "Apple",
      "os": "iOS"
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"usage\": {\r\n    \"sent\": 138.0,\r\n    \"recv\": 61.0\r\n  },\r\n  \"id\": \"k74272e\",\r\n  \"description\": \"Miles's phone\",\r\n  \"mac\": \"00:11:22:33:44:55\",\r\n  \"ip\": \"1.2.3.4\",\r\n  \"user\": \"milesmeraki\",\r\n  \"vlan\": 255,\r\n  \"switchport\": null,\r\n  \"ip6\": \"\",\r\n  \"firstSeen\": 1518365681,\r\n  \"lastSeen\": 1526087474,\r\n  \"manufacturer\": \"Apple\",\r\n  \"os\": \"iOS\"\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/clients",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/clients",
      "get",
      "parameters",
      "t0",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/clients",
      "get",
      "parameters",
      "timespan",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/clients",
      "get",
      "parameters",
      "timespan",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/devices/{serial}/clients",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/devices/{serial}/clients",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "usage": {
        "sent": 138,
        "recv": 61
      },
      "id": "k74272e",
      "description": "Miles's phone",
      "mac": "00:11:22:33:44:55",
      "ip": "1.2.3.4",
      "user": "milesmeraki",
      "vlan": 255,
      "switchport": null,
      "mdnsName": "Miles's phone",
      "dhcpHostname": "MilesPhone"
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/clients",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"usage\": {\r\n    \"sent\": 138.0,\r\n    \"recv\": 61.0\r\n  },\r\n  \"id\": \"k74272e\",\r\n  \"description\": \"Miles's phone\",\r\n  \"mac\": \"00:11:22:33:44:55\",\r\n  \"ip\": \"1.2.3.4\",\r\n  \"user\": \"milesmeraki\",\r\n  \"vlan\": 255,\r\n  \"switchport\": null,\r\n  \"mdnsName\": \"Miles's phone\",\r\n  \"dhcpHostname\": \"MilesPhone\"\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/clients",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/devices/{serial}/clients",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/clients",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/clients",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/configTemplates",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/configTemplates",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "id": "N_24329156",
        "name": "My config template"
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/configTemplates",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"id\": \"N_24329156\",\r\n    \"name\": \"My config template\"\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/configTemplates",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/configTemplates",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/configTemplates",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/configTemplates",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/configTemplates/{id}",
      "delete",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/configTemplates/{id}",
      "delete",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/configTemplates/{id}",
      "delete",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/configTemplates/{id}",
      "delete",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "name": "My AP",
        "lat": 37.4180951010362,
        "lng": -122.098531723022,
        "serial": "Q234-ABCD-5678",
        "mac": "00:11:22:33:44:55",
        "model": "MR34",
        "address": "1600 Pennsylvania Ave",
        "notes": "My AP's note",
        "lanIp": "1.2.3.4",
        "tags": " recently-added ",
        "networkId": "N_24329156",
        "beaconIdParams": {
          "uuid": "00000000-0000-0000-0000-000000000000",
          "major": 5,
          "minor": 3
        }
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"name\": \"My AP\",\r\n    \"lat\": 37.4180951010362,\r\n    \"lng\": -122.098531723022,\r\n    \"serial\": \"Q234-ABCD-5678\",\r\n    \"mac\": \"00:11:22:33:44:55\",\r\n    \"model\": \"MR34\",\r\n    \"address\": \"1600 Pennsylvania Ave\",\r\n    \"notes\": \"My AP's note\",\r\n    \"lanIp\": \"1.2.3.4\",\r\n    \"tags\": \" recently-added \",\r\n    \"networkId\": \"N_24329156\",\r\n    \"beaconIdParams\": {\r\n      \"uuid\": \"00000000-0000-0000-0000-000000000000\",\r\n      \"major\": 5,\r\n      \"minor\": 3\r\n    }\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "name": "My AP",
      "lat": 37.4180951010362,
      "lng": -122.098531723022,
      "serial": "Q234-ABCD-5678",
      "mac": "00:11:22:33:44:55",
      "model": "MR34",
      "address": "1600 Pennsylvania Ave",
      "notes": "My AP's note",
      "lanIp": "1.2.3.4",
      "tags": " recently-added ",
      "networkId": "N_24329156",
      "beaconIdParams": {
        "uuid": "00000000-0000-0000-0000-000000000000",
        "major": 5,
        "minor": 3
      }
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"name\": \"My AP\",\r\n  \"lat\": 37.4180951010362,\r\n  \"lng\": -122.098531723022,\r\n  \"serial\": \"Q234-ABCD-5678\",\r\n  \"mac\": \"00:11:22:33:44:55\",\r\n  \"model\": \"MR34\",\r\n  \"address\": \"1600 Pennsylvania Ave\",\r\n  \"notes\": \"My AP's note\",\r\n  \"lanIp\": \"1.2.3.4\",\r\n  \"tags\": \" recently-added \",\r\n  \"networkId\": \"N_24329156\",\r\n  \"beaconIdParams\": {\r\n    \"uuid\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"major\": 5,\r\n    \"minor\": 3\r\n  }\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "E",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}",
      "put",
      "parameters",
      "updateNetworkDevice",
      "schema",
      "properties",
      "lat",
      "format"
    ],
    "lhs": "float",
    "rhs": "double",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "E",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}",
      "put",
      "parameters",
      "updateNetworkDevice",
      "schema",
      "properties",
      "lng",
      "format"
    ],
    "lhs": "float",
    "rhs": "double",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}",
      "put",
      "parameters",
      "updateNetworkDevice",
      "schema",
      "title"
    ],
    "rhs": "updateNetworkDevice",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}",
      "put",
      "parameters",
      "updateNetworkDevice",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}",
      "put",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}",
      "put",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "name": "My AP",
      "lat": 37.4180951010362,
      "lng": -122.098531723022,
      "serial": "Q234-ABCD-5678",
      "mac": "00:11:22:33:44:55",
      "model": "MR34",
      "address": "1600 Pennsylvania Ave",
      "notes": "My AP's note",
      "lanIp": "1.2.3.4",
      "tags": " recently-added ",
      "networkId": "N_24329156",
      "beaconIdParams": {
        "uuid": "00000000-0000-0000-0000-000000000000",
        "major": 5,
        "minor": 3
      }
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}",
      "put",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"name\": \"My AP\",\r\n  \"lat\": 37.4180951010362,\r\n  \"lng\": -122.098531723022,\r\n  \"serial\": \"Q234-ABCD-5678\",\r\n  \"mac\": \"00:11:22:33:44:55\",\r\n  \"model\": \"MR34\",\r\n  \"address\": \"1600 Pennsylvania Ave\",\r\n  \"notes\": \"My AP's note\",\r\n  \"lanIp\": \"1.2.3.4\",\r\n  \"tags\": \" recently-added \",\r\n  \"networkId\": \"N_24329156\",\r\n  \"beaconIdParams\": {\r\n    \"uuid\": \"00000000-0000-0000-0000-000000000000\",\r\n    \"major\": 5,\r\n    \"minor\": 3\r\n  }\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}",
      "put",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}",
      "put",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}",
      "put",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}",
      "put",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/performance",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/performance",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "perfScore": 10
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/performance",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"perfScore\": 10\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/performance",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/performance",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/performance",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/performance",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/uplink",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/uplink",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "interface": "WAN 1",
        "status": "Active",
        "ip": "1.2.3.4",
        "gateway": "1.2.3.5",
        "publicIp": "123.123.123.1",
        "dns": "8.8.8.8, 8.8.4.4",
        "usingStaticIp": false
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/uplink",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"interface\": \"WAN 1\",\r\n    \"status\": \"Active\",\r\n    \"ip\": \"1.2.3.4\",\r\n    \"gateway\": \"1.2.3.5\",\r\n    \"publicIp\": \"123.123.123.1\",\r\n    \"dns\": \"8.8.8.8, 8.8.4.4\",\r\n    \"usingStaticIp\": false\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/uplink",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/uplink",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/uplink",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/uplink",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/lldp_cdp",
      "get",
      "parameters",
      "timespan",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/lldp_cdp",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/lldp_cdp",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "sourceMac": "00:11:22:33:44:55",
      "ports": {
        "8": {
          "cdp": {
            "deviceId": "e0553d8cdf53",
            "portId": "Port 10",
            "address": "00:11:22:33:44:55",
            "sourcePort": "8"
          }
        },
        "12": {
          "cdp": {
            "deviceId": "e0553d8cdf53",
            "portId": "Port 11",
            "address": "00:11:22:33:44:55",
            "sourcePort": "12"
          },
          "lldp": {
            "systemName": "Meraki MS350-24X - Phineas",
            "portId": "11",
            "managementAddress": "00:11:22:33:44:55",
            "sourcePort": "12"
          }
        }
      }
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/lldp_cdp",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"sourceMac\": \"00:11:22:33:44:55\",\r\n  \"ports\": {\r\n    \"8\": {\r\n      \"cdp\": {\r\n        \"deviceId\": \"e0553d8cdf53\",\r\n        \"portId\": \"Port 10\",\r\n        \"address\": \"00:11:22:33:44:55\",\r\n        \"sourcePort\": \"8\"\r\n      }\r\n    },\r\n    \"12\": {\r\n      \"cdp\": {\r\n        \"deviceId\": \"e0553d8cdf53\",\r\n        \"portId\": \"Port 11\",\r\n        \"address\": \"00:11:22:33:44:55\",\r\n        \"sourcePort\": \"12\"\r\n      },\r\n      \"lldp\": {\r\n        \"systemName\": \"Meraki MS350-24X - Phineas\",\r\n        \"portId\": \"11\",\r\n        \"managementAddress\": \"00:11:22:33:44:55\",\r\n        \"sourcePort\": \"12\"\r\n      }\r\n    }\r\n  }\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/lldp_cdp",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/lldp_cdp",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/lldp_cdp",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/lldp_cdp",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/claim",
      "post",
      "parameters",
      "claimNetworkDevices",
      "schema",
      "title"
    ],
    "rhs": "claimNetworkDevices",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/claim",
      "post",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/claim",
      "post",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/claim",
      "post",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/claim",
      "post",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/claim",
      "post",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/remove",
      "post",
      "responses",
      "204",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/remove",
      "post",
      "responses",
      "204",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/remove",
      "post",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/remove",
      "post",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/remove",
      "post",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/lossAndLatencyHistory",
      "get",
      "parameters",
      "t0",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/lossAndLatencyHistory",
      "get",
      "parameters",
      "t1",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/lossAndLatencyHistory",
      "get",
      "parameters",
      "timespan",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/lossAndLatencyHistory",
      "get",
      "parameters",
      "timespan",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/lossAndLatencyHistory",
      "get",
      "parameters",
      "resolution",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/lossAndLatencyHistory",
      "get",
      "parameters",
      "resolution",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/lossAndLatencyHistory",
      "get",
      "parameters",
      "uplink",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/lossAndLatencyHistory",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/lossAndLatencyHistory",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "startTime": "2018-10-09T22:18:27Z",
        "endTime": "2018-10-09T22:19:27Z",
        "lossPercent": 5,
        "latencyMs": 324
      },
      {
        "startTime": "2018-10-09T22:19:27Z",
        "endTime": "2018-10-09T22:20:27Z",
        "lossPercent": 1,
        "latencyMs": 43
      },
      {
        "startTime": "2018-10-09T22:20:27Z",
        "endTime": "2018-10-09T22:21:27Z",
        "lossPercent": 0,
        "latencyMs": 44
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/lossAndLatencyHistory",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"startTime\": \"2018-10-09T22:18:27Z\",\r\n    \"endTime\": \"2018-10-09T22:19:27Z\",\r\n    \"lossPercent\": 5,\r\n    \"latencyMs\": 324\r\n  },\r\n  {\r\n    \"startTime\": \"2018-10-09T22:19:27Z\",\r\n    \"endTime\": \"2018-10-09T22:20:27Z\",\r\n    \"lossPercent\": 1,\r\n    \"latencyMs\": 43\r\n  },\r\n  {\r\n    \"startTime\": \"2018-10-09T22:20:27Z\",\r\n    \"endTime\": \"2018-10-09T22:21:27Z\",\r\n    \"lossPercent\": 0,\r\n    \"latencyMs\": 44\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/lossAndLatencyHistory",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/lossAndLatencyHistory",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/lossAndLatencyHistory",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/lossAndLatencyHistory",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/reboot",
      "post",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/reboot",
      "post",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "success": true
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/reboot",
      "post",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"success\": true\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/reboot",
      "post",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/reboot",
      "post",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/reboot",
      "post",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/reboot",
      "post",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/blinkLeds",
      "post",
      "parameters",
      "blinkNetworkDeviceLeds",
      "schema",
      "properties",
      "duration",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/blinkLeds",
      "post",
      "parameters",
      "blinkNetworkDeviceLeds",
      "schema",
      "properties",
      "period",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/blinkLeds",
      "post",
      "parameters",
      "blinkNetworkDeviceLeds",
      "schema",
      "properties",
      "duty",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/blinkLeds",
      "post",
      "parameters",
      "blinkNetworkDeviceLeds",
      "schema",
      "title"
    ],
    "rhs": "blinkNetworkDeviceLeds",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/blinkLeds",
      "post",
      "parameters",
      "blinkNetworkDeviceLeds",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/blinkLeds",
      "post",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/blinkLeds",
      "post",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "sentToDevice": true
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/blinkLeds",
      "post",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"sentToDevice\": true\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/blinkLeds",
      "post",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/blinkLeds",
      "post",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/blinkLeds",
      "post",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/blinkLeds",
      "post",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/cellularFirewallRules",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/cellularFirewallRules",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "comment": "Allow TCP traffic to subnet with HTTP servers.",
        "policy": "allow",
        "protocol": "tcp",
        "destPort": 443,
        "destCidr": "192.168.1.0/24",
        "srcPort": "Any",
        "srcCidr": "Any",
        "syslogEnabled": false
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/cellularFirewallRules",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n    \"policy\": \"allow\",\r\n    \"protocol\": \"tcp\",\r\n    \"destPort\": 443,\r\n    \"destCidr\": \"192.168.1.0/24\",\r\n    \"srcPort\": \"Any\",\r\n    \"srcCidr\": \"Any\",\r\n    \"syslogEnabled\": false\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/cellularFirewallRules",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/cellularFirewallRules",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/cellularFirewallRules",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/cellularFirewallRules",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/cellularFirewallRules",
      "put",
      "parameters",
      "updateNetworkCellularFirewallRules",
      "schema",
      "properties",
      "rules",
      "items",
      "title"
    ],
    "rhs": "Rule",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/cellularFirewallRules",
      "put",
      "parameters",
      "updateNetworkCellularFirewallRules",
      "schema",
      "title"
    ],
    "rhs": "updateNetworkCellularFirewallRules",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/cellularFirewallRules",
      "put",
      "parameters",
      "updateNetworkCellularFirewallRules",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/cellularFirewallRules",
      "put",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/cellularFirewallRules",
      "put",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "comment": "Allow TCP traffic to subnet with HTTP servers.",
        "policy": "allow",
        "protocol": "tcp",
        "destPort": 443,
        "destCidr": "192.168.1.0/24",
        "srcPort": "Any",
        "srcCidr": "Any",
        "syslogEnabled": false
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/cellularFirewallRules",
      "put",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n    \"policy\": \"allow\",\r\n    \"protocol\": \"tcp\",\r\n    \"destPort\": 443,\r\n    \"destCidr\": \"192.168.1.0/24\",\r\n    \"srcPort\": \"Any\",\r\n    \"srcCidr\": \"Any\",\r\n    \"syslogEnabled\": false\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/cellularFirewallRules",
      "put",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/cellularFirewallRules",
      "put",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/cellularFirewallRules",
      "put",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/cellularFirewallRules",
      "put",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/l3FirewallRules",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/l3FirewallRules",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "comment": "Allow TCP traffic to subnet with HTTP servers.",
        "policy": "allow",
        "protocol": "tcp",
        "destPort": 443,
        "destCidr": "192.168.1.0/24",
        "srcPort": "Any",
        "srcCidr": "Any",
        "syslogEnabled": false
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/l3FirewallRules",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n    \"policy\": \"allow\",\r\n    \"protocol\": \"tcp\",\r\n    \"destPort\": 443,\r\n    \"destCidr\": \"192.168.1.0/24\",\r\n    \"srcPort\": \"Any\",\r\n    \"srcCidr\": \"Any\",\r\n    \"syslogEnabled\": false\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/l3FirewallRules",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/l3FirewallRules",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/l3FirewallRules",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/l3FirewallRules",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/l3FirewallRules",
      "put",
      "parameters",
      "updateNetworkL3FirewallRules",
      "schema",
      "properties",
      "rules",
      "items",
      "title"
    ],
    "rhs": "Rule",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/l3FirewallRules",
      "put",
      "parameters",
      "updateNetworkL3FirewallRules",
      "schema",
      "title"
    ],
    "rhs": "updateNetworkL3FirewallRules",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/l3FirewallRules",
      "put",
      "parameters",
      "updateNetworkL3FirewallRules",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/l3FirewallRules",
      "put",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/l3FirewallRules",
      "put",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "comment": "Allow TCP traffic to subnet with HTTP servers.",
        "policy": "allow",
        "protocol": "tcp",
        "destPort": 443,
        "destCidr": "192.168.1.0/24",
        "srcPort": "Any",
        "srcCidr": "Any",
        "syslogEnabled": false
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/l3FirewallRules",
      "put",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n    \"policy\": \"allow\",\r\n    \"protocol\": \"tcp\",\r\n    \"destPort\": 443,\r\n    \"destCidr\": \"192.168.1.0/24\",\r\n    \"srcPort\": \"Any\",\r\n    \"srcCidr\": \"Any\",\r\n    \"syslogEnabled\": false\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/l3FirewallRules",
      "put",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/l3FirewallRules",
      "put",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/l3FirewallRules",
      "put",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/l3FirewallRules",
      "put",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/l7FirewallRules/applicationCategories",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/l7FirewallRules/applicationCategories",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "applicationCategories": [
          {
            "id": "meraki:layer7/category/24",
            "name": "Advertising",
            "applications": [
              {
                "id": "meraki:layer7/application/5",
                "name": "Advertising.com"
              },
              {
                "id": "meraki:layer7/application/0",
                "name": "AppNexus"
              },
              {
                "id": "meraki:layer7/application/1",
                "name": "Brightroll"
              }
            ]
          }
        ]
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/l7FirewallRules/applicationCategories",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"applicationCategories\": [\r\n      {\r\n        \"id\": \"meraki:layer7/category/24\",\r\n        \"name\": \"Advertising\",\r\n        \"applications\": [\r\n          {\r\n            \"id\": \"meraki:layer7/application/5\",\r\n            \"name\": \"Advertising.com\"\r\n          },\r\n          {\r\n            \"id\": \"meraki:layer7/application/0\",\r\n            \"name\": \"AppNexus\"\r\n          },\r\n          {\r\n            \"id\": \"meraki:layer7/application/1\",\r\n            \"name\": \"Brightroll\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/l7FirewallRules/applicationCategories",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/l7FirewallRules/applicationCategories",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/l7FirewallRules/applicationCategories",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/l7FirewallRules/applicationCategories",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/l7FirewallRules",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/l7FirewallRules",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "rules": [
        {
          "policy": "deny",
          "type": "application",
          "value": {
            "id": "meraki:layer7/application/67",
            "name": "Xbox LIVE"
          }
        },
        {
          "policy": "deny",
          "type": "applicationCategory",
          "value": {
            "id": "meraki:layer7/category/2",
            "name": "Blogging"
          }
        },
        {
          "policy": "deny",
          "type": "host",
          "value": "google.com"
        },
        {
          "policy": "deny",
          "type": "port",
          "value": "23"
        },
        {
          "policy": "deny",
          "type": "ipRange",
          "value": "10.11.12.00/24"
        },
        {
          "policy": "deny",
          "type": "ipRange",
          "value": "10.11.12.00/24:5555"
        },
        {
          "policy": "deny",
          "type": "blacklistedCountries",
          "value": [
            "AX",
            "CA"
          ]
        },
        {
          "policy": "deny",
          "type": "whitelistedCountries",
          "value": [
            "US"
          ]
        }
      ]
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/l7FirewallRules",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"rules\": [\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"application\",\r\n      \"value\": {\r\n        \"id\": \"meraki:layer7/application/67\",\r\n        \"name\": \"Xbox LIVE\"\r\n      }\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"applicationCategory\",\r\n      \"value\": {\r\n        \"id\": \"meraki:layer7/category/2\",\r\n        \"name\": \"Blogging\"\r\n      }\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"host\",\r\n      \"value\": \"google.com\"\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"port\",\r\n      \"value\": \"23\"\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"ipRange\",\r\n      \"value\": \"10.11.12.00/24\"\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"ipRange\",\r\n      \"value\": \"10.11.12.00/24:5555\"\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"blacklistedCountries\",\r\n      \"value\": [\r\n        \"AX\",\r\n        \"CA\"\r\n      ]\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"whitelistedCountries\",\r\n      \"value\": [\r\n        \"US\"\r\n      ]\r\n    }\r\n  ]\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/l7FirewallRules",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/l7FirewallRules",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/l7FirewallRules",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/l7FirewallRules",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/l7FirewallRules",
      "put",
      "parameters",
      "updateNetworkL7FirewallRules",
      "schema",
      "properties",
      "rules",
      "items",
      "properties",
      "policy",
      "title"
    ],
    "rhs": "Policy",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/l7FirewallRules",
      "put",
      "parameters",
      "updateNetworkL7FirewallRules",
      "schema",
      "properties",
      "rules",
      "items",
      "properties",
      "policy",
      "example"
    ],
    "rhs": "deny",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/l7FirewallRules",
      "put",
      "parameters",
      "updateNetworkL7FirewallRules",
      "schema",
      "properties",
      "rules",
      "items",
      "properties",
      "type",
      "title"
    ],
    "rhs": "Type",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/l7FirewallRules",
      "put",
      "parameters",
      "updateNetworkL7FirewallRules",
      "schema",
      "properties",
      "rules",
      "items",
      "properties",
      "type",
      "example"
    ],
    "rhs": "application",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/l7FirewallRules",
      "put",
      "parameters",
      "updateNetworkL7FirewallRules",
      "schema",
      "properties",
      "rules",
      "items",
      "title"
    ],
    "rhs": "Rule2",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/l7FirewallRules",
      "put",
      "parameters",
      "updateNetworkL7FirewallRules",
      "schema",
      "title"
    ],
    "rhs": "updateNetworkL7FirewallRules",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/l7FirewallRules",
      "put",
      "parameters",
      "updateNetworkL7FirewallRules",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/l7FirewallRules",
      "put",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/l7FirewallRules",
      "put",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "rules": [
        {
          "policy": "deny",
          "type": "application",
          "value": {
            "id": "meraki:layer7/application/67",
            "name": "Xbox LIVE"
          }
        },
        {
          "policy": "deny",
          "type": "applicationCategory",
          "value": {
            "id": "meraki:layer7/category/2",
            "name": "Blogging"
          }
        },
        {
          "policy": "deny",
          "type": "host",
          "value": "google.com"
        },
        {
          "policy": "deny",
          "type": "port",
          "value": "23"
        },
        {
          "policy": "deny",
          "type": "ipRange",
          "value": "10.11.12.00/24"
        },
        {
          "policy": "deny",
          "type": "ipRange",
          "value": "10.11.12.00/24:5555"
        },
        {
          "policy": "deny",
          "type": "blacklistedCountries",
          "value": [
            "AX",
            "CA"
          ]
        },
        {
          "policy": "deny",
          "type": "whitelistedCountries",
          "value": [
            "US"
          ]
        }
      ]
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/l7FirewallRules",
      "put",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"rules\": [\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"application\",\r\n      \"value\": {\r\n        \"id\": \"meraki:layer7/application/67\",\r\n        \"name\": \"Xbox LIVE\"\r\n      }\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"applicationCategory\",\r\n      \"value\": {\r\n        \"id\": \"meraki:layer7/category/2\",\r\n        \"name\": \"Blogging\"\r\n      }\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"host\",\r\n      \"value\": \"google.com\"\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"port\",\r\n      \"value\": \"23\"\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"ipRange\",\r\n      \"value\": \"10.11.12.00/24\"\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"ipRange\",\r\n      \"value\": \"10.11.12.00/24:5555\"\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"blacklistedCountries\",\r\n      \"value\": [\r\n        \"AX\",\r\n        \"CA\"\r\n      ]\r\n    },\r\n    {\r\n      \"policy\": \"deny\",\r\n      \"type\": \"whitelistedCountries\",\r\n      \"value\": [\r\n        \"US\"\r\n      ]\r\n    }\r\n  ]\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/l7FirewallRules",
      "put",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/l7FirewallRules",
      "put",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/l7FirewallRules",
      "put",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/l7FirewallRules",
      "put",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/vpnFirewallRules",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/vpnFirewallRules",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "comment": "Allow TCP traffic to subnet with HTTP servers.",
        "policy": "allow",
        "protocol": "tcp",
        "destPort": 443,
        "destCidr": "192.168.1.0/24",
        "srcPort": "Any",
        "srcCidr": "Any",
        "syslogEnabled": false
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/vpnFirewallRules",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n    \"policy\": \"allow\",\r\n    \"protocol\": \"tcp\",\r\n    \"destPort\": 443,\r\n    \"destCidr\": \"192.168.1.0/24\",\r\n    \"srcPort\": \"Any\",\r\n    \"srcCidr\": \"Any\",\r\n    \"syslogEnabled\": false\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/vpnFirewallRules",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/vpnFirewallRules",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/vpnFirewallRules",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/vpnFirewallRules",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/vpnFirewallRules",
      "put",
      "parameters",
      "updateOrganizationVpnFirewallRules",
      "schema",
      "properties",
      "rules",
      "items",
      "title"
    ],
    "rhs": "Rule3",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/vpnFirewallRules",
      "put",
      "parameters",
      "updateOrganizationVpnFirewallRules",
      "schema",
      "title"
    ],
    "rhs": "updateOrganizationVpnFirewallRules",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/vpnFirewallRules",
      "put",
      "parameters",
      "updateOrganizationVpnFirewallRules",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/vpnFirewallRules",
      "put",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/vpnFirewallRules",
      "put",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "comment": "Allow TCP traffic to subnet with HTTP servers.",
        "policy": "allow",
        "protocol": "tcp",
        "destPort": 443,
        "destCidr": "192.168.1.0/24",
        "srcPort": "Any",
        "srcCidr": "Any",
        "syslogEnabled": false
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/vpnFirewallRules",
      "put",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n    \"policy\": \"allow\",\r\n    \"protocol\": \"tcp\",\r\n    \"destPort\": 443,\r\n    \"destCidr\": \"192.168.1.0/24\",\r\n    \"srcPort\": \"Any\",\r\n    \"srcCidr\": \"Any\",\r\n    \"syslogEnabled\": false\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/vpnFirewallRules",
      "put",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/vpnFirewallRules",
      "put",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/vpnFirewallRules",
      "put",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/vpnFirewallRules",
      "put",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/l3FirewallRules",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/l3FirewallRules",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "comment": "Allow TCP traffic to subnet with HTTP servers.",
        "policy": "allow",
        "protocol": "tcp",
        "destPort": 443,
        "destCidr": "192.168.1.0/24"
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/l3FirewallRules",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n    \"policy\": \"allow\",\r\n    \"protocol\": \"tcp\",\r\n    \"destPort\": 443,\r\n    \"destCidr\": \"192.168.1.0/24\"\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/l3FirewallRules",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/l3FirewallRules",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/l3FirewallRules",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/l3FirewallRules",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/l3FirewallRules",
      "put",
      "parameters",
      "updateNetworkSsidL3FirewallRules",
      "schema",
      "properties",
      "rules",
      "items",
      "title"
    ],
    "rhs": "Rule4",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/l3FirewallRules",
      "put",
      "parameters",
      "updateNetworkSsidL3FirewallRules",
      "schema",
      "title"
    ],
    "rhs": "updateNetworkSsidL3FirewallRules",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/l3FirewallRules",
      "put",
      "parameters",
      "updateNetworkSsidL3FirewallRules",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/l3FirewallRules",
      "put",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/l3FirewallRules",
      "put",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "comment": "Allow TCP traffic to subnet with HTTP servers.",
        "policy": "allow",
        "protocol": "tcp",
        "destPort": 443,
        "destCidr": "192.168.1.0/24"
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/l3FirewallRules",
      "put",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n    \"policy\": \"allow\",\r\n    \"protocol\": \"tcp\",\r\n    \"destPort\": 443,\r\n    \"destCidr\": \"192.168.1.0/24\"\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/l3FirewallRules",
      "put",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/l3FirewallRules",
      "put",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/l3FirewallRules",
      "put",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/l3FirewallRules",
      "put",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "name": "No video streaming",
        "groupPolicyId": "101",
        "scheduling": {
          "enabled": true,
          "monday": {
            "active": true,
            "from": "9:00",
            "to": "17:00"
          },
          "tuesday": {
            "active": true,
            "from": "9:00",
            "to": "17:00"
          },
          "wednesday": {
            "active": true,
            "from": "9:00",
            "to": "17:00"
          },
          "thursday": {
            "active": true,
            "from": "9:00",
            "to": "17:00"
          },
          "friday": {
            "active": true,
            "from": "9:00",
            "to": "17:00"
          },
          "saturday": {
            "active": false,
            "from": "0:00",
            "to": "24:00"
          },
          "sunday": {
            "active": false,
            "from": "0:00",
            "to": "24:00"
          }
        },
        "bandwidth": {
          "settings": "custom",
          "bandwidthLimits": {
            "limitUp": 1000000,
            "limitDown": 1000000
          }
        }
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"name\": \"No video streaming\",\r\n    \"groupPolicyId\": \"101\",\r\n    \"scheduling\": {\r\n      \"enabled\": true,\r\n      \"monday\": {\r\n        \"active\": true,\r\n        \"from\": \"9:00\",\r\n        \"to\": \"17:00\"\r\n      },\r\n      \"tuesday\": {\r\n        \"active\": true,\r\n        \"from\": \"9:00\",\r\n        \"to\": \"17:00\"\r\n      },\r\n      \"wednesday\": {\r\n        \"active\": true,\r\n        \"from\": \"9:00\",\r\n        \"to\": \"17:00\"\r\n      },\r\n      \"thursday\": {\r\n        \"active\": true,\r\n        \"from\": \"9:00\",\r\n        \"to\": \"17:00\"\r\n      },\r\n      \"friday\": {\r\n        \"active\": true,\r\n        \"from\": \"9:00\",\r\n        \"to\": \"17:00\"\r\n      },\r\n      \"saturday\": {\r\n        \"active\": false,\r\n        \"from\": \"0:00\",\r\n        \"to\": \"24:00\"\r\n      },\r\n      \"sunday\": {\r\n        \"active\": false,\r\n        \"from\": \"0:00\",\r\n        \"to\": \"24:00\"\r\n      }\r\n    },\r\n    \"bandwidth\": {\r\n      \"settings\": \"custom\",\r\n      \"bandwidthLimits\": {\r\n        \"limitUp\": 1000000,\r\n        \"limitDown\": 1000000\r\n      }\r\n    },\r\n    \"firewallAndTrafficShaping\": {\r\n      \"settings\": \"custom\",\r\n      \"trafficShapingRules\": [\r\n        {\r\n          \"definitions\": [\r\n            {\r\n              \"type\": \"host\",\r\n              \"value\": \"google.com\"\r\n            },\r\n            {\r\n              \"type\": \"port\",\r\n              \"value\": \"9090\"\r\n            },\r\n            {\r\n              \"type\": \"ipRange\",\r\n              \"value\": \"192.1.0.0\"\r\n            },\r\n            {\r\n              \"type\": \"ipRange\",\r\n              \"value\": \"192.1.0.0/16\"\r\n            },\r\n            {\r\n              \"type\": \"ipRange\",\r\n              \"value\": \"10.1.0.0/16:80\"\r\n            },\r\n            {\r\n              \"type\": \"localNet\",\r\n              \"value\": \"192.168.0.0/16\"\r\n            },\r\n            {\r\n              \"type\": \"applicationCategory\",\r\n              \"value\": {\r\n                \"id\": \"meraki:layer7/category/2\",\r\n                \"name\": \"Blogging\"\r\n              }\r\n            },\r\n            {\r\n              \"type\": \"application\",\r\n              \"value\": {\r\n                \"id\": \"meraki:layer7/application/133\",\r\n                \"name\": \"Battle.net\"\r\n              }\r\n            }\r\n          ],\r\n          \"perClientBandwidthLimits\": {\r\n            \"settings\": \"custom\",\r\n            \"bandwidthLimits\": {\r\n              \"limitUp\": 1000000,\r\n              \"limitDown\": 1000000\r\n            }\r\n          },\r\n          \"dscpTagValue\": null,\r\n          \"pcpTagValue\": null\r\n        }\r\n      ],\r\n      \"l3FirewallRules\": [\r\n        {\r\n          \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n          \"policy\": \"allow\",\r\n          \"protocol\": \"tcp\",\r\n          \"destPort\": 443,\r\n          \"destCidr\": \"192.168.1.0/24\"\r\n        }\r\n      ],\r\n      \"l7FirewallRules\": [\r\n        [\r\n          {\r\n            \"policy\": \"deny\",\r\n            \"type\": \"application\",\r\n            \"value\": {\r\n              \"id\": \"meraki:layer7/application/67\",\r\n              \"name\": \"Xbox LIVE\"\r\n            }\r\n          },\r\n          {\r\n            \"policy\": \"deny\",\r\n            \"type\": \"applicationCategory\",\r\n            \"value\": {\r\n              \"id\": \"meraki:layer7/category/2\",\r\n              \"name\": \"Blogging\"\r\n            }\r\n          },\r\n          {\r\n            \"policy\": \"deny\",\r\n            \"type\": \"host\",\r\n            \"value\": \"google.com\"\r\n          },\r\n          {\r\n            \"policy\": \"deny\",\r\n            \"type\": \"port\",\r\n            \"value\": \"23\"\r\n          },\r\n          {\r\n            \"policy\": \"deny\",\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"10.11.12.00/24\"\r\n          },\r\n          {\r\n            \"policy\": \"deny\",\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"10.11.12.00/24:5555\"\r\n          },\r\n          {\r\n            \"policy\": \"deny\",\r\n            \"type\": \"blacklistedCountries\",\r\n            \"value\": [\r\n              \"AX\",\r\n              \"CA\"\r\n            ]\r\n          },\r\n          {\r\n            \"policy\": \"deny\",\r\n            \"type\": \"whitelistedCountries\",\r\n            \"value\": [\r\n              \"US\"\r\n            ]\r\n          }\r\n        ]\r\n      ]\r\n    },\r\n    \"splashAuthSettings\": \"bypass\",\r\n    \"vlanTagging\": {\r\n      \"settings\": \"custom\",\r\n      \"vlanId\": \"1\"\r\n    },\r\n    \"bonjourForwarding\": {\r\n      \"settings\": \"custom\",\r\n      \"rules\": [\r\n        {\r\n          \"description\": \"A simple bonjour rule\",\r\n          \"vlanId\": \"1\",\r\n          \"services\": [\r\n            \"All Services\"\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "parameters",
      "createNetworkGroupPolicy",
      "schema",
      "properties",
      "scheduling",
      "properties",
      "monday",
      "title"
    ],
    "rhs": "Monday",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "parameters",
      "createNetworkGroupPolicy",
      "schema",
      "properties",
      "scheduling",
      "properties",
      "tuesday",
      "title"
    ],
    "rhs": "Tuesday",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "parameters",
      "createNetworkGroupPolicy",
      "schema",
      "properties",
      "scheduling",
      "properties",
      "wednesday",
      "title"
    ],
    "rhs": "Wednesday",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "parameters",
      "createNetworkGroupPolicy",
      "schema",
      "properties",
      "scheduling",
      "properties",
      "thursday",
      "title"
    ],
    "rhs": "Thursday",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "parameters",
      "createNetworkGroupPolicy",
      "schema",
      "properties",
      "scheduling",
      "properties",
      "friday",
      "title"
    ],
    "rhs": "Friday",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "parameters",
      "createNetworkGroupPolicy",
      "schema",
      "properties",
      "scheduling",
      "properties",
      "saturday",
      "title"
    ],
    "rhs": "Saturday",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "parameters",
      "createNetworkGroupPolicy",
      "schema",
      "properties",
      "scheduling",
      "properties",
      "sunday",
      "title"
    ],
    "rhs": "Sunday",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "parameters",
      "createNetworkGroupPolicy",
      "schema",
      "properties",
      "scheduling",
      "title"
    ],
    "rhs": "Scheduling",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "parameters",
      "createNetworkGroupPolicy",
      "schema",
      "properties",
      "bandwidth",
      "properties",
      "settings",
      "title"
    ],
    "rhs": "Settings",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "parameters",
      "createNetworkGroupPolicy",
      "schema",
      "properties",
      "bandwidth",
      "properties",
      "settings",
      "example"
    ],
    "rhs": "network default",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "parameters",
      "createNetworkGroupPolicy",
      "schema",
      "properties",
      "bandwidth",
      "properties",
      "bandwidthLimits",
      "properties",
      "limitUp",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "parameters",
      "createNetworkGroupPolicy",
      "schema",
      "properties",
      "bandwidth",
      "properties",
      "bandwidthLimits",
      "properties",
      "limitDown",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "parameters",
      "createNetworkGroupPolicy",
      "schema",
      "properties",
      "bandwidth",
      "properties",
      "bandwidthLimits",
      "title"
    ],
    "rhs": "BandwidthLimits",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "parameters",
      "createNetworkGroupPolicy",
      "schema",
      "properties",
      "bandwidth",
      "title"
    ],
    "rhs": "Bandwidth",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "parameters",
      "createNetworkGroupPolicy",
      "schema",
      "properties",
      "firewallAndTrafficShaping",
      "properties",
      "settings",
      "title"
    ],
    "rhs": "Settings1",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "parameters",
      "createNetworkGroupPolicy",
      "schema",
      "properties",
      "firewallAndTrafficShaping",
      "properties",
      "settings",
      "example"
    ],
    "rhs": "network default",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "parameters",
      "createNetworkGroupPolicy",
      "schema",
      "properties",
      "firewallAndTrafficShaping",
      "properties",
      "trafficShapingRules",
      "items",
      "properties",
      "definitions",
      "items",
      "properties",
      "type",
      "title"
    ],
    "rhs": "Type1",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "parameters",
      "createNetworkGroupPolicy",
      "schema",
      "properties",
      "firewallAndTrafficShaping",
      "properties",
      "trafficShapingRules",
      "items",
      "properties",
      "definitions",
      "items",
      "properties",
      "type",
      "example"
    ],
    "rhs": "application",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "parameters",
      "createNetworkGroupPolicy",
      "schema",
      "properties",
      "firewallAndTrafficShaping",
      "properties",
      "trafficShapingRules",
      "items",
      "properties",
      "definitions",
      "items",
      "title"
    ],
    "rhs": "Definition",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "parameters",
      "createNetworkGroupPolicy",
      "schema",
      "properties",
      "firewallAndTrafficShaping",
      "properties",
      "trafficShapingRules",
      "items",
      "properties",
      "perClientBandwidthLimits",
      "properties",
      "bandwidthLimits",
      "properties",
      "limitUp",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "parameters",
      "createNetworkGroupPolicy",
      "schema",
      "properties",
      "firewallAndTrafficShaping",
      "properties",
      "trafficShapingRules",
      "items",
      "properties",
      "perClientBandwidthLimits",
      "properties",
      "bandwidthLimits",
      "properties",
      "limitDown",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "parameters",
      "createNetworkGroupPolicy",
      "schema",
      "properties",
      "firewallAndTrafficShaping",
      "properties",
      "trafficShapingRules",
      "items",
      "properties",
      "perClientBandwidthLimits",
      "properties",
      "bandwidthLimits",
      "title"
    ],
    "rhs": "BandwidthLimits1",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "parameters",
      "createNetworkGroupPolicy",
      "schema",
      "properties",
      "firewallAndTrafficShaping",
      "properties",
      "trafficShapingRules",
      "items",
      "properties",
      "perClientBandwidthLimits",
      "title"
    ],
    "rhs": "PerClientBandwidthLimits",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "parameters",
      "createNetworkGroupPolicy",
      "schema",
      "properties",
      "firewallAndTrafficShaping",
      "properties",
      "trafficShapingRules",
      "items",
      "properties",
      "dscpTagValue",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "parameters",
      "createNetworkGroupPolicy",
      "schema",
      "properties",
      "firewallAndTrafficShaping",
      "properties",
      "trafficShapingRules",
      "items",
      "properties",
      "pcpTagValue",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "parameters",
      "createNetworkGroupPolicy",
      "schema",
      "properties",
      "firewallAndTrafficShaping",
      "properties",
      "trafficShapingRules",
      "items",
      "title"
    ],
    "rhs": "TrafficShapingRule",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "parameters",
      "createNetworkGroupPolicy",
      "schema",
      "properties",
      "firewallAndTrafficShaping",
      "properties",
      "l3FirewallRules",
      "items",
      "title"
    ],
    "rhs": "L3FirewallRule",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "parameters",
      "createNetworkGroupPolicy",
      "schema",
      "properties",
      "firewallAndTrafficShaping",
      "properties",
      "l7FirewallRules",
      "items",
      "properties",
      "policy",
      "title"
    ],
    "rhs": "Policy1",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "parameters",
      "createNetworkGroupPolicy",
      "schema",
      "properties",
      "firewallAndTrafficShaping",
      "properties",
      "l7FirewallRules",
      "items",
      "properties",
      "policy",
      "example"
    ],
    "rhs": "deny",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "parameters",
      "createNetworkGroupPolicy",
      "schema",
      "properties",
      "firewallAndTrafficShaping",
      "properties",
      "l7FirewallRules",
      "items",
      "properties",
      "type",
      "title"
    ],
    "rhs": "Type2",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "parameters",
      "createNetworkGroupPolicy",
      "schema",
      "properties",
      "firewallAndTrafficShaping",
      "properties",
      "l7FirewallRules",
      "items",
      "properties",
      "type",
      "example"
    ],
    "rhs": "application",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "parameters",
      "createNetworkGroupPolicy",
      "schema",
      "properties",
      "firewallAndTrafficShaping",
      "properties",
      "l7FirewallRules",
      "items",
      "title"
    ],
    "rhs": "L7FirewallRule",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "parameters",
      "createNetworkGroupPolicy",
      "schema",
      "properties",
      "firewallAndTrafficShaping",
      "title"
    ],
    "rhs": "FirewallAndTrafficShaping",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "parameters",
      "createNetworkGroupPolicy",
      "schema",
      "example",
      "firewallAndTrafficShaping"
    ],
    "rhs": {
      "settings": "custom",
      "trafficShapingRules": [
        {
          "definitions": [
            {
              "type": "host",
              "value": "google.com"
            },
            {
              "type": "port",
              "value": "9090"
            },
            {
              "type": "ipRange",
              "value": "192.1.0.0"
            },
            {
              "type": "ipRange",
              "value": "192.1.0.0/16"
            },
            {
              "type": "ipRange",
              "value": "10.1.0.0/16:80"
            },
            {
              "type": "localNet",
              "value": "192.168.0.0/16"
            },
            {
              "type": "applicationCategory",
              "value": {
                "id": "meraki:layer7/category/2",
                "name": "Blogging"
              }
            },
            {
              "type": "application",
              "value": {
                "id": "meraki:layer7/application/133",
                "name": "Battle.net"
              }
            }
          ],
          "perClientBandwidthLimits": {
            "settings": "custom",
            "bandwidthLimits": {
              "limitUp": 1000000,
              "limitDown": 1000000
            }
          },
          "dscpTagValue": null,
          "pcpTagValue": null
        }
      ],
      "l3FirewallRules": [
        {
          "comment": "Allow TCP traffic to subnet with HTTP servers.",
          "policy": "allow",
          "protocol": "tcp",
          "destPort": 443,
          "destCidr": "192.168.1.0/24"
        }
      ],
      "l7FirewallRules": [
        [
          {
            "policy": "deny",
            "type": "application",
            "value": {
              "id": "meraki:layer7/application/67",
              "name": "Xbox LIVE"
            }
          },
          {
            "policy": "deny",
            "type": "applicationCategory",
            "value": {
              "id": "meraki:layer7/category/2",
              "name": "Blogging"
            }
          },
          {
            "policy": "deny",
            "type": "host",
            "value": "google.com"
          },
          {
            "policy": "deny",
            "type": "port",
            "value": "23"
          },
          {
            "policy": "deny",
            "type": "ipRange",
            "value": "10.11.12.00/24"
          },
          {
            "policy": "deny",
            "type": "ipRange",
            "value": "10.11.12.00/24:5555"
          },
          {
            "policy": "deny",
            "type": "blacklistedCountries",
            "value": [
              "AX",
              "CA"
            ]
          },
          {
            "policy": "deny",
            "type": "whitelistedCountries",
            "value": [
              "US"
            ]
          }
        ]
      ]
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "parameters",
      "createNetworkGroupPolicy",
      "schema",
      "example",
      "splashAuthSettings"
    ],
    "rhs": "bypass",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "parameters",
      "createNetworkGroupPolicy",
      "schema",
      "example",
      "vlanTagging"
    ],
    "rhs": {
      "settings": "custom",
      "vlanId": "1"
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "parameters",
      "createNetworkGroupPolicy",
      "schema",
      "example",
      "bonjourForwarding"
    ],
    "rhs": {
      "settings": "custom",
      "rules": [
        {
          "description": "A simple bonjour rule",
          "vlanId": "1",
          "services": [
            "All Services"
          ]
        }
      ]
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "parameters",
      "createNetworkGroupPolicy",
      "schema",
      "title"
    ],
    "rhs": "createNetworkGroupPolicy",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "responses",
      "201",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "responses",
      "201",
      "examples",
      "application/json"
    ],
    "lhs": {
      "name": "No video streaming",
      "groupPolicyId": "101",
      "scheduling": {
        "enabled": true,
        "monday": {
          "active": true,
          "from": "9:00",
          "to": "17:00"
        },
        "tuesday": {
          "active": true,
          "from": "9:00",
          "to": "17:00"
        },
        "wednesday": {
          "active": true,
          "from": "9:00",
          "to": "17:00"
        },
        "thursday": {
          "active": true,
          "from": "9:00",
          "to": "17:00"
        },
        "friday": {
          "active": true,
          "from": "9:00",
          "to": "17:00"
        },
        "saturday": {
          "active": false,
          "from": "0:00",
          "to": "24:00"
        },
        "sunday": {
          "active": false,
          "from": "0:00",
          "to": "24:00"
        }
      },
      "bandwidth": {
        "settings": "custom",
        "bandwidthLimits": {
          "limitUp": 1000000,
          "limitDown": 1000000
        }
      }
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "responses",
      "201",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"name\": \"No video streaming\",\r\n  \"groupPolicyId\": \"101\",\r\n  \"scheduling\": {\r\n    \"enabled\": true,\r\n    \"monday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"tuesday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"wednesday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"thursday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"friday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"saturday\": {\r\n      \"active\": false,\r\n      \"from\": \"0:00\",\r\n      \"to\": \"24:00\"\r\n    },\r\n    \"sunday\": {\r\n      \"active\": false,\r\n      \"from\": \"0:00\",\r\n      \"to\": \"24:00\"\r\n    }\r\n  },\r\n  \"bandwidth\": {\r\n    \"settings\": \"custom\",\r\n    \"bandwidthLimits\": {\r\n      \"limitUp\": 1000000,\r\n      \"limitDown\": 1000000\r\n    }\r\n  },\r\n  \"firewallAndTrafficShaping\": {\r\n    \"settings\": \"custom\",\r\n    \"trafficShapingRules\": [\r\n      {\r\n        \"definitions\": [\r\n          {\r\n            \"type\": \"host\",\r\n            \"value\": \"google.com\"\r\n          },\r\n          {\r\n            \"type\": \"port\",\r\n            \"value\": \"9090\"\r\n          },\r\n          {\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"192.1.0.0\"\r\n          },\r\n          {\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"192.1.0.0/16\"\r\n          },\r\n          {\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"10.1.0.0/16:80\"\r\n          },\r\n          {\r\n            \"type\": \"localNet\",\r\n            \"value\": \"192.168.0.0/16\"\r\n          },\r\n          {\r\n            \"type\": \"applicationCategory\",\r\n            \"value\": {\r\n              \"id\": \"meraki:layer7/category/2\",\r\n              \"name\": \"Blogging\"\r\n            }\r\n          },\r\n          {\r\n            \"type\": \"application\",\r\n            \"value\": {\r\n              \"id\": \"meraki:layer7/application/133\",\r\n              \"name\": \"Battle.net\"\r\n            }\r\n          }\r\n        ],\r\n        \"perClientBandwidthLimits\": {\r\n          \"settings\": \"custom\",\r\n          \"bandwidthLimits\": {\r\n            \"limitUp\": 1000000,\r\n            \"limitDown\": 1000000\r\n          }\r\n        },\r\n        \"dscpTagValue\": null,\r\n        \"pcpTagValue\": null\r\n      }\r\n    ],\r\n    \"l3FirewallRules\": [\r\n      {\r\n        \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n        \"policy\": \"allow\",\r\n        \"protocol\": \"tcp\",\r\n        \"destPort\": 443,\r\n        \"destCidr\": \"192.168.1.0/24\"\r\n      }\r\n    ],\r\n    \"l7FirewallRules\": [\r\n      [\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"application\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/application/67\",\r\n            \"name\": \"Xbox LIVE\"\r\n          }\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"applicationCategory\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/category/2\",\r\n            \"name\": \"Blogging\"\r\n          }\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"host\",\r\n          \"value\": \"google.com\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"port\",\r\n          \"value\": \"23\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"10.11.12.00/24\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"10.11.12.00/24:5555\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"blacklistedCountries\",\r\n          \"value\": [\r\n            \"AX\",\r\n            \"CA\"\r\n          ]\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"whitelistedCountries\",\r\n          \"value\": [\r\n            \"US\"\r\n          ]\r\n        }\r\n      ]\r\n    ]\r\n  },\r\n  \"splashAuthSettings\": \"bypass\",\r\n  \"vlanTagging\": {\r\n    \"settings\": \"custom\",\r\n    \"vlanId\": \"1\"\r\n  },\r\n  \"bonjourForwarding\": {\r\n    \"settings\": \"custom\",\r\n    \"rules\": [\r\n      {\r\n        \"description\": \"A simple bonjour rule\",\r\n        \"vlanId\": \"1\",\r\n        \"services\": [\r\n          \"All Services\"\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "responses",
      "201",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies",
      "post",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "name": "No video streaming",
      "groupPolicyId": "101",
      "scheduling": {
        "enabled": true,
        "monday": {
          "active": true,
          "from": "9:00",
          "to": "17:00"
        },
        "tuesday": {
          "active": true,
          "from": "9:00",
          "to": "17:00"
        },
        "wednesday": {
          "active": true,
          "from": "9:00",
          "to": "17:00"
        },
        "thursday": {
          "active": true,
          "from": "9:00",
          "to": "17:00"
        },
        "friday": {
          "active": true,
          "from": "9:00",
          "to": "17:00"
        },
        "saturday": {
          "active": false,
          "from": "0:00",
          "to": "24:00"
        },
        "sunday": {
          "active": false,
          "from": "0:00",
          "to": "24:00"
        }
      },
      "bandwidth": {
        "settings": "custom",
        "bandwidthLimits": {
          "limitUp": 1000000,
          "limitDown": 1000000
        }
      }
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"name\": \"No video streaming\",\r\n  \"groupPolicyId\": \"101\",\r\n  \"scheduling\": {\r\n    \"enabled\": true,\r\n    \"monday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"tuesday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"wednesday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"thursday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"friday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"saturday\": {\r\n      \"active\": false,\r\n      \"from\": \"0:00\",\r\n      \"to\": \"24:00\"\r\n    },\r\n    \"sunday\": {\r\n      \"active\": false,\r\n      \"from\": \"0:00\",\r\n      \"to\": \"24:00\"\r\n    }\r\n  },\r\n  \"bandwidth\": {\r\n    \"settings\": \"custom\",\r\n    \"bandwidthLimits\": {\r\n      \"limitUp\": 1000000,\r\n      \"limitDown\": 1000000\r\n    }\r\n  },\r\n  \"firewallAndTrafficShaping\": {\r\n    \"settings\": \"custom\",\r\n    \"trafficShapingRules\": [\r\n      {\r\n        \"definitions\": [\r\n          {\r\n            \"type\": \"host\",\r\n            \"value\": \"google.com\"\r\n          },\r\n          {\r\n            \"type\": \"port\",\r\n            \"value\": \"9090\"\r\n          },\r\n          {\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"192.1.0.0\"\r\n          },\r\n          {\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"192.1.0.0/16\"\r\n          },\r\n          {\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"10.1.0.0/16:80\"\r\n          },\r\n          {\r\n            \"type\": \"localNet\",\r\n            \"value\": \"192.168.0.0/16\"\r\n          },\r\n          {\r\n            \"type\": \"applicationCategory\",\r\n            \"value\": {\r\n              \"id\": \"meraki:layer7/category/2\",\r\n              \"name\": \"Blogging\"\r\n            }\r\n          },\r\n          {\r\n            \"type\": \"application\",\r\n            \"value\": {\r\n              \"id\": \"meraki:layer7/application/133\",\r\n              \"name\": \"Battle.net\"\r\n            }\r\n          }\r\n        ],\r\n        \"perClientBandwidthLimits\": {\r\n          \"settings\": \"custom\",\r\n          \"bandwidthLimits\": {\r\n            \"limitUp\": 1000000,\r\n            \"limitDown\": 1000000\r\n          }\r\n        },\r\n        \"dscpTagValue\": null,\r\n        \"pcpTagValue\": null\r\n      }\r\n    ],\r\n    \"l3FirewallRules\": [\r\n      {\r\n        \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n        \"policy\": \"allow\",\r\n        \"protocol\": \"tcp\",\r\n        \"destPort\": 443,\r\n        \"destCidr\": \"192.168.1.0/24\"\r\n      }\r\n    ],\r\n    \"l7FirewallRules\": [\r\n      [\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"application\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/application/67\",\r\n            \"name\": \"Xbox LIVE\"\r\n          }\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"applicationCategory\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/category/2\",\r\n            \"name\": \"Blogging\"\r\n          }\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"host\",\r\n          \"value\": \"google.com\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"port\",\r\n          \"value\": \"23\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"10.11.12.00/24\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"10.11.12.00/24:5555\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"blacklistedCountries\",\r\n          \"value\": [\r\n            \"AX\",\r\n            \"CA\"\r\n          ]\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"whitelistedCountries\",\r\n          \"value\": [\r\n            \"US\"\r\n          ]\r\n        }\r\n      ]\r\n    ]\r\n  },\r\n  \"splashAuthSettings\": \"bypass\",\r\n  \"vlanTagging\": {\r\n    \"settings\": \"custom\",\r\n    \"vlanId\": \"1\"\r\n  },\r\n  \"bonjourForwarding\": {\r\n    \"settings\": \"custom\",\r\n    \"rules\": [\r\n      {\r\n        \"description\": \"A simple bonjour rule\",\r\n        \"vlanId\": \"1\",\r\n        \"services\": [\r\n          \"All Services\"\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "parameters",
      "updateNetworkGroupPolicy",
      "schema",
      "properties",
      "scheduling",
      "properties",
      "monday",
      "title"
    ],
    "rhs": "Monday",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "parameters",
      "updateNetworkGroupPolicy",
      "schema",
      "properties",
      "scheduling",
      "properties",
      "tuesday",
      "title"
    ],
    "rhs": "Tuesday",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "parameters",
      "updateNetworkGroupPolicy",
      "schema",
      "properties",
      "scheduling",
      "properties",
      "wednesday",
      "title"
    ],
    "rhs": "Wednesday",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "parameters",
      "updateNetworkGroupPolicy",
      "schema",
      "properties",
      "scheduling",
      "properties",
      "thursday",
      "title"
    ],
    "rhs": "Thursday",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "parameters",
      "updateNetworkGroupPolicy",
      "schema",
      "properties",
      "scheduling",
      "properties",
      "friday",
      "title"
    ],
    "rhs": "Friday",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "parameters",
      "updateNetworkGroupPolicy",
      "schema",
      "properties",
      "scheduling",
      "properties",
      "saturday",
      "title"
    ],
    "rhs": "Saturday",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "parameters",
      "updateNetworkGroupPolicy",
      "schema",
      "properties",
      "scheduling",
      "properties",
      "sunday",
      "title"
    ],
    "rhs": "Sunday",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "parameters",
      "updateNetworkGroupPolicy",
      "schema",
      "properties",
      "scheduling",
      "title"
    ],
    "rhs": "Scheduling",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "parameters",
      "updateNetworkGroupPolicy",
      "schema",
      "properties",
      "bandwidth",
      "properties",
      "settings",
      "title"
    ],
    "rhs": "Settings",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "parameters",
      "updateNetworkGroupPolicy",
      "schema",
      "properties",
      "bandwidth",
      "properties",
      "settings",
      "example"
    ],
    "rhs": "network default",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "parameters",
      "updateNetworkGroupPolicy",
      "schema",
      "properties",
      "bandwidth",
      "properties",
      "bandwidthLimits",
      "properties",
      "limitUp",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "parameters",
      "updateNetworkGroupPolicy",
      "schema",
      "properties",
      "bandwidth",
      "properties",
      "bandwidthLimits",
      "properties",
      "limitDown",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "parameters",
      "updateNetworkGroupPolicy",
      "schema",
      "properties",
      "bandwidth",
      "properties",
      "bandwidthLimits",
      "title"
    ],
    "rhs": "BandwidthLimits",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "parameters",
      "updateNetworkGroupPolicy",
      "schema",
      "properties",
      "bandwidth",
      "title"
    ],
    "rhs": "Bandwidth",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "parameters",
      "updateNetworkGroupPolicy",
      "schema",
      "properties",
      "firewallAndTrafficShaping",
      "properties",
      "settings",
      "title"
    ],
    "rhs": "Settings1",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "parameters",
      "updateNetworkGroupPolicy",
      "schema",
      "properties",
      "firewallAndTrafficShaping",
      "properties",
      "settings",
      "example"
    ],
    "rhs": "network default",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "parameters",
      "updateNetworkGroupPolicy",
      "schema",
      "properties",
      "firewallAndTrafficShaping",
      "properties",
      "trafficShapingRules",
      "items",
      "properties",
      "definitions",
      "items",
      "properties",
      "type",
      "title"
    ],
    "rhs": "Type1",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "parameters",
      "updateNetworkGroupPolicy",
      "schema",
      "properties",
      "firewallAndTrafficShaping",
      "properties",
      "trafficShapingRules",
      "items",
      "properties",
      "definitions",
      "items",
      "properties",
      "type",
      "example"
    ],
    "rhs": "application",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "parameters",
      "updateNetworkGroupPolicy",
      "schema",
      "properties",
      "firewallAndTrafficShaping",
      "properties",
      "trafficShapingRules",
      "items",
      "properties",
      "definitions",
      "items",
      "title"
    ],
    "rhs": "Definition",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "parameters",
      "updateNetworkGroupPolicy",
      "schema",
      "properties",
      "firewallAndTrafficShaping",
      "properties",
      "trafficShapingRules",
      "items",
      "properties",
      "perClientBandwidthLimits",
      "properties",
      "bandwidthLimits",
      "properties",
      "limitUp",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "parameters",
      "updateNetworkGroupPolicy",
      "schema",
      "properties",
      "firewallAndTrafficShaping",
      "properties",
      "trafficShapingRules",
      "items",
      "properties",
      "perClientBandwidthLimits",
      "properties",
      "bandwidthLimits",
      "properties",
      "limitDown",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "parameters",
      "updateNetworkGroupPolicy",
      "schema",
      "properties",
      "firewallAndTrafficShaping",
      "properties",
      "trafficShapingRules",
      "items",
      "properties",
      "perClientBandwidthLimits",
      "properties",
      "bandwidthLimits",
      "title"
    ],
    "rhs": "BandwidthLimits1",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "parameters",
      "updateNetworkGroupPolicy",
      "schema",
      "properties",
      "firewallAndTrafficShaping",
      "properties",
      "trafficShapingRules",
      "items",
      "properties",
      "perClientBandwidthLimits",
      "title"
    ],
    "rhs": "PerClientBandwidthLimits",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "parameters",
      "updateNetworkGroupPolicy",
      "schema",
      "properties",
      "firewallAndTrafficShaping",
      "properties",
      "trafficShapingRules",
      "items",
      "properties",
      "dscpTagValue",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "parameters",
      "updateNetworkGroupPolicy",
      "schema",
      "properties",
      "firewallAndTrafficShaping",
      "properties",
      "trafficShapingRules",
      "items",
      "properties",
      "pcpTagValue",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "parameters",
      "updateNetworkGroupPolicy",
      "schema",
      "properties",
      "firewallAndTrafficShaping",
      "properties",
      "trafficShapingRules",
      "items",
      "title"
    ],
    "rhs": "TrafficShapingRule",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "parameters",
      "updateNetworkGroupPolicy",
      "schema",
      "properties",
      "firewallAndTrafficShaping",
      "properties",
      "l3FirewallRules",
      "items",
      "title"
    ],
    "rhs": "L3FirewallRule",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "parameters",
      "updateNetworkGroupPolicy",
      "schema",
      "properties",
      "firewallAndTrafficShaping",
      "properties",
      "l7FirewallRules",
      "items",
      "properties",
      "policy",
      "title"
    ],
    "rhs": "Policy1",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "parameters",
      "updateNetworkGroupPolicy",
      "schema",
      "properties",
      "firewallAndTrafficShaping",
      "properties",
      "l7FirewallRules",
      "items",
      "properties",
      "policy",
      "example"
    ],
    "rhs": "deny",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "parameters",
      "updateNetworkGroupPolicy",
      "schema",
      "properties",
      "firewallAndTrafficShaping",
      "properties",
      "l7FirewallRules",
      "items",
      "properties",
      "type",
      "title"
    ],
    "rhs": "Type2",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "parameters",
      "updateNetworkGroupPolicy",
      "schema",
      "properties",
      "firewallAndTrafficShaping",
      "properties",
      "l7FirewallRules",
      "items",
      "properties",
      "type",
      "example"
    ],
    "rhs": "application",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "parameters",
      "updateNetworkGroupPolicy",
      "schema",
      "properties",
      "firewallAndTrafficShaping",
      "properties",
      "l7FirewallRules",
      "items",
      "title"
    ],
    "rhs": "L7FirewallRule",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "parameters",
      "updateNetworkGroupPolicy",
      "schema",
      "properties",
      "firewallAndTrafficShaping",
      "title"
    ],
    "rhs": "FirewallAndTrafficShaping",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "parameters",
      "updateNetworkGroupPolicy",
      "schema",
      "example",
      "firewallAndTrafficShaping"
    ],
    "rhs": {
      "settings": "custom",
      "trafficShapingRules": [
        {
          "definitions": [
            {
              "type": "host",
              "value": "google.com"
            },
            {
              "type": "port",
              "value": "9090"
            },
            {
              "type": "ipRange",
              "value": "192.1.0.0"
            },
            {
              "type": "ipRange",
              "value": "192.1.0.0/16"
            },
            {
              "type": "ipRange",
              "value": "10.1.0.0/16:80"
            },
            {
              "type": "localNet",
              "value": "192.168.0.0/16"
            },
            {
              "type": "applicationCategory",
              "value": {
                "id": "meraki:layer7/category/2",
                "name": "Blogging"
              }
            },
            {
              "type": "application",
              "value": {
                "id": "meraki:layer7/application/133",
                "name": "Battle.net"
              }
            }
          ],
          "perClientBandwidthLimits": {
            "settings": "custom",
            "bandwidthLimits": {
              "limitUp": 1000000,
              "limitDown": 1000000
            }
          },
          "dscpTagValue": null,
          "pcpTagValue": null
        }
      ],
      "l3FirewallRules": [
        {
          "comment": "Allow TCP traffic to subnet with HTTP servers.",
          "policy": "allow",
          "protocol": "tcp",
          "destPort": 443,
          "destCidr": "192.168.1.0/24"
        }
      ],
      "l7FirewallRules": [
        [
          {
            "policy": "deny",
            "type": "application",
            "value": {
              "id": "meraki:layer7/application/67",
              "name": "Xbox LIVE"
            }
          },
          {
            "policy": "deny",
            "type": "applicationCategory",
            "value": {
              "id": "meraki:layer7/category/2",
              "name": "Blogging"
            }
          },
          {
            "policy": "deny",
            "type": "host",
            "value": "google.com"
          },
          {
            "policy": "deny",
            "type": "port",
            "value": "23"
          },
          {
            "policy": "deny",
            "type": "ipRange",
            "value": "10.11.12.00/24"
          },
          {
            "policy": "deny",
            "type": "ipRange",
            "value": "10.11.12.00/24:5555"
          },
          {
            "policy": "deny",
            "type": "blacklistedCountries",
            "value": [
              "AX",
              "CA"
            ]
          },
          {
            "policy": "deny",
            "type": "whitelistedCountries",
            "value": [
              "US"
            ]
          }
        ]
      ]
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "parameters",
      "updateNetworkGroupPolicy",
      "schema",
      "example",
      "splashAuthSettings"
    ],
    "rhs": "bypass",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "parameters",
      "updateNetworkGroupPolicy",
      "schema",
      "example",
      "vlanTagging"
    ],
    "rhs": {
      "settings": "custom",
      "vlanId": "1"
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "parameters",
      "updateNetworkGroupPolicy",
      "schema",
      "example",
      "bonjourForwarding"
    ],
    "rhs": {
      "settings": "custom",
      "rules": [
        {
          "description": "A simple bonjour rule",
          "vlanId": "1",
          "services": [
            "All Services"
          ]
        }
      ]
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "parameters",
      "updateNetworkGroupPolicy",
      "schema",
      "title"
    ],
    "rhs": "updateNetworkGroupPolicy",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "parameters",
      "updateNetworkGroupPolicy",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "name": "No video streaming",
      "groupPolicyId": "101",
      "scheduling": {
        "enabled": true,
        "monday": {
          "active": true,
          "from": "9:00",
          "to": "17:00"
        },
        "tuesday": {
          "active": true,
          "from": "9:00",
          "to": "17:00"
        },
        "wednesday": {
          "active": true,
          "from": "9:00",
          "to": "17:00"
        },
        "thursday": {
          "active": true,
          "from": "9:00",
          "to": "17:00"
        },
        "friday": {
          "active": true,
          "from": "9:00",
          "to": "17:00"
        },
        "saturday": {
          "active": false,
          "from": "0:00",
          "to": "24:00"
        },
        "sunday": {
          "active": false,
          "from": "0:00",
          "to": "24:00"
        }
      },
      "bandwidth": {
        "settings": "custom",
        "bandwidthLimits": {
          "limitUp": 1000000,
          "limitDown": 1000000
        }
      }
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"name\": \"No video streaming\",\r\n  \"groupPolicyId\": \"101\",\r\n  \"scheduling\": {\r\n    \"enabled\": true,\r\n    \"monday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"tuesday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"wednesday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"thursday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"friday\": {\r\n      \"active\": true,\r\n      \"from\": \"9:00\",\r\n      \"to\": \"17:00\"\r\n    },\r\n    \"saturday\": {\r\n      \"active\": false,\r\n      \"from\": \"0:00\",\r\n      \"to\": \"24:00\"\r\n    },\r\n    \"sunday\": {\r\n      \"active\": false,\r\n      \"from\": \"0:00\",\r\n      \"to\": \"24:00\"\r\n    }\r\n  },\r\n  \"bandwidth\": {\r\n    \"settings\": \"custom\",\r\n    \"bandwidthLimits\": {\r\n      \"limitUp\": 1000000,\r\n      \"limitDown\": 1000000\r\n    }\r\n  },\r\n  \"firewallAndTrafficShaping\": {\r\n    \"settings\": \"custom\",\r\n    \"trafficShapingRules\": [\r\n      {\r\n        \"definitions\": [\r\n          {\r\n            \"type\": \"host\",\r\n            \"value\": \"google.com\"\r\n          },\r\n          {\r\n            \"type\": \"port\",\r\n            \"value\": \"9090\"\r\n          },\r\n          {\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"192.1.0.0\"\r\n          },\r\n          {\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"192.1.0.0/16\"\r\n          },\r\n          {\r\n            \"type\": \"ipRange\",\r\n            \"value\": \"10.1.0.0/16:80\"\r\n          },\r\n          {\r\n            \"type\": \"localNet\",\r\n            \"value\": \"192.168.0.0/16\"\r\n          },\r\n          {\r\n            \"type\": \"applicationCategory\",\r\n            \"value\": {\r\n              \"id\": \"meraki:layer7/category/2\",\r\n              \"name\": \"Blogging\"\r\n            }\r\n          },\r\n          {\r\n            \"type\": \"application\",\r\n            \"value\": {\r\n              \"id\": \"meraki:layer7/application/133\",\r\n              \"name\": \"Battle.net\"\r\n            }\r\n          }\r\n        ],\r\n        \"perClientBandwidthLimits\": {\r\n          \"settings\": \"custom\",\r\n          \"bandwidthLimits\": {\r\n            \"limitUp\": 1000000,\r\n            \"limitDown\": 1000000\r\n          }\r\n        },\r\n        \"dscpTagValue\": null,\r\n        \"pcpTagValue\": null\r\n      }\r\n    ],\r\n    \"l3FirewallRules\": [\r\n      {\r\n        \"comment\": \"Allow TCP traffic to subnet with HTTP servers.\",\r\n        \"policy\": \"allow\",\r\n        \"protocol\": \"tcp\",\r\n        \"destPort\": 443,\r\n        \"destCidr\": \"192.168.1.0/24\"\r\n      }\r\n    ],\r\n    \"l7FirewallRules\": [\r\n      [\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"application\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/application/67\",\r\n            \"name\": \"Xbox LIVE\"\r\n          }\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"applicationCategory\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/category/2\",\r\n            \"name\": \"Blogging\"\r\n          }\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"host\",\r\n          \"value\": \"google.com\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"port\",\r\n          \"value\": \"23\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"10.11.12.00/24\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"10.11.12.00/24:5555\"\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"blacklistedCountries\",\r\n          \"value\": [\r\n            \"AX\",\r\n            \"CA\"\r\n          ]\r\n        },\r\n        {\r\n          \"policy\": \"deny\",\r\n          \"type\": \"whitelistedCountries\",\r\n          \"value\": [\r\n            \"US\"\r\n          ]\r\n        }\r\n      ]\r\n    ]\r\n  },\r\n  \"splashAuthSettings\": \"bypass\",\r\n  \"vlanTagging\": {\r\n    \"settings\": \"custom\",\r\n    \"vlanId\": \"1\"\r\n  },\r\n  \"bonjourForwarding\": {\r\n    \"settings\": \"custom\",\r\n    \"rules\": [\r\n      {\r\n        \"description\": \"A simple bonjour rule\",\r\n        \"vlanId\": \"1\",\r\n        \"services\": [\r\n          \"All Services\"\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "put",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "delete",
      "responses",
      "204",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "delete",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "delete",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "delete",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "id": "ABC123",
        "networkId": "N_123",
        "name": "My HTTP server",
        "url": "https://www.example.com/webhooks",
        "sharedSecret": "foobar"
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"id\": \"ABC123\",\r\n    \"networkId\": \"N_123\",\r\n    \"name\": \"My HTTP server\",\r\n    \"url\": \"https://www.example.com/webhooks\",\r\n    \"sharedSecret\": \"foobar\"\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers",
      "post",
      "parameters",
      "createNetworkHttpServer",
      "schema",
      "title"
    ],
    "rhs": "createNetworkHttpServer",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers",
      "post",
      "parameters",
      "createNetworkHttpServer",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers",
      "post",
      "responses",
      "201",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers",
      "post",
      "responses",
      "201",
      "examples",
      "application/json"
    ],
    "lhs": {
      "id": "ABC123",
      "networkId": "N_123",
      "name": "My HTTP server",
      "url": "https://www.example.com/webhooks",
      "sharedSecret": "foobar"
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers",
      "post",
      "responses",
      "201",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"id\": \"ABC123\",\r\n  \"networkId\": \"N_123\",\r\n  \"name\": \"My HTTP server\",\r\n  \"url\": \"https://www.example.com/webhooks\",\r\n  \"sharedSecret\": \"foobar\"\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers",
      "post",
      "responses",
      "201",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers",
      "post",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers",
      "post",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers",
      "post",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers/{id}",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers/{id}",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "id": "ABC123",
      "networkId": "N_123",
      "name": "My HTTP server",
      "url": "https://www.example.com/webhooks",
      "sharedSecret": "foobar"
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers/{id}",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"id\": \"ABC123\",\r\n  \"networkId\": \"N_123\",\r\n  \"name\": \"My HTTP server\",\r\n  \"url\": \"https://www.example.com/webhooks\",\r\n  \"sharedSecret\": \"foobar\"\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers/{id}",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers/{id}",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers/{id}",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers/{id}",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers/{id}",
      "put",
      "parameters",
      "updateNetworkHttpServer",
      "schema",
      "title"
    ],
    "rhs": "updateNetworkHttpServer",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers/{id}",
      "put",
      "parameters",
      "updateNetworkHttpServer",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers/{id}",
      "put",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers/{id}",
      "put",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "id": "ABC123",
      "networkId": "N_123",
      "name": "My HTTP server",
      "url": "https://www.example.com/webhooks",
      "sharedSecret": "foobar"
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers/{id}",
      "put",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"id\": \"ABC123\",\r\n  \"networkId\": \"N_123\",\r\n  \"name\": \"My HTTP server\",\r\n  \"url\": \"https://www.example.com/webhooks\",\r\n  \"sharedSecret\": \"foobar\"\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers/{id}",
      "put",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers/{id}",
      "put",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers/{id}",
      "put",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers/{id}",
      "put",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers/{id}",
      "delete",
      "responses",
      "204",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers/{id}",
      "delete",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers/{id}",
      "delete",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers/{id}",
      "delete",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers/webhookTests",
      "post",
      "parameters",
      "createNetworkHttpServersWebhookTest",
      "schema",
      "title"
    ],
    "rhs": "createNetworkHttpServersWebhookTest",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers/webhookTests",
      "post",
      "parameters",
      "createNetworkHttpServersWebhookTest",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers/webhookTests",
      "post",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers/webhookTests",
      "post",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "id": "1234",
      "url": "https://www.example.com/path",
      "status": "enqueued"
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers/webhookTests",
      "post",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"id\": \"1234\",\r\n  \"url\": \"https://www.example.com/path\",\r\n  \"status\": \"enqueued\"\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers/webhookTests",
      "post",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers/webhookTests",
      "post",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers/webhookTests",
      "post",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers/webhookTests",
      "post",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers/webhookTests/{id}",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers/webhookTests/{id}",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "id": "1234",
      "url": "https://www.example.com/path",
      "status": "delivered"
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers/webhookTests/{id}",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"id\": \"1234\",\r\n  \"url\": \"https://www.example.com/path\",\r\n  \"status\": \"delivered\"\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers/webhookTests/{id}",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers/webhookTests/{id}",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers/webhookTests/{id}",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/httpServers/webhookTests/{id}",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/merakiAuthUsers",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/merakiAuthUsers",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "id": "aGlAaGkuY29t",
        "email": "miles@meraki.com",
        "name": "Miles Meraki",
        "createdAt": 1518365681,
        "accountType": "Guest",
        "authorizations": [
          {
            "authorizedZone": "Store WiFi",
            "expiresAt": 1526087474,
            "authorizedByName": "Miles Meraki",
            "authorizedByEmail": "miles@meraki.com"
          }
        ]
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/merakiAuthUsers",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"id\": \"aGlAaGkuY29t\",\r\n    \"email\": \"miles@meraki.com\",\r\n    \"name\": \"Miles Meraki\",\r\n    \"createdAt\": 1518365681,\r\n    \"accountType\": \"Guest\",\r\n    \"authorizations\": [\r\n      {\r\n        \"authorizedZone\": \"Store WiFi\",\r\n        \"expiresAt\": 1526087474,\r\n        \"authorizedByName\": \"Miles Meraki\",\r\n        \"authorizedByEmail\": \"miles@meraki.com\"\r\n      }\r\n    ]\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/merakiAuthUsers",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/merakiAuthUsers",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/merakiAuthUsers",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/merakiAuthUsers",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/merakiAuthUsers/{id}",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/merakiAuthUsers/{id}",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "id": "aGlAaGkuY29t",
      "email": "miles@meraki.com",
      "name": "Miles Meraki",
      "createdAt": 1518365681,
      "accountType": "Guest",
      "authorizations": [
        {
          "authorizedZone": "Store WiFi",
          "expiresAt": 1526087474,
          "authorizedByName": "Miles Meraki",
          "authorizedByEmail": "miles@meraki.com"
        }
      ]
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/merakiAuthUsers/{id}",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"id\": \"aGlAaGkuY29t\",\r\n  \"email\": \"miles@meraki.com\",\r\n  \"name\": \"Miles Meraki\",\r\n  \"createdAt\": 1518365681,\r\n  \"accountType\": \"Guest\",\r\n  \"authorizations\": [\r\n    {\r\n      \"authorizedZone\": \"Store WiFi\",\r\n      \"expiresAt\": 1526087474,\r\n      \"authorizedByName\": \"Miles Meraki\",\r\n      \"authorizedByEmail\": \"miles@meraki.com\"\r\n    }\r\n  ]\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/merakiAuthUsers/{id}",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/merakiAuthUsers/{id}",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/merakiAuthUsers/{id}",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/merakiAuthUsers/{id}",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/openapiSpec",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/openapiSpec",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "swagger": "2.0",
      "info": {
        "version": "0",
        "title": "Meraki Dashboard API",
        "description": "The Cisco Meraki Dashboard API is a modern REST API based on the [OpenAPI](https://swagger.io/docs/specification/about/) specification.\n\n## What can the API be used for?\nThe Dashboard API can be used for many purposes. It’s meant to be an open-ended tool. Here are some examples of use cases:\n\n* Add new organizations, admins, networks, devices, VLANs, and more\n* Configure networks at scale\n* Automatically on-board and off-board new employees’ teleworker setups\n* Build your own dashboard for store managers, field techs, or unique use cases\n\n## Enabling the Dashboard API\n1. Begin by logging into [Meraki Dashboard](https://dashboard.meraki.com) and navigating to **Organization > Settings**\n\n2. Locate the section titled **Dashboard API access** and select **Enable Access**, then **Save** your changes\n\n3. After enabling the API, choose your username at the top-right of the Meraki Dashboard and select **my profile**\n\n4. Locate the section titled **Dashboard API access** and select **Generate new API key**\n\n*Note: The API key is associated with a Dashboard administrator account. You can generate, revoke, and regenerate your API key on your profile.*\n\n**Keep your API key safe as it provides authentication to all of your organizations with the API enabled. If your API key is shared, you can regenerate your API key at any time. This will revoke the existing API key.**\n\nCopy and store your API key in a safe place. Dashboard does not store API keys in plaintext for security reasons, so this is the only time you will be able to record it. If you lose or forget your API key, you will have to revoke it and generate a new one.\n\nEvery request must specify an API key via a request header.\n\nThe API key must be specified in the URL header. The API will return a 404 (rather than a 403) in response to a request with a missing or incorrect API key in order to prevent leaking the existence of resources to unauthorized users.\n\n`X-Cisco-Meraki-API-Key: <secret key>`\n\nRead more about API [authorization](../api/#/python/getting-started/authorizing-your-client)\n\n\n## Versioning\nOnce an API version is released, we will make only backwards-compatible changes to it. Backwards-compatible changes include:\n\n* Adding new API resources\n\n* Adding new optional request parameters to existing API methods\n\n* Adding new properties to existing API responses\n\n* Changing the order of properties in existing API responses\n\n## Rate Limit\n* The Dashboard API is limited to **5 calls per second**, per organization.\n* A burst of 5 additional calls are allowed in the first second, so a maximum of 15 calls in the first 2 seconds.\n* The rate limiting technique is based off of the [token bucket model](https://en.wikipedia.org/wiki/Token_bucket).\n* An error with a `429` status code will be returned when the rate limit has been exceeded.\n* Expect to backoff for 1 - 2 seconds if the limit has been exceeded. You may have to wait potentially longer if a large number of requests were made within this timeframe.\n\n\n## Additional Details\nIdentifiers in the API are opaque strings. A `{networkId}`, for example, might be the string “126043”, whereas an `{orderId}` might contain characters, such as “4S1234567”. Client applications must not try to parse them as numbers. Even identifiers that look like numbers might be too long to encode without loss of precision in Javascript, where the only numeric type is IEEE 754 floating point.\n\nVerbs in the API follow the usual REST conventions:\n\n`GET` returns the value of a resource or a list of resources, depending on whether an identifier is specified. For example, a `GET` of `/v0/organizations` returns a list of organizations, whereas a `GET` of `/v0/organizations/{organizationId}` returns a particular organization.\n\n`POST` adds a new resource, as in a `POST` to `/v0/organizations/{organizationId}/admins`, or performs some other non-idempotent change.\n\n`PUT` updates a resource. `PUTs` are idempotent; they update a resource, creating it first if it does not already exist. A `PUT` should specify all the fields of a resource; the API will revert omitted fields to their default value.\n\n`DELETE` removes a resource.\n",
        "x-codegen-settings": {
          "appendContentHeaders": true,
          "brandLabel": "meraki",
          "collectParameters": true,
          "doNotSplitWords": [
            "SSIDs",
            "VLANs"
          ],
          "generateAsyncCode": true,
          "projectName": "meraki",
          "sortResources": true,
          "useEnumPostfix": true,
          "useMethodPrefix": false,
          "useModelPostfix": true,
          "validateRequiredParameters": true
        }
      },
      "host": "api.meraki.com",
      "basePath": "/api/v0",
      "schemes": [
        "https"
      ],
      "consumes": [
        "application/json"
      ],
      "produces": [
        "application/json"
      ],
      "securityDefinitions": {
        "meraki_api_key": {
          "type": "apiKey",
          "name": "X-Cisco-Meraki-API-Key",
          "in": "header"
        }
      },
      "security": [
        {
          "meraki_api_key": []
        }
      ],
      "paths": {
        "/pets": {
          "get": {
            "description": "Returns all pets from the system",
            "operationId": "getPets",
            "responses": {
              "200": {
                "description": "Successful operation",
                "examples": {
                  "application/json": [
                    {
                      "id": 1,
                      "name": "Riley",
                      "type": "Cat"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/openapiSpec",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"swagger\": \"2.0\",\r\n  \"info\": {\r\n    \"version\": \"0.1.0\",\r\n    \"title\": \"Meraki Dashboard API\",\r\n    \"description\": \"This collection of API calls provides an easy way to interact with a Cisco Meraki network\"\r\n  },\r\n  \"host\": \"api.meraki.com\",\r\n  \"basePath\": \"/api/v0\",\r\n  \"schemes\": [\r\n    \"https\"\r\n  ],\r\n  \"consumes\": [\r\n    \"application/json\"\r\n  ],\r\n  \"produces\": [\r\n    \"application/json\"\r\n  ],\r\n  \"securityDefinitions\": {\r\n    \"meraki_api_key\": {\r\n      \"type\": \"apiKey\",\r\n      \"name\": \"X-Cisco-Meraki-API-Key\",\r\n      \"in\": \"header\"\r\n    }\r\n  },\r\n  \"security\": [\r\n    {\r\n      \"meraki_api_key\": []\r\n    }\r\n  ],\r\n  \"paths\": {\r\n    \"/pets\": {\r\n      \"get\": {\r\n        \"description\": \"Returns all pets from the system\",\r\n        \"operationId\": \"getPets\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Successful operation\",\r\n            \"examples\": {\r\n              \"application/json\": [\r\n                {\r\n                  \"id\": 1,\r\n                  \"name\": \"Riley\",\r\n                  \"type\": \"Cat\"\r\n                }\r\n              ]\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/openapiSpec",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/openapiSpec",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/openapiSpec",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/openapiSpec",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "id": 2930418,
        "name": "My organization"
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"id\": 2930418,\r\n    \"name\": \"My organization\"\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations",
      "post",
      "parameters",
      "createOrganization",
      "schema",
      "title"
    ],
    "rhs": "createOrganization",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations",
      "post",
      "parameters",
      "createOrganization",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations",
      "post",
      "responses",
      "201",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations",
      "post",
      "responses",
      "201",
      "examples",
      "application/json"
    ],
    "lhs": {
      "id": 2930418,
      "name": "My organization"
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations",
      "post",
      "responses",
      "201",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"id\": 2930418,\r\n  \"name\": \"My organization\"\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations",
      "post",
      "responses",
      "201",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations",
      "post",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations",
      "post",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations",
      "post",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{id}",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{id}",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "id": 2930418,
      "name": "My organization"
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{id}",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"id\": 2930418,\r\n  \"name\": \"My organization\"\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{id}",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{id}",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{id}",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{id}",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{id}",
      "put",
      "parameters",
      "updateOrganization",
      "schema",
      "title"
    ],
    "rhs": "updateOrganization",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{id}",
      "put",
      "parameters",
      "updateOrganization",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{id}",
      "put",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{id}",
      "put",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "id": 2930418,
      "name": "My organization"
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{id}",
      "put",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"id\": 2930418,\r\n  \"name\": \"My organization\"\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{id}",
      "put",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{id}",
      "put",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{id}",
      "put",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{id}",
      "put",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{id}/clone",
      "post",
      "parameters",
      "cloneOrganization",
      "schema",
      "title"
    ],
    "rhs": "cloneOrganization",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{id}/clone",
      "post",
      "parameters",
      "cloneOrganization",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{id}/clone",
      "post",
      "responses",
      "201",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{id}/clone",
      "post",
      "responses",
      "201",
      "examples",
      "application/json"
    ],
    "lhs": {
      "id": 2930418,
      "name": "My organization"
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{id}/clone",
      "post",
      "responses",
      "201",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"id\": 2930418,\r\n  \"name\": \"My organization\"\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{id}/clone",
      "post",
      "responses",
      "201",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{id}/clone",
      "post",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{id}/clone",
      "post",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{id}/clone",
      "post",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{id}/licenseState",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{id}/licenseState",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "status": "OK",
      "expirationDate": "Feb 8, 2020 UTC",
      "licensedDeviceCounts": {
        "MS": 100
      }
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{id}/licenseState",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"status\": \"OK\",\r\n  \"expirationDate\": \"Feb 8, 2020 UTC\",\r\n  \"licensedDeviceCounts\": {\r\n    \"MS\": 100\r\n  }\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{id}/licenseState",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{id}/licenseState",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{id}/licenseState",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{id}/licenseState",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{id}/inventory",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{id}/inventory",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "mac": "00:11:22:33:44:55",
        "serial": "Q234-ABCD-5678",
        "networkId": "N_24329156",
        "model": "MR34",
        "claimedAt": 1518365681,
        "publicIp": "123.123.123.1",
        "name": "My AP"
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{id}/inventory",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"mac\": \"00:11:22:33:44:55\",\r\n    \"serial\": \"Q234-ABCD-5678\",\r\n    \"networkId\": \"N_24329156\",\r\n    \"model\": \"MR34\",\r\n    \"claimedAt\": 1518365681.0,\r\n    \"publicIp\": \"123.123.123.1\",\r\n    \"name\": \"My AP\"\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{id}/inventory",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{id}/inventory",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{id}/inventory",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{id}/inventory",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{id}/deviceStatuses",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{id}/deviceStatuses",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "name": "My AP",
        "serial": "Q234-ABCD-5678",
        "mac": "00:11:22:33:44:55",
        "status": "online",
        "lanIp": "1.2.3.4",
        "publicIp": "123.123.123.1",
        "networkId": "N_24329156"
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{id}/deviceStatuses",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"name\": \"My AP\",\r\n    \"serial\": \"Q234-ABCD-5678\",\r\n    \"mac\": \"00:11:22:33:44:55\",\r\n    \"status\": \"online\",\r\n    \"lanIp\": \"1.2.3.4\",\r\n    \"publicIp\": \"123.123.123.1\",\r\n    \"networkId\": \"N_24329156\"\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{id}/deviceStatuses",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{id}/deviceStatuses",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{id}/deviceStatuses",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{id}/deviceStatuses",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/claim",
      "post",
      "parameters",
      "claimOrganization",
      "schema",
      "title"
    ],
    "rhs": "claimOrganization",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/claim",
      "post",
      "parameters",
      "claimOrganization",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/claim",
      "post",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/claim",
      "post",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/claim",
      "post",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/claim",
      "post",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/claim",
      "post",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/uplinksLossAndLatency",
      "get",
      "parameters",
      "uplink",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/uplinksLossAndLatency",
      "get",
      "parameters",
      "ip",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/uplinksLossAndLatency",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/uplinksLossAndLatency",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "networkId": "N_12345",
        "serial": "Q2AB-CDEF-GHIJ",
        "uplink": "wan1",
        "ip": "8.8.8.8",
        "timeSeries": [
          {
            "ts": "2019-01-31T18:46:13Z",
            "lossPercent": 5.3,
            "latencyMs": 194.9
          }
        ]
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/uplinksLossAndLatency",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"networkId\": \"N_12345\",\r\n    \"serial\": \"Q2AB-CDEF-GHIJ\",\r\n    \"uplink\": \"wan1\",\r\n    \"ip\": \"8.8.8.8\",\r\n    \"timeSeries\": [\r\n      {\r\n        \"ts\": \"2019-01-31T18:46:13Z\",\r\n        \"lossPercent\": 5.3,\r\n        \"latencyMs\": 194.9\r\n      }\r\n    ]\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/uplinksLossAndLatency",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/uplinksLossAndLatency",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/uplinksLossAndLatency",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/uplinksLossAndLatency",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/thirdPartyVPNPeers",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/thirdPartyVPNPeers",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "name": "My peer 1",
        "publicIp": "123.123.123.1",
        "privateSubnets": [
          "192.168.1.0/24",
          "192.168.128.0/24"
        ],
        "secret": "asdf1234",
        "ipsecPolicies": {
          "ikeCipherAlgo": [
            "tripledes"
          ],
          "ikeAuthAlgo": [
            "sha1"
          ],
          "ikeDiffieHellmanGroup": [
            "group2"
          ],
          "ikeLifetime": 28800,
          "childCipherAlgo": [
            "aes128"
          ],
          "childAuthAlgo": [
            "sha1"
          ],
          "childPfsGroup": [
            "disabled"
          ],
          "childLifetime": 28800
        }
      },
      {
        "name": "My peer 2",
        "publicIp": "123.123.123.2",
        "privateSubnets": [
          "192.168.2.0/24",
          "192.168.129.0/24"
        ],
        "secret": "asdf56785678567856785678",
        "ipsecPoliciesPreset": "default"
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/thirdPartyVPNPeers",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"name\": \"My peer 1\",\r\n    \"publicIp\": \"123.123.123.1\",\r\n    \"privateSubnets\": [\r\n      \"192.168.1.0/24\",\r\n      \"192.168.128.0/24\"\r\n    ],\r\n    \"secret\": \"asdf1234\",\r\n    \"ipsecPolicies\": {\r\n      \"ikeCipherAlgo\": [\r\n        \"tripledes\"\r\n      ],\r\n      \"ikeAuthAlgo\": [\r\n        \"sha1\"\r\n      ],\r\n      \"ikeDiffieHellmanGroup\": [\r\n        \"group2\"\r\n      ],\r\n      \"ikeLifetime\": 28800,\r\n      \"childCipherAlgo\": [\r\n        \"aes128\"\r\n      ],\r\n      \"childAuthAlgo\": [\r\n        \"sha1\"\r\n      ],\r\n      \"childPfsGroup\": [\r\n        \"disabled\"\r\n      ],\r\n      \"childLifetime\": 28800\r\n    }\r\n  },\r\n  {\r\n    \"name\": \"My peer 2\",\r\n    \"publicIp\": \"123.123.123.2\",\r\n    \"privateSubnets\": [\r\n      \"192.168.2.0/24\",\r\n      \"192.168.129.0/24\"\r\n    ],\r\n    \"secret\": \"asdf56785678567856785678\",\r\n    \"ipsecPoliciesPreset\": \"default\"\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/thirdPartyVPNPeers",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/thirdPartyVPNPeers",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/thirdPartyVPNPeers",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/thirdPartyVPNPeers",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/thirdPartyVPNPeers",
      "put",
      "parameters",
      "updateOrganizationThirdPartyVPNPeers",
      "schema",
      "properties",
      "peers",
      "items",
      "properties",
      "ipsecPolicies",
      "properties",
      "ikeLifetime",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/thirdPartyVPNPeers",
      "put",
      "parameters",
      "updateOrganizationThirdPartyVPNPeers",
      "schema",
      "properties",
      "peers",
      "items",
      "properties",
      "ipsecPolicies",
      "properties",
      "childLifetime",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/thirdPartyVPNPeers",
      "put",
      "parameters",
      "updateOrganizationThirdPartyVPNPeers",
      "schema",
      "properties",
      "peers",
      "items",
      "properties",
      "ipsecPolicies",
      "title"
    ],
    "rhs": "IpsecPolicies",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/thirdPartyVPNPeers",
      "put",
      "parameters",
      "updateOrganizationThirdPartyVPNPeers",
      "schema",
      "properties",
      "peers",
      "items",
      "title"
    ],
    "rhs": "Peer",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/thirdPartyVPNPeers",
      "put",
      "parameters",
      "updateOrganizationThirdPartyVPNPeers",
      "schema",
      "title"
    ],
    "rhs": "updateOrganizationThirdPartyVPNPeers",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/thirdPartyVPNPeers",
      "put",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/thirdPartyVPNPeers",
      "put",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "name": "My peer 1",
        "publicIp": "123.123.123.1",
        "privateSubnets": [
          "192.168.1.0/24",
          "192.168.128.0/24"
        ],
        "secret": "asdf1234",
        "ipsecPolicies": {
          "ikeCipherAlgo": [
            "tripledes"
          ],
          "ikeAuthAlgo": [
            "sha1"
          ],
          "ikeDiffieHellmanGroup": [
            "group2"
          ],
          "ikeLifetime": 28800,
          "childCipherAlgo": [
            "aes128"
          ],
          "childAuthAlgo": [
            "sha1"
          ],
          "childPfsGroup": [
            "disabled"
          ],
          "childLifetime": 28800
        }
      },
      {
        "name": "My peer 2",
        "publicIp": "123.123.123.2",
        "privateSubnets": [
          "192.168.2.0/24",
          "192.168.129.0/24"
        ],
        "secret": "asdf56785678567856785678",
        "ipsecPoliciesPreset": "default"
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/thirdPartyVPNPeers",
      "put",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"name\": \"My peer 1\",\r\n    \"publicIp\": \"123.123.123.1\",\r\n    \"privateSubnets\": [\r\n      \"192.168.1.0/24\",\r\n      \"192.168.128.0/24\"\r\n    ],\r\n    \"secret\": \"asdf1234\",\r\n    \"ipsecPolicies\": {\r\n      \"ikeCipherAlgo\": [\r\n        \"tripledes\"\r\n      ],\r\n      \"ikeAuthAlgo\": [\r\n        \"sha1\"\r\n      ],\r\n      \"ikeDiffieHellmanGroup\": [\r\n        \"group2\"\r\n      ],\r\n      \"ikeLifetime\": 28800,\r\n      \"childCipherAlgo\": [\r\n        \"aes128\"\r\n      ],\r\n      \"childAuthAlgo\": [\r\n        \"sha1\"\r\n      ],\r\n      \"childPfsGroup\": [\r\n        \"disabled\"\r\n      ],\r\n      \"childLifetime\": 28800\r\n    }\r\n  },\r\n  {\r\n    \"name\": \"My peer 2\",\r\n    \"publicIp\": \"123.123.123.2\",\r\n    \"privateSubnets\": [\r\n      \"192.168.2.0/24\",\r\n      \"192.168.129.0/24\"\r\n    ],\r\n    \"secret\": \"asdf56785678567856785678\",\r\n    \"ipsecPoliciesPreset\": \"default\"\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/thirdPartyVPNPeers",
      "put",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/thirdPartyVPNPeers",
      "put",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/thirdPartyVPNPeers",
      "put",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/thirdPartyVPNPeers",
      "put",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/piiKeys",
      "get",
      "parameters",
      "username",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/piiKeys",
      "get",
      "parameters",
      "email",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/piiKeys",
      "get",
      "parameters",
      "mac",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/piiKeys",
      "get",
      "parameters",
      "serial",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/piiKeys",
      "get",
      "parameters",
      "imei",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/piiKeys",
      "get",
      "parameters",
      "bluetoothMac",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/pii/piiKeys",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/pii/piiKeys",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "N_1234": {
        "macs": [
          "00:77:00:77:00:77"
        ],
        "emails": [
          "fake@example.com"
        ],
        "usernames": [
          "fakename"
        ],
        "serials": [
          "abcd1234"
        ],
        "imeis": [
          "990000862471854"
        ],
        "bluetoothMacs": [
          "00:77:00:77:00:77"
        ]
      }
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/piiKeys",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"N_1234\": {\r\n    \"macs\": [\r\n      \"00:77:00:77:00:77\"\r\n    ],\r\n    \"emails\": [\r\n      \"fake@example.com\"\r\n    ],\r\n    \"usernames\": [\r\n      \"fakename\"\r\n    ],\r\n    \"serials\": [\r\n      \"abcd1234\"\r\n    ],\r\n    \"imeis\": [\r\n      \"990000862471854\"\r\n    ],\r\n    \"bluetoothMacs\": [\r\n      \"00:77:00:77:00:77\"\r\n    ]\r\n  }\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/piiKeys",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/pii/piiKeys",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/piiKeys",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/piiKeys",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/smDevicesForKey",
      "get",
      "parameters",
      "username",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/smDevicesForKey",
      "get",
      "parameters",
      "email",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/smDevicesForKey",
      "get",
      "parameters",
      "mac",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/smDevicesForKey",
      "get",
      "parameters",
      "serial",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/smDevicesForKey",
      "get",
      "parameters",
      "imei",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/smDevicesForKey",
      "get",
      "parameters",
      "bluetoothMac",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/pii/smDevicesForKey",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/pii/smDevicesForKey",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "N_1234": [
        "1099541095293",
        "8348382288234"
      ]
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/smDevicesForKey",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"N_1234\": [\r\n    \"1099541095293\",\r\n    \"8348382288234\"\r\n  ]\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/smDevicesForKey",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/pii/smDevicesForKey",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/smDevicesForKey",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/smDevicesForKey",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/smOwnersForKey",
      "get",
      "parameters",
      "username",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/smOwnersForKey",
      "get",
      "parameters",
      "email",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/smOwnersForKey",
      "get",
      "parameters",
      "mac",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/smOwnersForKey",
      "get",
      "parameters",
      "serial",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/smOwnersForKey",
      "get",
      "parameters",
      "imei",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/smOwnersForKey",
      "get",
      "parameters",
      "bluetoothMac",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/pii/smOwnersForKey",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/pii/smOwnersForKey",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "N_1234": [
        "1099541095293"
      ]
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/smOwnersForKey",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"N_1234\": [\r\n    \"1099541095293\"\r\n  ]\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/smOwnersForKey",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/pii/smOwnersForKey",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/smOwnersForKey",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/smOwnersForKey",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/pii/requests",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/pii/requests",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "id": "1234",
        "organizationWide": false,
        "networkId": "N_1234",
        "type": "delete",
        "mac": "00:77:00:77:00:77",
        "datasets": "['usage', 'events']",
        "status": "Completed",
        "createdAt": 1524692227,
        "completedAt": 1524702227
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/requests",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"id\": \"1234\",\r\n    \"organizationWide\": false,\r\n    \"networkId\": \"N_1234\",\r\n    \"type\": \"delete\",\r\n    \"mac\": \"00:77:00:77:00:77\",\r\n    \"datasets\": \"['usage', 'events']\",\r\n    \"status\": \"Completed\",\r\n    \"createdAt\": 1524692227,\r\n    \"completedAt\": 1524702227\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/requests",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/pii/requests",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/requests",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/requests",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/requests",
      "post",
      "parameters",
      "createNetworkPiiRequest",
      "schema",
      "properties",
      "type",
      "title"
    ],
    "rhs": "Type5",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/requests",
      "post",
      "parameters",
      "createNetworkPiiRequest",
      "schema",
      "properties",
      "type",
      "example"
    ],
    "rhs": "delete",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/requests",
      "post",
      "parameters",
      "createNetworkPiiRequest",
      "schema",
      "title"
    ],
    "rhs": "createNetworkPiiRequest",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/requests",
      "post",
      "parameters",
      "createNetworkPiiRequest",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/pii/requests",
      "post",
      "responses",
      "201",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/pii/requests",
      "post",
      "responses",
      "201",
      "examples",
      "application/json"
    ],
    "lhs": {
      "id": "1234",
      "organizationWide": false,
      "networkId": "N_1234",
      "type": "delete",
      "mac": "00:77:00:77:00:77",
      "datasets": "['usage', 'events']",
      "status": "Not visible in Dashboard; database deletion in process",
      "createdAt": 1524692227,
      "completedAt": null
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/requests",
      "post",
      "responses",
      "201",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"id\": \"1234\",\r\n  \"organizationWide\": false,\r\n  \"networkId\": \"N_1234\",\r\n  \"type\": \"delete\",\r\n  \"mac\": \"00:77:00:77:00:77\",\r\n  \"datasets\": \"['usage', 'events']\",\r\n  \"status\": \"Not visible in Dashboard; database deletion in process\",\r\n  \"createdAt\": 1524692227,\r\n  \"completedAt\": null\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/requests",
      "post",
      "responses",
      "201",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/pii/requests",
      "post",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/requests",
      "post",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/requests",
      "post",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/pii/requests/{requestId}",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/pii/requests/{requestId}",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "id": "1234",
      "organizationWide": false,
      "networkId": "N_1234",
      "type": "delete",
      "mac": "00:77:00:77:00:77",
      "datasets": "['usage', 'events']",
      "status": "Completed",
      "createdAt": 1524692227,
      "completedAt": 1524702227
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/requests/{requestId}",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"id\": \"1234\",\r\n  \"organizationWide\": false,\r\n  \"networkId\": \"N_1234\",\r\n  \"type\": \"delete\",\r\n  \"mac\": \"00:77:00:77:00:77\",\r\n  \"datasets\": \"['usage', 'events']\",\r\n  \"status\": \"Completed\",\r\n  \"createdAt\": 1524692227,\r\n  \"completedAt\": 1524702227\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/requests/{requestId}",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/pii/requests/{requestId}",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/requests/{requestId}",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/requests/{requestId}",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/requests/{requestId}",
      "delete",
      "responses",
      "204",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/pii/requests/{requestId}",
      "delete",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/requests/{requestId}",
      "delete",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/pii/requests/{requestId}",
      "delete",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/wireless/radioSettings",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/wireless/radioSettings",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "serial": "Q234-ABCD-5678",
      "rfProfileId": "1234"
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/wireless/radioSettings",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"serial\": \"Q234-ABCD-5678\",\r\n  \"rfProfileId\": \"1234\"\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/wireless/radioSettings",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/wireless/radioSettings",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/wireless/radioSettings",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/wireless/radioSettings",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/wireless/radioSettings",
      "put",
      "parameters",
      "updateNetworkDeviceWirelessRadioSettings",
      "schema",
      "properties",
      "rfProfileId",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/wireless/radioSettings",
      "put",
      "parameters",
      "updateNetworkDeviceWirelessRadioSettings",
      "schema",
      "title"
    ],
    "rhs": "updateNetworkDeviceWirelessRadioSettings",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/wireless/radioSettings",
      "put",
      "parameters",
      "updateNetworkDeviceWirelessRadioSettings",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/wireless/radioSettings",
      "put",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/wireless/radioSettings",
      "put",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "serial": "Q234-ABCD-5678",
      "rfProfileId": "1234"
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/wireless/radioSettings",
      "put",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"serial\": \"Q234-ABCD-5678\",\r\n  \"rfProfileId\": \"1234\"\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/wireless/radioSettings",
      "put",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/wireless/radioSettings",
      "put",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/wireless/radioSettings",
      "put",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/wireless/radioSettings",
      "put",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/wireless/rfProfiles",
      "get",
      "parameters",
      "includeTemplateProfiles",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/wireless/rfProfiles",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/wireless/rfProfiles",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "id": "1234",
        "networkId": "N_24329156",
        "name": "Some Custom RF Profile"
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/wireless/rfProfiles",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"id\": \"1234\",\r\n    \"networkId\": \"N_24329156\",\r\n    \"name\": \"Some Custom RF Profile\"\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/wireless/rfProfiles",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/wireless/rfProfiles",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/wireless/rfProfiles",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/wireless/rfProfiles",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/samlRoles",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/samlRoles",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "id": "TEdJIEN1c3RvbWVy",
        "role": "myrole",
        "orgAccess": "none",
        "networks": [
          {
            "id": "N_1234",
            "access": "full"
          }
        ],
        "tags": [
          {
            "tag": "west",
            "access": "read-only"
          }
        ]
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/samlRoles",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"id\": \"TEdJIEN1c3RvbWVy\",\r\n    \"role\": \"myrole\",\r\n    \"orgAccess\": \"none\",\r\n    \"networks\": [\r\n      {\r\n        \"id\": \"N_1234\",\r\n        \"access\": \"full\"\r\n      }\r\n    ],\r\n    \"tags\": [\r\n      {\r\n        \"tag\": \"west\",\r\n        \"access\": \"read-only\"\r\n      }\r\n    ]\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/samlRoles",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/samlRoles",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/samlRoles",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/samlRoles",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/samlRoles",
      "post",
      "parameters",
      "createOrganizationSamlRole",
      "schema",
      "properties",
      "tags",
      "items",
      "title"
    ],
    "rhs": "Tag2",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/samlRoles",
      "post",
      "parameters",
      "createOrganizationSamlRole",
      "schema",
      "properties",
      "networks",
      "items",
      "title"
    ],
    "rhs": "Network2",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/samlRoles",
      "post",
      "parameters",
      "createOrganizationSamlRole",
      "schema",
      "title"
    ],
    "rhs": "createOrganizationSamlRole",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/samlRoles",
      "post",
      "parameters",
      "createOrganizationSamlRole",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/samlRoles",
      "post",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/samlRoles",
      "post",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "id": "TEdJIEN1c3RvbWVy",
      "role": "myrole",
      "orgAccess": "none",
      "networks": [
        {
          "id": "N_1234",
          "access": "full"
        }
      ],
      "tags": [
        {
          "tag": "west",
          "access": "read-only"
        }
      ]
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/samlRoles",
      "post",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"id\": \"TEdJIEN1c3RvbWVy\",\r\n  \"role\": \"myrole\",\r\n  \"orgAccess\": \"none\",\r\n  \"networks\": [\r\n    {\r\n      \"id\": \"N_1234\",\r\n      \"access\": \"full\"\r\n    }\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"tag\": \"west\",\r\n      \"access\": \"read-only\"\r\n    }\r\n  ]\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/samlRoles",
      "post",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/samlRoles",
      "post",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/samlRoles",
      "post",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/samlRoles",
      "post",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/samlRoles/{id}",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/samlRoles/{id}",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "id": "TEdJIEN1c3RvbWVy",
      "role": "myrole",
      "orgAccess": "none",
      "networks": [
        {
          "id": "N_1234",
          "access": "full"
        }
      ],
      "tags": [
        {
          "tag": "west",
          "access": "read-only"
        }
      ]
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/samlRoles/{id}",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"id\": \"TEdJIEN1c3RvbWVy\",\r\n  \"role\": \"myrole\",\r\n  \"orgAccess\": \"none\",\r\n  \"networks\": [\r\n    {\r\n      \"id\": \"N_1234\",\r\n      \"access\": \"full\"\r\n    }\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"tag\": \"west\",\r\n      \"access\": \"read-only\"\r\n    }\r\n  ]\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/samlRoles/{id}",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/samlRoles/{id}",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/samlRoles/{id}",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/samlRoles/{id}",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/samlRoles/{id}",
      "put",
      "parameters",
      "updateOrganizationSamlRole",
      "schema",
      "properties",
      "tags",
      "items",
      "title"
    ],
    "rhs": "Tag2",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/samlRoles/{id}",
      "put",
      "parameters",
      "updateOrganizationSamlRole",
      "schema",
      "properties",
      "networks",
      "items",
      "title"
    ],
    "rhs": "Network2",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/samlRoles/{id}",
      "put",
      "parameters",
      "updateOrganizationSamlRole",
      "schema",
      "title"
    ],
    "rhs": "updateOrganizationSamlRole",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/samlRoles/{id}",
      "put",
      "parameters",
      "updateOrganizationSamlRole",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/samlRoles/{id}",
      "put",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/samlRoles/{id}",
      "put",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "id": "TEdJIEN1c3RvbWVy",
      "role": "myrole",
      "orgAccess": "none",
      "networks": [
        {
          "id": "N_1234",
          "access": "full"
        }
      ],
      "tags": [
        {
          "tag": "west",
          "access": "read-only"
        }
      ]
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/samlRoles/{id}",
      "put",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"id\": \"TEdJIEN1c3RvbWVy\",\r\n  \"role\": \"myrole\",\r\n  \"orgAccess\": \"none\",\r\n  \"networks\": [\r\n    {\r\n      \"id\": \"N_1234\",\r\n      \"access\": \"full\"\r\n    }\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"tag\": \"west\",\r\n      \"access\": \"read-only\"\r\n    }\r\n  ]\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/samlRoles/{id}",
      "put",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/samlRoles/{id}",
      "put",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/samlRoles/{id}",
      "put",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/samlRoles/{id}",
      "put",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/samlRoles/{id}",
      "delete",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/samlRoles/{id}",
      "delete",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/samlRoles/{id}",
      "delete",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/samlRoles/{id}",
      "delete",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/securityEvents",
      "get",
      "parameters",
      "t0",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/securityEvents",
      "get",
      "parameters",
      "t1",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/securityEvents",
      "get",
      "parameters",
      "timespan",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/securityEvents",
      "get",
      "parameters",
      "timespan",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "E",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/securityEvents",
      "get",
      "parameters",
      "perPage",
      "required"
    ],
    "lhs": true,
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/securityEvents",
      "get",
      "parameters",
      "perPage",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/securityEvents",
      "get",
      "parameters",
      "startingAfter",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/securityEvents",
      "get",
      "parameters",
      "endingBefore",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/securityEvents",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/securityEvents",
      "get",
      "responses",
      "200",
      "headers",
      "Link"
    ],
    "lhs": {
      "type": "string",
      "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/securityEvents",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "ts": 1547683314.270398,
        "deviceMac": "00:18:0a:01:02:03",
        "clientMac": "A1:B2:C3:D4:E5:F6",
        "srcIp": "1.2.3.4:34195",
        "destIp": "10.20.30.40:80",
        "protocol": "tcp/ip",
        "priority": "2",
        "classification": "4",
        "blocked": true,
        "message": "SERVER-WEBAPP JBoss JMX console access attempt",
        "signature": "1:21516:9",
        "sigSource": ""
      },
      {
        "ts": 1547683827.723265,
        "deviceMac": "00:18:0a:01:02:03",
        "clientMac": "A1:B2:C3:D4:E5:F6",
        "srcIp": "1.2.3.4:56023",
        "destIp": "10.20.30.40:80",
        "protocol": "tcp/ip",
        "priority": "1",
        "classification": "33",
        "blocked": true,
        "message": "POLICY-OTHER Adobe ColdFusion admin interface access attempt",
        "signature": "1:25975:2",
        "sigSource": ""
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/securityEvents",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"ts\": 1547683314.2703979,\r\n    \"deviceMac\": \"00:18:0a:01:02:03\",\r\n    \"clientMac\": \"A1:B2:C3:D4:E5:F6\",\r\n    \"srcIp\": \"1.2.3.4:34195\",\r\n    \"destIp\": \"10.20.30.40:80\",\r\n    \"protocol\": \"tcp/ip\",\r\n    \"priority\": \"2\",\r\n    \"classification\": \"4\",\r\n    \"blocked\": true,\r\n    \"message\": \"SERVER-WEBAPP JBoss JMX console access attempt\",\r\n    \"signature\": \"1:21516:9\",\r\n    \"sigSource\": \"\"\r\n  },\r\n  {\r\n    \"ts\": 1547683827.7232649,\r\n    \"deviceMac\": \"00:18:0a:01:02:03\",\r\n    \"clientMac\": \"A1:B2:C3:D4:E5:F6\",\r\n    \"srcIp\": \"1.2.3.4:56023\",\r\n    \"destIp\": \"10.20.30.40:80\",\r\n    \"protocol\": \"tcp/ip\",\r\n    \"priority\": \"1\",\r\n    \"classification\": \"33\",\r\n    \"blocked\": true,\r\n    \"message\": \"POLICY-OTHER Adobe ColdFusion admin interface access attempt\",\r\n    \"signature\": \"1:25975:2\",\r\n    \"sigSource\": \"\"\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "E",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/securityEvents",
      "get",
      "tags",
      0
    ],
    "lhs": "Client security events",
    "rhs": "Security events",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/securityEvents",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/securityEvents",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/securityEvents",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/security/intrusionSettings",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/security/intrusionSettings",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "mode": "prevention",
      "idsRulesets": "balanced",
      "protectedNetworks": {
        "useDefault": false,
        "includedCidr": [
          "10.0.0.0/8",
          "127.0.0.0/8",
          "169.254.0.0/16",
          "172.16.0.0/12"
        ],
        "excludedCidr": [
          "10.0.0.0/8",
          "127.0.0.0/8"
        ]
      }
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/security/intrusionSettings",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"mode\": \"prevention\",\r\n  \"idsRulesets\": \"balanced\",\r\n  \"protectedNetworks\": {\r\n    \"useDefault\": false,\r\n    \"includedCidr\": [\r\n      \"10.0.0.0/8\",\r\n      \"127.0.0.0/8\",\r\n      \"169.254.0.0/16\",\r\n      \"172.16.0.0/12\"\r\n    ],\r\n    \"excludedCidr\": [\r\n      \"10.0.0.0/8\",\r\n      \"127.0.0.0/8\"\r\n    ]\r\n  }\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/security/intrusionSettings",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/security/intrusionSettings",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/security/intrusionSettings",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/security/intrusionSettings",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/security/intrusionSettings",
      "put",
      "parameters",
      "updateNetworkSecurityIntrusionSettings",
      "schema",
      "properties",
      "protectedNetworks",
      "title"
    ],
    "rhs": "ProtectedNetworks",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/security/intrusionSettings",
      "put",
      "parameters",
      "updateNetworkSecurityIntrusionSettings",
      "schema",
      "title"
    ],
    "rhs": "updateNetworkSecurityIntrusionSettings",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/security/intrusionSettings",
      "put",
      "parameters",
      "updateNetworkSecurityIntrusionSettings",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/security/intrusionSettings",
      "put",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/security/intrusionSettings",
      "put",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "mode": "prevention",
      "idsRulesets": "balanced",
      "protectedNetworks": {
        "useDefault": false,
        "includedCidr": [
          "10.0.0.0/8",
          "127.0.0.0/8",
          "169.254.0.0/16",
          "172.16.0.0/12"
        ],
        "excludedCidr": [
          "10.0.0.0/8",
          "127.0.0.0/8"
        ]
      }
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/security/intrusionSettings",
      "put",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"mode\": \"prevention\",\r\n  \"idsRulesets\": \"balanced\",\r\n  \"protectedNetworks\": {\r\n    \"useDefault\": false,\r\n    \"includedCidr\": [\r\n      \"10.0.0.0/8\",\r\n      \"127.0.0.0/8\",\r\n      \"169.254.0.0/16\",\r\n      \"172.16.0.0/12\"\r\n    ],\r\n    \"excludedCidr\": [\r\n      \"10.0.0.0/8\",\r\n      \"127.0.0.0/8\"\r\n    ]\r\n  }\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/security/intrusionSettings",
      "put",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/security/intrusionSettings",
      "put",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/security/intrusionSettings",
      "put",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/security/intrusionSettings",
      "put",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/security/intrusionSettings",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/security/intrusionSettings",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "whitelistedRules": [
        {
          "ruleId": "meraki:intrusion/snort/GID/01/SID/688",
          "message": "SQL sa login failed"
        },
        {
          "ruleId": "meraki:intrusion/snort/GID/01/SID/5805",
          "message": "MALWARE-OTHER Trackware myway speedbar runtime detection - switch engines"
        }
      ]
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/security/intrusionSettings",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"whitelistedRules\": [\r\n    {\r\n      \"ruleId\": \"meraki:intrusion/snort/GID/01/SID/688\",\r\n      \"message\": \"SQL sa login failed\"\r\n    },\r\n    {\r\n      \"ruleId\": \"meraki:intrusion/snort/GID/01/SID/5805\",\r\n      \"message\": \"MALWARE-OTHER Trackware myway speedbar runtime detection - switch engines\"\r\n    }\r\n  ]\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/security/intrusionSettings",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/security/intrusionSettings",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/security/intrusionSettings",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/security/intrusionSettings",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/security/intrusionSettings",
      "put",
      "parameters",
      "updateOrganizationSecurityIntrusionSettings",
      "schema",
      "properties",
      "whitelistedRules",
      "items",
      "title"
    ],
    "rhs": "WhitelistedRule",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/security/intrusionSettings",
      "put",
      "parameters",
      "updateOrganizationSecurityIntrusionSettings",
      "schema",
      "title"
    ],
    "rhs": "updateOrganizationSecurityIntrusionSettings",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/security/intrusionSettings",
      "put",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/security/intrusionSettings",
      "put",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "whitelistedRules": [
        {
          "ruleId": "meraki:intrusion/snort/GID/01/SID/688",
          "message": "SQL sa login failed"
        },
        {
          "ruleId": "meraki:intrusion/snort/GID/01/SID/5805",
          "message": "MALWARE-OTHER Trackware myway speedbar runtime detection - switch engines"
        }
      ]
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/security/intrusionSettings",
      "put",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"whitelistedRules\": [\r\n    {\r\n      \"ruleId\": \"meraki:intrusion/snort/GID/01/SID/688\",\r\n      \"message\": \"SQL sa login failed\"\r\n    },\r\n    {\r\n      \"ruleId\": \"meraki:intrusion/snort/GID/01/SID/5805\",\r\n      \"message\": \"MALWARE-OTHER Trackware myway speedbar runtime detection - switch engines\"\r\n    }\r\n  ]\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/security/intrusionSettings",
      "put",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/security/intrusionSettings",
      "put",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/security/intrusionSettings",
      "put",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/security/intrusionSettings",
      "put",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/security/malwareSettings",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/security/malwareSettings",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "mode": "enabled",
      "allowedUrls": [
        {
          "url": "example.org",
          "comment": "allow example.org"
        },
        {
          "url": "help.com.au",
          "comment": "allow help.com.au"
        }
      ],
      "allowedFiles": [
        {
          "sha256": "e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503",
          "comment": "allow ZIP file"
        }
      ],
      "failureMode": "open"
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/security/malwareSettings",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"mode\": \"enabled\",\r\n  \"allowedUrls\": [\r\n    {\r\n      \"url\": \"example.org\",\r\n      \"comment\": \"allow example.org\"\r\n    },\r\n    {\r\n      \"url\": \"help.com.au\",\r\n      \"comment\": \"allow help.com.au\"\r\n    }\r\n  ],\r\n  \"allowedFiles\": [\r\n    {\r\n      \"sha256\": \"e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503\",\r\n      \"comment\": \"allow ZIP file\"\r\n    }\r\n  ]\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/security/malwareSettings",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/security/malwareSettings",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/security/malwareSettings",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/security/malwareSettings",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/security/malwareSettings",
      "put",
      "parameters",
      "updateNetworkSecurityMalwareSettings",
      "schema",
      "example",
      "failureMode"
    ],
    "lhs": "open",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/security/malwareSettings",
      "put",
      "parameters",
      "updateNetworkSecurityMalwareSettings",
      "schema",
      "title"
    ],
    "rhs": "updateNetworkSecurityMalwareSettings",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/security/malwareSettings",
      "put",
      "parameters",
      "updateNetworkSecurityMalwareSettings",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/security/malwareSettings",
      "put",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/security/malwareSettings",
      "put",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "mode": "enabled",
      "allowedUrls": [
        {
          "url": "example.org",
          "comment": "allow example.org"
        },
        {
          "url": "help.com.au",
          "comment": "allow help.com.au"
        }
      ],
      "allowedFiles": [
        {
          "sha256": "e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503",
          "comment": "allow ZIP file"
        }
      ],
      "failureMode": "open"
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/security/malwareSettings",
      "put",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"mode\": \"enabled\",\r\n  \"allowedUrls\": [\r\n    {\r\n      \"url\": \"example.org\",\r\n      \"comment\": \"allow example.org\"\r\n    },\r\n    {\r\n      \"url\": \"help.com.au\",\r\n      \"comment\": \"allow help.com.au\"\r\n    }\r\n  ],\r\n  \"allowedFiles\": [\r\n    {\r\n      \"sha256\": \"e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503\",\r\n      \"comment\": \"allow ZIP file\"\r\n    }\r\n  ]\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/security/malwareSettings",
      "put",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/security/malwareSettings",
      "put",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/security/malwareSettings",
      "put",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/security/malwareSettings",
      "put",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/securityEvents",
      "get",
      "parameters",
      "t0",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/securityEvents",
      "get",
      "parameters",
      "t1",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/securityEvents",
      "get",
      "parameters",
      "timespan",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/securityEvents",
      "get",
      "parameters",
      "timespan",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "E",
    "path": [
      "paths",
      "/networks/{networkId}/securityEvents",
      "get",
      "parameters",
      "perPage",
      "required"
    ],
    "lhs": true,
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/securityEvents",
      "get",
      "parameters",
      "perPage",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/securityEvents",
      "get",
      "parameters",
      "startingAfter",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/securityEvents",
      "get",
      "parameters",
      "endingBefore",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/securityEvents",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/securityEvents",
      "get",
      "responses",
      "200",
      "headers",
      "Link"
    ],
    "lhs": {
      "type": "string",
      "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/securityEvents",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "ts": 1547683314.270398,
        "deviceMac": "00:18:0a:01:02:03",
        "clientMac": "A1:B2:C3:D4:E5:F6",
        "srcIp": "1.2.3.4:34195",
        "destIp": "10.20.30.40:80",
        "protocol": "tcp/ip",
        "priority": "2",
        "classification": "4",
        "blocked": true,
        "message": "SERVER-WEBAPP JBoss JMX console access attempt",
        "signature": "1:21516:9",
        "sigSource": ""
      },
      {
        "ts": 1547683827.723265,
        "deviceMac": "00:18:0a:01:02:03",
        "clientMac": "A1:B2:C3:D4:E5:F6",
        "srcIp": "1.2.3.4:56023",
        "destIp": "10.20.30.40:80",
        "protocol": "tcp/ip",
        "priority": "1",
        "classification": "33",
        "blocked": true,
        "message": "POLICY-OTHER Adobe ColdFusion admin interface access attempt",
        "signature": "1:25975:2",
        "sigSource": ""
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/securityEvents",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"ts\": 1547683314.2703979,\r\n    \"deviceMac\": \"00:18:0a:01:02:03\",\r\n    \"clientMac\": \"A1:B2:C3:D4:E5:F6\",\r\n    \"srcIp\": \"1.2.3.4:34195\",\r\n    \"destIp\": \"10.20.30.40:80\",\r\n    \"protocol\": \"tcp/ip\",\r\n    \"priority\": \"2\",\r\n    \"classification\": \"4\",\r\n    \"blocked\": true,\r\n    \"message\": \"SERVER-WEBAPP JBoss JMX console access attempt\",\r\n    \"signature\": \"1:21516:9\",\r\n    \"sigSource\": \"\"\r\n  },\r\n  {\r\n    \"ts\": 1547683827.7232649,\r\n    \"deviceMac\": \"00:18:0a:01:02:03\",\r\n    \"clientMac\": \"A1:B2:C3:D4:E5:F6\",\r\n    \"srcIp\": \"1.2.3.4:56023\",\r\n    \"destIp\": \"10.20.30.40:80\",\r\n    \"protocol\": \"tcp/ip\",\r\n    \"priority\": \"1\",\r\n    \"classification\": \"33\",\r\n    \"blocked\": true,\r\n    \"message\": \"POLICY-OTHER Adobe ColdFusion admin interface access attempt\",\r\n    \"signature\": \"1:25975:2\",\r\n    \"sigSource\": \"\"\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/securityEvents",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/securityEvents",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/securityEvents",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/securityEvents",
      "get",
      "parameters",
      "t0",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/securityEvents",
      "get",
      "parameters",
      "t1",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/securityEvents",
      "get",
      "parameters",
      "timespan",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/securityEvents",
      "get",
      "parameters",
      "timespan",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "E",
    "path": [
      "paths",
      "/organizations/{organizationId}/securityEvents",
      "get",
      "parameters",
      "perPage",
      "required"
    ],
    "lhs": true,
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/securityEvents",
      "get",
      "parameters",
      "perPage",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/securityEvents",
      "get",
      "parameters",
      "startingAfter",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/securityEvents",
      "get",
      "parameters",
      "endingBefore",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/securityEvents",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/securityEvents",
      "get",
      "responses",
      "200",
      "headers",
      "Link"
    ],
    "lhs": {
      "type": "string",
      "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/securityEvents",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "ts": 1547683314.270398,
        "deviceMac": "00:18:0a:01:02:03",
        "clientMac": "A1:B2:C3:D4:E5:F6",
        "srcIp": "1.2.3.4:34195",
        "destIp": "10.20.30.40:80",
        "protocol": "tcp/ip",
        "priority": "2",
        "classification": "4",
        "blocked": true,
        "message": "SERVER-WEBAPP JBoss JMX console access attempt",
        "signature": "1:21516:9",
        "sigSource": ""
      },
      {
        "ts": 1547683827.723265,
        "deviceMac": "00:18:0a:01:02:03",
        "clientMac": "A1:B2:C3:D4:E5:F6",
        "srcIp": "1.2.3.4:56023",
        "destIp": "10.20.30.40:80",
        "protocol": "tcp/ip",
        "priority": "1",
        "classification": "33",
        "blocked": true,
        "message": "POLICY-OTHER Adobe ColdFusion admin interface access attempt",
        "signature": "1:25975:2",
        "sigSource": ""
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/securityEvents",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"ts\": 1547683314.2703979,\r\n    \"deviceMac\": \"00:18:0a:01:02:03\",\r\n    \"clientMac\": \"A1:B2:C3:D4:E5:F6\",\r\n    \"srcIp\": \"1.2.3.4:34195\",\r\n    \"destIp\": \"10.20.30.40:80\",\r\n    \"protocol\": \"tcp/ip\",\r\n    \"priority\": \"2\",\r\n    \"classification\": \"4\",\r\n    \"blocked\": true,\r\n    \"message\": \"SERVER-WEBAPP JBoss JMX console access attempt\",\r\n    \"signature\": \"1:21516:9\",\r\n    \"sigSource\": \"\"\r\n  },\r\n  {\r\n    \"ts\": 1547683827.7232649,\r\n    \"deviceMac\": \"00:18:0a:01:02:03\",\r\n    \"clientMac\": \"A1:B2:C3:D4:E5:F6\",\r\n    \"srcIp\": \"1.2.3.4:56023\",\r\n    \"destIp\": \"10.20.30.40:80\",\r\n    \"protocol\": \"tcp/ip\",\r\n    \"priority\": \"1\",\r\n    \"classification\": \"33\",\r\n    \"blocked\": true,\r\n    \"message\": \"POLICY-OTHER Adobe ColdFusion admin interface access attempt\",\r\n    \"signature\": \"1:25975:2\",\r\n    \"sigSource\": \"\"\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/securityEvents",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/securityEvents",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/securityEvents",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/sm/targetGroups",
      "get",
      "parameters",
      "withDetails",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/sm/targetGroups",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/sm/targetGroups",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "name": "My target group",
        "scope": "none",
        "tags": "[]",
        "type": "devices"
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/sm/targetGroups",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"name\": \"My target group\",\r\n    \"scope\": \"none\",\r\n    \"tags\": \"[]\",\r\n    \"type\": \"devices\"\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/sm/targetGroups",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/sm/targetGroups",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/sm/targetGroups",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/sm/targetGroups",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/sm/targetGroups",
      "post",
      "parameters",
      "createNetworkSmTargetGroup",
      "schema",
      "title"
    ],
    "rhs": "createNetworkSmTargetGroup",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/sm/targetGroups",
      "post",
      "parameters",
      "createNetworkSmTargetGroup",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/sm/targetGroups",
      "post",
      "responses",
      "201",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/sm/targetGroups",
      "post",
      "responses",
      "201",
      "examples",
      "application/json"
    ],
    "lhs": {
      "name": "My target group",
      "scope": "none",
      "tags": "[]",
      "type": "devices"
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/sm/targetGroups",
      "post",
      "responses",
      "201",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"name\": \"My target group\",\r\n  \"scope\": \"none\",\r\n  \"tags\": \"[]\",\r\n  \"type\": \"devices\"\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/sm/targetGroups",
      "post",
      "responses",
      "201",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/sm/targetGroups",
      "post",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/sm/targetGroups",
      "post",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/sm/targetGroups",
      "post",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
      "get",
      "parameters",
      "withDetails",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "name": "My target group",
      "scope": "none",
      "tags": "[]",
      "type": "devices"
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"name\": \"My target group\",\r\n  \"scope\": \"none\",\r\n  \"tags\": \"[]\",\r\n  \"type\": \"devices\"\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
      "put",
      "parameters",
      "updateNetworkSmTargetGroup",
      "schema",
      "title"
    ],
    "rhs": "updateNetworkSmTargetGroup",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
      "put",
      "parameters",
      "updateNetworkSmTargetGroup",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
      "put",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
      "put",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "name": "My target group",
      "scope": "none",
      "tags": "[]",
      "type": "devices"
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
      "put",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"name\": \"My target group\",\r\n  \"scope\": \"none\",\r\n  \"tags\": \"[]\",\r\n  \"type\": \"devices\"\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
      "put",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
      "put",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
      "put",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
      "put",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
      "delete",
      "responses",
      "204",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
      "delete",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
      "delete",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/sm/targetGroups/{targetGroupId}",
      "delete",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/clarity",
      "post",
      "parameters",
      "createNetworkSmProfileClarity",
      "schema",
      "title"
    ],
    "rhs": "createNetworkSmProfileClarity",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/clarity",
      "post",
      "parameters",
      "createNetworkSmProfileClarity",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/clarity",
      "post",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/clarity",
      "post",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/clarity",
      "post",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/clarity",
      "post",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/clarity",
      "post",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/clarity/{profileId}",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/clarity/{profileId}",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/clarity/{profileId}",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/clarity/{profileId}",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/clarity/{profileId}",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/clarity/{profileId}",
      "post",
      "parameters",
      "addNetworkSmProfileClarity",
      "schema",
      "title"
    ],
    "rhs": "addNetworkSmProfileClarity",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/clarity/{profileId}",
      "post",
      "parameters",
      "addNetworkSmProfileClarity",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/clarity/{profileId}",
      "post",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/clarity/{profileId}",
      "post",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/clarity/{profileId}",
      "post",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/clarity/{profileId}",
      "post",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/clarity/{profileId}",
      "post",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/clarity/{profileId}",
      "put",
      "parameters",
      "updateNetworkSmProfileClarity",
      "schema",
      "title"
    ],
    "rhs": "updateNetworkSmProfileClarity",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/clarity/{profileId}",
      "put",
      "parameters",
      "updateNetworkSmProfileClarity",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/clarity/{profileId}",
      "put",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/clarity/{profileId}",
      "put",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/clarity/{profileId}",
      "put",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/clarity/{profileId}",
      "put",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/clarity/{profileId}",
      "put",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/clarity/{profileId}",
      "delete",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/clarity/{profileId}",
      "delete",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/clarity/{profileId}",
      "delete",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/clarity/{profileId}",
      "delete",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/umbrella",
      "post",
      "parameters",
      "createNetworkSmProfileUmbrella",
      "schema",
      "title"
    ],
    "rhs": "createNetworkSmProfileUmbrella",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/umbrella",
      "post",
      "parameters",
      "createNetworkSmProfileUmbrella",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/umbrella",
      "post",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/umbrella",
      "post",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/umbrella",
      "post",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/umbrella",
      "post",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/umbrella",
      "post",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/umbrella/{profileId}",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/umbrella/{profileId}",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/umbrella/{profileId}",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/umbrella/{profileId}",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/umbrella/{profileId}",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/umbrella/{profileId}",
      "post",
      "parameters",
      "addNetworkSmProfileUmbrella",
      "schema",
      "title"
    ],
    "rhs": "addNetworkSmProfileUmbrella",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/umbrella/{profileId}",
      "post",
      "parameters",
      "addNetworkSmProfileUmbrella",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/umbrella/{profileId}",
      "post",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/umbrella/{profileId}",
      "post",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/umbrella/{profileId}",
      "post",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/umbrella/{profileId}",
      "post",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/umbrella/{profileId}",
      "post",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/umbrella/{profileId}",
      "put",
      "parameters",
      "updateNetworkSmProfileUmbrella",
      "schema",
      "title"
    ],
    "rhs": "updateNetworkSmProfileUmbrella",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/umbrella/{profileId}",
      "put",
      "parameters",
      "updateNetworkSmProfileUmbrella",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/umbrella/{profileId}",
      "put",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/umbrella/{profileId}",
      "put",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/umbrella/{profileId}",
      "put",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/umbrella/{profileId}",
      "put",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/umbrella/{profileId}",
      "put",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/umbrella/{profileId}",
      "delete",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/umbrella/{profileId}",
      "delete",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/umbrella/{profileId}",
      "delete",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/profile/umbrella/{profileId}",
      "delete",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/app/polaris",
      "get",
      "parameters",
      "bundleId",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{network_id}/sm/app/polaris",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/app/polaris",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{network_id}/sm/app/polaris",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/app/polaris",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/app/polaris",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/app/polaris",
      "post",
      "parameters",
      "createNetworkSmAppPolaris",
      "schema",
      "title"
    ],
    "rhs": "createNetworkSmAppPolaris",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/app/polaris",
      "post",
      "parameters",
      "createNetworkSmAppPolaris",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{network_id}/sm/app/polaris",
      "post",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/app/polaris",
      "post",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{network_id}/sm/app/polaris",
      "post",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/app/polaris",
      "post",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/app/polaris",
      "post",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/app/polaris/{appId}",
      "put",
      "parameters",
      "updateNetworkSmAppPolaris",
      "schema",
      "title"
    ],
    "rhs": "updateNetworkSmAppPolaris",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/app/polaris/{appId}",
      "put",
      "parameters",
      "updateNetworkSmAppPolaris",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{network_id}/sm/app/polaris/{appId}",
      "put",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/app/polaris/{appId}",
      "put",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{network_id}/sm/app/polaris/{appId}",
      "put",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/app/polaris/{appId}",
      "put",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/app/polaris/{appId}",
      "put",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/app/polaris/{appId}",
      "delete",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{network_id}/sm/app/polaris/{appId}",
      "delete",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/app/polaris/{appId}",
      "delete",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/app/polaris/{appId}",
      "delete",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/devices/lock",
      "put",
      "parameters",
      "lockNetworkSmDevices",
      "schema",
      "properties",
      "pin",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/devices/lock",
      "put",
      "parameters",
      "lockNetworkSmDevices",
      "schema",
      "title"
    ],
    "rhs": "lockNetworkSmDevices",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/devices/lock",
      "put",
      "parameters",
      "lockNetworkSmDevices",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{network_id}/sm/devices/lock",
      "put",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{network_id}/sm/devices/lock",
      "put",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "success": true
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/devices/lock",
      "put",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"success\": true\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/devices/lock",
      "put",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{network_id}/sm/devices/lock",
      "put",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/devices/lock",
      "put",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/devices/lock",
      "put",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/{id}/performanceHistory",
      "get",
      "parameters",
      "perPage",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/{id}/performanceHistory",
      "get",
      "parameters",
      "startingAfter",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/{id}/performanceHistory",
      "get",
      "parameters",
      "endingBefore",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{network_id}/sm/{id}/performanceHistory",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{network_id}/sm/{id}/performanceHistory",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "cpuPercentUsed": 0.95,
        "memFree": 1024,
        "memWired": 4096,
        "memActive": 1024,
        "memInactive": 2048,
        "networkSent": 512,
        "networkReceived": 512,
        "swapUsed": 768,
        "diskUsage": {
          "c": {
            "used": 2048,
            "space": 9096
          }
        },
        "ts": 1526087474
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/{id}/performanceHistory",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"cpuPercentUsed\": 0.95,\r\n    \"memFree\": 1024,\r\n    \"memWired\": 4096,\r\n    \"memActive\": 1024,\r\n    \"memInactive\": 2048,\r\n    \"networkSent\": 512,\r\n    \"networkReceived\": 512,\r\n    \"swapUsed\": 768,\r\n    \"diskUsage\": {\r\n      \"c\": {\r\n        \"used\": 2048,\r\n        \"space\": 9096\r\n      }\r\n    },\r\n    \"ts\": 1526087474.0\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/{id}/performanceHistory",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{network_id}/sm/{id}/performanceHistory",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/{id}/performanceHistory",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/{id}/performanceHistory",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/{id}/desktopLogs",
      "get",
      "parameters",
      "perPage",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/{id}/desktopLogs",
      "get",
      "parameters",
      "startingAfter",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/{id}/desktopLogs",
      "get",
      "parameters",
      "endingBefore",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{network_id}/sm/{id}/desktopLogs",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{network_id}/sm/{id}/desktopLogs",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "measuredAt": 1526087474,
        "user": "milesmeraki",
        "networkDevice": "NIC",
        "networkDriver": "Driver",
        "wifiChannel": "11",
        "wifiAuth": "wpa-psk",
        "wifiBssid": "00:11:22:33:44:55",
        "wifiSsid": "ssid",
        "wifiRssi": "-11",
        "wifiNoise": "-99",
        "dhcpServer": "1.2.3.4",
        "ip": "1.2.3.4",
        "networkMTU": "1500",
        "subnet": "192.168.1.0/24",
        "gateway": "1.2.3.5",
        "publicIP": "123.123.123.1",
        "dnsServer": "8",
        "ts": 1526087474
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/{id}/desktopLogs",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"measuredAt\": 1526087474.0,\r\n    \"user\": \"milesmeraki\",\r\n    \"networkDevice\": \"NIC\",\r\n    \"networkDriver\": \"Driver\",\r\n    \"wifiChannel\": \"11\",\r\n    \"wifiAuth\": \"wpa-psk\",\r\n    \"wifiBssid\": \"00:11:22:33:44:55\",\r\n    \"wifiSsid\": \"ssid\",\r\n    \"wifiRssi\": \"-11\",\r\n    \"wifiNoise\": \"-99\",\r\n    \"dhcpServer\": \"1.2.3.4\",\r\n    \"ip\": \"1.2.3.4\",\r\n    \"networkMTU\": \"1500\",\r\n    \"subnet\": \"192.168.1.0/24\",\r\n    \"gateway\": \"1.2.3.5\",\r\n    \"publicIP\": \"123.123.123.1\",\r\n    \"dnsServer\": \"8\",\r\n    \"ts\": 1526087474.0\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/{id}/desktopLogs",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{network_id}/sm/{id}/desktopLogs",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/{id}/desktopLogs",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/{id}/desktopLogs",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/{id}/deviceCommandLogs",
      "get",
      "parameters",
      "perPage",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/{id}/deviceCommandLogs",
      "get",
      "parameters",
      "startingAfter",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/{id}/deviceCommandLogs",
      "get",
      "parameters",
      "endingBefore",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{network_id}/sm/{id}/deviceCommandLogs",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{network_id}/sm/{id}/deviceCommandLogs",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "action": "UpdateProfile",
      "name": "My profile",
      "details": "{}",
      "dashboardUser": "Miles Meraki",
      "ts": 1526087474
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/{id}/deviceCommandLogs",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"action\": \"UpdateProfile\",\r\n  \"name\": \"My profile\",\r\n  \"details\": \"{}\",\r\n  \"dashboardUser\": \"Miles Meraki\",\r\n  \"ts\": 1526087474.0\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/{id}/deviceCommandLogs",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{network_id}/sm/{id}/deviceCommandLogs",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/{id}/deviceCommandLogs",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/{id}/deviceCommandLogs",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/{id}/connectivity",
      "get",
      "parameters",
      "perPage",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/{id}/connectivity",
      "get",
      "parameters",
      "startingAfter",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/{id}/connectivity",
      "get",
      "parameters",
      "endingBefore",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{network_id}/sm/{id}/connectivity",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{network_id}/sm/{id}/connectivity",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "firstSeenAt": 1518365681,
      "lastSeenAt": 1526087474
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/{id}/connectivity",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"firstSeenAt\": 1518365681.0,\r\n  \"lastSeenAt\": 1526087474.0\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/{id}/connectivity",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{network_id}/sm/{id}/connectivity",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/{id}/connectivity",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{network_id}/sm/{id}/connectivity",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{id}/splashLoginAttempts",
      "get",
      "parameters",
      "ssidNumber",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{id}/splashLoginAttempts",
      "get",
      "parameters",
      "loginIdentifier",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{id}/splashLoginAttempts",
      "get",
      "parameters",
      "timespan",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{id}/splashLoginAttempts",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{id}/splashLoginAttempts",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "name": "Miles Meraki",
        "login": "miles@meraki.com",
        "ssid": "My SSID",
        "loginAt": 1518365681,
        "gatewayDeviceMac": "00:11:22:33:44:55",
        "clientMac": "22:33:44:55:66:77",
        "clientId": "k74272e",
        "authorization": "success"
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{id}/splashLoginAttempts",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"name\": \"Miles Meraki\",\r\n    \"login\": \"miles@meraki.com\",\r\n    \"ssid\": \"My SSID\",\r\n    \"loginAt\": 1518365681,\r\n    \"gatewayDeviceMac\": \"00:11:22:33:44:55\",\r\n    \"clientMac\": \"22:33:44:55:66:77\",\r\n    \"clientId\": \"k74272e\",\r\n    \"authorization\": \"success\"\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{id}/splashLoginAttempts",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{id}/splashLoginAttempts",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{id}/splashLoginAttempts",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{id}/splashLoginAttempts",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/splashSettings",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/splashSettings",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "ssidNumber": 0,
      "splashPage": "Click-through splash page",
      "splashUrl": "https://www.custom_splash_url.com",
      "useSplashUrl": true
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/splashSettings",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"ssidNumber\": 0,\r\n  \"splashPage\": \"Click-through splash page\",\r\n  \"splashUrl\": \"https://www.custom_splash_url.com\",\r\n  \"useSplashUrl\": true\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/splashSettings",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/splashSettings",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/splashSettings",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/splashSettings",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/splashSettings",
      "put",
      "parameters",
      "updateNetworkSsidSplashSettings",
      "schema",
      "title"
    ],
    "rhs": "updateNetworkSsidSplashSettings",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/splashSettings",
      "put",
      "parameters",
      "updateNetworkSsidSplashSettings",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/splashSettings",
      "put",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/splashSettings",
      "put",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "ssidNumber": 0,
      "splashPage": "Click-through splash page",
      "splashUrl": "https://www.custom_splash_url.com",
      "useSplashUrl": true
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/splashSettings",
      "put",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"ssidNumber\": 0,\r\n  \"splashPage\": \"Click-through splash page\",\r\n  \"splashUrl\": \"https://www.custom_splash_url.com\",\r\n  \"useSplashUrl\": true\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/splashSettings",
      "put",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/splashSettings",
      "put",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/splashSettings",
      "put",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/splashSettings",
      "put",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/ssids",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/ssids",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "number": 0,
        "name": "My SSID",
        "enabled": true,
        "splashPage": "Click-through splash page",
        "ssidAdminAccessible": false,
        "authMode": "open",
        "ipAssignmentMode": "NAT mode",
        "bandSelection": "5 GHz band only",
        "perClientBandwidthLimitUp": 0,
        "perClientBandwidthLimitDown": 0
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"number\": 0,\r\n    \"name\": \"My SSID\",\r\n    \"enabled\": true,\r\n    \"splashPage\": \"Click-through splash page\",\r\n    \"ssidAdminAccessible\": false,\r\n    \"authMode\": \"open\",\r\n    \"ipAssignmentMode\": \"NAT mode\",\r\n    \"bandSelection\": \"5 GHz band only\",\r\n    \"perClientBandwidthLimitUp\": 0,\r\n    \"perClientBandwidthLimitDown\": 0\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/ssids",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "number": 0,
      "name": "My SSID",
      "enabled": true,
      "splashPage": "Click-through splash page",
      "ssidAdminAccessible": false,
      "authMode": "open",
      "ipAssignmentMode": "NAT mode",
      "bandSelection": "5 GHz band only",
      "perClientBandwidthLimitUp": 0,
      "perClientBandwidthLimitDown": 0
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"number\": 0,\r\n  \"name\": \"My SSID\",\r\n  \"enabled\": true,\r\n  \"splashPage\": \"Click-through splash page\",\r\n  \"ssidAdminAccessible\": false,\r\n  \"authMode\": \"open\",\r\n  \"ipAssignmentMode\": \"NAT mode\",\r\n  \"bandSelection\": \"5 GHz band only\",\r\n  \"perClientBandwidthLimitUp\": 0,\r\n  \"perClientBandwidthLimitDown\": 0\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}",
      "put",
      "parameters",
      "updateNetworkSsid",
      "schema",
      "properties",
      "authMode",
      "title"
    ],
    "rhs": "AuthMode",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}",
      "put",
      "parameters",
      "updateNetworkSsid",
      "schema",
      "properties",
      "authMode",
      "example"
    ],
    "rhs": "open",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}",
      "put",
      "parameters",
      "updateNetworkSsid",
      "schema",
      "properties",
      "encryptionMode",
      "title"
    ],
    "rhs": "EncryptionMode",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}",
      "put",
      "parameters",
      "updateNetworkSsid",
      "schema",
      "properties",
      "encryptionMode",
      "example"
    ],
    "rhs": "wpa",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}",
      "put",
      "parameters",
      "updateNetworkSsid",
      "schema",
      "properties",
      "wpaEncryptionMode",
      "title"
    ],
    "rhs": "WpaEncryptionMode",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}",
      "put",
      "parameters",
      "updateNetworkSsid",
      "schema",
      "properties",
      "wpaEncryptionMode",
      "example"
    ],
    "rhs": "WPA1 and WPA2",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}",
      "put",
      "parameters",
      "updateNetworkSsid",
      "schema",
      "properties",
      "splashPage",
      "title"
    ],
    "rhs": "SplashPage",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}",
      "put",
      "parameters",
      "updateNetworkSsid",
      "schema",
      "properties",
      "splashPage",
      "example"
    ],
    "rhs": "None",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}",
      "put",
      "parameters",
      "updateNetworkSsid",
      "schema",
      "properties",
      "radiusServers",
      "items",
      "properties",
      "port",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}",
      "put",
      "parameters",
      "updateNetworkSsid",
      "schema",
      "properties",
      "radiusServers",
      "items",
      "title"
    ],
    "rhs": "RadiusServer",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}",
      "put",
      "parameters",
      "updateNetworkSsid",
      "schema",
      "properties",
      "radiusFailoverPolicy",
      "title"
    ],
    "rhs": "RadiusFailoverPolicy",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}",
      "put",
      "parameters",
      "updateNetworkSsid",
      "schema",
      "properties",
      "radiusFailoverPolicy",
      "example"
    ],
    "rhs": "Deny access",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}",
      "put",
      "parameters",
      "updateNetworkSsid",
      "schema",
      "properties",
      "radiusLoadBalancingPolicy",
      "title"
    ],
    "rhs": "RadiusLoadBalancingPolicy",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}",
      "put",
      "parameters",
      "updateNetworkSsid",
      "schema",
      "properties",
      "radiusLoadBalancingPolicy",
      "example"
    ],
    "rhs": "Strict priority order",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}",
      "put",
      "parameters",
      "updateNetworkSsid",
      "schema",
      "properties",
      "radiusAccountingServers",
      "items",
      "properties",
      "port",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}",
      "put",
      "parameters",
      "updateNetworkSsid",
      "schema",
      "properties",
      "radiusAccountingServers",
      "items",
      "title"
    ],
    "rhs": "RadiusAccountingServer",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}",
      "put",
      "parameters",
      "updateNetworkSsid",
      "schema",
      "properties",
      "ipAssignmentMode",
      "title"
    ],
    "rhs": "IpAssignmentMode",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}",
      "put",
      "parameters",
      "updateNetworkSsid",
      "schema",
      "properties",
      "ipAssignmentMode",
      "example"
    ],
    "rhs": "NAT mode",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}",
      "put",
      "parameters",
      "updateNetworkSsid",
      "schema",
      "properties",
      "vlanId",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}",
      "put",
      "parameters",
      "updateNetworkSsid",
      "schema",
      "properties",
      "defaultVlanId",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}",
      "put",
      "parameters",
      "updateNetworkSsid",
      "schema",
      "properties",
      "apTagsAndVlanIds",
      "items",
      "properties",
      "vlanId",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}",
      "put",
      "parameters",
      "updateNetworkSsid",
      "schema",
      "properties",
      "apTagsAndVlanIds",
      "items",
      "title"
    ],
    "rhs": "ApTagsAndVlanId",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "E",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}",
      "put",
      "parameters",
      "updateNetworkSsid",
      "schema",
      "properties",
      "minBitrate",
      "format"
    ],
    "lhs": "float",
    "rhs": "double",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}",
      "put",
      "parameters",
      "updateNetworkSsid",
      "schema",
      "properties",
      "bandSelection",
      "title"
    ],
    "rhs": "BandSelection",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}",
      "put",
      "parameters",
      "updateNetworkSsid",
      "schema",
      "properties",
      "bandSelection",
      "example"
    ],
    "rhs": "Dual band operation",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}",
      "put",
      "parameters",
      "updateNetworkSsid",
      "schema",
      "properties",
      "perClientBandwidthLimitUp",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}",
      "put",
      "parameters",
      "updateNetworkSsid",
      "schema",
      "properties",
      "perClientBandwidthLimitDown",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}",
      "put",
      "parameters",
      "updateNetworkSsid",
      "schema",
      "title"
    ],
    "rhs": "updateNetworkSsid",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}",
      "put",
      "parameters",
      "updateNetworkSsid",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}",
      "put",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}",
      "put",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "number": 0,
      "name": "My SSID",
      "enabled": true,
      "splashPage": "Click-through splash page",
      "ssidAdminAccessible": false,
      "authMode": "open",
      "ipAssignmentMode": "NAT mode",
      "bandSelection": "5 GHz band only",
      "perClientBandwidthLimitUp": 0,
      "perClientBandwidthLimitDown": 0
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}",
      "put",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"number\": 0,\r\n  \"name\": \"My SSID\",\r\n  \"enabled\": true,\r\n  \"splashPage\": \"Click-through splash page\",\r\n  \"ssidAdminAccessible\": false,\r\n  \"authMode\": \"open\",\r\n  \"ipAssignmentMode\": \"NAT mode\",\r\n  \"bandSelection\": \"5 GHz band only\",\r\n  \"perClientBandwidthLimitUp\": 0,\r\n  \"perClientBandwidthLimitDown\": 0\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}",
      "put",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}",
      "put",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}",
      "put",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}",
      "put",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/switch/settings",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/switch/settings",
      "get",
      "responses",
      "200",
      "examples"
    ],
    "lhs": {
      "application/json": {
        "networkId": "N_24329156",
        "useCombinedPower": false,
        "powerExceptions": [
          {
            "serial": "Q234-ABCD-0001",
            "powerType": "redundant"
          },
          {
            "serial": "Q234-ABCD-0002",
            "powerType": "combined"
          },
          {
            "serial": "Q234-ABCD-0003",
            "powerType": "redundant"
          }
        ]
      }
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/switch/settings",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/switch/settings",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/switch/settings",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/switch/settings",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/switch/settings",
      "put",
      "parameters",
      "updateNetworkSwitchSettings",
      "schema",
      "properties",
      "powerExceptions",
      "items",
      "properties",
      "powerType",
      "title"
    ],
    "rhs": "PowerType",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/switch/settings",
      "put",
      "parameters",
      "updateNetworkSwitchSettings",
      "schema",
      "properties",
      "powerExceptions",
      "items",
      "properties",
      "powerType",
      "example"
    ],
    "rhs": "combined",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/switch/settings",
      "put",
      "parameters",
      "updateNetworkSwitchSettings",
      "schema",
      "properties",
      "powerExceptions",
      "items",
      "properties",
      "powerType",
      "enum"
    ],
    "rhs": [
      "combined",
      "redundant",
      "useNetworkSetting"
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/switch/settings",
      "put",
      "parameters",
      "updateNetworkSwitchSettings",
      "schema",
      "properties",
      "powerExceptions",
      "items",
      "title"
    ],
    "rhs": "PowerException",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "E",
    "path": [
      "paths",
      "/networks/{networkId}/switch/settings",
      "put",
      "parameters",
      "updateNetworkSwitchSettings",
      "schema",
      "example",
      "useCombinedPower"
    ],
    "lhs": true,
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "E",
    "path": [
      "paths",
      "/networks/{networkId}/switch/settings",
      "put",
      "parameters",
      "updateNetworkSwitchSettings",
      "schema",
      "example",
      "powerExceptions",
      2,
      "powerType"
    ],
    "lhs": "combined",
    "rhs": "redundant",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/switch/settings",
      "put",
      "parameters",
      "updateNetworkSwitchSettings",
      "schema",
      "title"
    ],
    "rhs": "updateNetworkSwitchSettings",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/switch/settings",
      "put",
      "parameters",
      "updateNetworkSwitchSettings",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/switch/settings",
      "put",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/switch/settings",
      "put",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "useCombinedPower": true,
      "powerExceptions": [
        {
          "serial": "Q234-ABCD-0001",
          "powerType": "redundant"
        },
        {
          "serial": "Q234-ABCD-0002",
          "powerType": "combined"
        },
        {
          "serial": "Q234-ABCD-0003",
          "powerType": "combined"
        },
        {
          "serial": "Q234-ABCD-0004",
          "powerType": "useNetworkSetting"
        }
      ]
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/switch/settings",
      "put",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"useCombinedPower\": false,\r\n  \"powerExceptions\": [\r\n    {\r\n      \"serial\": \"Q234-ABCD-0001\",\r\n      \"powerType\": \"redundant\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0002\",\r\n      \"powerType\": \"combined\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0003\",\r\n      \"powerType\": \"redundant\"\r\n    },\r\n    {\r\n      \"serial\": \"Q234-ABCD-0004\",\r\n      \"powerType\": \"useNetworkSetting\"\r\n    }\r\n  ]\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/switch/settings",
      "put",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/switch/settings",
      "put",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/switch/settings",
      "put",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/switch/settings",
      "put",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/devices/{serial}/switchPorts",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/devices/{serial}/switchPorts",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "number": 1,
        "name": "My switch port",
        "tags": "tag1 tag2",
        "enabled": true,
        "poeEnabled": true,
        "type": "access",
        "vlan": 10,
        "voiceVlan": 20,
        "isolationEnabled": false,
        "rstpEnabled": true,
        "stpGuard": "disabled",
        "accessPolicyNumber": "1234",
        "linkNegotiation": "Auto negotiate"
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/switchPorts",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"number\": 1,\r\n    \"name\": \"My switch port\",\r\n    \"tags\": \"tag1 tag2\",\r\n    \"enabled\": true,\r\n    \"poeEnabled\": true,\r\n    \"type\": \"access\",\r\n    \"vlan\": 10,\r\n    \"voiceVlan\": 20,\r\n    \"isolationEnabled\": false,\r\n    \"rstpEnabled\": true,\r\n    \"stpGuard\": \"disabled\",\r\n    \"accessPolicyNumber\": \"1234\",\r\n    \"linkNegotiation\": \"Auto negotiate\"\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/switchPorts",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/devices/{serial}/switchPorts",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/switchPorts",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/switchPorts",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/devices/{serial}/switchPorts/{number}",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/devices/{serial}/switchPorts/{number}",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "number": 1,
      "name": "My switch port",
      "tags": "tag1 tag2",
      "enabled": true,
      "poeEnabled": true,
      "type": "access",
      "vlan": 10,
      "voiceVlan": 20,
      "isolationEnabled": false,
      "rstpEnabled": true,
      "stpGuard": "disabled",
      "accessPolicyNumber": "1234",
      "linkNegotiation": "Auto negotiate"
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/switchPorts/{number}",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"number\": 1,\r\n  \"name\": \"My switch port\",\r\n  \"tags\": \"tag1 tag2\",\r\n  \"enabled\": true,\r\n  \"poeEnabled\": true,\r\n  \"type\": \"access\",\r\n  \"vlan\": 10,\r\n  \"voiceVlan\": 20,\r\n  \"isolationEnabled\": false,\r\n  \"rstpEnabled\": true,\r\n  \"stpGuard\": \"disabled\",\r\n  \"accessPolicyNumber\": \"1234\",\r\n  \"linkNegotiation\": \"Auto negotiate\"\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/switchPorts/{number}",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/devices/{serial}/switchPorts/{number}",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/switchPorts/{number}",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/switchPorts/{number}",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/switchPorts/{number}",
      "put",
      "parameters",
      "updateDeviceSwitchPort",
      "schema",
      "title"
    ],
    "rhs": "updateDeviceSwitchPort",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/switchPorts/{number}",
      "put",
      "parameters",
      "updateDeviceSwitchPort",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/devices/{serial}/switchPorts/{number}",
      "put",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/devices/{serial}/switchPorts/{number}",
      "put",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "number": 1,
      "name": "My switch port",
      "tags": "tag1 tag2",
      "enabled": true,
      "poeEnabled": true,
      "type": "access",
      "vlan": 10,
      "voiceVlan": 20,
      "isolationEnabled": false,
      "rstpEnabled": true,
      "stpGuard": "disabled",
      "accessPolicyNumber": "1234",
      "linkNegotiation": "Auto negotiate"
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/switchPorts/{number}",
      "put",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"number\": 1,\r\n  \"name\": \"My switch port\",\r\n  \"tags\": \"tag1 tag2\",\r\n  \"enabled\": true,\r\n  \"poeEnabled\": true,\r\n  \"type\": \"access\",\r\n  \"vlan\": 10,\r\n  \"voiceVlan\": 20,\r\n  \"isolationEnabled\": false,\r\n  \"rstpEnabled\": true,\r\n  \"stpGuard\": \"disabled\",\r\n  \"accessPolicyNumber\": \"1234\",\r\n  \"linkNegotiation\": \"Auto negotiate\"\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/switchPorts/{number}",
      "put",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/devices/{serial}/switchPorts/{number}",
      "put",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/switchPorts/{number}",
      "put",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/devices/{serial}/switchPorts/{number}",
      "put",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/switchStacks",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/switchStacks",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "id": "8473",
        "name": "A cool stack",
        "serials": [
          "QBZY-XWVU-TSRQ",
          "QBAB-CDEF-GHIJ"
        ]
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/switchStacks",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"id\": \"8473\",\r\n    \"name\": \"A cool stack\",\r\n    \"serials\": [\r\n      \"QBZY-XWVU-TSRQ\",\r\n      \"QBAB-CDEF-GHIJ\"\r\n    ]\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/switchStacks",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/switchStacks",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/switchStacks",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/switchStacks",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/switchStacks",
      "post",
      "parameters",
      "createNetworkSwitchStack",
      "schema",
      "title"
    ],
    "rhs": "createNetworkSwitchStack",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/switchStacks",
      "post",
      "responses",
      "201",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/switchStacks",
      "post",
      "responses",
      "201",
      "examples",
      "application/json"
    ],
    "lhs": {
      "id": "8473",
      "name": "A cool stack",
      "serials": [
        "QBZY-XWVU-TSRQ",
        "QBAB-CDEF-GHIJ"
      ]
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/switchStacks",
      "post",
      "responses",
      "201",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"id\": \"8473\",\r\n  \"name\": \"A cool stack\",\r\n  \"serials\": [\r\n    \"QBZY-XWVU-TSRQ\",\r\n    \"QBAB-CDEF-GHIJ\"\r\n  ]\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/switchStacks",
      "post",
      "responses",
      "201",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/switchStacks",
      "post",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/switchStacks",
      "post",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/switchStacks",
      "post",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/switchStacks/{switchStackId}",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/switchStacks/{switchStackId}",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "id": "8473",
      "name": "A cool stack",
      "serials": [
        "QBZY-XWVU-TSRQ",
        "QBAB-CDEF-GHIJ"
      ]
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/switchStacks/{switchStackId}",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"id\": \"8473\",\r\n  \"name\": \"A cool stack\",\r\n  \"serials\": [\r\n    \"QBZY-XWVU-TSRQ\",\r\n    \"QBAB-CDEF-GHIJ\"\r\n  ]\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/switchStacks/{switchStackId}",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/switchStacks/{switchStackId}",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/switchStacks/{switchStackId}",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/switchStacks/{switchStackId}",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/switchStacks/{switchStackId}",
      "delete",
      "responses",
      "204",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/switchStacks/{switchStackId}",
      "delete",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/switchStacks/{switchStackId}",
      "delete",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/switchStacks/{switchStackId}",
      "delete",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/switchStacks/{switchStackId}/add",
      "post",
      "parameters",
      "addNetworkSwitchStack",
      "schema",
      "title"
    ],
    "rhs": "addNetworkSwitchStack",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/switchStacks/{switchStackId}/add",
      "post",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/switchStacks/{switchStackId}/add",
      "post",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "id": "8473",
      "name": "A cool stack",
      "serials": [
        "QBZY-XWVU-TSRQ",
        "QBAB-CDEF-GHIJ"
      ]
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/switchStacks/{switchStackId}/add",
      "post",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"id\": \"8473\",\r\n  \"name\": \"A cool stack\",\r\n  \"serials\": [\r\n    \"QBZY-XWVU-TSRQ\",\r\n    \"QBAB-CDEF-GHIJ\"\r\n  ]\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/switchStacks/{switchStackId}/add",
      "post",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/switchStacks/{switchStackId}/add",
      "post",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/switchStacks/{switchStackId}/add",
      "post",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/switchStacks/{switchStackId}/add",
      "post",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkID}/switchStacks/{switchStackId}/remove",
      "post",
      "parameters",
      "removeNetworkSwitchStack",
      "schema",
      "title"
    ],
    "rhs": "removeNetworkSwitchStack",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkID}/switchStacks/{switchStackId}/remove",
      "post",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkID}/switchStacks/{switchStackId}/remove",
      "post",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "id": "8473",
      "name": "A cool stack",
      "serials": [
        "QBAB-CDEF-GHIJ"
      ]
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkID}/switchStacks/{switchStackId}/remove",
      "post",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"id\": \"8473\",\r\n  \"name\": \"A cool stack\",\r\n  \"serials\": [\r\n    \"QBAB-CDEF-GHIJ\"\r\n  ]\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkID}/switchStacks/{switchStackId}/remove",
      "post",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkID}/switchStacks/{switchStackId}/remove",
      "post",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkID}/switchStacks/{switchStackId}/remove",
      "post",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkID}/switchStacks/{switchStackId}/remove",
      "post",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/syslogServers",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/syslogServers",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "host": "1.2.3.4",
        "port": 443,
        "roles": [
          "Wireless event log",
          "URLs"
        ]
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/syslogServers",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"host\": \"1.2.3.4\",\r\n    \"port\": 443,\r\n    \"roles\": [\r\n      \"Wireless event log\",\r\n      \"URLs\"\r\n    ]\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/syslogServers",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/syslogServers",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/syslogServers",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/syslogServers",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/syslogServers",
      "put",
      "parameters",
      "updateNetworkSyslogServers",
      "schema",
      "properties",
      "servers",
      "items",
      "properties",
      "port",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/syslogServers",
      "put",
      "parameters",
      "updateNetworkSyslogServers",
      "schema",
      "properties",
      "servers",
      "items",
      "title"
    ],
    "rhs": "Server",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/syslogServers",
      "put",
      "parameters",
      "updateNetworkSyslogServers",
      "schema",
      "title"
    ],
    "rhs": "updateNetworkSyslogServers",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/syslogServers",
      "put",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/syslogServers",
      "put",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "host": "1.2.3.4",
        "port": 443,
        "roles": [
          "Wireless event log",
          "URLs"
        ]
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/syslogServers",
      "put",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"host\": \"1.2.3.4\",\r\n    \"port\": 443,\r\n    \"roles\": [\r\n      \"Wireless event log\",\r\n      \"URLs\"\r\n    ]\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/syslogServers",
      "put",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/syslogServers",
      "put",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/syslogServers",
      "put",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/syslogServers",
      "put",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/trafficShaping",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/trafficShaping",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "defaultRulesEnabled": true,
      "rules": [
        {
          "definitions": [
            {
              "type": "host",
              "value": "google.com"
            },
            {
              "type": "port",
              "value": "9090"
            },
            {
              "type": "ipRange",
              "value": "192.1.0.0"
            },
            {
              "type": "ipRange",
              "value": "192.1.0.0/16"
            },
            {
              "type": "ipRange",
              "value": "10.1.0.0/16:80"
            },
            {
              "type": "localNet",
              "value": "192.168.0.0/16"
            },
            {
              "type": "applicationCategory",
              "value": {
                "id": "meraki:layer7/category/2",
                "name": "Blogging"
              }
            },
            {
              "type": "application",
              "value": {
                "id": "meraki:layer7/application/133",
                "name": "Battle.net"
              }
            }
          ],
          "perClientBandwidthLimits": {
            "settings": "custom",
            "bandwidthLimits": {
              "limitUp": 1000000,
              "limitDown": 1000000
            }
          },
          "dscpTagValue": null,
          "priority": "normal"
        }
      ]
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/trafficShaping",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"defaultRulesEnabled\": true,\r\n  \"rules\": [\r\n    {\r\n      \"definitions\": [\r\n        {\r\n          \"type\": \"host\",\r\n          \"value\": \"google.com\"\r\n        },\r\n        {\r\n          \"type\": \"port\",\r\n          \"value\": \"9090\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"192.1.0.0\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"192.1.0.0/16\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"10.1.0.0/16:80\"\r\n        },\r\n        {\r\n          \"type\": \"localNet\",\r\n          \"value\": \"192.168.0.0/16\"\r\n        },\r\n        {\r\n          \"type\": \"applicationCategory\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/category/2\",\r\n            \"name\": \"Blogging\"\r\n          }\r\n        },\r\n        {\r\n          \"type\": \"application\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/application/133\",\r\n            \"name\": \"Battle.net\"\r\n          }\r\n        }\r\n      ],\r\n      \"perClientBandwidthLimits\": {\r\n        \"settings\": \"custom\",\r\n        \"bandwidthLimits\": {\r\n          \"limitUp\": 1000000,\r\n          \"limitDown\": 1000000\r\n        }\r\n      },\r\n      \"dscpTagValue\": null,\r\n      \"priority\": \"normal\"\r\n    }\r\n  ]\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/trafficShaping",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/trafficShaping",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/trafficShaping",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/trafficShaping",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/trafficShaping",
      "put",
      "parameters",
      "updateNetworkTrafficShaping",
      "schema",
      "properties",
      "rules",
      "items",
      "properties",
      "definitions",
      "items",
      "properties",
      "type",
      "title"
    ],
    "rhs": "Type1",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/trafficShaping",
      "put",
      "parameters",
      "updateNetworkTrafficShaping",
      "schema",
      "properties",
      "rules",
      "items",
      "properties",
      "definitions",
      "items",
      "properties",
      "type",
      "example"
    ],
    "rhs": "application",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/trafficShaping",
      "put",
      "parameters",
      "updateNetworkTrafficShaping",
      "schema",
      "properties",
      "rules",
      "items",
      "properties",
      "definitions",
      "items",
      "title"
    ],
    "rhs": "Definition",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/trafficShaping",
      "put",
      "parameters",
      "updateNetworkTrafficShaping",
      "schema",
      "properties",
      "rules",
      "items",
      "properties",
      "perClientBandwidthLimits",
      "properties",
      "bandwidthLimits",
      "properties",
      "limitUp",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/trafficShaping",
      "put",
      "parameters",
      "updateNetworkTrafficShaping",
      "schema",
      "properties",
      "rules",
      "items",
      "properties",
      "perClientBandwidthLimits",
      "properties",
      "bandwidthLimits",
      "properties",
      "limitDown",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/trafficShaping",
      "put",
      "parameters",
      "updateNetworkTrafficShaping",
      "schema",
      "properties",
      "rules",
      "items",
      "properties",
      "perClientBandwidthLimits",
      "properties",
      "bandwidthLimits",
      "title"
    ],
    "rhs": "BandwidthLimits1",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/trafficShaping",
      "put",
      "parameters",
      "updateNetworkTrafficShaping",
      "schema",
      "properties",
      "rules",
      "items",
      "properties",
      "perClientBandwidthLimits",
      "title"
    ],
    "rhs": "PerClientBandwidthLimits",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/trafficShaping",
      "put",
      "parameters",
      "updateNetworkTrafficShaping",
      "schema",
      "properties",
      "rules",
      "items",
      "properties",
      "dscpTagValue",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/trafficShaping",
      "put",
      "parameters",
      "updateNetworkTrafficShaping",
      "schema",
      "properties",
      "rules",
      "items",
      "title"
    ],
    "rhs": "Rule7",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/trafficShaping",
      "put",
      "parameters",
      "updateNetworkTrafficShaping",
      "schema",
      "title"
    ],
    "rhs": "updateNetworkTrafficShaping",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/trafficShaping",
      "put",
      "parameters",
      "updateNetworkTrafficShaping",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/trafficShaping",
      "put",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/trafficShaping",
      "put",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "defaultRulesEnabled": true,
      "rules": [
        {
          "definitions": [
            {
              "type": "host",
              "value": "google.com"
            },
            {
              "type": "port",
              "value": "9090"
            },
            {
              "type": "ipRange",
              "value": "192.1.0.0"
            },
            {
              "type": "ipRange",
              "value": "192.1.0.0/16"
            },
            {
              "type": "ipRange",
              "value": "10.1.0.0/16:80"
            },
            {
              "type": "localNet",
              "value": "192.168.0.0/16"
            },
            {
              "type": "applicationCategory",
              "value": {
                "id": "meraki:layer7/category/2",
                "name": "Blogging"
              }
            },
            {
              "type": "application",
              "value": {
                "id": "meraki:layer7/application/133",
                "name": "Battle.net"
              }
            }
          ],
          "perClientBandwidthLimits": {
            "settings": "custom",
            "bandwidthLimits": {
              "limitUp": 1000000,
              "limitDown": 1000000
            }
          },
          "dscpTagValue": null,
          "priority": "normal"
        }
      ]
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/trafficShaping",
      "put",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"defaultRulesEnabled\": true,\r\n  \"rules\": [\r\n    {\r\n      \"definitions\": [\r\n        {\r\n          \"type\": \"host\",\r\n          \"value\": \"google.com\"\r\n        },\r\n        {\r\n          \"type\": \"port\",\r\n          \"value\": \"9090\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"192.1.0.0\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"192.1.0.0/16\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"10.1.0.0/16:80\"\r\n        },\r\n        {\r\n          \"type\": \"localNet\",\r\n          \"value\": \"192.168.0.0/16\"\r\n        },\r\n        {\r\n          \"type\": \"applicationCategory\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/category/2\",\r\n            \"name\": \"Blogging\"\r\n          }\r\n        },\r\n        {\r\n          \"type\": \"application\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/application/133\",\r\n            \"name\": \"Battle.net\"\r\n          }\r\n        }\r\n      ],\r\n      \"perClientBandwidthLimits\": {\r\n        \"settings\": \"custom\",\r\n        \"bandwidthLimits\": {\r\n          \"limitUp\": 1000000,\r\n          \"limitDown\": 1000000\r\n        }\r\n      },\r\n      \"dscpTagValue\": null,\r\n      \"priority\": \"normal\"\r\n    }\r\n  ]\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/trafficShaping",
      "put",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/trafficShaping",
      "put",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/trafficShaping",
      "put",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/trafficShaping",
      "put",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/trafficShaping",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/trafficShaping",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "trafficShapingEnabled": true,
      "defaultRulesEnabled": true,
      "rules": [
        {
          "definitions": [
            {
              "type": "host",
              "value": "google.com"
            },
            {
              "type": "port",
              "value": "9090"
            },
            {
              "type": "ipRange",
              "value": "192.1.0.0"
            },
            {
              "type": "ipRange",
              "value": "192.1.0.0/16"
            },
            {
              "type": "ipRange",
              "value": "10.1.0.0/16:80"
            },
            {
              "type": "localNet",
              "value": "192.168.0.0/16"
            },
            {
              "type": "applicationCategory",
              "value": {
                "id": "meraki:layer7/category/2",
                "name": "Blogging"
              }
            },
            {
              "type": "application",
              "value": {
                "id": "meraki:layer7/application/133",
                "name": "Battle.net"
              }
            }
          ],
          "perClientBandwidthLimits": {
            "settings": "custom",
            "bandwidthLimits": {
              "limitUp": 1000000,
              "limitDown": 1000000
            }
          },
          "dscpTagValue": null,
          "pcpTagValue": null
        }
      ]
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/trafficShaping",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"trafficShapingEnabled\": true,\r\n  \"defaultRulesEnabled\": true,\r\n  \"rules\": [\r\n    {\r\n      \"definitions\": [\r\n        {\r\n          \"type\": \"host\",\r\n          \"value\": \"google.com\"\r\n        },\r\n        {\r\n          \"type\": \"port\",\r\n          \"value\": \"9090\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"192.1.0.0\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"192.1.0.0/16\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"10.1.0.0/16:80\"\r\n        },\r\n        {\r\n          \"type\": \"localNet\",\r\n          \"value\": \"192.168.0.0/16\"\r\n        },\r\n        {\r\n          \"type\": \"applicationCategory\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/category/2\",\r\n            \"name\": \"Blogging\"\r\n          }\r\n        },\r\n        {\r\n          \"type\": \"application\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/application/133\",\r\n            \"name\": \"Battle.net\"\r\n          }\r\n        }\r\n      ],\r\n      \"perClientBandwidthLimits\": {\r\n        \"settings\": \"custom\",\r\n        \"bandwidthLimits\": {\r\n          \"limitUp\": 1000000,\r\n          \"limitDown\": 1000000\r\n        }\r\n      },\r\n      \"dscpTagValue\": null,\r\n      \"pcpTagValue\": null\r\n    }\r\n  ]\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/trafficShaping",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/trafficShaping",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/trafficShaping",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/trafficShaping",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/trafficShaping",
      "put",
      "parameters",
      "updateNetworkSsidTrafficShaping",
      "schema",
      "properties",
      "rules",
      "items",
      "properties",
      "definitions",
      "items",
      "properties",
      "type",
      "title"
    ],
    "rhs": "Type1",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/trafficShaping",
      "put",
      "parameters",
      "updateNetworkSsidTrafficShaping",
      "schema",
      "properties",
      "rules",
      "items",
      "properties",
      "definitions",
      "items",
      "properties",
      "type",
      "example"
    ],
    "rhs": "application",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/trafficShaping",
      "put",
      "parameters",
      "updateNetworkSsidTrafficShaping",
      "schema",
      "properties",
      "rules",
      "items",
      "properties",
      "definitions",
      "items",
      "title"
    ],
    "rhs": "Definition",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/trafficShaping",
      "put",
      "parameters",
      "updateNetworkSsidTrafficShaping",
      "schema",
      "properties",
      "rules",
      "items",
      "properties",
      "perClientBandwidthLimits",
      "properties",
      "bandwidthLimits",
      "properties",
      "limitUp",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/trafficShaping",
      "put",
      "parameters",
      "updateNetworkSsidTrafficShaping",
      "schema",
      "properties",
      "rules",
      "items",
      "properties",
      "perClientBandwidthLimits",
      "properties",
      "bandwidthLimits",
      "properties",
      "limitDown",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/trafficShaping",
      "put",
      "parameters",
      "updateNetworkSsidTrafficShaping",
      "schema",
      "properties",
      "rules",
      "items",
      "properties",
      "perClientBandwidthLimits",
      "properties",
      "bandwidthLimits",
      "title"
    ],
    "rhs": "BandwidthLimits1",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/trafficShaping",
      "put",
      "parameters",
      "updateNetworkSsidTrafficShaping",
      "schema",
      "properties",
      "rules",
      "items",
      "properties",
      "perClientBandwidthLimits",
      "title"
    ],
    "rhs": "PerClientBandwidthLimits",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/trafficShaping",
      "put",
      "parameters",
      "updateNetworkSsidTrafficShaping",
      "schema",
      "properties",
      "rules",
      "items",
      "properties",
      "dscpTagValue",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/trafficShaping",
      "put",
      "parameters",
      "updateNetworkSsidTrafficShaping",
      "schema",
      "properties",
      "rules",
      "items",
      "properties",
      "pcpTagValue",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/trafficShaping",
      "put",
      "parameters",
      "updateNetworkSsidTrafficShaping",
      "schema",
      "properties",
      "rules",
      "items",
      "title"
    ],
    "rhs": "Rule8",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/trafficShaping",
      "put",
      "parameters",
      "updateNetworkSsidTrafficShaping",
      "schema",
      "title"
    ],
    "rhs": "updateNetworkSsidTrafficShaping",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/trafficShaping",
      "put",
      "parameters",
      "updateNetworkSsidTrafficShaping",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/trafficShaping",
      "put",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/trafficShaping",
      "put",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "trafficShapingEnabled": true,
      "defaultRulesEnabled": true,
      "rules": [
        {
          "definitions": [
            {
              "type": "host",
              "value": "google.com"
            },
            {
              "type": "port",
              "value": "9090"
            },
            {
              "type": "ipRange",
              "value": "192.1.0.0"
            },
            {
              "type": "ipRange",
              "value": "192.1.0.0/16"
            },
            {
              "type": "ipRange",
              "value": "10.1.0.0/16:80"
            },
            {
              "type": "localNet",
              "value": "192.168.0.0/16"
            },
            {
              "type": "applicationCategory",
              "value": {
                "id": "meraki:layer7/category/2",
                "name": "Blogging"
              }
            },
            {
              "type": "application",
              "value": {
                "id": "meraki:layer7/application/133",
                "name": "Battle.net"
              }
            }
          ],
          "perClientBandwidthLimits": {
            "settings": "custom",
            "bandwidthLimits": {
              "limitUp": 1000000,
              "limitDown": 1000000
            }
          },
          "dscpTagValue": null,
          "pcpTagValue": null
        }
      ]
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/trafficShaping",
      "put",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"trafficShapingEnabled\": true,\r\n  \"defaultRulesEnabled\": true,\r\n  \"rules\": [\r\n    {\r\n      \"definitions\": [\r\n        {\r\n          \"type\": \"host\",\r\n          \"value\": \"google.com\"\r\n        },\r\n        {\r\n          \"type\": \"port\",\r\n          \"value\": \"9090\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"192.1.0.0\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"192.1.0.0/16\"\r\n        },\r\n        {\r\n          \"type\": \"ipRange\",\r\n          \"value\": \"10.1.0.0/16:80\"\r\n        },\r\n        {\r\n          \"type\": \"localNet\",\r\n          \"value\": \"192.168.0.0/16\"\r\n        },\r\n        {\r\n          \"type\": \"applicationCategory\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/category/2\",\r\n            \"name\": \"Blogging\"\r\n          }\r\n        },\r\n        {\r\n          \"type\": \"application\",\r\n          \"value\": {\r\n            \"id\": \"meraki:layer7/application/133\",\r\n            \"name\": \"Battle.net\"\r\n          }\r\n        }\r\n      ],\r\n      \"perClientBandwidthLimits\": {\r\n        \"settings\": \"custom\",\r\n        \"bandwidthLimits\": {\r\n          \"limitUp\": 1000000,\r\n          \"limitDown\": 1000000\r\n        }\r\n      },\r\n      \"dscpTagValue\": null,\r\n      \"pcpTagValue\": null\r\n    }\r\n  ]\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/trafficShaping",
      "put",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/trafficShaping",
      "put",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/trafficShaping",
      "put",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/ssids/{number}/trafficShaping",
      "put",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/trafficShaping/dscpTaggingOptions",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/trafficShaping/dscpTaggingOptions",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "dscpTagValue": 10,
        "description": "AF11 - High Throughput, Latency Insensitive, Low Drop"
      },
      {
        "dscpTagValue": 12,
        "description": "AF12 - High Throughput, Latency Insensitive, Medium Drop"
      },
      {
        "dscpTagValue": 14,
        "description": "AF13 - High Throughput, Latency Insensitive, High Drop"
      },
      {
        "dscpTagValue": 18,
        "description": "AF21 - Low Latency Data, Low Drop"
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/trafficShaping/dscpTaggingOptions",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"dscpTagValue\": 10,\r\n    \"description\": \"AF11 - High Throughput, Latency Insensitive, Low Drop\"\r\n  },\r\n  {\r\n    \"dscpTagValue\": 12,\r\n    \"description\": \"AF12 - High Throughput, Latency Insensitive, Medium Drop\"\r\n  },\r\n  {\r\n    \"dscpTagValue\": 14,\r\n    \"description\": \"AF13 - High Throughput, Latency Insensitive, High Drop\"\r\n  },\r\n  {\r\n    \"dscpTagValue\": 18,\r\n    \"description\": \"AF21 - Low Latency Data, Low Drop\"\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/trafficShaping/dscpTaggingOptions",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/trafficShaping/dscpTaggingOptions",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/trafficShaping/dscpTaggingOptions",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/trafficShaping/dscpTaggingOptions",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/trafficShaping/applicationCategories",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/trafficShaping/applicationCategories",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "applicationCategories": [
          {
            "id": "meraki:layer7/category/24",
            "name": "Advertising",
            "applications": [
              {
                "id": "meraki:layer7/application/5",
                "name": "Advertising.com"
              },
              {
                "id": "meraki:layer7/application/0",
                "name": "AppNexus"
              },
              {
                "id": "meraki:layer7/application/1",
                "name": "Brightroll"
              }
            ]
          }
        ]
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/trafficShaping/applicationCategories",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"applicationCategories\": [\r\n      {\r\n        \"id\": \"meraki:layer7/category/24\",\r\n        \"name\": \"Advertising\",\r\n        \"applications\": [\r\n          {\r\n            \"id\": \"meraki:layer7/application/5\",\r\n            \"name\": \"Advertising.com\"\r\n          },\r\n          {\r\n            \"id\": \"meraki:layer7/application/0\",\r\n            \"name\": \"AppNexus\"\r\n          },\r\n          {\r\n            \"id\": \"meraki:layer7/application/1\",\r\n            \"name\": \"Brightroll\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/trafficShaping/applicationCategories",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/trafficShaping/applicationCategories",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/trafficShaping/applicationCategories",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/trafficShaping/applicationCategories",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/webhookLogs",
      "get",
      "parameters",
      "t0",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/webhookLogs",
      "get",
      "parameters",
      "t1",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/webhookLogs",
      "get",
      "parameters",
      "timespan",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/webhookLogs",
      "get",
      "parameters",
      "timespan",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/webhookLogs",
      "get",
      "parameters",
      "perPage",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/webhookLogs",
      "get",
      "parameters",
      "perPage",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/webhookLogs",
      "get",
      "parameters",
      "startingAfter",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/webhookLogs",
      "get",
      "parameters",
      "endingBefore",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/webhookLogs",
      "get",
      "parameters",
      "url",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/webhookLogs",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/webhookLogs",
      "get",
      "responses",
      "200",
      "headers",
      "Link"
    ],
    "lhs": {
      "type": "string",
      "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/webhookLogs",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "organizationId": "33619",
        "networkId": "L_22742",
        "alertType": "Settings changed",
        "url": "https://www.example.com/path",
        "sentAt": "2019-01-01T13:37:28.123456Z",
        "loggedAt": "2019-01-01T13:37:28.423456Z",
        "responseCode": 200,
        "responseDuration": 244
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/webhookLogs",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"organizationId\": \"33619\",\r\n    \"networkId\": \"L_22742\",\r\n    \"alertType\": \"Settings changed\",\r\n    \"url\": \"https://www.example.com/path\",\r\n    \"sentAt\": \"2019-01-01T13:37:28.123456Z\",\r\n    \"loggedAt\": \"2019-01-01T13:37:28.423456Z\",\r\n    \"responseCode\": 200,\r\n    \"responseDuration\": 244\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/organizations/{organizationId}/webhookLogs",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/webhookLogs",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/organizations/{organizationId}/webhookLogs",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/contentFiltering/categories",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/contentFiltering/categories",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "categories": [
        {
          "id": "meraki:contentFiltering/category/1",
          "name": "Real Estate"
        },
        {
          "id": "meraki:contentFiltering/category/3",
          "name": "Financial Services"
        },
        "...",
        {
          "id": "meraki:contentFiltering/category/11",
          "name": "Adult and Pornography"
        }
      ]
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/contentFiltering/categories",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"categories\": [\r\n    {\r\n      \"id\": \"meraki:contentFiltering/category/1\",\r\n      \"name\": \"Real Estate\"\r\n    },\r\n    {\r\n      \"id\": \"meraki:contentFiltering/category/3\",\r\n      \"name\": \"Financial Services\"\r\n    },\r\n    \"...\",\r\n    {\r\n      \"id\": \"meraki:contentFiltering/category/11\",\r\n      \"name\": \"Adult and Pornography\"\r\n    }\r\n  ]\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/contentFiltering/categories",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/contentFiltering/categories",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/contentFiltering/categories",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/contentFiltering/categories",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/contentFiltering",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/contentFiltering",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "allowedUrlPatterns": [
        "http://www.example.org",
        "http://help.com.au"
      ],
      "blockedUrlPatterns": [
        "http://www.example.com",
        "http://www.betting.com"
      ],
      "blockedUrlCategories": [
        {
          "id": "meraki:contentFiltering/category/1",
          "name": "Real Estate"
        },
        {
          "id": "meraki:contentFiltering/category/7",
          "name": "Shopping"
        }
      ],
      "urlCategoryListSize": "topSites"
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/contentFiltering",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"allowedUrlPatterns\": [\r\n    \"http://www.example.org\",\r\n    \"http://help.com.au\"\r\n  ],\r\n  \"blockedUrlPatterns\": [\r\n    \"http://www.example.com\",\r\n    \"http://www.betting.com\"\r\n  ],\r\n  \"blockedUrlCategories\": [\r\n    {\r\n      \"id\": \"meraki:contentFiltering/category/1\",\r\n      \"name\": \"Real Estate\"\r\n    },\r\n    {\r\n      \"id\": \"meraki:contentFiltering/category/7\",\r\n      \"name\": \"Shopping\"\r\n    }\r\n  ],\r\n  \"urlCategoryListSize\": \"topSites\"\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/contentFiltering",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/contentFiltering",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/contentFiltering",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/contentFiltering",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/contentFiltering",
      "put",
      "parameters",
      "updateNetworkContentFiltering",
      "schema",
      "title"
    ],
    "rhs": "updateNetworkContentFiltering",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/contentFiltering",
      "put",
      "parameters",
      "updateNetworkContentFiltering",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/contentFiltering",
      "put",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/contentFiltering",
      "put",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "allowedUrlPatterns": [
        "http://www.example.org",
        "http://help.com.au"
      ],
      "blockedUrlPatterns": [
        "http://www.example.com",
        "http://www.betting.com"
      ],
      "blockedUrlCategories": [
        {
          "id": "meraki:contentFiltering/category/1",
          "name": "Real Estate"
        },
        {
          "id": "meraki:contentFiltering/category/7",
          "name": "Shopping"
        }
      ],
      "urlCategoryListSize": "topSites"
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/contentFiltering",
      "put",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"allowedUrlPatterns\": [\r\n    \"http://www.example.org\",\r\n    \"http://help.com.au\"\r\n  ],\r\n  \"blockedUrlPatterns\": [\r\n    \"http://www.example.com\",\r\n    \"http://www.betting.com\"\r\n  ],\r\n  \"blockedUrlCategories\": [\r\n    {\r\n      \"id\": \"meraki:contentFiltering/category/1\",\r\n      \"name\": \"Real Estate\"\r\n    },\r\n    {\r\n      \"id\": \"meraki:contentFiltering/category/7\",\r\n      \"name\": \"Shopping\"\r\n    }\r\n  ],\r\n  \"urlCategoryListSize\": \"topSites\"\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/contentFiltering",
      "put",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/contentFiltering",
      "put",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/contentFiltering",
      "put",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/contentFiltering",
      "put",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/firewalledServices",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/firewalledServices",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "service": "web",
        "access": "restricted",
        "allowedIps": [
          "123.123.123.1"
        ]
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/firewalledServices",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"service\": \"web\",\r\n    \"access\": \"restricted\",\r\n    \"allowedIps\": [\r\n      \"123.123.123.1\"\r\n    ]\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/firewalledServices",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/firewalledServices",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/firewalledServices",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/firewalledServices",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/firewalledServices/{service}",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/firewalledServices/{service}",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "service": "web",
      "access": "restricted",
      "allowedIps": [
        "123.123.123.1"
      ]
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/firewalledServices/{service}",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"service\": \"web\",\r\n  \"access\": \"restricted\",\r\n  \"allowedIps\": [\r\n    \"123.123.123.1\"\r\n  ]\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/firewalledServices/{service}",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/firewalledServices/{service}",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/firewalledServices/{service}",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/firewalledServices/{service}",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/firewalledServices/{service}",
      "put",
      "parameters",
      "updateNetworkFirewalledService",
      "schema",
      "title"
    ],
    "rhs": "updateNetworkFirewalledService",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/firewalledServices/{service}",
      "put",
      "parameters",
      "updateNetworkFirewalledService",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/firewalledServices/{service}",
      "put",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/firewalledServices/{service}",
      "put",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "service": "web",
      "access": "restricted",
      "allowedIps": [
        "123.123.123.1"
      ]
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/firewalledServices/{service}",
      "put",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"service\": \"web\",\r\n  \"access\": \"restricted\",\r\n  \"allowedIps\": [\r\n    \"123.123.123.1\"\r\n  ]\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/firewalledServices/{service}",
      "put",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/firewalledServices/{service}",
      "put",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/firewalledServices/{service}",
      "put",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/firewalledServices/{service}",
      "put",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/oneToManyNatRules",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/oneToManyNatRules",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "rules": [
        {
          "publicIp": "146.11.11.13",
          "uplink": "internet1",
          "portRules": [
            {
              "name": "Rule 1",
              "protocol": "tcp",
              "publicPort": "9443",
              "localIp": "192.168.128.1",
              "localPort": "443",
              "allowedIps": [
                "any"
              ]
            },
            {
              "name": "Rule 2",
              "protocol": "tcp",
              "publicPort": "8080",
              "localIp": "192.168.128.1",
              "localPort": "80",
              "allowedIps": [
                "10.82.110.0/24",
                "10.82.111.0/24"
              ]
            }
          ]
        }
      ]
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/oneToManyNatRules",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"rules\": [\r\n    {\r\n      \"publicIp\": \"146.11.11.13\",\r\n      \"uplink\": \"internet1\",\r\n      \"portRules\": [\r\n        {\r\n          \"name\": \"Rule 1\",\r\n          \"protocol\": \"tcp\",\r\n          \"publicPort\": \"9443\",\r\n          \"localIp\": \"192.168.128.1\",\r\n          \"localPort\": \"443\",\r\n          \"allowedIps\": [\r\n            \"any\"\r\n          ]\r\n        },\r\n        {\r\n          \"name\": \"Rule 2\",\r\n          \"protocol\": \"tcp\",\r\n          \"publicPort\": \"8080\",\r\n          \"localIp\": \"192.168.128.1\",\r\n          \"localPort\": \"80\",\r\n          \"allowedIps\": [\r\n            \"10.82.110.0/24\",\r\n            \"10.82.111.0/24\"\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/oneToManyNatRules",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/oneToManyNatRules",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/oneToManyNatRules",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/oneToManyNatRules",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/oneToManyNatRules",
      "put",
      "parameters",
      "updateNetworkOneToManyNatRules",
      "schema",
      "properties",
      "rules",
      "items",
      "title"
    ],
    "rhs": "Rule9",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/oneToManyNatRules",
      "put",
      "parameters",
      "updateNetworkOneToManyNatRules",
      "schema",
      "title"
    ],
    "rhs": "updateNetworkOneToManyNatRules",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/oneToManyNatRules",
      "put",
      "parameters",
      "updateNetworkOneToManyNatRules",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/oneToManyNatRules",
      "put",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/oneToManyNatRules",
      "put",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "rules": [
        {
          "publicIp": "146.11.11.13",
          "uplink": "internet1",
          "portRules": [
            {
              "name": "Rule 1",
              "protocol": "tcp",
              "publicPort": "9443",
              "localIp": "192.168.128.1",
              "localPort": "443",
              "allowedIps": [
                "any"
              ]
            },
            {
              "name": "Rule 2",
              "protocol": "tcp",
              "publicPort": "8080",
              "localIp": "192.168.128.1",
              "localPort": "80",
              "allowedIps": [
                "10.82.110.0/24",
                "10.82.111.0/24"
              ]
            }
          ]
        }
      ]
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/oneToManyNatRules",
      "put",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"rules\": [\r\n    {\r\n      \"publicIp\": \"146.11.11.13\",\r\n      \"uplink\": \"internet1\",\r\n      \"portRules\": [\r\n        {\r\n          \"name\": \"Rule 1\",\r\n          \"protocol\": \"tcp\",\r\n          \"publicPort\": \"9443\",\r\n          \"localIp\": \"192.168.128.1\",\r\n          \"localPort\": \"443\",\r\n          \"allowedIps\": [\r\n            \"any\"\r\n          ]\r\n        },\r\n        {\r\n          \"name\": \"Rule 2\",\r\n          \"protocol\": \"tcp\",\r\n          \"publicPort\": \"8080\",\r\n          \"localIp\": \"192.168.128.1\",\r\n          \"localPort\": \"80\",\r\n          \"allowedIps\": [\r\n            \"10.82.110.0/24\",\r\n            \"10.82.111.0/24\"\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/oneToManyNatRules",
      "put",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/oneToManyNatRules",
      "put",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/oneToManyNatRules",
      "put",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/oneToManyNatRules",
      "put",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/oneToOneNatRules",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/oneToOneNatRules",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "rules": [
        {
          "name": "Service behind NAT",
          "lanIp": "192.168.128.22",
          "publicIp": "146.12.3.33",
          "uplink": "internet1",
          "allowedInbound": [
            {
              "protocol": "tcp",
              "destinationPorts": [
                "80"
              ],
              "allowedIps": [
                "10.82.112.0/24",
                "10.82.0.0/16"
              ]
            },
            {
              "protocol": "udp",
              "destinationPorts": [
                "8080"
              ],
              "allowedIps": [
                "10.81.110.5",
                "10.81.0.0/16"
              ]
            }
          ]
        }
      ]
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/oneToOneNatRules",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"rules\": [\r\n    {\r\n      \"name\": \"Service behind NAT\",\r\n      \"lanIp\": \"192.168.128.22\",\r\n      \"publicIp\": \"146.12.3.33\",\r\n      \"uplink\": \"internet1\",\r\n      \"allowedInbound\": [\r\n        {\r\n          \"protocol\": \"tcp\",\r\n          \"destinationPorts\": [\r\n            \"80\"\r\n          ],\r\n          \"allowedIps\": [\r\n            \"10.82.112.0/24\",\r\n            \"10.82.0.0/16\"\r\n          ]\r\n        },\r\n        {\r\n          \"protocol\": \"udp\",\r\n          \"destinationPorts\": [\r\n            \"8080\"\r\n          ],\r\n          \"allowedIps\": [\r\n            \"10.81.110.5\",\r\n            \"10.81.0.0/16\"\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/oneToOneNatRules",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/oneToOneNatRules",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/oneToOneNatRules",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/oneToOneNatRules",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/oneToOneNatRules",
      "put",
      "parameters",
      "updateNetworkOneToOneNatRules",
      "schema",
      "properties",
      "rules",
      "items",
      "title"
    ],
    "rhs": "Rule10",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/oneToOneNatRules",
      "put",
      "parameters",
      "updateNetworkOneToOneNatRules",
      "schema",
      "title"
    ],
    "rhs": "updateNetworkOneToOneNatRules",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/oneToOneNatRules",
      "put",
      "parameters",
      "updateNetworkOneToOneNatRules",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/oneToOneNatRules",
      "put",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/oneToOneNatRules",
      "put",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "rules": [
        {
          "name": "Service behind NAT",
          "lanIp": "192.168.128.22",
          "publicIp": "146.12.3.33",
          "uplink": "internet1",
          "allowedInbound": [
            {
              "protocol": "tcp",
              "destinationPorts": [
                "80"
              ],
              "allowedIps": [
                "10.82.112.0/24",
                "10.82.0.0/16"
              ]
            },
            {
              "protocol": "udp",
              "destinationPorts": [
                "8080"
              ],
              "allowedIps": [
                "10.81.110.5",
                "10.81.0.0/16"
              ]
            }
          ]
        }
      ]
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/oneToOneNatRules",
      "put",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"rules\": [\r\n    {\r\n      \"name\": \"Service behind NAT\",\r\n      \"lanIp\": \"192.168.128.22\",\r\n      \"publicIp\": \"146.12.3.33\",\r\n      \"uplink\": \"internet1\",\r\n      \"allowedInbound\": [\r\n        {\r\n          \"protocol\": \"tcp\",\r\n          \"destinationPorts\": [\r\n            \"80\"\r\n          ],\r\n          \"allowedIps\": [\r\n            \"10.82.112.0/24\",\r\n            \"10.82.0.0/16\"\r\n          ]\r\n        },\r\n        {\r\n          \"protocol\": \"udp\",\r\n          \"destinationPorts\": [\r\n            \"8080\"\r\n          ],\r\n          \"allowedIps\": [\r\n            \"10.81.110.5\",\r\n            \"10.81.0.0/16\"\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/oneToOneNatRules",
      "put",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/oneToOneNatRules",
      "put",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/oneToOneNatRules",
      "put",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/oneToOneNatRules",
      "put",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/portForwardingRules",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/portForwardingRules",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "rules": [
        {
          "lanIp": "192.168.128.1",
          "allowedIps": [
            "any"
          ],
          "name": "Description of Port Forwarding Rule",
          "protocol": "tcp",
          "publicPort": "8100-8101",
          "localPort": "442-443",
          "uplink": "both"
        }
      ]
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/portForwardingRules",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"rules\": [\r\n    {\r\n      \"lanIp\": \"192.168.128.1\",\r\n      \"allowedIps\": [\r\n        \"any\"\r\n      ],\r\n      \"name\": \"Description of Port Forwarding Rule\",\r\n      \"protocol\": \"tcp\",\r\n      \"publicPort\": \"8100-8101\",\r\n      \"localPort\": \"442-443\",\r\n      \"uplink\": \"both\"\r\n    }\r\n  ]\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/portForwardingRules",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/portForwardingRules",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/portForwardingRules",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/portForwardingRules",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/portForwardingRules",
      "put",
      "parameters",
      "updateNetworkPortForwardingRules",
      "schema",
      "properties",
      "rules",
      "items",
      "title"
    ],
    "rhs": "Rule11",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/portForwardingRules",
      "put",
      "parameters",
      "updateNetworkPortForwardingRules",
      "schema",
      "title"
    ],
    "rhs": "updateNetworkPortForwardingRules",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/portForwardingRules",
      "put",
      "parameters",
      "updateNetworkPortForwardingRules",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/portForwardingRules",
      "put",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/portForwardingRules",
      "put",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "rules": [
        {
          "lanIp": "192.168.128.1",
          "allowedIps": [
            "any"
          ],
          "name": "Description of Port Forwarding Rule",
          "protocol": "tcp",
          "publicPort": "8100-8101",
          "localPort": "442-443",
          "uplink": "both"
        }
      ]
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/portForwardingRules",
      "put",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"rules\": [\r\n    {\r\n      \"lanIp\": \"192.168.128.1\",\r\n      \"allowedIps\": [\r\n        \"any\"\r\n      ],\r\n      \"name\": \"Description of Port Forwarding Rule\",\r\n      \"protocol\": \"tcp\",\r\n      \"publicPort\": \"8100-8101\",\r\n      \"localPort\": \"442-443\",\r\n      \"uplink\": \"both\"\r\n    }\r\n  ]\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/portForwardingRules",
      "put",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/portForwardingRules",
      "put",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/portForwardingRules",
      "put",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/portForwardingRules",
      "put",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/staticRoutes",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/staticRoutes",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "id": "d7fa4948-7921-4dfa-af6b-ae8b16c20c39",
        "networkId": "N_24329156",
        "name": "My route",
        "gatewayIp": "1.2.3.5",
        "subnet": "192.168.1.0/24",
        "fixedIpAssignments": "{}",
        "reservedIpRanges": "[]",
        "enabled": true
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/staticRoutes",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"id\": \"d7fa4948-7921-4dfa-af6b-ae8b16c20c39\",\r\n    \"networkId\": \"N_24329156\",\r\n    \"name\": \"My route\",\r\n    \"gatewayIp\": \"1.2.3.5\",\r\n    \"subnet\": \"192.168.1.0/24\",\r\n    \"fixedIpAssignments\": \"{}\",\r\n    \"reservedIpRanges\": \"[]\",\r\n    \"enabled\": true\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/staticRoutes",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/staticRoutes",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/staticRoutes",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/staticRoutes",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/staticRoutes",
      "post",
      "parameters",
      "createNetworkStaticRoute",
      "schema",
      "title"
    ],
    "rhs": "createNetworkStaticRoute",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/staticRoutes",
      "post",
      "parameters",
      "createNetworkStaticRoute",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/staticRoutes",
      "post",
      "responses",
      "201",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/staticRoutes",
      "post",
      "responses",
      "201",
      "examples",
      "application/json"
    ],
    "lhs": {
      "name": "My route",
      "subnet": "192.168.1.0/24",
      "gatewayIp": "1.2.3.5"
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/staticRoutes",
      "post",
      "responses",
      "201",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"name\": \"My route\",\r\n  \"subnet\": \"192.168.1.0/24\",\r\n  \"gatewayIp\": \"1.2.3.5\"\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/staticRoutes",
      "post",
      "responses",
      "201",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/staticRoutes",
      "post",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/staticRoutes",
      "post",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/staticRoutes",
      "post",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/staticRoutes/{srId}",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/staticRoutes/{srId}",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "id": "d7fa4948-7921-4dfa-af6b-ae8b16c20c39",
      "networkId": "N_24329156",
      "name": "My route",
      "gatewayIp": "1.2.3.5",
      "subnet": "192.168.1.0/24",
      "fixedIpAssignments": "{}",
      "reservedIpRanges": "[]",
      "enabled": true
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/staticRoutes/{srId}",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"id\": \"d7fa4948-7921-4dfa-af6b-ae8b16c20c39\",\r\n  \"networkId\": \"N_24329156\",\r\n  \"name\": \"My route\",\r\n  \"gatewayIp\": \"1.2.3.5\",\r\n  \"subnet\": \"192.168.1.0/24\",\r\n  \"fixedIpAssignments\": \"{}\",\r\n  \"reservedIpRanges\": \"[]\",\r\n  \"enabled\": true\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/staticRoutes/{srId}",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/staticRoutes/{srId}",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/staticRoutes/{srId}",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/staticRoutes/{srId}",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/staticRoutes/{srId}",
      "put",
      "parameters",
      "updateNetworkStaticRoute",
      "schema",
      "title"
    ],
    "rhs": "updateNetworkStaticRoute",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/staticRoutes/{srId}",
      "put",
      "parameters",
      "updateNetworkStaticRoute",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/staticRoutes/{srId}",
      "put",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/staticRoutes/{srId}",
      "put",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "id": "d7fa4948-7921-4dfa-af6b-ae8b16c20c39",
      "networkId": "N_24329156",
      "name": "My route",
      "gatewayIp": "1.2.3.5",
      "subnet": "192.168.1.0/24",
      "fixedIpAssignments": "{}",
      "reservedIpRanges": "[]",
      "enabled": true
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/staticRoutes/{srId}",
      "put",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"id\": \"d7fa4948-7921-4dfa-af6b-ae8b16c20c39\",\r\n  \"networkId\": \"N_24329156\",\r\n  \"name\": \"My route\",\r\n  \"gatewayIp\": \"1.2.3.5\",\r\n  \"subnet\": \"192.168.1.0/24\",\r\n  \"fixedIpAssignments\": \"{}\",\r\n  \"reservedIpRanges\": \"[]\",\r\n  \"enabled\": true\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/staticRoutes/{srId}",
      "put",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/staticRoutes/{srId}",
      "put",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/staticRoutes/{srId}",
      "put",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/staticRoutes/{srId}",
      "put",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/staticRoutes/{srId}",
      "delete",
      "responses",
      "204",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/staticRoutes/{srId}",
      "delete",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/staticRoutes/{srId}",
      "delete",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/staticRoutes/{srId}",
      "delete",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/uplinkSettings",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/uplinkSettings",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "bandwidthLimits": {
        "wan1": {
          "limitUp": 1000000,
          "limitDown": 1000000
        },
        "wan2": {
          "limitUp": 1000000,
          "limitDown": 1000000
        },
        "cellular": {
          "limitUp": 51200,
          "limitDown": 51200
        }
      }
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/uplinkSettings",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"bandwidthLimits\": {\r\n    \"wan1\": {\r\n      \"limitUp\": 1000000,\r\n      \"limitDown\": 1000000\r\n    },\r\n    \"wan2\": {\r\n      \"limitUp\": 1000000,\r\n      \"limitDown\": 1000000\r\n    },\r\n    \"cellular\": {\r\n      \"limitUp\": 51200,\r\n      \"limitDown\": 51200\r\n    }\r\n  }\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/uplinkSettings",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/uplinkSettings",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/uplinkSettings",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/uplinkSettings",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/uplinkSettings",
      "put",
      "parameters",
      "updateNetworkUplinkSettings",
      "schema",
      "properties",
      "bandwidthLimits",
      "properties",
      "limitUp",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/uplinkSettings",
      "put",
      "parameters",
      "updateNetworkUplinkSettings",
      "schema",
      "properties",
      "bandwidthLimits",
      "properties",
      "limitDown",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/uplinkSettings",
      "put",
      "parameters",
      "updateNetworkUplinkSettings",
      "schema",
      "properties",
      "bandwidthLimits",
      "title"
    ],
    "rhs": "BandwidthLimits6",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/uplinkSettings",
      "put",
      "parameters",
      "updateNetworkUplinkSettings",
      "schema",
      "title"
    ],
    "rhs": "updateNetworkUplinkSettings",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/uplinkSettings",
      "put",
      "parameters",
      "updateNetworkUplinkSettings",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/uplinkSettings",
      "put",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/uplinkSettings",
      "put",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "bandwidthLimits": {
        "wan1": {
          "limitUp": 1000000,
          "limitDown": 1000000
        },
        "wan2": {
          "limitUp": 1000000,
          "limitDown": 1000000
        },
        "cellular": {
          "limitUp": 51200,
          "limitDown": 51200
        }
      }
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/uplinkSettings",
      "put",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"bandwidthLimits\": {\r\n    \"wan1\": {\r\n      \"limitUp\": 1000000,\r\n      \"limitDown\": 1000000\r\n    },\r\n    \"wan2\": {\r\n      \"limitUp\": 1000000,\r\n      \"limitDown\": 1000000\r\n    },\r\n    \"cellular\": {\r\n      \"limitUp\": 51200,\r\n      \"limitDown\": 51200\r\n    }\r\n  }\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/uplinkSettings",
      "put",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/uplinkSettings",
      "put",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/uplinkSettings",
      "put",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/uplinkSettings",
      "put",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/vlans",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/vlans",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "id": "1234",
        "networkId": "N_24329156",
        "name": "My VLAN",
        "applianceIp": "1.2.3.4",
        "subnet": "192.168.1.0/24",
        "fixedIpAssignments": {
          "22:33:44:55:66:77": {
            "ip": "1.2.3.4",
            "name": "Some client name"
          }
        },
        "reservedIpRanges": [
          {
            "start": "192.168.1.0",
            "end": "192.168.1.1",
            "comment": "A reserved IP range"
          }
        ],
        "dnsNameservers": "google_dns",
        "dhcpHandling": "Run a DHCP server",
        "dhcpLeaseTime": "1 day",
        "dhcpBootOptionsEnabled": false,
        "dhcpBootNextServer": null,
        "dhcpBootFilename": null,
        "dhcpOptions": [
          {
            "code": 5,
            "type": "text",
            "value": "five"
          }
        ]
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/vlans",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"id\": \"1234\",\r\n    \"networkId\": \"N_24329156\",\r\n    \"name\": \"My VLAN\",\r\n    \"applianceIp\": \"1.2.3.4\",\r\n    \"subnet\": \"192.168.1.0/24\",\r\n    \"fixedIpAssignments\": {\r\n      \"22:33:44:55:66:77\": {\r\n        \"ip\": \"1.2.3.4\",\r\n        \"name\": \"Some client name\"\r\n      }\r\n    },\r\n    \"reservedIpRanges\": [\r\n      {\r\n        \"start\": \"192.168.1.0\",\r\n        \"end\": \"192.168.1.1\",\r\n        \"comment\": \"A reserved IP range\"\r\n      }\r\n    ],\r\n    \"dnsNameservers\": \"google_dns\",\r\n    \"dhcpHandling\": \"Run a DHCP server\",\r\n    \"dhcpLeaseTime\": \"1 day\",\r\n    \"dhcpBootOptionsEnabled\": false,\r\n    \"dhcpBootNextServer\": null,\r\n    \"dhcpBootFilename\": null,\r\n    \"dhcpOptions\": [\r\n      {\r\n        \"code\": 5,\r\n        \"type\": \"text\",\r\n        \"value\": \"five\"\r\n      }\r\n    ]\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/vlans",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/vlans",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/vlans",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/vlans",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/vlans",
      "post",
      "parameters",
      "createNetworkVlan",
      "schema",
      "title"
    ],
    "rhs": "createNetworkVlan",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/vlans",
      "post",
      "responses",
      "201",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/vlans",
      "post",
      "responses",
      "201",
      "examples",
      "application/json"
    ],
    "lhs": {
      "id": "1234",
      "networkId": "N_24329156",
      "name": "My VLAN",
      "applianceIp": "1.2.3.4",
      "subnet": "192.168.1.0/24",
      "fixedIpAssignments": {},
      "reservedIpRanges": [],
      "dnsNameservers": "google_dns",
      "dhcpHandling": "Run a DHCP server",
      "dhcpLeaseTime": "1 day",
      "dhcpBootOptionsEnabled": false,
      "dhcpBootNextServer": null,
      "dhcpBootFilename": null,
      "dhcpOptions": []
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/vlans",
      "post",
      "responses",
      "201",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"id\": \"1234\",\r\n  \"networkId\": \"N_24329156\",\r\n  \"name\": \"My VLAN\",\r\n  \"applianceIp\": \"1.2.3.4\",\r\n  \"subnet\": \"192.168.1.0/24\",\r\n  \"fixedIpAssignments\": {},\r\n  \"reservedIpRanges\": [],\r\n  \"dnsNameservers\": \"google_dns\",\r\n  \"dhcpHandling\": \"Run a DHCP server\",\r\n  \"dhcpLeaseTime\": \"1 day\",\r\n  \"dhcpBootOptionsEnabled\": false,\r\n  \"dhcpBootNextServer\": null,\r\n  \"dhcpBootFilename\": null,\r\n  \"dhcpOptions\": []\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/vlans",
      "post",
      "responses",
      "201",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/vlans",
      "post",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/vlans",
      "post",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/vlans",
      "post",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/vlans/{vlanId}",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/vlans/{vlanId}",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "id": "1234",
      "networkId": "N_24329156",
      "name": "My VLAN",
      "applianceIp": "1.2.3.4",
      "subnet": "192.168.1.0/24",
      "fixedIpAssignments": {
        "22:33:44:55:66:77": {
          "ip": "1.2.3.4",
          "name": "Some client name"
        }
      },
      "reservedIpRanges": [
        {
          "start": "192.168.1.0",
          "end": "192.168.1.1",
          "comment": "A reserved IP range"
        }
      ],
      "dnsNameservers": "google_dns",
      "dhcpHandling": "Run a DHCP server",
      "dhcpLeaseTime": "1 day",
      "dhcpBootOptionsEnabled": false,
      "dhcpBootNextServer": null,
      "dhcpBootFilename": null,
      "dhcpOptions": [
        {
          "code": 5,
          "type": "text",
          "value": "five"
        }
      ]
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/vlans/{vlanId}",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"id\": \"1234\",\r\n  \"networkId\": \"N_24329156\",\r\n  \"name\": \"My VLAN\",\r\n  \"applianceIp\": \"1.2.3.4\",\r\n  \"subnet\": \"192.168.1.0/24\",\r\n  \"fixedIpAssignments\": {\r\n    \"22:33:44:55:66:77\": {\r\n      \"ip\": \"1.2.3.4\",\r\n      \"name\": \"Some client name\"\r\n    }\r\n  },\r\n  \"reservedIpRanges\": [\r\n    {\r\n      \"start\": \"192.168.1.0\",\r\n      \"end\": \"192.168.1.1\",\r\n      \"comment\": \"A reserved IP range\"\r\n    }\r\n  ],\r\n  \"dnsNameservers\": \"google_dns\",\r\n  \"dhcpHandling\": \"Run a DHCP server\",\r\n  \"dhcpLeaseTime\": \"1 day\",\r\n  \"dhcpBootOptionsEnabled\": false,\r\n  \"dhcpBootNextServer\": null,\r\n  \"dhcpBootFilename\": null,\r\n  \"dhcpOptions\": [\r\n    {\r\n      \"code\": 5,\r\n      \"type\": \"text\",\r\n      \"value\": \"five\"\r\n    }\r\n  ]\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/vlans/{vlanId}",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/vlans/{vlanId}",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/vlans/{vlanId}",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/vlans/{vlanId}",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/vlans/{vlanId}",
      "put",
      "parameters",
      "updateNetworkVlan",
      "schema",
      "properties",
      "fixedIpAssignments",
      "properties"
    ],
    "lhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/vlans/{vlanId}",
      "put",
      "parameters",
      "updateNetworkVlan",
      "schema",
      "properties",
      "reservedIpRanges",
      "items",
      "title"
    ],
    "rhs": "ReservedIpRange",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/vlans/{vlanId}",
      "put",
      "parameters",
      "updateNetworkVlan",
      "schema",
      "properties",
      "dhcpOptions",
      "items",
      "title"
    ],
    "rhs": "DhcpOption",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/vlans/{vlanId}",
      "put",
      "parameters",
      "updateNetworkVlan",
      "schema",
      "title"
    ],
    "rhs": "updateNetworkVlan",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/vlans/{vlanId}",
      "put",
      "parameters",
      "updateNetworkVlan",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/vlans/{vlanId}",
      "put",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/vlans/{vlanId}",
      "put",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "id": "1234",
      "networkId": "N_24329156",
      "name": "My VLAN",
      "applianceIp": "1.2.3.4",
      "subnet": "192.168.1.0/24",
      "fixedIpAssignments": {
        "22:33:44:55:66:77": {
          "ip": "1.2.3.4",
          "name": "Some client name"
        }
      },
      "reservedIpRanges": [
        {
          "start": "192.168.1.0",
          "end": "192.168.1.1",
          "comment": "A reserved IP range"
        }
      ],
      "dnsNameservers": "google_dns",
      "dhcpHandling": "Run a DHCP server",
      "dhcpLeaseTime": "1 day",
      "dhcpBootOptionsEnabled": false,
      "dhcpBootNextServer": null,
      "dhcpBootFilename": null,
      "dhcpOptions": [
        {
          "code": 5,
          "type": "text",
          "value": "five"
        }
      ]
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/vlans/{vlanId}",
      "put",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"id\": \"1234\",\r\n  \"networkId\": \"N_24329156\",\r\n  \"name\": \"My VLAN\",\r\n  \"applianceIp\": \"1.2.3.4\",\r\n  \"subnet\": \"192.168.1.0/24\",\r\n  \"fixedIpAssignments\": {\r\n    \"22:33:44:55:66:77\": {\r\n      \"ip\": \"1.2.3.4\",\r\n      \"name\": \"Some client name\"\r\n    }\r\n  },\r\n  \"reservedIpRanges\": [\r\n    {\r\n      \"start\": \"192.168.1.0\",\r\n      \"end\": \"192.168.1.1\",\r\n      \"comment\": \"A reserved IP range\"\r\n    }\r\n  ],\r\n  \"dnsNameservers\": \"google_dns\",\r\n  \"dhcpHandling\": \"Run a DHCP server\",\r\n  \"dhcpLeaseTime\": \"1 day\",\r\n  \"dhcpBootOptionsEnabled\": false,\r\n  \"dhcpBootNextServer\": null,\r\n  \"dhcpBootFilename\": null,\r\n  \"dhcpOptions\": [\r\n    {\r\n      \"code\": 5,\r\n      \"type\": \"text\",\r\n      \"value\": \"five\"\r\n    }\r\n  ]\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/vlans/{vlanId}",
      "put",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/vlans/{vlanId}",
      "put",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/vlans/{vlanId}",
      "put",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/vlans/{vlanId}",
      "put",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/vlans/{vlanId}",
      "delete",
      "responses",
      "204",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/vlans/{vlanId}",
      "delete",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/vlans/{vlanId}",
      "delete",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/vlans/{vlanId}",
      "delete",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/vlansEnabledState",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/vlansEnabledState",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "enabled": true,
      "networkId": "N_24329156"
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/vlansEnabledState",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"enabled\": true,\r\n  \"networkId\": \"N_24329156\"\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/vlansEnabledState",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/vlansEnabledState",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/vlansEnabledState",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/vlansEnabledState",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/vlansEnabledState",
      "put",
      "parameters",
      "updateNetworkVlansEnabledState",
      "schema",
      "title"
    ],
    "rhs": "updateNetworkVlansEnabledState",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/vlansEnabledState",
      "put",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/vlansEnabledState",
      "put",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "enabled": true,
      "networkId": "N_24329156"
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/vlansEnabledState",
      "put",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"enabled\": true,\r\n  \"networkId\": \"N_24329156\"\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/vlansEnabledState",
      "put",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/vlansEnabledState",
      "put",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/vlansEnabledState",
      "put",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/vlansEnabledState",
      "put",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/connectionStats",
      "get",
      "parameters",
      "t0",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/connectionStats",
      "get",
      "parameters",
      "t1",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/connectionStats",
      "get",
      "parameters",
      "timespan",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/connectionStats",
      "get",
      "parameters",
      "timespan",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/connectionStats",
      "get",
      "parameters",
      "ssid",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/connectionStats",
      "get",
      "parameters",
      "ssid",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/connectionStats",
      "get",
      "parameters",
      "vlan",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/connectionStats",
      "get",
      "parameters",
      "vlan",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/connectionStats",
      "get",
      "parameters",
      "apTag",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/connectionStats",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/connectionStats",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "assoc": 1,
      "auth": 5,
      "dhcp": 0,
      "dns": 0,
      "success": 51
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/connectionStats",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"assoc\": 1,\r\n  \"auth\": 5,\r\n  \"dhcp\": 0,\r\n  \"dns\": 0,\r\n  \"success\": 51\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/connectionStats",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/connectionStats",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/connectionStats",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/connectionStats",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/connectionStats",
      "get",
      "parameters",
      "t0",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/connectionStats",
      "get",
      "parameters",
      "t1",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/connectionStats",
      "get",
      "parameters",
      "timespan",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/connectionStats",
      "get",
      "parameters",
      "timespan",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/connectionStats",
      "get",
      "parameters",
      "ssid",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/connectionStats",
      "get",
      "parameters",
      "ssid",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/connectionStats",
      "get",
      "parameters",
      "vlan",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/connectionStats",
      "get",
      "parameters",
      "vlan",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/connectionStats",
      "get",
      "parameters",
      "apTag",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/connectionStats",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/connectionStats",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "serial": "Q2JC-2MJM-FHRD",
        "connectionStats": {
          "assoc": 0,
          "auth": 1,
          "dhcp": 0,
          "dns": 0,
          "success": 43
        }
      },
      {
        "serial": "Q2FJ-3SHB-Y2K2",
        "connectionStats": {
          "assoc": 1,
          "auth": 4,
          "dhcp": 0,
          "dns": 0,
          "success": 8
        }
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/connectionStats",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"serial\": \"Q2JC-2MJM-FHRD\",\r\n    \"connectionStats\": {\r\n      \"assoc\": 0,\r\n      \"auth\": 1,\r\n      \"dhcp\": 0,\r\n      \"dns\": 0,\r\n      \"success\": 43\r\n    }\r\n  },\r\n  {\r\n    \"serial\": \"Q2FJ-3SHB-Y2K2\",\r\n    \"connectionStats\": {\r\n      \"assoc\": 1,\r\n      \"auth\": 4,\r\n      \"dhcp\": 0,\r\n      \"dns\": 0,\r\n      \"success\": 8\r\n    }\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/connectionStats",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/connectionStats",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/connectionStats",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/connectionStats",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/connectionStats",
      "get",
      "parameters",
      "t0",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/connectionStats",
      "get",
      "parameters",
      "t1",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/connectionStats",
      "get",
      "parameters",
      "timespan",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/connectionStats",
      "get",
      "parameters",
      "timespan",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/connectionStats",
      "get",
      "parameters",
      "ssid",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/connectionStats",
      "get",
      "parameters",
      "ssid",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/connectionStats",
      "get",
      "parameters",
      "vlan",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/connectionStats",
      "get",
      "parameters",
      "vlan",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/connectionStats",
      "get",
      "parameters",
      "apTag",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/connectionStats",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/connectionStats",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "serial": "Q2JC-2MJM-FHRD",
      "connectionStats": {
        "assoc": 0,
        "auth": 1,
        "dhcp": 0,
        "dns": 0,
        "success": 43
      }
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/connectionStats",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"serial\": \"Q2JC-2MJM-FHRD\",\r\n  \"connectionStats\": {\r\n    \"assoc\": 0,\r\n    \"auth\": 1,\r\n    \"dhcp\": 0,\r\n    \"dns\": 0,\r\n    \"success\": 43\r\n  }\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/connectionStats",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/connectionStats",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/connectionStats",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/connectionStats",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/connectionStats",
      "get",
      "parameters",
      "t0",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/connectionStats",
      "get",
      "parameters",
      "t1",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/connectionStats",
      "get",
      "parameters",
      "timespan",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/connectionStats",
      "get",
      "parameters",
      "timespan",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/connectionStats",
      "get",
      "parameters",
      "ssid",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/connectionStats",
      "get",
      "parameters",
      "ssid",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/connectionStats",
      "get",
      "parameters",
      "vlan",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/connectionStats",
      "get",
      "parameters",
      "vlan",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/connectionStats",
      "get",
      "parameters",
      "apTag",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/clients/connectionStats",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/clients/connectionStats",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "mac": "00:61:71:c8:51:27",
        "connectionStats": {
          "assoc": 0,
          "auth": 4,
          "dhcp": 0,
          "dns": 0,
          "success": 10
        }
      },
      {
        "mac": "1c:4d:70:7f:5e:5e",
        "connectionStats": {
          "assoc": 0,
          "auth": 1,
          "dhcp": 0,
          "dns": 0,
          "success": 24
        }
      },
      {
        "mac": "1c:4d:70:81:8d:0a",
        "connectionStats": {
          "assoc": 1,
          "auth": 0,
          "dhcp": 0,
          "dns": 0,
          "success": 16
        }
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/connectionStats",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"mac\": \"00:61:71:c8:51:27\",\r\n    \"connectionStats\": {\r\n      \"assoc\": 0,\r\n      \"auth\": 4,\r\n      \"dhcp\": 0,\r\n      \"dns\": 0,\r\n      \"success\": 10\r\n    }\r\n  },\r\n  {\r\n    \"mac\": \"1c:4d:70:7f:5e:5e\",\r\n    \"connectionStats\": {\r\n      \"assoc\": 0,\r\n      \"auth\": 1,\r\n      \"dhcp\": 0,\r\n      \"dns\": 0,\r\n      \"success\": 24\r\n    }\r\n  },\r\n  {\r\n    \"mac\": \"1c:4d:70:81:8d:0a\",\r\n    \"connectionStats\": {\r\n      \"assoc\": 1,\r\n      \"auth\": 0,\r\n      \"dhcp\": 0,\r\n      \"dns\": 0,\r\n      \"success\": 16\r\n    }\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/connectionStats",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/clients/connectionStats",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/connectionStats",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/connectionStats",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/connectionStats",
      "get",
      "parameters",
      "t0",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/connectionStats",
      "get",
      "parameters",
      "t1",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/connectionStats",
      "get",
      "parameters",
      "timespan",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/connectionStats",
      "get",
      "parameters",
      "timespan",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/connectionStats",
      "get",
      "parameters",
      "ssid",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/connectionStats",
      "get",
      "parameters",
      "ssid",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/connectionStats",
      "get",
      "parameters",
      "vlan",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/connectionStats",
      "get",
      "parameters",
      "vlan",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/connectionStats",
      "get",
      "parameters",
      "apTag",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/connectionStats",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/connectionStats",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "mac": "00:61:71:c8:51:27",
      "connectionStats": {
        "assoc": 0,
        "auth": 4,
        "dhcp": 0,
        "dns": 0,
        "success": 10
      }
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/connectionStats",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"mac\": \"00:61:71:c8:51:27\",\r\n  \"connectionStats\": {\r\n    \"assoc\": 0,\r\n    \"auth\": 4,\r\n    \"dhcp\": 0,\r\n    \"dns\": 0,\r\n    \"success\": 10\r\n  }\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/connectionStats",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/connectionStats",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/connectionStats",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/connectionStats",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/latencyStats",
      "get",
      "parameters",
      "t0",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/latencyStats",
      "get",
      "parameters",
      "t1",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/latencyStats",
      "get",
      "parameters",
      "timespan",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/latencyStats",
      "get",
      "parameters",
      "timespan",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/latencyStats",
      "get",
      "parameters",
      "ssid",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/latencyStats",
      "get",
      "parameters",
      "ssid",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/latencyStats",
      "get",
      "parameters",
      "vlan",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/latencyStats",
      "get",
      "parameters",
      "vlan",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/latencyStats",
      "get",
      "parameters",
      "apTag",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/latencyStats",
      "get",
      "parameters",
      "fields",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/latencyStats",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/latencyStats",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "backgroundTraffic": {
        "rawDistribution": {
          "0": 1234,
          "1": 2345,
          "2": 3456,
          "4": 4567,
          "8": 5678,
          "16": 6789,
          "32": 7890,
          "64": 8901,
          "128": 9012,
          "256": 83,
          "512": 1234,
          "1024": 2345,
          "2048": 9999
        },
        "avg": 606.52
      },
      "bestEffortTraffic": "same shape as backgroundTraffic",
      "videoTraffic": "same shape as backgroundTraffic",
      "voiceTraffic": "same shape as backgroundTraffic"
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/latencyStats",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"backgroundTraffic\": {\r\n    \"rawDistribution\": {\r\n      \"0\": 1234,\r\n      \"1\": 2345,\r\n      \"2\": 3456,\r\n      \"4\": 4567,\r\n      \"8\": 5678,\r\n      \"16\": 6789,\r\n      \"32\": 7890,\r\n      \"64\": 8901,\r\n      \"128\": 9012,\r\n      \"256\": 83,\r\n      \"512\": 1234,\r\n      \"1024\": 2345,\r\n      \"2048\": 9999\r\n    },\r\n    \"avg\": 606.52\r\n  },\r\n  \"bestEffortTraffic\": \"same shape as backgroundTraffic\",\r\n  \"videoTraffic\": \"same shape as backgroundTraffic\",\r\n  \"voiceTraffic\": \"same shape as backgroundTraffic\"\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/latencyStats",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/latencyStats",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/latencyStats",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/latencyStats",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/latencyStats",
      "get",
      "parameters",
      "t0",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/latencyStats",
      "get",
      "parameters",
      "t1",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/latencyStats",
      "get",
      "parameters",
      "timespan",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/latencyStats",
      "get",
      "parameters",
      "timespan",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/latencyStats",
      "get",
      "parameters",
      "ssid",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/latencyStats",
      "get",
      "parameters",
      "ssid",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/latencyStats",
      "get",
      "parameters",
      "vlan",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/latencyStats",
      "get",
      "parameters",
      "vlan",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/latencyStats",
      "get",
      "parameters",
      "apTag",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/latencyStats",
      "get",
      "parameters",
      "fields",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/latencyStats",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/latencyStats",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "serial": "Q2JC-2MJM-FHRD",
        "latencyStats": {
          "backgroundTraffic": {
            "rawDistribution": {
              "0": 1234,
              "1": 2345,
              "2": 3456,
              "4": 4567,
              "8": 5678,
              "16": 6789,
              "32": 7890,
              "64": 8901,
              "128": 9012,
              "256": 83,
              "512": 1234,
              "1024": 2345,
              "2048": 9999
            },
            "avg": 606.52
          },
          "bestEffortTraffic": "same shape as backgroundTraffic",
          "videoTraffic": "same shape as backgroundTraffic",
          "voiceTraffic": "same shape as backgroundTraffic"
        }
      },
      {
        "serial": "Q2FJ-3SHB-Y2K2",
        "latencyStats": {
          "backgroundTraffic": {
            "rawDistribution": {
              "0": 1234,
              "1": 2345,
              "2": 3456,
              "4": 4567,
              "8": 5678,
              "16": 6789,
              "32": 7890,
              "64": 8901,
              "128": 9012,
              "256": 83,
              "512": 1234,
              "1024": 2345,
              "2048": 9999
            },
            "avg": 606.52
          },
          "bestEffortTraffic": "same shape as backgroundTraffic",
          "videoTraffic": "same shape as backgroundTraffic",
          "voiceTraffic": "same shape as backgroundTraffic"
        }
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/latencyStats",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"serial\": \"Q2JC-2MJM-FHRD\",\r\n    \"latencyStats\": {\r\n      \"backgroundTraffic\": {\r\n        \"rawDistribution\": {\r\n          \"0\": 1234,\r\n          \"1\": 2345,\r\n          \"2\": 3456,\r\n          \"4\": 4567,\r\n          \"8\": 5678,\r\n          \"16\": 6789,\r\n          \"32\": 7890,\r\n          \"64\": 8901,\r\n          \"128\": 9012,\r\n          \"256\": 83,\r\n          \"512\": 1234,\r\n          \"1024\": 2345,\r\n          \"2048\": 9999\r\n        },\r\n        \"avg\": 606.52\r\n      },\r\n      \"bestEffortTraffic\": \"same shape as backgroundTraffic\",\r\n      \"videoTraffic\": \"same shape as backgroundTraffic\",\r\n      \"voiceTraffic\": \"same shape as backgroundTraffic\"\r\n    }\r\n  },\r\n  {\r\n    \"serial\": \"Q2FJ-3SHB-Y2K2\",\r\n    \"latencyStats\": {\r\n      \"backgroundTraffic\": {\r\n        \"rawDistribution\": {\r\n          \"0\": 1234,\r\n          \"1\": 2345,\r\n          \"2\": 3456,\r\n          \"4\": 4567,\r\n          \"8\": 5678,\r\n          \"16\": 6789,\r\n          \"32\": 7890,\r\n          \"64\": 8901,\r\n          \"128\": 9012,\r\n          \"256\": 83,\r\n          \"512\": 1234,\r\n          \"1024\": 2345,\r\n          \"2048\": 9999\r\n        },\r\n        \"avg\": 606.52\r\n      },\r\n      \"bestEffortTraffic\": \"same shape as backgroundTraffic\",\r\n      \"videoTraffic\": \"same shape as backgroundTraffic\",\r\n      \"voiceTraffic\": \"same shape as backgroundTraffic\"\r\n    }\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/latencyStats",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/latencyStats",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/latencyStats",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/latencyStats",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/latencyStats",
      "get",
      "parameters",
      "t0",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/latencyStats",
      "get",
      "parameters",
      "t1",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/latencyStats",
      "get",
      "parameters",
      "timespan",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/latencyStats",
      "get",
      "parameters",
      "timespan",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/latencyStats",
      "get",
      "parameters",
      "ssid",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/latencyStats",
      "get",
      "parameters",
      "ssid",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/latencyStats",
      "get",
      "parameters",
      "vlan",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/latencyStats",
      "get",
      "parameters",
      "vlan",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/latencyStats",
      "get",
      "parameters",
      "apTag",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/latencyStats",
      "get",
      "parameters",
      "fields",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/latencyStats",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/latencyStats",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "serial": "Q2JC-2MJM-FHRD",
      "latencyStats": {
        "backgroundTraffic": {
          "rawDistribution": {
            "0": 1234,
            "1": 2345,
            "2": 3456,
            "4": 4567,
            "8": 5678,
            "16": 6789,
            "32": 7890,
            "64": 8901,
            "128": 9012,
            "256": 83,
            "512": 1234,
            "1024": 2345,
            "2048": 9999
          },
          "avg": 606.52
        },
        "bestEffortTraffic": "same shape as backgroundTraffic",
        "videoTraffic": "same shape as backgroundTraffic",
        "voiceTraffic": "same shape as backgroundTraffic"
      }
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/latencyStats",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"serial\": \"Q2JC-2MJM-FHRD\",\r\n  \"latencyStats\": {\r\n    \"backgroundTraffic\": {\r\n      \"rawDistribution\": {\r\n        \"0\": 1234,\r\n        \"1\": 2345,\r\n        \"2\": 3456,\r\n        \"4\": 4567,\r\n        \"8\": 5678,\r\n        \"16\": 6789,\r\n        \"32\": 7890,\r\n        \"64\": 8901,\r\n        \"128\": 9012,\r\n        \"256\": 83,\r\n        \"512\": 1234,\r\n        \"1024\": 2345,\r\n        \"2048\": 9999\r\n      },\r\n      \"avg\": 606.52\r\n    },\r\n    \"bestEffortTraffic\": \"same shape as backgroundTraffic\",\r\n    \"videoTraffic\": \"same shape as backgroundTraffic\",\r\n    \"voiceTraffic\": \"same shape as backgroundTraffic\"\r\n  }\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/latencyStats",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/latencyStats",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/latencyStats",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/devices/{serial}/latencyStats",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/latencyStats",
      "get",
      "parameters",
      "t0",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/latencyStats",
      "get",
      "parameters",
      "t1",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/latencyStats",
      "get",
      "parameters",
      "timespan",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/latencyStats",
      "get",
      "parameters",
      "timespan",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/latencyStats",
      "get",
      "parameters",
      "ssid",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/latencyStats",
      "get",
      "parameters",
      "ssid",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/latencyStats",
      "get",
      "parameters",
      "vlan",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/latencyStats",
      "get",
      "parameters",
      "vlan",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/latencyStats",
      "get",
      "parameters",
      "apTag",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/latencyStats",
      "get",
      "parameters",
      "fields",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/clients/latencyStats",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/clients/latencyStats",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "mac": "00:61:71:c8:51:27",
        "latencyStats": {
          "backgroundTraffic": {
            "rawDistribution": {
              "0": 1234,
              "1": 2345,
              "2": 3456,
              "4": 4567,
              "8": 5678,
              "16": 6789,
              "32": 7890,
              "64": 8901,
              "128": 9012,
              "256": 83,
              "512": 1234,
              "1024": 2345,
              "2048": 9999
            },
            "avg": 606.52
          },
          "bestEffortTraffic": "same shape as backgroundTraffic",
          "videoTraffic": "same shape as backgroundTraffic",
          "voiceTraffic": "same shape as backgroundTraffic"
        }
      },
      {
        "mac": "1c:4d:70:7f:5e:5e",
        "latencyStats": {
          "backgroundTraffic": {
            "rawDistribution": {
              "0": 1234,
              "1": 2345,
              "2": 3456,
              "4": 4567,
              "8": 5678,
              "16": 6789,
              "32": 7890,
              "64": 8901,
              "128": 9012,
              "256": 83,
              "512": 1234,
              "1024": 2345,
              "2048": 9999
            },
            "avg": 606.52
          },
          "bestEffortTraffic": "same shape as backgroundTraffic",
          "videoTraffic": "same shape as backgroundTraffic",
          "voiceTraffic": "same shape as backgroundTraffic"
        }
      },
      {
        "mac": "1c:4d:70:81:8d:0a",
        "latencyStats": {
          "backgroundTraffic": {
            "rawDistribution": {
              "0": 1234,
              "1": 2345,
              "2": 3456,
              "4": 4567,
              "8": 5678,
              "16": 6789,
              "32": 7890,
              "64": 8901,
              "128": 9012,
              "256": 83,
              "512": 1234,
              "1024": 2345,
              "2048": 9999
            },
            "avg": 606.52
          },
          "bestEffortTraffic": "same shape as backgroundTraffic",
          "videoTraffic": "same shape as backgroundTraffic",
          "voiceTraffic": "same shape as backgroundTraffic"
        }
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/latencyStats",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"mac\": \"00:61:71:c8:51:27\",\r\n    \"latencyStats\": {\r\n      \"backgroundTraffic\": {\r\n        \"rawDistribution\": {\r\n          \"0\": 1234,\r\n          \"1\": 2345,\r\n          \"2\": 3456,\r\n          \"4\": 4567,\r\n          \"8\": 5678,\r\n          \"16\": 6789,\r\n          \"32\": 7890,\r\n          \"64\": 8901,\r\n          \"128\": 9012,\r\n          \"256\": 83,\r\n          \"512\": 1234,\r\n          \"1024\": 2345,\r\n          \"2048\": 9999\r\n        },\r\n        \"avg\": 606.52\r\n      },\r\n      \"bestEffortTraffic\": \"same shape as backgroundTraffic\",\r\n      \"videoTraffic\": \"same shape as backgroundTraffic\",\r\n      \"voiceTraffic\": \"same shape as backgroundTraffic\"\r\n    }\r\n  },\r\n  {\r\n    \"mac\": \"1c:4d:70:7f:5e:5e\",\r\n    \"latencyStats\": {\r\n      \"backgroundTraffic\": {\r\n        \"rawDistribution\": {\r\n          \"0\": 1234,\r\n          \"1\": 2345,\r\n          \"2\": 3456,\r\n          \"4\": 4567,\r\n          \"8\": 5678,\r\n          \"16\": 6789,\r\n          \"32\": 7890,\r\n          \"64\": 8901,\r\n          \"128\": 9012,\r\n          \"256\": 83,\r\n          \"512\": 1234,\r\n          \"1024\": 2345,\r\n          \"2048\": 9999\r\n        },\r\n        \"avg\": 606.52\r\n      },\r\n      \"bestEffortTraffic\": \"same shape as backgroundTraffic\",\r\n      \"videoTraffic\": \"same shape as backgroundTraffic\",\r\n      \"voiceTraffic\": \"same shape as backgroundTraffic\"\r\n    }\r\n  },\r\n  {\r\n    \"mac\": \"1c:4d:70:81:8d:0a\",\r\n    \"latencyStats\": {\r\n      \"backgroundTraffic\": {\r\n        \"rawDistribution\": {\r\n          \"0\": 1234,\r\n          \"1\": 2345,\r\n          \"2\": 3456,\r\n          \"4\": 4567,\r\n          \"8\": 5678,\r\n          \"16\": 6789,\r\n          \"32\": 7890,\r\n          \"64\": 8901,\r\n          \"128\": 9012,\r\n          \"256\": 83,\r\n          \"512\": 1234,\r\n          \"1024\": 2345,\r\n          \"2048\": 9999\r\n        },\r\n        \"avg\": 606.52\r\n      },\r\n      \"bestEffortTraffic\": \"same shape as backgroundTraffic\",\r\n      \"videoTraffic\": \"same shape as backgroundTraffic\",\r\n      \"voiceTraffic\": \"same shape as backgroundTraffic\"\r\n    }\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/latencyStats",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/clients/latencyStats",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/latencyStats",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/latencyStats",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/latencyStats",
      "get",
      "parameters",
      "t0",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/latencyStats",
      "get",
      "parameters",
      "t1",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/latencyStats",
      "get",
      "parameters",
      "timespan",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/latencyStats",
      "get",
      "parameters",
      "timespan",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/latencyStats",
      "get",
      "parameters",
      "ssid",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/latencyStats",
      "get",
      "parameters",
      "ssid",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/latencyStats",
      "get",
      "parameters",
      "vlan",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/latencyStats",
      "get",
      "parameters",
      "vlan",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/latencyStats",
      "get",
      "parameters",
      "apTag",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/latencyStats",
      "get",
      "parameters",
      "fields",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/latencyStats",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/latencyStats",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": {
      "mac": "00:61:71:c8:51:27",
      "latencyStats": {
        "backgroundTraffic": {
          "rawDistribution": {
            "0": 1234,
            "1": 2345,
            "2": 3456,
            "4": 4567,
            "8": 5678,
            "16": 6789,
            "32": 7890,
            "64": 8901,
            "128": 9012,
            "256": 83,
            "512": 1234,
            "1024": 2345,
            "2048": 9999
          },
          "avg": 606.52
        },
        "bestEffortTraffic": "same shape as backgroundTraffic",
        "videoTraffic": "same shape as backgroundTraffic",
        "voiceTraffic": "same shape as backgroundTraffic"
      }
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/latencyStats",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "{\r\n  \"mac\": \"00:61:71:c8:51:27\",\r\n  \"latencyStats\": {\r\n    \"backgroundTraffic\": {\r\n      \"rawDistribution\": {\r\n        \"0\": 1234,\r\n        \"1\": 2345,\r\n        \"2\": 3456,\r\n        \"4\": 4567,\r\n        \"8\": 5678,\r\n        \"16\": 6789,\r\n        \"32\": 7890,\r\n        \"64\": 8901,\r\n        \"128\": 9012,\r\n        \"256\": 83,\r\n        \"512\": 1234,\r\n        \"1024\": 2345,\r\n        \"2048\": 9999\r\n      },\r\n      \"avg\": 606.52\r\n    },\r\n    \"bestEffortTraffic\": \"same shape as backgroundTraffic\",\r\n    \"videoTraffic\": \"same shape as backgroundTraffic\",\r\n    \"voiceTraffic\": \"same shape as backgroundTraffic\"\r\n  }\r\n}",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/latencyStats",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/latencyStats",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/latencyStats",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/clients/{clientId}/latencyStats",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/failedConnections",
      "get",
      "parameters",
      "t0",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/failedConnections",
      "get",
      "parameters",
      "t1",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/failedConnections",
      "get",
      "parameters",
      "timespan",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/failedConnections",
      "get",
      "parameters",
      "timespan",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/failedConnections",
      "get",
      "parameters",
      "ssid",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/failedConnections",
      "get",
      "parameters",
      "ssid",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/failedConnections",
      "get",
      "parameters",
      "vlan",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/failedConnections",
      "get",
      "parameters",
      "vlan",
      "format"
    ],
    "rhs": "int32",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/failedConnections",
      "get",
      "parameters",
      "apTag",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/failedConnections",
      "get",
      "parameters",
      "serial",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/failedConnections",
      "get",
      "parameters",
      "clientId",
      "required"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/failedConnections",
      "get",
      "responses",
      "200",
      "schema",
      "x-is-dynamic"
    ],
    "lhs": true,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/failedConnections",
      "get",
      "responses",
      "200",
      "examples",
      "application/json"
    ],
    "lhs": [
      {
        "ssidNumber": 0,
        "vlan": -1,
        "clientMac": "00:61:71:c8:51:27",
        "serial": "Q2JC-2MJM-FHRD",
        "failureStep": "auth",
        "type": "802.1X auth fail",
        "ts": 1532032592
      },
      {
        "ssidNumber": 0,
        "vlan": -1,
        "clientMac": "00:61:71:c8:51:27",
        "nodeId": "Q2FJ-3SHB-Y2K2",
        "failureStep": "auth",
        "type": "802.1X auth fail",
        "ts": 1532032593
      },
      {
        "ssidNumber": 0,
        "vlan": -1,
        "clientMac": "00:61:71:c8:51:27",
        "nodeId": "Q2FJ-3SHB-Y2K2",
        "failureStep": "auth",
        "type": "802.1X auth fail",
        "ts": 1532032594
      },
      {
        "ssidNumber": 0,
        "vlan": -1,
        "clientMac": "00:61:71:c8:51:27",
        "nodeId": "Q2FJ-3SHB-Y2K2",
        "failureStep": "auth",
        "type": "802.1X auth fail",
        "ts": 1532032595
      },
      {
        "ssidNumber": 0,
        "vlan": -1,
        "clientMac": "1c:4d:70:7f:5e:5e",
        "nodeId": "Q2FJ-3SHB-Y2K2",
        "failureStep": "assoc",
        "type": "802.1X auth fail",
        "ts": 1532032592
      },
      {
        "ssidNumber": 0,
        "vlan": -1,
        "clientMac": "1c:4d:70:81:8d:0a",
        "nodeId": "Q2FJ-3SHB-Y2K2",
        "failureStep": "auth",
        "type": "802.1X auth fail",
        "ts": 1532032595
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/failedConnections",
      "get",
      "responses",
      "200",
      "examples",
      "text/plain"
    ],
    "rhs": "[\r\n  {\r\n    \"ssidNumber\": 0,\r\n    \"vlan\": -1,\r\n    \"clientMac\": \"00:61:71:c8:51:27\",\r\n    \"serial\": \"Q2JC-2MJM-FHRD\",\r\n    \"failureStep\": \"auth\",\r\n    \"type\": \"802.1X auth fail\",\r\n    \"ts\": 1532032592\r\n  },\r\n  {\r\n    \"ssidNumber\": 0,\r\n    \"vlan\": -1,\r\n    \"clientMac\": \"00:61:71:c8:51:27\",\r\n    \"nodeId\": \"Q2FJ-3SHB-Y2K2\",\r\n    \"failureStep\": \"auth\",\r\n    \"type\": \"802.1X auth fail\",\r\n    \"ts\": 1532032593\r\n  },\r\n  {\r\n    \"ssidNumber\": 0,\r\n    \"vlan\": -1,\r\n    \"clientMac\": \"00:61:71:c8:51:27\",\r\n    \"nodeId\": \"Q2FJ-3SHB-Y2K2\",\r\n    \"failureStep\": \"auth\",\r\n    \"type\": \"802.1X auth fail\",\r\n    \"ts\": 1532032594\r\n  },\r\n  {\r\n    \"ssidNumber\": 0,\r\n    \"vlan\": -1,\r\n    \"clientMac\": \"00:61:71:c8:51:27\",\r\n    \"nodeId\": \"Q2FJ-3SHB-Y2K2\",\r\n    \"failureStep\": \"auth\",\r\n    \"type\": \"802.1X auth fail\",\r\n    \"ts\": 1532032595\r\n  },\r\n  {\r\n    \"ssidNumber\": 0,\r\n    \"vlan\": -1,\r\n    \"clientMac\": \"1c:4d:70:7f:5e:5e\",\r\n    \"nodeId\": \"Q2FJ-3SHB-Y2K2\",\r\n    \"failureStep\": \"assoc\",\r\n    \"type\": \"802.1X auth fail\",\r\n    \"ts\": 1532032592\r\n  },\r\n  {\r\n    \"ssidNumber\": 0,\r\n    \"vlan\": -1,\r\n    \"clientMac\": \"1c:4d:70:81:8d:0a\",\r\n    \"nodeId\": \"Q2FJ-3SHB-Y2K2\",\r\n    \"failureStep\": \"auth\",\r\n    \"type\": \"802.1X auth fail\",\r\n    \"ts\": 1532032595\r\n  }\r\n]",
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/failedConnections",
      "get",
      "responses",
      "200",
      "headers"
    ],
    "rhs": {},
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "D",
    "path": [
      "paths",
      "/networks/{networkId}/failedConnections",
      "get",
      "security",
      0,
      "meraki_api_key"
    ],
    "lhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/failedConnections",
      "get",
      "security",
      0,
      "Cisco-Meraki-API-Key"
    ],
    "rhs": [],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "paths",
      "/networks/{networkId}/failedConnections",
      "get",
      "deprecated"
    ],
    "rhs": false,
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "definitions"
    ],
    "rhs": {
      "updateNetworkStaticRoute": {
        "title": "updateNetworkStaticRoute",
        "example": {
          "name": "My route",
          "subnet": "192.168.1.0/24",
          "fixedIpAssignments": "{}",
          "reservedIpRanges": "[]"
        },
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the static route",
            "type": "string"
          },
          "subnet": {
            "description": "The subnet of the static route",
            "type": "string"
          },
          "gatewayIp": {
            "description": "The gateway IP (next hop) of the static route",
            "type": "string"
          },
          "enabled": {
            "description": "The enabled state of the static route",
            "type": "string"
          },
          "fixedIpAssignments": {
            "description": "The DHCP fixed IP assignments on the static route",
            "type": "string"
          },
          "reservedIpRanges": {
            "description": "The DHCP reserved IP ranges on the static route",
            "type": "string"
          }
        }
      },
      "Rule11": {
        "title": "Rule11",
        "type": "object",
        "properties": {
          "name": {
            "description": "A descriptive name for the rule",
            "type": "string"
          },
          "lanIp": {
            "description": "The IP address of the server or device that hosts the internal resource that you wish to make available on the WAN",
            "type": "string"
          },
          "uplink": {
            "description": "The physical WAN interface on which the traffic will arrive ('internet1' or, if available, 'internet2' or 'both')",
            "type": "string"
          },
          "publicPort": {
            "description": "A port or port ranges that will be forwarded to the host on the LAN",
            "type": "string"
          },
          "localPort": {
            "description": "A port or port ranges that will receive the forwarded traffic from the WAN",
            "type": "string"
          },
          "allowedIps": {
            "description": "An array of ranges of WAN IP addresses that are allowed to make inbound connections on the specified ports or port ranges (or any)",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "protocol": {
            "description": "TCP or UDP",
            "type": "string"
          }
        }
      },
      "Rule10": {
        "title": "Rule10",
        "type": "object",
        "properties": {
          "name": {
            "description": "A descriptive name for the rule",
            "type": "string"
          },
          "publicIp": {
            "description": "The IP address that will be used to access the internal resource from the WAN",
            "type": "string"
          },
          "lanIp": {
            "description": "The IP address of the server or device that hosts the internal resource that you wish to make available on the WAN",
            "type": "string"
          },
          "uplink": {
            "description": "The physical WAN interface on which the traffic will arrive ('internet1' or, if available, 'internet2')",
            "type": "string"
          },
          "allowedInbound": {
            "description": "The ports this mapping will provide access on, and the remote IPs that will be allowed access to the resource",
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "protocol": {
            "description": "Either of the following: 'tcp', 'udp', 'icmp-ping' or 'any'",
            "type": "string"
          },
          "destinationPorts": {
            "description": "An array of ports or port ranges that will be forwarded to the host on the LAN",
            "type": "string"
          },
          "allowedIps": {
            "description": "An array of ranges of WAN IP addresses that are allowed to make inbound connections on the specified ports or port ranges, or 'any'",
            "type": "string"
          }
        }
      },
      "updateNetworkContentFiltering": {
        "title": "updateNetworkContentFiltering",
        "example": {
          "allowedUrlPatterns": [
            "http://www.example.org",
            "http://help.com.au"
          ],
          "blockedUrlPatterns": [
            "http://www.example.com",
            "http://www.betting.com"
          ],
          "blockedUrlCategories": [
            "meraki:contentFiltering/category/1",
            "meraki:contentFiltering/category/7"
          ],
          "urlCategoryListSize": "topSites"
        },
        "type": "object",
        "properties": {
          "allowedUrlPatterns": {
            "description": "A whitelist of URL patterns to allow",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "blockedUrlPatterns": {
            "description": "A blacklist of URL patterns to block",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "blockedUrlCategories": {
            "description": "A list of URL categories to block",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "urlCategoryListSize": {
            "description": "URL category list size which is either 'topSites' or 'fullList'",
            "type": "string"
          }
        }
      },
      "Rule8": {
        "title": "Rule8",
        "type": "object",
        "properties": {
          "definitions": {
            "description": "A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.",
            "type": "array",
            "items": {
              "title": "Definition",
              "type": "object",
              "properties": {
                "type": {
                  "title": "Type1",
                  "description": "The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.",
                  "example": "application",
                  "type": "string",
                  "enum": [
                    "application",
                    "applicationCategory",
                    "host",
                    "port",
                    "ipRange",
                    "localNet"
                  ],
                  "required": true
                },
                "value": {
                  "description": "If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).",
                  "type": "string",
                  "required": true
                }
              }
            },
            "required": true
          },
          "perClientBandwidthLimits": {
            "title": "PerClientBandwidthLimits",
            "description": "An object describing the bandwidth settings for your rule.",
            "type": "object",
            "properties": {
              "settings": {
                "description": "How bandwidth limits are applied by your rule. Can be one of 'network default', 'ignore' or 'custom'.",
                "type": "string"
              },
              "bandwidthLimits": {
                "title": "BandwidthLimits1",
                "description": "The bandwidth limits object, specifying the upload ('limitUp') and download ('limitDown') speed in Kbps. These are only enforced if 'settings' is set to 'custom'.",
                "type": "object",
                "properties": {
                  "limitUp": {
                    "description": "The maximum upload limit (integer, in Kbps).",
                    "type": "integer",
                    "format": "int32"
                  },
                  "limitDown": {
                    "description": "The maximum download limit (integer, in Kbps).",
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "dscpTagValue": {
            "description": "The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.",
            "type": "integer",
            "format": "int32"
          },
          "pcpTagValue": {
            "description": "The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).\n    null means 'Do not set PCP tag'.",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "updateNetworkSsidTrafficShaping": {
        "title": "updateNetworkSsidTrafficShaping",
        "example": {
          "trafficShapingEnabled": true,
          "defaultRulesEnabled": true,
          "rules": [
            {
              "definitions": [
                {
                  "type": "host",
                  "value": "google.com"
                },
                {
                  "type": "port",
                  "value": "9090"
                },
                {
                  "type": "ipRange",
                  "value": "192.1.0.0"
                },
                {
                  "type": "ipRange",
                  "value": "192.1.0.0/16"
                },
                {
                  "type": "ipRange",
                  "value": "10.1.0.0/16:80"
                },
                {
                  "type": "localNet",
                  "value": "192.168.0.0/16"
                },
                {
                  "type": "applicationCategory",
                  "value": {
                    "id": "meraki:layer7/category/2",
                    "name": "Blogging"
                  }
                },
                {
                  "type": "application",
                  "value": {
                    "id": "meraki:layer7/application/133",
                    "name": "Battle.net"
                  }
                }
              ],
              "perClientBandwidthLimits": {
                "settings": "custom",
                "bandwidthLimits": {
                  "limitUp": 1000000,
                  "limitDown": 1000000
                }
              },
              "dscpTagValue": null,
              "pcpTagValue": null
            }
          ]
        },
        "type": "object",
        "properties": {
          "trafficShapingEnabled": {
            "description": "Whether traffic shaping rules are applied to clients on your SSID.",
            "type": "boolean"
          },
          "defaultRulesEnabled": {
            "description": "Whether default traffic shaping rules are enabled (true) or disabled (false).\n    There are 4 default rules, which can\n    be seen on your network's traffic shaping page. Note that default rules\n    count against the rule limit of 8.",
            "type": "boolean"
          },
          "rules": {
            "description": "An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.",
            "type": "array",
            "items": {
              "title": "Rule8",
              "type": "object",
              "properties": {
                "definitions": {
                  "description": "A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.",
                  "type": "array",
                  "items": {
                    "title": "Definition",
                    "type": "object",
                    "properties": {
                      "type": {
                        "title": "Type1",
                        "description": "The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.",
                        "example": "application",
                        "type": "string",
                        "enum": [
                          "application",
                          "applicationCategory",
                          "host",
                          "port",
                          "ipRange",
                          "localNet"
                        ],
                        "required": true
                      },
                      "value": {
                        "description": "If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).",
                        "type": "string",
                        "required": true
                      }
                    }
                  },
                  "required": true
                },
                "perClientBandwidthLimits": {
                  "title": "PerClientBandwidthLimits",
                  "description": "An object describing the bandwidth settings for your rule.",
                  "type": "object",
                  "properties": {
                    "settings": {
                      "description": "How bandwidth limits are applied by your rule. Can be one of 'network default', 'ignore' or 'custom'.",
                      "type": "string"
                    },
                    "bandwidthLimits": {
                      "title": "BandwidthLimits1",
                      "description": "The bandwidth limits object, specifying the upload ('limitUp') and download ('limitDown') speed in Kbps. These are only enforced if 'settings' is set to 'custom'.",
                      "type": "object",
                      "properties": {
                        "limitUp": {
                          "description": "The maximum upload limit (integer, in Kbps).",
                          "type": "integer",
                          "format": "int32"
                        },
                        "limitDown": {
                          "description": "The maximum download limit (integer, in Kbps).",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    }
                  }
                },
                "dscpTagValue": {
                  "description": "The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.",
                  "type": "integer",
                  "format": "int32"
                },
                "pcpTagValue": {
                  "description": "The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).\n    null means 'Do not set PCP tag'.",
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        }
      },
      "Rule7": {
        "title": "Rule7",
        "type": "object",
        "properties": {
          "definitions": {
            "description": "A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.",
            "type": "array",
            "items": {
              "title": "Definition",
              "type": "object",
              "properties": {
                "type": {
                  "title": "Type1",
                  "description": "The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.",
                  "example": "application",
                  "type": "string",
                  "enum": [
                    "application",
                    "applicationCategory",
                    "host",
                    "port",
                    "ipRange",
                    "localNet"
                  ],
                  "required": true
                },
                "value": {
                  "description": "If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).",
                  "type": "string",
                  "required": true
                }
              }
            },
            "required": true
          },
          "perClientBandwidthLimits": {
            "title": "PerClientBandwidthLimits",
            "description": "An object describing the bandwidth settings for your rule.",
            "type": "object",
            "properties": {
              "settings": {
                "description": "How bandwidth limits are applied by your rule. Can be one of 'network default', 'ignore' or 'custom'.",
                "type": "string"
              },
              "bandwidthLimits": {
                "title": "BandwidthLimits1",
                "description": "The bandwidth limits object, specifying the upload ('limitUp') and download ('limitDown') speed in Kbps. These are only enforced if 'settings' is set to 'custom'.",
                "type": "object",
                "properties": {
                  "limitUp": {
                    "description": "The maximum upload limit (integer, in Kbps).",
                    "type": "integer",
                    "format": "int32"
                  },
                  "limitDown": {
                    "description": "The maximum download limit (integer, in Kbps).",
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "dscpTagValue": {
            "description": "The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.",
            "type": "integer",
            "format": "int32"
          },
          "priority": {
            "description": "A string, indicating the priority level for packets bound to your rule.\n    Can be 'low', 'normal' or 'high'.",
            "type": "string"
          }
        }
      },
      "IpAssignmentMode": {
        "title": "IpAssignmentMode",
        "description": "The client IP assignment mode ('NAT mode', 'Bridge mode', 'Layer 3 roaming', 'Layer 3 roaming with a concentrator' or 'VPN')",
        "example": "NAT mode",
        "type": "string",
        "enum": [
          "NAT mode",
          "Bridge mode",
          "Layer 3 roaming",
          "Layer 3 roaming with a concentrator",
          "VPN"
        ]
      },
      "AuthMode": {
        "title": "AuthMode",
        "description": "The association control method for the SSID ('open', 'psk', 'open-with-radius', '8021x-meraki' or '8021x-radius')",
        "example": "open",
        "type": "string",
        "enum": [
          "open",
          "psk",
          "open-with-radius",
          "8021x-meraki",
          "8021x-radius"
        ]
      },
      "updateOrganizationSnmp": {
        "title": "updateOrganizationSnmp",
        "example": {
          "v2cEnabled": false,
          "v3Enabled": true,
          "v3AuthMode": "SHA",
          "v3PrivMode": "AES128",
          "peerIps": "123.123.123.1"
        },
        "type": "object",
        "properties": {
          "v2cEnabled": {
            "description": "Boolean indicating whether SNMP version 2c is enabled for the organization.",
            "type": "boolean"
          },
          "v3Enabled": {
            "description": "Boolean indicating whether SNMP version 3 is enabled for the organization.",
            "type": "boolean"
          },
          "v3AuthMode": {
            "title": "V3AuthMode",
            "description": "The SNMP version 3 authentication mode. Can be either 'MD5' or 'SHA'.",
            "example": "MD5",
            "type": "string",
            "enum": [
              "MD5",
              "SHA"
            ]
          },
          "v3AuthPass": {
            "description": "The SNMP version 3 authentication password. Must be at least 8 characters if specified.",
            "type": "string"
          },
          "v3PrivMode": {
            "title": "V3PrivMode",
            "description": "The SNMP version 3 privacy mode. Can be either 'DES' or 'AES128'.",
            "example": "DES",
            "type": "string",
            "enum": [
              "DES",
              "AES128"
            ]
          },
          "v3PrivPass": {
            "description": "The SNMP version 3 privacy password. Must be at least 8 characters if specified.",
            "type": "string"
          },
          "peerIps": {
            "description": "The IPs that are allowed to access the SNMP server. This list should be IPv4 addresses separated by semi-colons (ie. \"1.2.3.4;2.3.4.5\").",
            "type": "string"
          }
        }
      },
      "moveNetworkSmDevices": {
        "title": "moveNetworkSmDevices",
        "example": {
          "ids": "\"1284392014819\"",
          "newNetwork": "N_24329156"
        },
        "type": "object",
        "properties": {
          "wifiMacs": {
            "description": "The wifiMacs of the devices to be moved.",
            "type": "string"
          },
          "ids": {
            "description": "The ids of the devices to be moved.",
            "type": "string"
          },
          "serials": {
            "description": "The serials of the devices to be moved.",
            "type": "string"
          },
          "scope": {
            "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be moved.",
            "type": "string"
          },
          "newNetwork": {
            "description": "The new network to which the devices will be moved.",
            "type": "string",
            "required": true
          }
        }
      },
      "lockNetworkSmDevices": {
        "title": "lockNetworkSmDevices",
        "example": {
          "ids": "\"1284392014819\""
        },
        "type": "object",
        "properties": {
          "wifiMacs": {
            "description": "The wifiMacs of the devices to be locked.",
            "type": "string"
          },
          "ids": {
            "description": "The ids of the devices to be locked.",
            "type": "string"
          },
          "serials": {
            "description": "The serials of the devices to be locked.",
            "type": "string"
          },
          "scope": {
            "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be wiped.",
            "type": "string"
          },
          "pin": {
            "description": "The pin number for locking macOS devices (a six digit number). Required only for macOS devices.",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "updateNetworkSmDevicesTags": {
        "title": "updateNetworkSmDevicesTags",
        "example": {
          "scope": "withAny, old_tag",
          "updateAction": "add",
          "tags": "tag1,tag2"
        },
        "type": "object",
        "properties": {
          "wifiMacs": {
            "description": "The wifiMacs of the devices to be modified.",
            "type": "string"
          },
          "ids": {
            "description": "The ids of the devices to be modified.",
            "type": "string"
          },
          "serials": {
            "description": "The serials of the devices to be modified.",
            "type": "string"
          },
          "scope": {
            "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be modified.",
            "type": "string"
          },
          "tags": {
            "description": "The tags to be added, deleted, or updated.",
            "type": "string",
            "required": true
          },
          "updateAction": {
            "description": "One of add, delete, or update. Only devices that have been modified will be returned.",
            "type": "string",
            "required": true
          }
        }
      },
      "createNetworkSmAppPolaris": {
        "title": "createNetworkSmAppPolaris",
        "type": "object",
        "properties": {
          "scope": {
            "description": "The scope (one of all, none, automatic, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned",
            "type": "string"
          },
          "manifestUrl": {
            "description": "The manifest URL of the Polaris app (one of manifestUrl and bundleId must be provided)",
            "type": "string"
          },
          "bundleId": {
            "description": "The bundleId of the Polaris app (one of manifestUrl and bundleId must be provided)",
            "type": "string"
          },
          "preventAutoInstall": {
            "description": "(optional) Whether or not SM should auto-install this app (one of true or false). False by default.",
            "type": "string"
          },
          "usesVPP": {
            "description": "(optional) Whether or not the app should use VPP by device assignment (one of true or false). False by default.",
            "type": "string"
          }
        }
      },
      "addNetworkSmProfileUmbrella": {
        "title": "addNetworkSmProfileUmbrella",
        "type": "object",
        "properties": {
          "AppBundleIdentifier": {
            "description": "The bundle ID of the application, defaults to com.cisco.ciscosecurity.app",
            "type": "string"
          },
          "ProviderBundleIdentifier": {
            "description": "The bundle ID of the provider, defaults to com.cisco.ciscosecurity.app.CiscoUmbrella",
            "type": "string"
          },
          "ProviderConfiguration": {
            "description": "The specific ProviderConfiguration to be passed to the filtering framework, as JSON. ProviderConfiguration should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name",
            "type": "string"
          },
          "usesCert": {
            "description": "Whether the certificate should be attached to this profile (one of true, false). False by default.",
            "type": "string"
          }
        }
      },
      "updateNetworkSmProfileUmbrella": {
        "title": "updateNetworkSmProfileUmbrella",
        "type": "object",
        "properties": {
          "name": {
            "description": "optional: A new name for the profile",
            "type": "string"
          },
          "scope": {
            "description": "optional: A new scope for the profile (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned",
            "type": "string"
          },
          "AppBundleIdentifier": {
            "description": "optional: The bundle ID of the application",
            "type": "string"
          },
          "ProviderBundleIdentifier": {
            "description": "optional: The bundle ID of the provider",
            "type": "string"
          },
          "ProviderConfiguration": {
            "description": "optional: The specific ProviderConfiguration to be passed to the filtering framework, as JSON. ProviderConfiguration should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name",
            "type": "string"
          },
          "usesCert": {
            "description": "Whether the certificate should be attached to this profile (one of true, false). False by default.",
            "type": "string"
          }
        }
      },
      "createNetworkSmProfileUmbrella": {
        "title": "createNetworkSmProfileUmbrella",
        "type": "object",
        "properties": {
          "name": {
            "description": "The name to be given to the new profile",
            "type": "string"
          },
          "scope": {
            "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned",
            "type": "string"
          },
          "AppBundleIdentifier": {
            "description": "The bundle ID of the application, defaults to com.cisco.ciscosecurity.app",
            "type": "string"
          },
          "ProviderBundleIdentifier": {
            "description": "The bundle ID of the provider, defaults to com.cisco.ciscosecurity.app.CiscoUmbrella",
            "type": "string"
          },
          "ProviderConfiguration": {
            "description": "The specific ProviderConfiguration to be passed to the filtering framework, as JSON. ProviderConfiguration should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name",
            "type": "string"
          },
          "usesCert": {
            "description": "Whether the certificate should be attached to this profile (one of true, false).",
            "type": "string"
          }
        }
      },
      "addNetworkSmProfileClarity": {
        "title": "addNetworkSmProfileClarity",
        "type": "object",
        "properties": {
          "PluginBundleID": {
            "description": "The bundle ID of the application, defaults to com.cisco.ciscosecurity.app",
            "type": "string"
          },
          "FilterBrowsers": {
            "description": "Whether or not to enable browser traffic filtering (one of true, false).",
            "type": "string"
          },
          "FilterSockets": {
            "description": "Whether or not to enable socket traffic filtering (one of true, false).",
            "type": "string"
          },
          "VendorConfig": {
            "description": "The specific VendorConfig to be passed to the filtering framework, as JSON. VendorConfig should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name",
            "type": "string"
          }
        }
      },
      "updateNetworkSmProfileClarity": {
        "title": "updateNetworkSmProfileClarity",
        "type": "object",
        "properties": {
          "name": {
            "description": "optional: A new name for the profile",
            "type": "string"
          },
          "scope": {
            "description": "optional: A new scope for the profile (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned",
            "type": "string"
          },
          "PluginBundleID": {
            "description": "optional: The new bundle ID of the application",
            "type": "string"
          },
          "FilterBrowsers": {
            "description": "optional: Whether or not to enable browser traffic filtering (one of true, false).",
            "type": "string"
          },
          "FilterSockets": {
            "description": "optional: Whether or not to enable socket traffic filtering (one of true, false).",
            "type": "string"
          },
          "VendorConfig": {
            "description": "optional: The specific VendorConfig to be passed to the filtering framework, as JSON. VendorConfig should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name",
            "type": "string"
          }
        }
      },
      "updateNetworkClientPolicy": {
        "title": "updateNetworkClientPolicy",
        "example": {
          "mac": "00:11:22:33:44:55",
          "type": "Group policy",
          "groupPolicyId": "101"
        },
        "type": "object",
        "properties": {
          "devicePolicy": {
            "description": "The group policy (Whitelisted, Blocked, Normal, Group policy)",
            "type": "string"
          },
          "groupPolicyId": {
            "description": "[optional] If devicePolicy param is set to 'Group policy' this param is used to specify the group ID.",
            "type": "string"
          }
        }
      },
      "Hub": {
        "title": "Hub",
        "type": "object",
        "properties": {
          "hubId": {
            "description": "The network ID of the hub.",
            "type": "string",
            "required": true
          },
          "useDefaultRoute": {
            "description": "Only valid in 'spoke' mode. Indicates whether default route traffic should be sent to this hub.",
            "type": "boolean"
          }
        }
      },
      "updateNetworkSiteToSiteVpn": {
        "title": "updateNetworkSiteToSiteVpn",
        "example": {
          "mode": "spoke",
          "hubs": [
            {
              "hubId": "N_4901849",
              "useDefaultRoute": true
            },
            {
              "hubId": "N_1892489",
              "useDefaultRoute": false
            }
          ],
          "subnets": [
            {
              "localSubnet": "192.168.1.0/24",
              "useVpn": true
            },
            {
              "localSubnet": "192.168.128.0/24",
              "useVpn": true
            }
          ]
        },
        "type": "object",
        "properties": {
          "mode": {
            "description": "The site-to-site VPN mode: hub, spoke, or none",
            "type": "string"
          },
          "hubs": {
            "description": "The list of VPN hubs, in order of preference. In spoke mode, at least 1 hub is required.",
            "type": "array",
            "items": {
              "title": "Hub",
              "type": "object",
              "properties": {
                "hubId": {
                  "description": "The network ID of the hub.",
                  "type": "string",
                  "required": true
                },
                "useDefaultRoute": {
                  "description": "Only valid in 'spoke' mode. Indicates whether default route traffic should be sent to this hub.",
                  "type": "boolean"
                }
              }
            }
          },
          "subnets": {
            "description": "The list of subnets and their VPN presence.",
            "type": "array",
            "items": {
              "title": "Subnet",
              "type": "object",
              "properties": {
                "localSubnet": {
                  "description": "The CIDR notation subnet used within the VPN",
                  "type": "string",
                  "required": true
                },
                "useVpn": {
                  "description": "Indicates the presence of the subnet in the VPN",
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "combineOrganizationNetworks": {
        "title": "combineOrganizationNetworks",
        "example": {
          "name": "Long Island Office",
          "networkIds": [
            "N_1234",
            "N_5678"
          ]
        },
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the combined network",
            "type": "string",
            "required": true
          },
          "networkIds": {
            "description": "A list of the network IDs that will be combined. If an ID of a combined network is included in this list, the other networks in the list will be grouped into that network",
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": true
          }
        }
      },
      "bindNetwork": {
        "title": "bindNetwork",
        "example": {
          "configTemplateId": "N_23952905",
          "autoBind": false
        },
        "type": "object",
        "properties": {
          "configTemplateId": {
            "description": "The ID of the template to which the network should be bound.",
            "type": "string",
            "required": true
          },
          "autoBind": {
            "description": "Optional boolean indicating whether the network's switches should automatically bind to profiles of the same model. Defaults to false if left unspecified. This option only affects switch networks and switch templates. Auto-bind is not valid unless the switch template has at least one profile and has at most one profile per switch model.",
            "type": "boolean"
          }
        }
      },
      "DefaultDestinations": {
        "title": "DefaultDestinations",
        "description": "The network_wide destinations for all alerts on the network.",
        "type": "object",
        "properties": {
          "emails": {
            "description": "A list of emails that will recieve the alert(s).",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "allAdmins": {
            "description": "If true, then all network admins will receive emails.",
            "type": "boolean"
          },
          "snmp": {
            "description": "If true, then an SNMP trap will be sent if there is an SNMP trap server configured for this network.",
            "type": "boolean"
          }
        }
      },
      "updateNetworkAlertSettings": {
        "title": "updateNetworkAlertSettings",
        "example": {
          "defaultDestinations": {
            "emails": [
              "miles@meraki.com"
            ],
            "allAdmins": true,
            "snmp": true
          },
          "alerts": [
            {
              "type": "gatewayDown",
              "enabled": true,
              "alertDestinations": {
                "emails": [
                  "miles@meraki.com"
                ],
                "allAdmins": false,
                "snmp": false
              },
              "filters": {
                "timeout": 60
              }
            }
          ]
        },
        "type": "object",
        "properties": {
          "defaultDestinations": {
            "title": "DefaultDestinations",
            "description": "The network_wide destinations for all alerts on the network.",
            "type": "object",
            "properties": {
              "emails": {
                "description": "A list of emails that will recieve the alert(s).",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "allAdmins": {
                "description": "If true, then all network admins will receive emails.",
                "type": "boolean"
              },
              "snmp": {
                "description": "If true, then an SNMP trap will be sent if there is an SNMP trap server configured for this network.",
                "type": "boolean"
              }
            }
          },
          "alerts": {
            "description": "Alert-specific configuration for each type. Only alerts that pertain to the network can be updated.",
            "type": "array",
            "items": {
              "title": "Alert",
              "type": "object",
              "properties": {
                "type": {
                  "description": "The type of alert",
                  "type": "string"
                },
                "enabled": {
                  "description": "A boolean depicting if the alert is turned on or off",
                  "type": "boolean"
                },
                "alertDestinations": {
                  "description": "A hash of destinations for this specific alert. Keys include: emails: A list of emails that will recieve information about the alert, allAdmins: If true, then all network admins will receive emails, and snmp: If true, then an SNMP trap will be sent if there is an SNMP trap server configured for this network.",
                  "type": "object"
                },
                "filters": {
                  "description": "A hash of specific configuration data for the alert. Only filters specific to the alert will be updated.",
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "Network": {
        "title": "Network",
        "type": "object",
        "properties": {
          "id": {
            "description": "The network ID",
            "type": "string",
            "required": true
          },
          "access": {
            "description": "The privilege of the dashboard administrator on the network",
            "type": "string",
            "required": true
          }
        }
      },
      "Tag": {
        "title": "Tag",
        "type": "object",
        "properties": {
          "tag": {
            "description": "The name of the tag",
            "type": "string",
            "required": true
          },
          "access": {
            "description": "The privilege of the dashboard administrator on the tag",
            "type": "string",
            "required": true
          }
        }
      },
      "updateOrganizationActionBatch": {
        "title": "updateOrganizationActionBatch",
        "type": "object",
        "properties": {
          "confirmed": {
            "description": "A boolean representing whether or not the batch has been confirmed. This property cannot be unset once it is true.",
            "type": "string"
          },
          "synchronous": {
            "description": "Force the batch to run synchronous. There can be at most 20 actions in synchronous batch.",
            "type": "string"
          }
        }
      },
      "Action": {
        "title": "Action",
        "type": "object",
        "properties": {
          "resource": {
            "description": "Unique identifier for the resource to be acted on",
            "type": "string"
          },
          "operation": {
            "description": "The operation to be used. One of \"create\", \"update\", \"destroy\".",
            "type": "string"
          },
          "body": {
            "description": "The body of the action",
            "type": "string"
          }
        }
      },
      "createOrganizationActionBatch": {
        "title": "createOrganizationActionBatch",
        "type": "object",
        "properties": {
          "confirmed": {
            "description": "Set to true for immediate execution. Set to false if the action should be previewed before executing.",
            "type": "string"
          },
          "synchronous": {
            "description": "Force the batch to run synchronous. There can be at most 20 actions in synchronous batch.",
            "type": "string"
          },
          "actions": {
            "description": "A set of changes to make as part of this action (<a href='https://developer.cisco.com/meraki/api/#/rest/guides/action-batches/'>more details</a>)",
            "type": "array",
            "items": {
              "title": "Action",
              "type": "object",
              "properties": {
                "resource": {
                  "description": "Unique identifier for the resource to be acted on",
                  "type": "string"
                },
                "operation": {
                  "description": "The operation to be used. One of \"create\", \"update\", \"destroy\".",
                  "type": "string"
                },
                "body": {
                  "description": "The body of the action",
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "updateOrganizationAdmin": {
        "title": "updateOrganizationAdmin",
        "example": {
          "name": "Miles Meraki",
          "email": "miles@meraki.com",
          "orgAccess": "none",
          "tags": [
            {
              "tag": "west",
              "access": "read-only"
            }
          ]
        },
        "type": "object",
        "properties": {
          "email": {
            "description": "The email of the dashboard administrator. This attribute can not be updated.",
            "type": "string"
          },
          "name": {
            "description": "The name of the dashboard administrator",
            "type": "string"
          },
          "orgAccess": {
            "description": "The privilege of the dashboard administrator on the organization (full, read-only, none)",
            "type": "string"
          },
          "tags": {
            "description": "The list of tags that the dashboard administrator has privileges on",
            "type": "array",
            "items": {
              "title": "Tag",
              "type": "object",
              "properties": {
                "tag": {
                  "description": "The name of the tag",
                  "type": "string",
                  "required": true
                },
                "access": {
                  "description": "The privilege of the dashboard administrator on the tag",
                  "type": "string",
                  "required": true
                }
              }
            }
          },
          "networks": {
            "description": "The list of networks that the dashboard administrator has privileges on",
            "type": "array",
            "items": {
              "title": "Network",
              "type": "object",
              "properties": {
                "id": {
                  "description": "The network ID",
                  "type": "string",
                  "required": true
                },
                "access": {
                  "description": "The privilege of the dashboard administrator on the network",
                  "type": "string",
                  "required": true
                }
              }
            }
          }
        }
      },
      "createOrganizationAdmin": {
        "title": "createOrganizationAdmin",
        "example": {
          "name": "Miles Meraki",
          "email": "miles@meraki.com",
          "orgAccess": "none",
          "tags": [
            {
              "tag": "west",
              "access": "read-only"
            }
          ]
        },
        "type": "object",
        "properties": {
          "email": {
            "description": "The email of the dashboard administrator. This attribute can not be updated.",
            "type": "string",
            "required": true
          },
          "name": {
            "description": "The name of the dashboard administrator",
            "type": "string",
            "required": true
          },
          "orgAccess": {
            "description": "The privilege of the dashboard administrator on the organization (full, read-only, none)",
            "type": "string",
            "required": true
          },
          "tags": {
            "description": "The list of tags that the dashboard administrator has privileges on",
            "type": "array",
            "items": {
              "title": "Tag",
              "type": "object",
              "properties": {
                "tag": {
                  "description": "The name of the tag",
                  "type": "string",
                  "required": true
                },
                "access": {
                  "description": "The privilege of the dashboard administrator on the tag",
                  "type": "string",
                  "required": true
                }
              }
            }
          },
          "networks": {
            "description": "The list of networks that the dashboard administrator has privileges on",
            "type": "array",
            "items": {
              "title": "Network",
              "type": "object",
              "properties": {
                "id": {
                  "description": "The network ID",
                  "type": "string",
                  "required": true
                },
                "access": {
                  "description": "The privilege of the dashboard administrator on the network",
                  "type": "string",
                  "required": true
                }
              }
            }
          }
        }
      },
      "Ssids": {
        "title": "Ssids",
        "description": "The target SSIDs. For each SSID where isAuthorized is true, the expiration time will automatically be set according to the SSID's splash frequency.",
        "type": "object",
        "properties": {
          "isAuthorized": {
            "description": "New authorization status for SSID (true, false).",
            "type": "string"
          }
        }
      },
      "updateNetworkClientSplashAuthorizationStatus": {
        "title": "updateNetworkClientSplashAuthorizationStatus",
        "example": {
          "ssids": {
            "0": {
              "isAuthorized": true,
              "authorizedAt": "2017-07-19 16:24:13 UTC",
              "expiresAt": "2017-07-20 16:24:13 UTC"
            },
            "2": {
              "isAuthorized": false
            }
          }
        },
        "type": "object",
        "properties": {
          "ssids": {
            "title": "Ssids",
            "description": "The target SSIDs. For each SSID where isAuthorized is true, the expiration time will automatically be set according to the SSID's splash frequency.",
            "type": "object",
            "properties": {
              "isAuthorized": {
                "description": "New authorization status for SSID (true, false).",
                "type": "string"
              }
            }
          }
        }
      },
      "Service": {
        "title": "Service",
        "example": "All Services",
        "type": "string",
        "enum": [
          "All Services",
          "AirPlay",
          "AFP",
          "BitTorrent",
          "FTP",
          "iChat",
          "iTunes",
          "Printers",
          "Samba",
          "Scanners",
          "SSH"
        ]
      },
      "createNetworkGroupPolicy": {
        "title": "createNetworkGroupPolicy",
        "example": {
          "name": "No video streaming",
          "scheduling": {
            "enabled": true,
            "monday": {
              "active": true,
              "from": "9:00",
              "to": "17:00"
            },
            "tuesday": {
              "active": true,
              "from": "9:00",
              "to": "17:00"
            },
            "wednesday": {
              "active": true,
              "from": "9:00",
              "to": "17:00"
            },
            "thursday": {
              "active": true,
              "from": "9:00",
              "to": "17:00"
            },
            "friday": {
              "active": true,
              "from": "9:00",
              "to": "17:00"
            },
            "saturday": {
              "active": false,
              "from": "0:00",
              "to": "24:00"
            },
            "sunday": {
              "active": false,
              "from": "0:00",
              "to": "24:00"
            }
          },
          "bandwidth": {
            "settings": "custom",
            "bandwidthLimits": {
              "limitUp": 1000000,
              "limitDown": 1000000
            }
          },
          "firewallAndTrafficShaping": {
            "settings": "custom",
            "trafficShapingRules": [
              {
                "definitions": [
                  {
                    "type": "host",
                    "value": "google.com"
                  },
                  {
                    "type": "port",
                    "value": "9090"
                  },
                  {
                    "type": "ipRange",
                    "value": "192.1.0.0"
                  },
                  {
                    "type": "ipRange",
                    "value": "192.1.0.0/16"
                  },
                  {
                    "type": "ipRange",
                    "value": "10.1.0.0/16:80"
                  },
                  {
                    "type": "localNet",
                    "value": "192.168.0.0/16"
                  },
                  {
                    "type": "applicationCategory",
                    "value": {
                      "id": "meraki:layer7/category/2",
                      "name": "Blogging"
                    }
                  },
                  {
                    "type": "application",
                    "value": {
                      "id": "meraki:layer7/application/133",
                      "name": "Battle.net"
                    }
                  }
                ],
                "perClientBandwidthLimits": {
                  "settings": "custom",
                  "bandwidthLimits": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  }
                },
                "dscpTagValue": null,
                "pcpTagValue": null
              }
            ],
            "l3FirewallRules": [
              {
                "comment": "Allow TCP traffic to subnet with HTTP servers.",
                "policy": "allow",
                "protocol": "tcp",
                "destPort": 443,
                "destCidr": "192.168.1.0/24"
              }
            ],
            "l7FirewallRules": [
              [
                {
                  "policy": "deny",
                  "type": "application",
                  "value": {
                    "id": "meraki:layer7/application/67",
                    "name": "Xbox LIVE"
                  }
                },
                {
                  "policy": "deny",
                  "type": "applicationCategory",
                  "value": {
                    "id": "meraki:layer7/category/2",
                    "name": "Blogging"
                  }
                },
                {
                  "policy": "deny",
                  "type": "host",
                  "value": "google.com"
                },
                {
                  "policy": "deny",
                  "type": "port",
                  "value": "23"
                },
                {
                  "policy": "deny",
                  "type": "ipRange",
                  "value": "10.11.12.00/24"
                },
                {
                  "policy": "deny",
                  "type": "ipRange",
                  "value": "10.11.12.00/24:5555"
                },
                {
                  "policy": "deny",
                  "type": "blacklistedCountries",
                  "value": [
                    "AX",
                    "CA"
                  ]
                },
                {
                  "policy": "deny",
                  "type": "whitelistedCountries",
                  "value": [
                    "US"
                  ]
                }
              ]
            ]
          },
          "splashAuthSettings": "bypass",
          "vlanTagging": {
            "settings": "custom",
            "vlanId": "1"
          },
          "bonjourForwarding": {
            "settings": "custom",
            "rules": [
              {
                "description": "A simple bonjour rule",
                "vlanId": "1",
                "services": [
                  "All Services"
                ]
              }
            ]
          }
        },
        "type": "object",
        "properties": {
          "name": {
            "description": "The name for your group policy. Required.",
            "type": "string",
            "required": true
          },
          "scheduling": {
            "title": "Scheduling",
            "description": "The schedule for the group policy. Schedules are applied to days of the week.",
            "type": "object",
            "properties": {
              "enabled": {
                "description": "Whether scheduling is enabled (true) or disabled (false). Defaults to false. If true, the schedule objects for each day of the week (monday - sunday) are parsed.",
                "type": "boolean"
              },
              "monday": {
                "title": "Monday",
                "description": "The schedule object for Monday.",
                "type": "object",
                "properties": {
                  "active": {
                    "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.",
                    "type": "boolean"
                  },
                  "from": {
                    "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.",
                    "type": "string"
                  },
                  "to": {
                    "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.",
                    "type": "string"
                  }
                }
              },
              "tuesday": {
                "title": "Tuesday",
                "description": "The schedule object for Tuesday.",
                "type": "object",
                "properties": {
                  "active": {
                    "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.",
                    "type": "boolean"
                  },
                  "from": {
                    "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.",
                    "type": "string"
                  },
                  "to": {
                    "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.",
                    "type": "string"
                  }
                }
              },
              "wednesday": {
                "title": "Wednesday",
                "description": "The schedule object for Wednesday.",
                "type": "object",
                "properties": {
                  "active": {
                    "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.",
                    "type": "boolean"
                  },
                  "from": {
                    "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.",
                    "type": "string"
                  },
                  "to": {
                    "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.",
                    "type": "string"
                  }
                }
              },
              "thursday": {
                "title": "Thursday",
                "description": "The schedule object for Thursday.",
                "type": "object",
                "properties": {
                  "active": {
                    "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.",
                    "type": "boolean"
                  },
                  "from": {
                    "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.",
                    "type": "string"
                  },
                  "to": {
                    "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.",
                    "type": "string"
                  }
                }
              },
              "friday": {
                "title": "Friday",
                "description": "The schedule object for Friday.",
                "type": "object",
                "properties": {
                  "active": {
                    "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.",
                    "type": "boolean"
                  },
                  "from": {
                    "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.",
                    "type": "string"
                  },
                  "to": {
                    "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.",
                    "type": "string"
                  }
                }
              },
              "saturday": {
                "title": "Saturday",
                "description": "The schedule object for Saturday.",
                "type": "object",
                "properties": {
                  "active": {
                    "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.",
                    "type": "boolean"
                  },
                  "from": {
                    "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.",
                    "type": "string"
                  },
                  "to": {
                    "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.",
                    "type": "string"
                  }
                }
              },
              "sunday": {
                "title": "Sunday",
                "description": "The schedule object for Sunday.",
                "type": "object",
                "properties": {
                  "active": {
                    "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.",
                    "type": "boolean"
                  },
                  "from": {
                    "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.",
                    "type": "string"
                  },
                  "to": {
                    "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.",
                    "type": "string"
                  }
                }
              }
            }
          },
          "bandwidth": {
            "title": "Bandwidth",
            "description": "The bandwidth settings for clients bound to your group policy.",
            "type": "object",
            "properties": {
              "settings": {
                "title": "Settings",
                "description": "How bandwidth limits are enforced. Can be 'network default', 'ignore' or 'custom'.",
                "example": "network default",
                "type": "string",
                "enum": [
                  "network default",
                  "ignore",
                  "custom"
                ]
              },
              "bandwidthLimits": {
                "title": "BandwidthLimits",
                "description": "The bandwidth limits object, specifying upload and download speed for clients bound to the group policy. These are only enforced if 'settings' is set to 'custom'.",
                "type": "object",
                "properties": {
                  "limitUp": {
                    "description": "The maximum upload limit (integer, in Kbps). null indicates no limit",
                    "type": "integer",
                    "format": "int32"
                  },
                  "limitDown": {
                    "description": "The maximum download limit (integer, in Kbps). null indicates no limit",
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "firewallAndTrafficShaping": {
            "title": "FirewallAndTrafficShaping",
            "description": "The firewall and traffic shaping rules and settings for your policy.",
            "type": "object",
            "properties": {
              "settings": {
                "title": "Settings1",
                "description": "How firewall and traffic shaping rules are enforced. Can be 'network default', 'ignore' or 'custom'.",
                "example": "network default",
                "type": "string",
                "enum": [
                  "network default",
                  "ignore",
                  "custom"
                ]
              },
              "trafficShapingRules": {
                "description": "An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.",
                "type": "array",
                "items": {
                  "title": "TrafficShapingRule",
                  "type": "object",
                  "properties": {
                    "definitions": {
                      "description": "A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.",
                      "type": "array",
                      "items": {
                        "title": "Definition",
                        "type": "object",
                        "properties": {
                          "type": {
                            "title": "Type1",
                            "description": "The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.",
                            "example": "application",
                            "type": "string",
                            "enum": [
                              "application",
                              "applicationCategory",
                              "host",
                              "port",
                              "ipRange",
                              "localNet"
                            ],
                            "required": true
                          },
                          "value": {
                            "description": "If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).",
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "required": true
                    },
                    "perClientBandwidthLimits": {
                      "title": "PerClientBandwidthLimits",
                      "description": "An object describing the bandwidth settings for your rule.",
                      "type": "object",
                      "properties": {
                        "settings": {
                          "description": "How bandwidth limits are applied by your rule. Can be one of 'network default', 'ignore' or 'custom'.",
                          "type": "string"
                        },
                        "bandwidthLimits": {
                          "title": "BandwidthLimits1",
                          "description": "The bandwidth limits object, specifying the upload ('limitUp') and download ('limitDown') speed in Kbps. These are only enforced if 'settings' is set to 'custom'.",
                          "type": "object",
                          "properties": {
                            "limitUp": {
                              "description": "The maximum upload limit (integer, in Kbps).",
                              "type": "integer",
                              "format": "int32"
                            },
                            "limitDown": {
                              "description": "The maximum download limit (integer, in Kbps).",
                              "type": "integer",
                              "format": "int32"
                            }
                          }
                        }
                      }
                    },
                    "dscpTagValue": {
                      "description": "The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pcpTagValue": {
                      "description": "The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).\n    null means 'Do not set PCP tag'.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "priority": {
                      "description": "A string, indicating the priority level for packets bound to your rule.\n    Can be 'low', 'normal' or 'high'.",
                      "type": "string"
                    }
                  }
                }
              },
              "l3FirewallRules": {
                "description": "An ordered array of the L3 firewall rules",
                "type": "array",
                "items": {
                  "title": "L3FirewallRule",
                  "type": "object",
                  "properties": {
                    "comment": {
                      "description": "Description of the rule (optional)",
                      "type": "string"
                    },
                    "policy": {
                      "description": "'allow' or 'deny' traffic specified by this rule",
                      "type": "string",
                      "required": true
                    },
                    "protocol": {
                      "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')",
                      "type": "string",
                      "required": true
                    },
                    "destPort": {
                      "description": "Destination port (integer in the range 1-65535), a port range (e.g. 8080-9090), or 'any'",
                      "type": "string"
                    },
                    "destCidr": {
                      "description": "Destination IP address (in IP or CIDR notation), a fully-qualified domain name (FQDN, if your network supports it) or 'any'.",
                      "type": "string",
                      "required": true
                    }
                  }
                }
              },
              "l7FirewallRules": {
                "description": "An ordered array of L7 firewall rules",
                "type": "array",
                "items": {
                  "title": "L7FirewallRule",
                  "type": "object",
                  "properties": {
                    "policy": {
                      "title": "Policy1",
                      "description": "The policy applied to matching traffic. Must be 'deny'.",
                      "example": "deny",
                      "type": "string",
                      "enum": [
                        "deny"
                      ]
                    },
                    "type": {
                      "title": "Type2",
                      "description": "Type of the L7 Rule. Must be 'application', 'applicationCategory', 'host', 'port' or 'ipRange'",
                      "example": "application",
                      "type": "string",
                      "enum": [
                        "application",
                        "applicationCategory",
                        "host",
                        "port",
                        "ipRange"
                      ]
                    },
                    "value": {
                      "description": "The 'value' of what you want to block. If 'type' is 'host', 'port' or 'ipRange', 'value' must be a string matching either a hostname (e.g. somewhere.com), a port (e.g. 8080), or an IP range (e.g. 192.1.0.0/16). If 'type' is 'application' or 'applicationCategory', then 'value' must be an object with an ID for the application.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "splashAuthSettings": {
            "title": "SplashAuthSettings",
            "description": "Whether clients bound to your policy will bypass splash authorization or behave according to the network's rules. Can be one of 'network default' or 'bypass'. Only available if your network has a wireless configuration.",
            "example": "network default",
            "type": "string",
            "enum": [
              "network default",
              "bypass"
            ]
          },
          "vlanTagging": {
            "title": "VlanTagging",
            "description": "The VLAN tagging settings for your group policy. Only available if your network has a wireless configuration.",
            "type": "object",
            "properties": {
              "settings": {
                "title": "Settings2",
                "description": "How VLAN tagging is applied. Can be 'network default', 'ignore' or 'custom'.",
                "example": "network default",
                "type": "string",
                "enum": [
                  "network default",
                  "ignore",
                  "custom"
                ]
              },
              "vlanId": {
                "description": "The ID of the vlan you want to tag. This only applies if 'settings' is set to 'custom'.",
                "type": "string"
              }
            }
          },
          "bonjourForwarding": {
            "title": "BonjourForwarding",
            "description": "The Bonjour settings for your group policy. Only valid if your network has a wireless configuration.",
            "type": "object",
            "properties": {
              "settings": {
                "title": "Settings3",
                "description": "How Bonjour rules are applied. Can be 'network default', 'ignore' or 'custom'.",
                "example": "network default",
                "type": "string",
                "enum": [
                  "network default",
                  "ignore",
                  "custom"
                ]
              },
              "rules": {
                "description": "A list of the Bonjour forwarding rules for your group policy. If 'settings' is set to 'custom', at least one rule must be specified.",
                "type": "array",
                "items": {
                  "title": "Rule5",
                  "type": "object",
                  "properties": {
                    "description": {
                      "description": "A description for your Bonjour forwarding rule. Optional.",
                      "type": "string"
                    },
                    "vlanId": {
                      "description": "The ID of the service VLAN. Required.",
                      "type": "string",
                      "required": true
                    },
                    "services": {
                      "description": "A list of Bonjour services. At least one service must be specified. Available services are 'All Services', 'AirPlay', 'AFP', 'BitTorrent', 'FTP', 'iChat', 'iTunes', 'Printers', 'Samba', 'Scanners' and 'SSH'",
                      "type": "array",
                      "items": {
                        "title": "Service",
                        "example": "All Services",
                        "type": "string",
                        "enum": [
                          "All Services",
                          "AirPlay",
                          "AFP",
                          "BitTorrent",
                          "FTP",
                          "iChat",
                          "iTunes",
                          "Printers",
                          "Samba",
                          "Scanners",
                          "SSH"
                        ]
                      },
                      "required": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "blinkNetworkDeviceLeds": {
        "title": "blinkNetworkDeviceLeds",
        "example": {
          "duration": 20,
          "period": 160,
          "duty": 50
        },
        "type": "object",
        "properties": {
          "duration": {
            "description": "The duration in seconds. Must be between 5 and 120. Default is 20 seconds",
            "type": "integer",
            "format": "int32"
          },
          "period": {
            "description": "The period in milliseconds. Must be between 100 and 1000. Default is 160 milliseconds",
            "type": "integer",
            "format": "int32"
          },
          "duty": {
            "description": "The duty cycle as the percent active. Must be between 10 and 90. Default is 50.",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "updateNetworkGroupPolicy": {
        "title": "updateNetworkGroupPolicy",
        "example": {
          "name": "No video streaming",
          "scheduling": {
            "enabled": true,
            "monday": {
              "active": true,
              "from": "9:00",
              "to": "17:00"
            },
            "tuesday": {
              "active": true,
              "from": "9:00",
              "to": "17:00"
            },
            "wednesday": {
              "active": true,
              "from": "9:00",
              "to": "17:00"
            },
            "thursday": {
              "active": true,
              "from": "9:00",
              "to": "17:00"
            },
            "friday": {
              "active": true,
              "from": "9:00",
              "to": "17:00"
            },
            "saturday": {
              "active": false,
              "from": "0:00",
              "to": "24:00"
            },
            "sunday": {
              "active": false,
              "from": "0:00",
              "to": "24:00"
            }
          },
          "bandwidth": {
            "settings": "custom",
            "bandwidthLimits": {
              "limitUp": 1000000,
              "limitDown": 1000000
            }
          },
          "firewallAndTrafficShaping": {
            "settings": "custom",
            "trafficShapingRules": [
              {
                "definitions": [
                  {
                    "type": "host",
                    "value": "google.com"
                  },
                  {
                    "type": "port",
                    "value": "9090"
                  },
                  {
                    "type": "ipRange",
                    "value": "192.1.0.0"
                  },
                  {
                    "type": "ipRange",
                    "value": "192.1.0.0/16"
                  },
                  {
                    "type": "ipRange",
                    "value": "10.1.0.0/16:80"
                  },
                  {
                    "type": "localNet",
                    "value": "192.168.0.0/16"
                  },
                  {
                    "type": "applicationCategory",
                    "value": {
                      "id": "meraki:layer7/category/2",
                      "name": "Blogging"
                    }
                  },
                  {
                    "type": "application",
                    "value": {
                      "id": "meraki:layer7/application/133",
                      "name": "Battle.net"
                    }
                  }
                ],
                "perClientBandwidthLimits": {
                  "settings": "custom",
                  "bandwidthLimits": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  }
                },
                "dscpTagValue": null,
                "pcpTagValue": null
              }
            ],
            "l3FirewallRules": [
              {
                "comment": "Allow TCP traffic to subnet with HTTP servers.",
                "policy": "allow",
                "protocol": "tcp",
                "destPort": 443,
                "destCidr": "192.168.1.0/24"
              }
            ],
            "l7FirewallRules": [
              [
                {
                  "policy": "deny",
                  "type": "application",
                  "value": {
                    "id": "meraki:layer7/application/67",
                    "name": "Xbox LIVE"
                  }
                },
                {
                  "policy": "deny",
                  "type": "applicationCategory",
                  "value": {
                    "id": "meraki:layer7/category/2",
                    "name": "Blogging"
                  }
                },
                {
                  "policy": "deny",
                  "type": "host",
                  "value": "google.com"
                },
                {
                  "policy": "deny",
                  "type": "port",
                  "value": "23"
                },
                {
                  "policy": "deny",
                  "type": "ipRange",
                  "value": "10.11.12.00/24"
                },
                {
                  "policy": "deny",
                  "type": "ipRange",
                  "value": "10.11.12.00/24:5555"
                },
                {
                  "policy": "deny",
                  "type": "blacklistedCountries",
                  "value": [
                    "AX",
                    "CA"
                  ]
                },
                {
                  "policy": "deny",
                  "type": "whitelistedCountries",
                  "value": [
                    "US"
                  ]
                }
              ]
            ]
          },
          "splashAuthSettings": "bypass",
          "vlanTagging": {
            "settings": "custom",
            "vlanId": "1"
          },
          "bonjourForwarding": {
            "settings": "custom",
            "rules": [
              {
                "description": "A simple bonjour rule",
                "vlanId": "1",
                "services": [
                  "All Services"
                ]
              }
            ]
          }
        },
        "type": "object",
        "properties": {
          "name": {
            "description": "The name for your group policy.",
            "type": "string"
          },
          "scheduling": {
            "title": "Scheduling",
            "description": "The schedule for the group policy. Schedules are applied to days of the week.",
            "type": "object",
            "properties": {
              "enabled": {
                "description": "Whether scheduling is enabled (true) or disabled (false). Defaults to false. If true, the schedule objects for each day of the week (monday - sunday) are parsed.",
                "type": "boolean"
              },
              "monday": {
                "title": "Monday",
                "description": "The schedule object for Monday.",
                "type": "object",
                "properties": {
                  "active": {
                    "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.",
                    "type": "boolean"
                  },
                  "from": {
                    "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.",
                    "type": "string"
                  },
                  "to": {
                    "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.",
                    "type": "string"
                  }
                }
              },
              "tuesday": {
                "title": "Tuesday",
                "description": "The schedule object for Tuesday.",
                "type": "object",
                "properties": {
                  "active": {
                    "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.",
                    "type": "boolean"
                  },
                  "from": {
                    "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.",
                    "type": "string"
                  },
                  "to": {
                    "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.",
                    "type": "string"
                  }
                }
              },
              "wednesday": {
                "title": "Wednesday",
                "description": "The schedule object for Wednesday.",
                "type": "object",
                "properties": {
                  "active": {
                    "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.",
                    "type": "boolean"
                  },
                  "from": {
                    "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.",
                    "type": "string"
                  },
                  "to": {
                    "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.",
                    "type": "string"
                  }
                }
              },
              "thursday": {
                "title": "Thursday",
                "description": "The schedule object for Thursday.",
                "type": "object",
                "properties": {
                  "active": {
                    "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.",
                    "type": "boolean"
                  },
                  "from": {
                    "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.",
                    "type": "string"
                  },
                  "to": {
                    "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.",
                    "type": "string"
                  }
                }
              },
              "friday": {
                "title": "Friday",
                "description": "The schedule object for Friday.",
                "type": "object",
                "properties": {
                  "active": {
                    "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.",
                    "type": "boolean"
                  },
                  "from": {
                    "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.",
                    "type": "string"
                  },
                  "to": {
                    "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.",
                    "type": "string"
                  }
                }
              },
              "saturday": {
                "title": "Saturday",
                "description": "The schedule object for Saturday.",
                "type": "object",
                "properties": {
                  "active": {
                    "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.",
                    "type": "boolean"
                  },
                  "from": {
                    "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.",
                    "type": "string"
                  },
                  "to": {
                    "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.",
                    "type": "string"
                  }
                }
              },
              "sunday": {
                "title": "Sunday",
                "description": "The schedule object for Sunday.",
                "type": "object",
                "properties": {
                  "active": {
                    "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.",
                    "type": "boolean"
                  },
                  "from": {
                    "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.",
                    "type": "string"
                  },
                  "to": {
                    "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.",
                    "type": "string"
                  }
                }
              }
            }
          },
          "bandwidth": {
            "title": "Bandwidth",
            "description": "The bandwidth settings for clients bound to your group policy.",
            "type": "object",
            "properties": {
              "settings": {
                "title": "Settings",
                "description": "How bandwidth limits are enforced. Can be 'network default', 'ignore' or 'custom'.",
                "example": "network default",
                "type": "string",
                "enum": [
                  "network default",
                  "ignore",
                  "custom"
                ]
              },
              "bandwidthLimits": {
                "title": "BandwidthLimits",
                "description": "The bandwidth limits object, specifying upload and download speed for clients bound to the group policy. These are only enforced if 'settings' is set to 'custom'.",
                "type": "object",
                "properties": {
                  "limitUp": {
                    "description": "The maximum upload limit (integer, in Kbps). null indicates no limit",
                    "type": "integer",
                    "format": "int32"
                  },
                  "limitDown": {
                    "description": "The maximum download limit (integer, in Kbps). null indicates no limit",
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "firewallAndTrafficShaping": {
            "title": "FirewallAndTrafficShaping",
            "description": "The firewall and traffic shaping rules and settings for your policy.",
            "type": "object",
            "properties": {
              "settings": {
                "title": "Settings1",
                "description": "How firewall and traffic shaping rules are enforced. Can be 'network default', 'ignore' or 'custom'.",
                "example": "network default",
                "type": "string",
                "enum": [
                  "network default",
                  "ignore",
                  "custom"
                ]
              },
              "trafficShapingRules": {
                "description": "An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.",
                "type": "array",
                "items": {
                  "title": "TrafficShapingRule",
                  "type": "object",
                  "properties": {
                    "definitions": {
                      "description": "A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.",
                      "type": "array",
                      "items": {
                        "title": "Definition",
                        "type": "object",
                        "properties": {
                          "type": {
                            "title": "Type1",
                            "description": "The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.",
                            "example": "application",
                            "type": "string",
                            "enum": [
                              "application",
                              "applicationCategory",
                              "host",
                              "port",
                              "ipRange",
                              "localNet"
                            ],
                            "required": true
                          },
                          "value": {
                            "description": "If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).",
                            "type": "string",
                            "required": true
                          }
                        }
                      },
                      "required": true
                    },
                    "perClientBandwidthLimits": {
                      "title": "PerClientBandwidthLimits",
                      "description": "An object describing the bandwidth settings for your rule.",
                      "type": "object",
                      "properties": {
                        "settings": {
                          "description": "How bandwidth limits are applied by your rule. Can be one of 'network default', 'ignore' or 'custom'.",
                          "type": "string"
                        },
                        "bandwidthLimits": {
                          "title": "BandwidthLimits1",
                          "description": "The bandwidth limits object, specifying the upload ('limitUp') and download ('limitDown') speed in Kbps. These are only enforced if 'settings' is set to 'custom'.",
                          "type": "object",
                          "properties": {
                            "limitUp": {
                              "description": "The maximum upload limit (integer, in Kbps).",
                              "type": "integer",
                              "format": "int32"
                            },
                            "limitDown": {
                              "description": "The maximum download limit (integer, in Kbps).",
                              "type": "integer",
                              "format": "int32"
                            }
                          }
                        }
                      }
                    },
                    "dscpTagValue": {
                      "description": "The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pcpTagValue": {
                      "description": "The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).\n    null means 'Do not set PCP tag'.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "priority": {
                      "description": "A string, indicating the priority level for packets bound to your rule.\n    Can be 'low', 'normal' or 'high'.",
                      "type": "string"
                    }
                  }
                }
              },
              "l3FirewallRules": {
                "description": "An ordered array of the L3 firewall rules",
                "type": "array",
                "items": {
                  "title": "L3FirewallRule",
                  "type": "object",
                  "properties": {
                    "comment": {
                      "description": "Description of the rule (optional)",
                      "type": "string"
                    },
                    "policy": {
                      "description": "'allow' or 'deny' traffic specified by this rule",
                      "type": "string",
                      "required": true
                    },
                    "protocol": {
                      "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')",
                      "type": "string",
                      "required": true
                    },
                    "destPort": {
                      "description": "Destination port (integer in the range 1-65535), a port range (e.g. 8080-9090), or 'any'",
                      "type": "string"
                    },
                    "destCidr": {
                      "description": "Destination IP address (in IP or CIDR notation), a fully-qualified domain name (FQDN, if your network supports it) or 'any'.",
                      "type": "string",
                      "required": true
                    }
                  }
                }
              },
              "l7FirewallRules": {
                "description": "An ordered array of L7 firewall rules",
                "type": "array",
                "items": {
                  "title": "L7FirewallRule",
                  "type": "object",
                  "properties": {
                    "policy": {
                      "title": "Policy1",
                      "description": "The policy applied to matching traffic. Must be 'deny'.",
                      "example": "deny",
                      "type": "string",
                      "enum": [
                        "deny"
                      ]
                    },
                    "type": {
                      "title": "Type2",
                      "description": "Type of the L7 Rule. Must be 'application', 'applicationCategory', 'host', 'port' or 'ipRange'",
                      "example": "application",
                      "type": "string",
                      "enum": [
                        "application",
                        "applicationCategory",
                        "host",
                        "port",
                        "ipRange"
                      ]
                    },
                    "value": {
                      "description": "The 'value' of what you want to block. If 'type' is 'host', 'port' or 'ipRange', 'value' must be a string matching either a hostname (e.g. somewhere.com), a port (e.g. 8080), or an IP range (e.g. 192.1.0.0/16). If 'type' is 'application' or 'applicationCategory', then 'value' must be an object with an ID for the application.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "splashAuthSettings": {
            "title": "SplashAuthSettings",
            "description": "Whether clients bound to your policy will bypass splash authorization or behave according to the network's rules. Can be one of 'network default' or 'bypass'. Only available if your network has a wireless configuration.",
            "example": "network default",
            "type": "string",
            "enum": [
              "network default",
              "bypass"
            ]
          },
          "vlanTagging": {
            "title": "VlanTagging",
            "description": "The VLAN tagging settings for your group policy. Only available if your network has a wireless configuration.",
            "type": "object",
            "properties": {
              "settings": {
                "title": "Settings2",
                "description": "How VLAN tagging is applied. Can be 'network default', 'ignore' or 'custom'.",
                "example": "network default",
                "type": "string",
                "enum": [
                  "network default",
                  "ignore",
                  "custom"
                ]
              },
              "vlanId": {
                "description": "The ID of the vlan you want to tag. This only applies if 'settings' is set to 'custom'.",
                "type": "string"
              }
            }
          },
          "bonjourForwarding": {
            "title": "BonjourForwarding",
            "description": "The Bonjour settings for your group policy. Only valid if your network has a wireless configuration.",
            "type": "object",
            "properties": {
              "settings": {
                "title": "Settings3",
                "description": "How Bonjour rules are applied. Can be 'network default', 'ignore' or 'custom'.",
                "example": "network default",
                "type": "string",
                "enum": [
                  "network default",
                  "ignore",
                  "custom"
                ]
              },
              "rules": {
                "description": "A list of the Bonjour forwarding rules for your group policy. If 'settings' is set to 'custom', at least one rule must be specified.",
                "type": "array",
                "items": {
                  "title": "Rule5",
                  "type": "object",
                  "properties": {
                    "description": {
                      "description": "A description for your Bonjour forwarding rule. Optional.",
                      "type": "string"
                    },
                    "vlanId": {
                      "description": "The ID of the service VLAN. Required.",
                      "type": "string",
                      "required": true
                    },
                    "services": {
                      "description": "A list of Bonjour services. At least one service must be specified. Available services are 'All Services', 'AirPlay', 'AFP', 'BitTorrent', 'FTP', 'iChat', 'iTunes', 'Printers', 'Samba', 'Scanners' and 'SSH'",
                      "type": "array",
                      "items": {
                        "title": "Service",
                        "example": "All Services",
                        "type": "string",
                        "enum": [
                          "All Services",
                          "AirPlay",
                          "AFP",
                          "BitTorrent",
                          "FTP",
                          "iChat",
                          "iTunes",
                          "Printers",
                          "Samba",
                          "Scanners",
                          "SSH"
                        ]
                      },
                      "required": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "updateNetworkSnmpSettings": {
        "title": "updateNetworkSnmpSettings",
        "example": {
          "access": "users",
          "users": [
            {
              "username": "AzureDiamond",
              "passphrase": "hunter2"
            }
          ]
        },
        "type": "object",
        "properties": {
          "access": {
            "title": "Access",
            "description": "The type of SNMP access. Can be one of 'none' (disabled), 'community' (V1/V2c), or 'users' (V3).",
            "example": "none",
            "type": "string",
            "enum": [
              "none",
              "community",
              "users"
            ]
          },
          "communityString": {
            "description": "The SNMP community string. Only relevant if 'access' is set to 'community'.",
            "type": "string"
          },
          "users": {
            "description": "The list of SNMP users. Only relevant if 'access' is set to 'users'.",
            "type": "array",
            "items": {
              "title": "User",
              "type": "object",
              "properties": {
                "username": {
                  "description": "The username for the SNMP user. Required.",
                  "type": "string",
                  "required": true
                },
                "passphrase": {
                  "description": "The passphrase for the SNMP user. Required.",
                  "type": "string",
                  "required": true
                }
              }
            }
          }
        }
      },
      "checkinNetworkSmDevices": {
        "title": "checkinNetworkSmDevices",
        "example": {
          "ids": "\"1284392014819\""
        },
        "type": "object",
        "properties": {
          "wifiMacs": {
            "description": "The wifiMacs of the devices to be checked-in.",
            "type": "string"
          },
          "ids": {
            "description": "The ids of the devices to be checked-in.",
            "type": "string"
          },
          "serials": {
            "description": "The serials of the devices to be checked-in.",
            "type": "string"
          },
          "scope": {
            "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be checked-in.",
            "type": "string"
          }
        }
      },
      "wipeNetworkSmDevice": {
        "title": "wipeNetworkSmDevice",
        "example": {
          "id": "1284392014819"
        },
        "type": "object",
        "properties": {
          "wifiMac": {
            "description": "The wifiMac of the device to be wiped.",
            "type": "string"
          },
          "id": {
            "description": "The id of the device to be wiped.",
            "type": "string"
          },
          "serial": {
            "description": "The serial of the device to be wiped.",
            "type": "string"
          },
          "pin": {
            "description": "The pin number (a six digit value) for wiping a macOS device. Required only for macOS devices.",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DeviceFields": {
        "title": "DeviceFields",
        "description": "The new fields of the device. Each field of this object is optional.",
        "type": "object",
        "properties": {
          "name": {
            "description": "New name for the device",
            "type": "string"
          },
          "notes": {
            "description": "New notes for the device",
            "type": "string"
          }
        },
        "required": true
      },
      "updateNetworkSmDeviceFields": {
        "title": "updateNetworkSmDeviceFields",
        "example": {
          "id": "1284392014819",
          "deviceFields": {
            "name": "My name"
          }
        },
        "type": "object",
        "properties": {
          "wifiMac": {
            "description": "The wifiMac of the device to be modified.",
            "type": "string"
          },
          "id": {
            "description": "The id of the device to be modified.",
            "type": "string"
          },
          "serial": {
            "description": "The serial of the device to be modified.",
            "type": "string"
          },
          "deviceFields": {
            "title": "DeviceFields",
            "description": "The new fields of the device. Each field of this object is optional.",
            "type": "object",
            "properties": {
              "name": {
                "description": "New name for the device",
                "type": "string"
              },
              "notes": {
                "description": "New notes for the device",
                "type": "string"
              }
            },
            "required": true
          }
        }
      },
      "updateNetworkSmAppPolaris": {
        "title": "updateNetworkSmAppPolaris",
        "type": "object",
        "properties": {
          "scope": {
            "description": "The scope (one of all, none, automatic, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned",
            "type": "string"
          },
          "preventAutoInstall": {
            "description": "Whether or not SM should auto-install this app (one of true or false). False by default.",
            "type": "string"
          },
          "usesVPP": {
            "description": "Whether or not the app should use VPP by device assignment (one of true or false). False by default.",
            "type": "string"
          }
        }
      },
      "updateNetworkSmTargetGroup": {
        "title": "updateNetworkSmTargetGroup",
        "example": {
          "name": "My target group",
          "scope": "none",
          "tags": "[]",
          "type": "devices"
        },
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of this target group",
            "type": "string"
          },
          "scope": {
            "description": "The scope and tag options of the target group. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none, followed by tags. Default to none if empty.",
            "type": "string"
          }
        }
      },
      "createNetworkSmTargetGroup": {
        "title": "createNetworkSmTargetGroup",
        "example": {
          "name": "My target group",
          "scope": "none",
          "tags": "[]",
          "type": "devices"
        },
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of this target group",
            "type": "string"
          },
          "scope": {
            "description": "The scope and tag options of the target group. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none, followed by tags. Default to none if empty.",
            "type": "string"
          }
        }
      },
      "AllowedFile": {
        "title": "AllowedFile",
        "type": "object",
        "properties": {
          "sha256": {
            "description": "The file sha256 hash to whitelist",
            "type": "string"
          },
          "comment": {
            "description": "Comment about the whitelisted entity",
            "type": "string"
          }
        }
      },
      "updateNetworkSecurityMalwareSettings": {
        "title": "updateNetworkSecurityMalwareSettings",
        "example": {
          "mode": "enabled",
          "allowedUrls": [
            {
              "url": "example.org",
              "comment": "allow example.org"
            },
            {
              "url": "help.com.au",
              "comment": "allow help.com.au"
            }
          ],
          "allowedFiles": [
            {
              "sha256": "e82c5f7d75004727e1f3b94426b9a11c8bc4c312a9170ac9a73abace40aef503",
              "comment": "allow ZIP file"
            }
          ]
        },
        "type": "object",
        "properties": {
          "mode": {
            "description": "Set mode to 'enabled' to enable malware prevention, otherwise 'disabled'",
            "type": "string"
          },
          "allowedUrls": {
            "description": "The urls that should be permitted by the malware detection engine. If omitted, the current config will remain unchanged. This is available only if your network supports AMP whitelisting",
            "type": "array",
            "items": {
              "title": "AllowedUrl",
              "type": "object",
              "properties": {
                "url": {
                  "description": "The url to whitelist",
                  "type": "string"
                },
                "comment": {
                  "description": "Comment about the whitelisted entity",
                  "type": "string"
                }
              }
            }
          },
          "allowedFiles": {
            "description": "The sha256 digests of files that should be permitted by the malware detection engine. If omitted, the current config will remain unchanged. This is available only if your network supports AMP whitelisting",
            "type": "array",
            "items": {
              "title": "AllowedFile",
              "type": "object",
              "properties": {
                "sha256": {
                  "description": "The file sha256 hash to whitelist",
                  "type": "string"
                },
                "comment": {
                  "description": "Comment about the whitelisted entity",
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "WhitelistedRule": {
        "title": "WhitelistedRule",
        "type": "object",
        "properties": {
          "ruleId": {
            "description": "A rule identifier of the format meraki:intrusion/snort/GID/<gid>/SID/<sid>. gid and sid can be obtained from either https://www.snort.org/rule-docs or as ruleIds from the security events in /organization/[orgId]/securityEvents",
            "type": "string",
            "required": true
          },
          "message": {
            "description": "Message is optional and is ignored on a PUT call. It is allowed in order for PUT to be compatible with GET",
            "type": "string"
          }
        }
      },
      "ProtectedNetworks": {
        "title": "ProtectedNetworks",
        "description": "Set the included/excluded networks from the intrusion engine (optional - omitting will leave current config unchanged)",
        "type": "object",
        "properties": {
          "useDefault": {
            "description": "true/false whether to use special IPv4 addresses: https://tools.ietf.org/html/rfc5735 (required). Default value is true if none currently saved",
            "type": "boolean"
          },
          "includedCidr": {
            "description": "list of IP addresses or subnets being protected (required if 'useDefault' is false)",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "excludedCidr": {
            "description": "list of IP addresses or subnets being excluded from protection (required if 'useDefault' is false)",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "updateNetworkSecurityIntrusionSettings": {
        "title": "updateNetworkSecurityIntrusionSettings",
        "example": {
          "mode": "prevention",
          "idsRulesets": "balanced",
          "protectedNetworks": {
            "useDefault": false,
            "includedCidr": [
              "10.0.0.0/8",
              "127.0.0.0/8",
              "169.254.0.0/16",
              "172.16.0.0/12"
            ],
            "excludedCidr": [
              "10.0.0.0/8",
              "127.0.0.0/8"
            ]
          }
        },
        "type": "object",
        "properties": {
          "mode": {
            "description": "Set mode to 'disabled'/'detection'/'prevention' (optional - omitting will leave current config unchanged)",
            "type": "string"
          },
          "idsRulesets": {
            "description": "Set the detection ruleset 'connectivity'/'balanced'/'security' (optional - omitting will leave current config unchanged). Default value is 'balanced' if none currently saved",
            "type": "string"
          },
          "protectedNetworks": {
            "title": "ProtectedNetworks",
            "description": "Set the included/excluded networks from the intrusion engine (optional - omitting will leave current config unchanged)",
            "type": "object",
            "properties": {
              "useDefault": {
                "description": "true/false whether to use special IPv4 addresses: https://tools.ietf.org/html/rfc5735 (required). Default value is true if none currently saved",
                "type": "boolean"
              },
              "includedCidr": {
                "description": "list of IP addresses or subnets being protected (required if 'useDefault' is false)",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "excludedCidr": {
                "description": "list of IP addresses or subnets being excluded from protection (required if 'useDefault' is false)",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "updateOrganizationSamlRole": {
        "title": "updateOrganizationSamlRole",
        "type": "object",
        "properties": {
          "role": {
            "description": "The role of the SAML administrator",
            "type": "string"
          },
          "orgAccess": {
            "description": "The privilege of the SAML administrator on the organization",
            "type": "string"
          },
          "tags": {
            "description": "The list of tags that the SAML administrator has privileges on",
            "type": "array",
            "items": {
              "title": "Tag2",
              "type": "object",
              "properties": {
                "tag": {
                  "description": "The name of the tag",
                  "type": "string"
                },
                "access": {
                  "description": "The privilege of the SAML administrator on the tag",
                  "type": "string"
                }
              }
            }
          },
          "networks": {
            "description": "The list of networks that the SAML administrator has privileges on",
            "type": "array",
            "items": {
              "title": "Network2",
              "type": "object",
              "properties": {
                "id": {
                  "description": "The network ID",
                  "type": "string"
                },
                "access": {
                  "description": "The privilege of the SAML administrator on the network",
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Network2": {
        "title": "Network2",
        "type": "object",
        "properties": {
          "id": {
            "description": "The network ID",
            "type": "string"
          },
          "access": {
            "description": "The privilege of the SAML administrator on the network",
            "type": "string"
          }
        }
      },
      "Tag2": {
        "title": "Tag2",
        "type": "object",
        "properties": {
          "tag": {
            "description": "The name of the tag",
            "type": "string"
          },
          "access": {
            "description": "The privilege of the SAML administrator on the tag",
            "type": "string"
          }
        }
      },
      "createOrganizationSamlRole": {
        "title": "createOrganizationSamlRole",
        "type": "object",
        "properties": {
          "role": {
            "description": "The role of the SAML administrator",
            "type": "string"
          },
          "orgAccess": {
            "description": "The privilege of the SAML administrator on the organization",
            "type": "string"
          },
          "tags": {
            "description": "The list of tags that the SAML administrator has privileges on",
            "type": "array",
            "items": {
              "title": "Tag2",
              "type": "object",
              "properties": {
                "tag": {
                  "description": "The name of the tag",
                  "type": "string"
                },
                "access": {
                  "description": "The privilege of the SAML administrator on the tag",
                  "type": "string"
                }
              }
            }
          },
          "networks": {
            "description": "The list of networks that the SAML administrator has privileges on",
            "type": "array",
            "items": {
              "title": "Network2",
              "type": "object",
              "properties": {
                "id": {
                  "description": "The network ID",
                  "type": "string"
                },
                "access": {
                  "description": "The privilege of the SAML administrator on the network",
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Type5": {
        "title": "Type5",
        "description": "One of \"delete\" or \"restrict processing\"",
        "example": "delete",
        "type": "string",
        "enum": [
          "delete",
          "restrict processing"
        ]
      },
      "updateOrganizationThirdPartyVPNPeers": {
        "title": "updateOrganizationThirdPartyVPNPeers",
        "example": {
          "peers": [
            {
              "name": "My peer 1",
              "publicIp": "123.123.123.1",
              "privateSubnets": [
                "192.168.1.0/24",
                "192.168.128.0/24"
              ],
              "secret": "asdf1234",
              "ipsecPolicies": {
                "ikeCipherAlgo": [
                  "tripledes"
                ],
                "ikeAuthAlgo": [
                  "sha1"
                ],
                "ikeDiffieHellmanGroup": [
                  "group2"
                ],
                "ikeLifetime": 28800,
                "childCipherAlgo": [
                  "aes128"
                ],
                "childAuthAlgo": [
                  "sha1"
                ],
                "childPfsGroup": [
                  "disabled"
                ],
                "childLifetime": 28800
              }
            },
            {
              "name": "My peer 2",
              "publicIp": "123.123.123.2",
              "privateSubnets": [
                "192.168.2.0/24",
                "192.168.129.0/24"
              ],
              "secret": "asdf56785678567856785678",
              "ipsecPoliciesPreset": "default"
            }
          ]
        },
        "type": "object",
        "properties": {
          "peers": {
            "description": "The list of VPN peers",
            "type": "array",
            "items": {
              "title": "Peer",
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the VPN peer",
                  "type": "string",
                  "required": true
                },
                "publicIp": {
                  "description": "The public IP of the VPN peer",
                  "type": "string",
                  "required": true
                },
                "privateSubnets": {
                  "description": "The list of the private subnets of the VPN peer",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "required": true
                },
                "ipsecPolicies": {
                  "title": "IpsecPolicies",
                  "description": "Custom IPSec policies for the VPN peer. If not included and a preset has not been chosen, the default preset for IPSec policies will be used.",
                  "type": "object",
                  "properties": {
                    "ikeCipherAlgo": {
                      "description": "This is the cipher algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des'",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "ikeAuthAlgo": {
                      "description": "This is the authentication algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'sha1', 'md5'",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "ikeDiffieHellmanGroup": {
                      "description": "This is the Diffie-Hellman group to be used in Phase 1. The value should be an array with one of the following algorithms: 'group5', 'group2', 'group1'",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "ikeLifetime": {
                      "description": "The lifetime of the Phase 1 SA in seconds.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "childCipherAlgo": {
                      "description": "This is the cipher algorithms to be used in Phase 2. The value should be an array with one or more of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des', 'null'",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "childAuthAlgo": {
                      "description": "This is the authentication algorithms to be used in Phase 2. The value should be an array with one of the following algorithms: 'sha1', 'md5'",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "childPfsGroup": {
                      "description": "This is the Diffie-Hellman group to be used for Perfect Forward Secrecy in Phase 2. The value should be an array with one of the following values: 'disabled', 'group5', 'group2', 'group1'",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "childLifetime": {
                      "description": "The lifetime of the Phase 2 SA in seconds.",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                },
                "ipsecPoliciesPreset": {
                  "description": "One of the following available presets: 'default', 'aws', 'azure'. If this is provided, the 'ipsecPolicies' parameter is ignored.",
                  "type": "string"
                },
                "secret": {
                  "description": "The shared secret with the VPN peer",
                  "type": "string",
                  "required": true
                },
                "networkTags": {
                  "description": "A list of network tags that will connect with this peer. Use ['all'] for all networks. Use ['none'] for no networks. If not included, the default is ['all'].",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "required": true
          }
        }
      },
      "updateNetworkNetflowSettings": {
        "title": "updateNetworkNetflowSettings",
        "example": {
          "reportingEnabled": true,
          "collectorIp": "1.2.3.4",
          "collectorPort": 443
        },
        "type": "object",
        "properties": {
          "reportingEnabled": {
            "description": "Boolean indicating whether NetFlow traffic reporting is enabled (true) or disabled (false).",
            "type": "boolean"
          },
          "collectorIp": {
            "description": "The IPv4 address of the NetFlow collector.",
            "type": "string"
          },
          "collectorPort": {
            "description": "The port that the NetFlow collector will be listening on.",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WanEnabled": {
        "title": "WanEnabled",
        "description": "Enable or disable the interface (only for MX devices). Valid values are 'enabled', 'disabled', and 'not configured'.",
        "example": "enabled",
        "type": "string",
        "enum": [
          "enabled",
          "disabled",
          "not configured"
        ]
      },
      "updateNetworkDeviceManagementInterfaceSettings": {
        "title": "updateNetworkDeviceManagementInterfaceSettings",
        "example": {
          "wan1": {
            "wanEnabled": "not configured",
            "usingStaticIp": true,
            "staticIp": "1.2.3.4",
            "staticSubnetMask": "255.255.255.0",
            "staticGatewayIp": "1.2.3.1",
            "staticDns": [
              "1.2.3.2",
              "1.2.3.3"
            ],
            "vlan": 7
          },
          "wan2": {
            "wanEnabled": "enabled",
            "usingStaticIp": false,
            "vlan": 2
          }
        },
        "type": "object",
        "properties": {
          "wan1": {
            "title": "Wan1",
            "description": "WAN 1 settings",
            "type": "object",
            "properties": {
              "wanEnabled": {
                "title": "WanEnabled",
                "description": "Enable or disable the interface (only for MX devices). Valid values are 'enabled', 'disabled', and 'not configured'.",
                "example": "enabled",
                "type": "string",
                "enum": [
                  "enabled",
                  "disabled",
                  "not configured"
                ]
              },
              "usingStaticIp": {
                "description": "Configue the interface to have static IP settings or use DHCP.",
                "type": "boolean"
              },
              "staticIp": {
                "description": "The IP the device should use on the WAN.",
                "type": "string"
              },
              "staticGatewayIp": {
                "description": "The IP of the gateway on the WAN.",
                "type": "string"
              },
              "staticSubnetMask": {
                "description": "The subnet mask for the WAN.",
                "type": "string"
              },
              "staticDns": {
                "description": "Up to two DNS IPs.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "vlan": {
                "description": "The VLAN that management traffic should be tagged with. Applies whether usingStaticIp is true or false.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "wan2": {
            "title": "Wan2",
            "description": "WAN 2 settings (only for MX devices)",
            "type": "object",
            "properties": {
              "wanEnabled": {
                "title": "WanEnabled",
                "description": "Enable or disable the interface (only for MX devices). Valid values are 'enabled', 'disabled', and 'not configured'.",
                "example": "enabled",
                "type": "string",
                "enum": [
                  "enabled",
                  "disabled",
                  "not configured"
                ]
              },
              "usingStaticIp": {
                "description": "Configue the interface to have static IP settings or use DHCP.",
                "type": "boolean"
              },
              "staticIp": {
                "description": "The IP the device should use on the WAN.",
                "type": "string"
              },
              "staticGatewayIp": {
                "description": "The IP of the gateway on the WAN.",
                "type": "string"
              },
              "staticSubnetMask": {
                "description": "The subnet mask for the WAN.",
                "type": "string"
              },
              "staticDns": {
                "description": "Up to two DNS IPs.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "vlan": {
                "description": "The VLAN that management traffic should be tagged with. Applies whether usingStaticIp is true or false.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        }
      },
      "updateNetworkHttpServer": {
        "title": "updateNetworkHttpServer",
        "example": {
          "name": "My HTTP server",
          "url": "https://www.example.com/webhooks",
          "sharedSecret": "foobar"
        },
        "type": "object",
        "properties": {
          "name": {
            "description": "A name for easy reference to the HTTP server",
            "type": "string"
          },
          "url": {
            "description": "The URL of the HTTP server",
            "type": "string"
          },
          "sharedSecret": {
            "description": "A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki.",
            "type": "string"
          }
        }
      },
      "createNetworkHttpServer": {
        "title": "createNetworkHttpServer",
        "example": {
          "name": "My HTTP server",
          "url": "https://www.example.com/webhooks",
          "sharedSecret": "foobar"
        },
        "type": "object",
        "properties": {
          "name": {
            "description": "A name for easy reference to the HTTP server",
            "type": "string"
          },
          "url": {
            "description": "The URL of the HTTP server",
            "type": "string"
          },
          "sharedSecret": {
            "description": "A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki.",
            "type": "string"
          }
        }
      },
      "Rule5": {
        "title": "Rule5",
        "type": "object",
        "properties": {
          "description": {
            "description": "A description for your Bonjour forwarding rule. Optional.",
            "type": "string"
          },
          "vlanId": {
            "description": "The ID of the service VLAN. Required.",
            "type": "string",
            "required": true
          },
          "services": {
            "description": "A list of Bonjour services. At least one service must be specified. Available services are 'All Services', 'AirPlay', 'AFP', 'BitTorrent', 'FTP', 'iChat', 'iTunes', 'Printers', 'Samba', 'Scanners' and 'SSH'",
            "type": "array",
            "items": {
              "title": "Service",
              "example": "All Services",
              "type": "string",
              "enum": [
                "All Services",
                "AirPlay",
                "AFP",
                "BitTorrent",
                "FTP",
                "iChat",
                "iTunes",
                "Printers",
                "Samba",
                "Scanners",
                "SSH"
              ]
            },
            "required": true
          }
        }
      },
      "Settings3": {
        "title": "Settings3",
        "description": "How Bonjour rules are applied. Can be 'network default', 'ignore' or 'custom'.",
        "example": "network default",
        "type": "string",
        "enum": [
          "network default",
          "ignore",
          "custom"
        ]
      },
      "BonjourForwarding": {
        "title": "BonjourForwarding",
        "description": "The Bonjour settings for your group policy. Only valid if your network has a wireless configuration.",
        "type": "object",
        "properties": {
          "settings": {
            "title": "Settings3",
            "description": "How Bonjour rules are applied. Can be 'network default', 'ignore' or 'custom'.",
            "example": "network default",
            "type": "string",
            "enum": [
              "network default",
              "ignore",
              "custom"
            ]
          },
          "rules": {
            "description": "A list of the Bonjour forwarding rules for your group policy. If 'settings' is set to 'custom', at least one rule must be specified.",
            "type": "array",
            "items": {
              "title": "Rule5",
              "type": "object",
              "properties": {
                "description": {
                  "description": "A description for your Bonjour forwarding rule. Optional.",
                  "type": "string"
                },
                "vlanId": {
                  "description": "The ID of the service VLAN. Required.",
                  "type": "string",
                  "required": true
                },
                "services": {
                  "description": "A list of Bonjour services. At least one service must be specified. Available services are 'All Services', 'AirPlay', 'AFP', 'BitTorrent', 'FTP', 'iChat', 'iTunes', 'Printers', 'Samba', 'Scanners' and 'SSH'",
                  "type": "array",
                  "items": {
                    "title": "Service",
                    "example": "All Services",
                    "type": "string",
                    "enum": [
                      "All Services",
                      "AirPlay",
                      "AFP",
                      "BitTorrent",
                      "FTP",
                      "iChat",
                      "iTunes",
                      "Printers",
                      "Samba",
                      "Scanners",
                      "SSH"
                    ]
                  },
                  "required": true
                }
              }
            }
          }
        }
      },
      "Settings2": {
        "title": "Settings2",
        "description": "How VLAN tagging is applied. Can be 'network default', 'ignore' or 'custom'.",
        "example": "network default",
        "type": "string",
        "enum": [
          "network default",
          "ignore",
          "custom"
        ]
      },
      "VlanTagging": {
        "title": "VlanTagging",
        "description": "The VLAN tagging settings for your group policy. Only available if your network has a wireless configuration.",
        "type": "object",
        "properties": {
          "settings": {
            "title": "Settings2",
            "description": "How VLAN tagging is applied. Can be 'network default', 'ignore' or 'custom'.",
            "example": "network default",
            "type": "string",
            "enum": [
              "network default",
              "ignore",
              "custom"
            ]
          },
          "vlanId": {
            "description": "The ID of the vlan you want to tag. This only applies if 'settings' is set to 'custom'.",
            "type": "string"
          }
        }
      },
      "SplashAuthSettings": {
        "title": "SplashAuthSettings",
        "description": "Whether clients bound to your policy will bypass splash authorization or behave according to the network's rules. Can be one of 'network default' or 'bypass'. Only available if your network has a wireless configuration.",
        "example": "network default",
        "type": "string",
        "enum": [
          "network default",
          "bypass"
        ]
      },
      "L7FirewallRule": {
        "title": "L7FirewallRule",
        "type": "object",
        "properties": {
          "policy": {
            "title": "Policy1",
            "description": "The policy applied to matching traffic. Must be 'deny'.",
            "example": "deny",
            "type": "string",
            "enum": [
              "deny"
            ]
          },
          "type": {
            "title": "Type2",
            "description": "Type of the L7 Rule. Must be 'application', 'applicationCategory', 'host', 'port' or 'ipRange'",
            "example": "application",
            "type": "string",
            "enum": [
              "application",
              "applicationCategory",
              "host",
              "port",
              "ipRange"
            ]
          },
          "value": {
            "description": "The 'value' of what you want to block. If 'type' is 'host', 'port' or 'ipRange', 'value' must be a string matching either a hostname (e.g. somewhere.com), a port (e.g. 8080), or an IP range (e.g. 192.1.0.0/16). If 'type' is 'application' or 'applicationCategory', then 'value' must be an object with an ID for the application.",
            "type": "string"
          }
        }
      },
      "BandwidthLimits1": {
        "title": "BandwidthLimits1",
        "description": "The bandwidth limits object, specifying the upload ('limitUp') and download ('limitDown') speed in Kbps. These are only enforced if 'settings' is set to 'custom'.",
        "type": "object",
        "properties": {
          "limitUp": {
            "description": "The maximum upload limit (integer, in Kbps).",
            "type": "integer",
            "format": "int32"
          },
          "limitDown": {
            "description": "The maximum download limit (integer, in Kbps).",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PerClientBandwidthLimits": {
        "title": "PerClientBandwidthLimits",
        "description": "An object describing the bandwidth settings for your rule.",
        "type": "object",
        "properties": {
          "settings": {
            "description": "How bandwidth limits are applied by your rule. Can be one of 'network default', 'ignore' or 'custom'.",
            "type": "string"
          },
          "bandwidthLimits": {
            "title": "BandwidthLimits1",
            "description": "The bandwidth limits object, specifying the upload ('limitUp') and download ('limitDown') speed in Kbps. These are only enforced if 'settings' is set to 'custom'.",
            "type": "object",
            "properties": {
              "limitUp": {
                "description": "The maximum upload limit (integer, in Kbps).",
                "type": "integer",
                "format": "int32"
              },
              "limitDown": {
                "description": "The maximum download limit (integer, in Kbps).",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        }
      },
      "Definition": {
        "title": "Definition",
        "type": "object",
        "properties": {
          "type": {
            "title": "Type1",
            "description": "The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.",
            "example": "application",
            "type": "string",
            "enum": [
              "application",
              "applicationCategory",
              "host",
              "port",
              "ipRange",
              "localNet"
            ],
            "required": true
          },
          "value": {
            "description": "If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).",
            "type": "string",
            "required": true
          }
        }
      },
      "Settings1": {
        "title": "Settings1",
        "description": "How firewall and traffic shaping rules are enforced. Can be 'network default', 'ignore' or 'custom'.",
        "example": "network default",
        "type": "string",
        "enum": [
          "network default",
          "ignore",
          "custom"
        ]
      },
      "FirewallAndTrafficShaping": {
        "title": "FirewallAndTrafficShaping",
        "description": "The firewall and traffic shaping rules and settings for your policy.",
        "type": "object",
        "properties": {
          "settings": {
            "title": "Settings1",
            "description": "How firewall and traffic shaping rules are enforced. Can be 'network default', 'ignore' or 'custom'.",
            "example": "network default",
            "type": "string",
            "enum": [
              "network default",
              "ignore",
              "custom"
            ]
          },
          "trafficShapingRules": {
            "description": "An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.",
            "type": "array",
            "items": {
              "title": "TrafficShapingRule",
              "type": "object",
              "properties": {
                "definitions": {
                  "description": "A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.",
                  "type": "array",
                  "items": {
                    "title": "Definition",
                    "type": "object",
                    "properties": {
                      "type": {
                        "title": "Type1",
                        "description": "The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.",
                        "example": "application",
                        "type": "string",
                        "enum": [
                          "application",
                          "applicationCategory",
                          "host",
                          "port",
                          "ipRange",
                          "localNet"
                        ],
                        "required": true
                      },
                      "value": {
                        "description": "If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).",
                        "type": "string",
                        "required": true
                      }
                    }
                  },
                  "required": true
                },
                "perClientBandwidthLimits": {
                  "title": "PerClientBandwidthLimits",
                  "description": "An object describing the bandwidth settings for your rule.",
                  "type": "object",
                  "properties": {
                    "settings": {
                      "description": "How bandwidth limits are applied by your rule. Can be one of 'network default', 'ignore' or 'custom'.",
                      "type": "string"
                    },
                    "bandwidthLimits": {
                      "title": "BandwidthLimits1",
                      "description": "The bandwidth limits object, specifying the upload ('limitUp') and download ('limitDown') speed in Kbps. These are only enforced if 'settings' is set to 'custom'.",
                      "type": "object",
                      "properties": {
                        "limitUp": {
                          "description": "The maximum upload limit (integer, in Kbps).",
                          "type": "integer",
                          "format": "int32"
                        },
                        "limitDown": {
                          "description": "The maximum download limit (integer, in Kbps).",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    }
                  }
                },
                "dscpTagValue": {
                  "description": "The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.",
                  "type": "integer",
                  "format": "int32"
                },
                "pcpTagValue": {
                  "description": "The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).\n    null means 'Do not set PCP tag'.",
                  "type": "integer",
                  "format": "int32"
                },
                "priority": {
                  "description": "A string, indicating the priority level for packets bound to your rule.\n    Can be 'low', 'normal' or 'high'.",
                  "type": "string"
                }
              }
            }
          },
          "l3FirewallRules": {
            "description": "An ordered array of the L3 firewall rules",
            "type": "array",
            "items": {
              "title": "L3FirewallRule",
              "type": "object",
              "properties": {
                "comment": {
                  "description": "Description of the rule (optional)",
                  "type": "string"
                },
                "policy": {
                  "description": "'allow' or 'deny' traffic specified by this rule",
                  "type": "string",
                  "required": true
                },
                "protocol": {
                  "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')",
                  "type": "string",
                  "required": true
                },
                "destPort": {
                  "description": "Destination port (integer in the range 1-65535), a port range (e.g. 8080-9090), or 'any'",
                  "type": "string"
                },
                "destCidr": {
                  "description": "Destination IP address (in IP or CIDR notation), a fully-qualified domain name (FQDN, if your network supports it) or 'any'.",
                  "type": "string",
                  "required": true
                }
              }
            }
          },
          "l7FirewallRules": {
            "description": "An ordered array of L7 firewall rules",
            "type": "array",
            "items": {
              "title": "L7FirewallRule",
              "type": "object",
              "properties": {
                "policy": {
                  "title": "Policy1",
                  "description": "The policy applied to matching traffic. Must be 'deny'.",
                  "example": "deny",
                  "type": "string",
                  "enum": [
                    "deny"
                  ]
                },
                "type": {
                  "title": "Type2",
                  "description": "Type of the L7 Rule. Must be 'application', 'applicationCategory', 'host', 'port' or 'ipRange'",
                  "example": "application",
                  "type": "string",
                  "enum": [
                    "application",
                    "applicationCategory",
                    "host",
                    "port",
                    "ipRange"
                  ]
                },
                "value": {
                  "description": "The 'value' of what you want to block. If 'type' is 'host', 'port' or 'ipRange', 'value' must be a string matching either a hostname (e.g. somewhere.com), a port (e.g. 8080), or an IP range (e.g. 192.1.0.0/16). If 'type' is 'application' or 'applicationCategory', then 'value' must be an object with an ID for the application.",
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "BandwidthLimits": {
        "title": "BandwidthLimits",
        "description": "The bandwidth limits object, specifying upload and download speed for clients bound to the group policy. These are only enforced if 'settings' is set to 'custom'.",
        "type": "object",
        "properties": {
          "limitUp": {
            "description": "The maximum upload limit (integer, in Kbps). null indicates no limit",
            "type": "integer",
            "format": "int32"
          },
          "limitDown": {
            "description": "The maximum download limit (integer, in Kbps). null indicates no limit",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Settings": {
        "title": "Settings",
        "description": "How bandwidth limits are enforced. Can be 'network default', 'ignore' or 'custom'.",
        "example": "network default",
        "type": "string",
        "enum": [
          "network default",
          "ignore",
          "custom"
        ]
      },
      "Bandwidth": {
        "title": "Bandwidth",
        "description": "The bandwidth settings for clients bound to your group policy.",
        "type": "object",
        "properties": {
          "settings": {
            "title": "Settings",
            "description": "How bandwidth limits are enforced. Can be 'network default', 'ignore' or 'custom'.",
            "example": "network default",
            "type": "string",
            "enum": [
              "network default",
              "ignore",
              "custom"
            ]
          },
          "bandwidthLimits": {
            "title": "BandwidthLimits",
            "description": "The bandwidth limits object, specifying upload and download speed for clients bound to the group policy. These are only enforced if 'settings' is set to 'custom'.",
            "type": "object",
            "properties": {
              "limitUp": {
                "description": "The maximum upload limit (integer, in Kbps). null indicates no limit",
                "type": "integer",
                "format": "int32"
              },
              "limitDown": {
                "description": "The maximum download limit (integer, in Kbps). null indicates no limit",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        }
      },
      "Sunday": {
        "title": "Sunday",
        "description": "The schedule object for Sunday.",
        "type": "object",
        "properties": {
          "active": {
            "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.",
            "type": "boolean"
          },
          "from": {
            "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.",
            "type": "string"
          },
          "to": {
            "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.",
            "type": "string"
          }
        }
      },
      "Saturday": {
        "title": "Saturday",
        "description": "The schedule object for Saturday.",
        "type": "object",
        "properties": {
          "active": {
            "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.",
            "type": "boolean"
          },
          "from": {
            "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.",
            "type": "string"
          },
          "to": {
            "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.",
            "type": "string"
          }
        }
      },
      "Friday": {
        "title": "Friday",
        "description": "The schedule object for Friday.",
        "type": "object",
        "properties": {
          "active": {
            "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.",
            "type": "boolean"
          },
          "from": {
            "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.",
            "type": "string"
          },
          "to": {
            "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.",
            "type": "string"
          }
        }
      },
      "Thursday": {
        "title": "Thursday",
        "description": "The schedule object for Thursday.",
        "type": "object",
        "properties": {
          "active": {
            "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.",
            "type": "boolean"
          },
          "from": {
            "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.",
            "type": "string"
          },
          "to": {
            "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.",
            "type": "string"
          }
        }
      },
      "Wednesday": {
        "title": "Wednesday",
        "description": "The schedule object for Wednesday.",
        "type": "object",
        "properties": {
          "active": {
            "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.",
            "type": "boolean"
          },
          "from": {
            "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.",
            "type": "string"
          },
          "to": {
            "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.",
            "type": "string"
          }
        }
      },
      "Tuesday": {
        "title": "Tuesday",
        "description": "The schedule object for Tuesday.",
        "type": "object",
        "properties": {
          "active": {
            "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.",
            "type": "boolean"
          },
          "from": {
            "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.",
            "type": "string"
          },
          "to": {
            "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.",
            "type": "string"
          }
        }
      },
      "Monday": {
        "title": "Monday",
        "description": "The schedule object for Monday.",
        "type": "object",
        "properties": {
          "active": {
            "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.",
            "type": "boolean"
          },
          "from": {
            "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.",
            "type": "string"
          },
          "to": {
            "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.",
            "type": "string"
          }
        }
      },
      "updateNetworkSsidL3FirewallRules": {
        "title": "updateNetworkSsidL3FirewallRules",
        "example": {
          "rules": [
            {
              "comment": "Allow TCP traffic to subnet with HTTP servers.",
              "policy": "allow",
              "protocol": "tcp",
              "destPort": 443,
              "destCidr": "192.168.1.0/24"
            }
          ]
        },
        "type": "object",
        "properties": {
          "rules": {
            "description": "An ordered array of the firewall rules for this SSID (not including the local LAN access rule or the default rule)",
            "type": "array",
            "items": {
              "title": "Rule4",
              "type": "object",
              "properties": {
                "comment": {
                  "description": "Description of the rule (optional)",
                  "type": "string"
                },
                "policy": {
                  "description": "'allow' or 'deny' traffic specified by this rule",
                  "type": "string",
                  "required": true
                },
                "protocol": {
                  "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')",
                  "type": "string",
                  "required": true
                },
                "destPort": {
                  "description": "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'",
                  "type": "string"
                },
                "destCidr": {
                  "description": "Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'",
                  "type": "string",
                  "required": true
                }
              }
            }
          },
          "allowLanAccess": {
            "description": "Allow wireless client access to local LAN (boolean value - true allows access and false denies access) (optional)",
            "type": "boolean"
          }
        }
      },
      "updateOrganizationVpnFirewallRules": {
        "title": "updateOrganizationVpnFirewallRules",
        "example": {
          "rules": [
            {
              "comment": "Allow TCP traffic to subnet with HTTP servers.",
              "policy": "allow",
              "protocol": "tcp",
              "destPort": 443,
              "destCidr": "192.168.1.0/24",
              "srcPort": "Any",
              "srcCidr": "Any",
              "syslogEnabled": false
            }
          ]
        },
        "type": "object",
        "properties": {
          "rules": {
            "description": "An ordered array of the firewall rules (not including the default rule)",
            "type": "array",
            "items": {
              "title": "Rule3",
              "type": "object",
              "properties": {
                "comment": {
                  "description": "Description of the rule (optional)",
                  "type": "string"
                },
                "policy": {
                  "description": "'allow' or 'deny' traffic specified by this rule",
                  "type": "string",
                  "required": true
                },
                "protocol": {
                  "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')",
                  "type": "string",
                  "required": true
                },
                "srcPort": {
                  "description": "Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'",
                  "type": "string"
                },
                "srcCidr": {
                  "description": "Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (FQDN not supported)",
                  "type": "string",
                  "required": true
                },
                "destPort": {
                  "description": "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'",
                  "type": "string"
                },
                "destCidr": {
                  "description": "Comma-separated list of destination IP address(es) (in IP or CIDR notation) or 'any' (FQDN not supported)",
                  "type": "string",
                  "required": true
                },
                "syslogEnabled": {
                  "description": "Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)",
                  "type": "boolean"
                }
              }
            }
          },
          "syslogDefaultRule": {
            "description": "Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)",
            "type": "boolean"
          }
        }
      },
      "Rule2": {
        "title": "Rule2",
        "type": "object",
        "properties": {
          "policy": {
            "title": "Policy",
            "description": "'Deny' traffic specified by this rule",
            "example": "deny",
            "type": "string",
            "enum": [
              "deny"
            ]
          },
          "type": {
            "title": "Type",
            "description": "Type of the L7 rule. One of: 'application', 'applicationCategory', 'host', 'port', 'ipRange'",
            "example": "application",
            "type": "string",
            "enum": [
              "application",
              "applicationCategory",
              "host",
              "port",
              "ipRange"
            ]
          },
          "value": {
            "description": "The 'value' of what you want to block. Format of 'value' varies depending on type of the rule. See sample request. The application categories and application ids can be retrieved from the the 'MX L7 application categories' endpoint. The countries follow the two-letter ISO 3166-1 alpha-2 format.",
            "type": "string"
          }
        }
      },
      "updateNetworkL7FirewallRules": {
        "title": "updateNetworkL7FirewallRules",
        "example": {
          "rules": [
            {
              "policy": "deny",
              "type": "application",
              "value": {
                "id": "meraki:layer7/application/67",
                "name": "Xbox LIVE"
              }
            },
            {
              "policy": "deny",
              "type": "applicationCategory",
              "value": {
                "id": "meraki:layer7/category/2",
                "name": "Blogging"
              }
            },
            {
              "policy": "deny",
              "type": "host",
              "value": "google.com"
            },
            {
              "policy": "deny",
              "type": "port",
              "value": "23"
            },
            {
              "policy": "deny",
              "type": "ipRange",
              "value": "10.11.12.00/24"
            },
            {
              "policy": "deny",
              "type": "ipRange",
              "value": "10.11.12.00/24:5555"
            },
            {
              "policy": "deny",
              "type": "blacklistedCountries",
              "value": [
                "AX",
                "CA"
              ]
            },
            {
              "policy": "deny",
              "type": "whitelistedCountries",
              "value": [
                "US"
              ]
            }
          ]
        },
        "type": "object",
        "properties": {
          "rules": {
            "description": "An ordered array of the MX L7 firewall rules",
            "type": "array",
            "items": {
              "title": "Rule2",
              "type": "object",
              "properties": {
                "policy": {
                  "title": "Policy",
                  "description": "'Deny' traffic specified by this rule",
                  "example": "deny",
                  "type": "string",
                  "enum": [
                    "deny"
                  ]
                },
                "type": {
                  "title": "Type",
                  "description": "Type of the L7 rule. One of: 'application', 'applicationCategory', 'host', 'port', 'ipRange'",
                  "example": "application",
                  "type": "string",
                  "enum": [
                    "application",
                    "applicationCategory",
                    "host",
                    "port",
                    "ipRange"
                  ]
                },
                "value": {
                  "description": "The 'value' of what you want to block. Format of 'value' varies depending on type of the rule. See sample request. The application categories and application ids can be retrieved from the the 'MX L7 application categories' endpoint. The countries follow the two-letter ISO 3166-1 alpha-2 format.",
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "updateNetworkL3FirewallRules": {
        "title": "updateNetworkL3FirewallRules",
        "example": {
          "rules": [
            {
              "comment": "Allow TCP traffic to subnet with HTTP servers.",
              "policy": "allow",
              "protocol": "tcp",
              "destPort": 443,
              "destCidr": "192.168.1.0/24",
              "srcPort": "Any",
              "srcCidr": "Any",
              "syslogEnabled": false
            }
          ]
        },
        "type": "object",
        "properties": {
          "rules": {
            "description": "An ordered array of the firewall rules (not including the default rule)",
            "type": "array",
            "items": {
              "title": "Rule",
              "type": "object",
              "properties": {
                "comment": {
                  "description": "Description of the rule (optional)",
                  "type": "string"
                },
                "policy": {
                  "description": "'allow' or 'deny' traffic specified by this rule",
                  "type": "string",
                  "required": true
                },
                "protocol": {
                  "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')",
                  "type": "string",
                  "required": true
                },
                "srcPort": {
                  "description": "Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'",
                  "type": "string"
                },
                "srcCidr": {
                  "description": "Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (note: FQDN not supported for source addresses)",
                  "type": "string",
                  "required": true
                },
                "destPort": {
                  "description": "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'",
                  "type": "string"
                },
                "destCidr": {
                  "description": "Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'",
                  "type": "string",
                  "required": true
                },
                "syslogEnabled": {
                  "description": "Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)",
                  "type": "boolean"
                }
              }
            }
          },
          "syslogDefaultRule": {
            "description": "Log the special default rule (boolean value - enable only if you've configured a syslog server) (optional)",
            "type": "boolean"
          }
        }
      },
      "DhcpOption": {
        "title": "DhcpOption",
        "type": "object",
        "properties": {
          "code": {
            "description": "The code for the DHCP option. This should be an integer between 2 and 254.",
            "type": "string",
            "required": true
          },
          "type": {
            "description": "The type for the DHCP option. One of: \"text\", \"ip\", \"hex\", or \"integer\".",
            "type": "string",
            "required": true
          },
          "value": {
            "description": "The value for the DHCP option",
            "type": "string",
            "required": true
          }
        }
      },
      "ReservedIpRange": {
        "title": "ReservedIpRange",
        "type": "object",
        "properties": {
          "start": {
            "description": "The first IP in the reserved range",
            "type": "string",
            "required": true
          },
          "end": {
            "description": "The last IP in the reserved range",
            "type": "string",
            "required": true
          },
          "comment": {
            "description": "A text comment for the reserved range",
            "type": "string",
            "required": true
          }
        }
      },
      "createNetworkVlan": {
        "title": "createNetworkVlan",
        "example": {
          "id": "1234",
          "name": "My VLAN",
          "subnet": "192.168.1.0/24",
          "applianceIp": "1.2.3.4"
        },
        "type": "object",
        "properties": {
          "id": {
            "description": "The VLAN ID of the new VLAN (must be between 1 and 4094)",
            "type": "string",
            "required": true
          },
          "name": {
            "description": "The name of the new VLAN",
            "type": "string",
            "required": true
          },
          "subnet": {
            "description": "The subnet of the VLAN",
            "type": "string",
            "required": true
          },
          "applianceIp": {
            "description": "The local IP of the appliance on the VLAN",
            "type": "string",
            "required": true
          }
        }
      },
      "BandwidthLimits6": {
        "title": "BandwidthLimits6",
        "description": "A mapping of uplinks ('wan1', 'wan2' or 'cellular') to their bandwidth settings (be sure to check which uplinks are supported for your network). Bandwidth setting objects have the following structure",
        "type": "object",
        "properties": {
          "limitUp": {
            "description": "The maximum upload limit (integer, in Kbps). null indicates no limit",
            "type": "integer",
            "format": "int32"
          },
          "limitDown": {
            "description": "The maximum download limit (integer, in Kbps). null indicates no limit",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "createNetworkStaticRoute": {
        "title": "createNetworkStaticRoute",
        "example": {
          "name": "My route",
          "subnet": "192.168.1.0/24",
          "gatewayIp": "1.2.3.5"
        },
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the new static route",
            "type": "string"
          },
          "subnet": {
            "description": "The subnet of the static route",
            "type": "string"
          },
          "gatewayIp": {
            "description": "The gateway IP (next hop) of the static route",
            "type": "string"
          }
        }
      },
      "updateNetworkFirewalledService": {
        "title": "updateNetworkFirewalledService",
        "example": {
          "access": "restricted",
          "allowedIps": [
            "123.123.123.1"
          ]
        },
        "type": "object",
        "properties": {
          "access": {
            "description": "A string indicating the rule for which IPs are allowed to use the specified service. Acceptable values are \"blocked\" (no remote IPs can access the service), \"restricted\" (only whitelisted IPs can access the service), and \"unrestriced\" (any remote IP can access the service). This field is required",
            "type": "string"
          },
          "allowedIps": {
            "description": "An array of whitelisted IPs that can access the service. This field is required if \"access\" is set to \"restricted\". Otherwise this field is ignored",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "updateNetworkTrafficShaping": {
        "title": "updateNetworkTrafficShaping",
        "example": {
          "defaultRulesEnabled": true,
          "rules": [
            {
              "definitions": [
                {
                  "type": "host",
                  "value": "google.com"
                },
                {
                  "type": "port",
                  "value": "9090"
                },
                {
                  "type": "ipRange",
                  "value": "192.1.0.0"
                },
                {
                  "type": "ipRange",
                  "value": "192.1.0.0/16"
                },
                {
                  "type": "ipRange",
                  "value": "10.1.0.0/16:80"
                },
                {
                  "type": "localNet",
                  "value": "192.168.0.0/16"
                },
                {
                  "type": "applicationCategory",
                  "value": {
                    "id": "meraki:layer7/category/2",
                    "name": "Blogging"
                  }
                },
                {
                  "type": "application",
                  "value": {
                    "id": "meraki:layer7/application/133",
                    "name": "Battle.net"
                  }
                }
              ],
              "perClientBandwidthLimits": {
                "settings": "custom",
                "bandwidthLimits": {
                  "limitUp": 1000000,
                  "limitDown": 1000000
                }
              },
              "dscpTagValue": null,
              "priority": "normal"
            }
          ]
        },
        "type": "object",
        "properties": {
          "defaultRulesEnabled": {
            "description": "Whether default traffic shaping rules are enabled (true) or disabled (false).\n    There are 4 default rules, which can\n    be seen on your network's traffic shaping page. Note that default rules\n    count against the rule limit of 8.",
            "type": "boolean"
          },
          "rules": {
            "description": "An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.",
            "type": "array",
            "items": {
              "title": "Rule7",
              "type": "object",
              "properties": {
                "definitions": {
                  "description": "A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.",
                  "type": "array",
                  "items": {
                    "title": "Definition",
                    "type": "object",
                    "properties": {
                      "type": {
                        "title": "Type1",
                        "description": "The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.",
                        "example": "application",
                        "type": "string",
                        "enum": [
                          "application",
                          "applicationCategory",
                          "host",
                          "port",
                          "ipRange",
                          "localNet"
                        ],
                        "required": true
                      },
                      "value": {
                        "description": "If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).",
                        "type": "string",
                        "required": true
                      }
                    }
                  },
                  "required": true
                },
                "perClientBandwidthLimits": {
                  "title": "PerClientBandwidthLimits",
                  "description": "An object describing the bandwidth settings for your rule.",
                  "type": "object",
                  "properties": {
                    "settings": {
                      "description": "How bandwidth limits are applied by your rule. Can be one of 'network default', 'ignore' or 'custom'.",
                      "type": "string"
                    },
                    "bandwidthLimits": {
                      "title": "BandwidthLimits1",
                      "description": "The bandwidth limits object, specifying the upload ('limitUp') and download ('limitDown') speed in Kbps. These are only enforced if 'settings' is set to 'custom'.",
                      "type": "object",
                      "properties": {
                        "limitUp": {
                          "description": "The maximum upload limit (integer, in Kbps).",
                          "type": "integer",
                          "format": "int32"
                        },
                        "limitDown": {
                          "description": "The maximum download limit (integer, in Kbps).",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    }
                  }
                },
                "dscpTagValue": {
                  "description": "The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.",
                  "type": "integer",
                  "format": "int32"
                },
                "priority": {
                  "description": "A string, indicating the priority level for packets bound to your rule.\n    Can be 'low', 'normal' or 'high'.",
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Server": {
        "title": "Server",
        "type": "object",
        "properties": {
          "host": {
            "description": "The IP address of the syslog server",
            "type": "string",
            "required": true
          },
          "port": {
            "description": "The port of the syslog server",
            "type": "integer",
            "format": "int32",
            "required": true
          },
          "roles": {
            "description": "A list of roles for the syslog server. Options (case-insensitive): 'Wireless event log', 'Appliance event log', 'Switch event log', 'Air Marshal events', 'Flows', 'URLs', 'IDS alerts', 'Security events'",
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": true
          }
        }
      },
      "createNetworkSwitchStack": {
        "title": "createNetworkSwitchStack",
        "example": {
          "name": "A cool stack",
          "serials": [
            "QBZY-XWVU-TSRQ",
            "QBAB-CDEF-GHIJ"
          ]
        },
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the new stack",
            "type": "string",
            "required": true
          },
          "serials": {
            "description": "An array of switch serials to be added into the new stack",
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": true
          }
        }
      },
      "PowerType": {
        "title": "PowerType",
        "description": "Per switch exception (combined, redundant, useNetworkSetting)",
        "example": "combined",
        "type": "string",
        "enum": [
          "combined",
          "redundant",
          "useNetworkSetting"
        ],
        "required": true
      },
      "updateNetworkSwitchSettings": {
        "title": "updateNetworkSwitchSettings",
        "example": {
          "useCombinedPower": false,
          "powerExceptions": [
            {
              "serial": "Q234-ABCD-0001",
              "powerType": "redundant"
            },
            {
              "serial": "Q234-ABCD-0002",
              "powerType": "combined"
            },
            {
              "serial": "Q234-ABCD-0003",
              "powerType": "redundant"
            },
            {
              "serial": "Q234-ABCD-0004",
              "powerType": "useNetworkSetting"
            }
          ]
        },
        "type": "object",
        "properties": {
          "useCombinedPower": {
            "description": "The use Combined Power as the default behavior of secondary power supplies on supported devices.",
            "type": "boolean"
          },
          "powerExceptions": {
            "description": "Exceptions on a per switch basis to \"useCombinedPower\"",
            "type": "array",
            "items": {
              "title": "PowerException",
              "type": "object",
              "properties": {
                "serial": {
                  "description": "Serial number of the switch",
                  "type": "string",
                  "required": true
                },
                "powerType": {
                  "title": "PowerType",
                  "description": "Per switch exception (combined, redundant, useNetworkSetting)",
                  "example": "combined",
                  "type": "string",
                  "enum": [
                    "combined",
                    "redundant",
                    "useNetworkSetting"
                  ],
                  "required": true
                }
              }
            }
          }
        }
      },
      "BandSelection": {
        "title": "BandSelection",
        "description": "The client-serving radio frequencies. ('Dual band operation', '5 GHz band only' or 'Dual band operation with Band Steering')",
        "example": "Dual band operation",
        "type": "string",
        "enum": [
          "Dual band operation",
          "5 GHz band only",
          "Dual band operation with Band Steering"
        ]
      },
      "ApTagsAndVlanId": {
        "title": "ApTagsAndVlanId",
        "type": "object",
        "properties": {
          "tags": {
            "description": "Comma-separated list of AP tags",
            "type": "string"
          },
          "vlanId": {
            "description": "Numerical identifier that is assigned to the VLAN",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RadiusAccountingServer": {
        "title": "RadiusAccountingServer",
        "type": "object",
        "properties": {
          "host": {
            "description": "IP address to which the APs will send RADIUS accounting messages",
            "type": "string"
          },
          "port": {
            "description": "Port on the RADIUS server that is listening for accounting messages",
            "type": "integer",
            "format": "int32"
          },
          "secret": {
            "description": "Shared key used to authenticate messages between the APs and RADIUS server",
            "type": "string"
          }
        }
      },
      "RadiusLoadBalancingPolicy": {
        "title": "RadiusLoadBalancingPolicy",
        "description": "This policy determines which RADIUS server will be contacted first in an authentication attempt and the ordering of any necessary retry attempts ('Strict priority order' or 'Round robin')",
        "example": "Strict priority order",
        "type": "string",
        "enum": [
          "Strict priority order",
          "Round robin"
        ]
      },
      "RadiusFailoverPolicy": {
        "title": "RadiusFailoverPolicy",
        "description": "This policy determines how authentication requests should be handled in the event that all of the configured RADIUS servers are unreachable ('Deny access' or 'Allow access')",
        "example": "Deny access",
        "type": "string",
        "enum": [
          "Deny access",
          "Allow access"
        ]
      },
      "RadiusServer": {
        "title": "RadiusServer",
        "type": "object",
        "properties": {
          "host": {
            "description": "IP address of your RADIUS server",
            "type": "string"
          },
          "port": {
            "description": "UDP port the RADIUS server listens on for Access-requests",
            "type": "integer",
            "format": "int32"
          },
          "secret": {
            "description": "RADIUS client shared secret",
            "type": "string"
          }
        }
      },
      "WpaEncryptionMode": {
        "title": "WpaEncryptionMode",
        "description": "The types of WPA encryption. ('WPA1 and WPA2' or 'WPA2 only')",
        "example": "WPA1 and WPA2",
        "type": "string",
        "enum": [
          "WPA1 and WPA2",
          "WPA2 only"
        ]
      },
      "EncryptionMode": {
        "title": "EncryptionMode",
        "description": "The psk encryption mode for the SSID ('wpa', 'wep' or 'wpa-eap')",
        "example": "wpa",
        "type": "string",
        "enum": [
          "wpa",
          "wep",
          "wpa-eap"
        ]
      },
      "updateNetworkSsidSplashSettings": {
        "title": "updateNetworkSsidSplashSettings",
        "example": {
          "splashUrl": "https://www.custom_splash_url.com",
          "useSplashUrl": true
        },
        "type": "object",
        "properties": {
          "splashUrl": {
            "description": "The custom splash URL of the click-through splash page. Optional. Note that the URL can be configured without necessarily being used. In order to enable the custom URL, see 'useSplashUrl'",
            "type": "string"
          },
          "useSplashUrl": {
            "description": "Boolean indicating whether the user will be redirected to the custom splash url. A custom splash URL must be set if this is true. Optional. Note that depending on your SSID's access control settings, it may not be possible to use the custom splash URL.",
            "type": "boolean"
          }
        }
      },
      "V3PrivMode": {
        "title": "V3PrivMode",
        "description": "The SNMP version 3 privacy mode. Can be either 'DES' or 'AES128'.",
        "example": "DES",
        "type": "string",
        "enum": [
          "DES",
          "AES128"
        ]
      },
      "V3AuthMode": {
        "title": "V3AuthMode",
        "description": "The SNMP version 3 authentication mode. Can be either 'MD5' or 'SHA'.",
        "example": "MD5",
        "type": "string",
        "enum": [
          "MD5",
          "SHA"
        ]
      },
      "User": {
        "title": "User",
        "type": "object",
        "properties": {
          "username": {
            "description": "The username for the SNMP user. Required.",
            "type": "string",
            "required": true
          },
          "passphrase": {
            "description": "The passphrase for the SNMP user. Required.",
            "type": "string",
            "required": true
          }
        }
      },
      "Access": {
        "title": "Access",
        "description": "The type of SNMP access. Can be one of 'none' (disabled), 'community' (V1/V2c), or 'users' (V3).",
        "example": "none",
        "type": "string",
        "enum": [
          "none",
          "community",
          "users"
        ]
      },
      "updateNetworkVlan": {
        "title": "updateNetworkVlan",
        "example": {
          "name": "My VLAN",
          "applianceIp": "1.2.3.4",
          "subnet": "192.168.1.0/24",
          "fixedIpAssignments": {
            "22:33:44:55:66:77": {
              "ip": "1.2.3.4",
              "name": "Some client name"
            }
          },
          "reservedIpRanges": [
            {
              "start": "192.168.1.0",
              "end": "192.168.1.1",
              "comment": "A reserved IP range"
            }
          ],
          "dnsNameservers": "google_dns",
          "dhcpHandling": "Run a DHCP server",
          "dhcpLeaseTime": "1 day",
          "dhcpBootOptionsEnabled": false,
          "dhcpBootNextServer": null,
          "dhcpBootFilename": null,
          "dhcpOptions": [
            {
              "code": 5,
              "type": "text",
              "value": "five"
            }
          ]
        },
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the VLAN",
            "type": "string"
          },
          "subnet": {
            "description": "The subnet of the VLAN",
            "type": "string"
          },
          "applianceIp": {
            "description": "The local IP of the appliance on the VLAN",
            "type": "string"
          },
          "vpnNatSubnet": {
            "description": "The translated VPN subnet if VPN and VPN subnet translation are enabled on the VLAN",
            "type": "string"
          },
          "dhcpHandling": {
            "description": "The appliance's handling of DHCP requests on this VLAN. One of: \"Run a DHCP server\", \"Relay DHCP to another server\", or \"Do not respond to DHCP requests\"",
            "type": "string"
          },
          "dhcpRelayServerIps": {
            "description": "The IPs of the DHCP servers that DHCP requests should be relayed to",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dhcpLeaseTime": {
            "description": "The term of DHCP leases if the appliance is running a DHCP server on this VLAN. One of: \"30 minutes\", \"1 hour\", \"4 hours\", \"12 hours\", \"1 day\", \"1 week\".",
            "type": "string"
          },
          "dhcpBootOptionsEnabled": {
            "description": "Use DHCP boot options specified in other properties",
            "type": "boolean"
          },
          "dhcpBootNextServer": {
            "description": "DHCP boot option to direct boot clients to the server to load the boot file from",
            "type": "string"
          },
          "dhcpBootFilename": {
            "description": "DHCP boot option for boot filename",
            "type": "string"
          },
          "fixedIpAssignments": {
            "description": "The DHCP fixed IP assignments on the VLAN. This should be an object that contains mappings from MAC addresses to objects that themselves each contain \"ip\" and \"name\" string fields. See the sample request/response for more details.",
            "type": "object"
          },
          "reservedIpRanges": {
            "description": "The DHCP reserved IP ranges on the VLAN",
            "type": "array",
            "items": {
              "title": "ReservedIpRange",
              "type": "object",
              "properties": {
                "start": {
                  "description": "The first IP in the reserved range",
                  "type": "string",
                  "required": true
                },
                "end": {
                  "description": "The last IP in the reserved range",
                  "type": "string",
                  "required": true
                },
                "comment": {
                  "description": "A text comment for the reserved range",
                  "type": "string",
                  "required": true
                }
              }
            }
          },
          "dnsNameservers": {
            "description": "The DNS nameservers used for DHCP responses, either \"upstream_dns\", \"google_dns\", \"opendns\", or a newline seperated string of IP addresses or domain names",
            "type": "string"
          },
          "dhcpOptions": {
            "description": "The list of DHCP options that will be included in DHCP responses. Each object in the list should have \"code\", \"type\", and \"value\" properties.",
            "type": "array",
            "items": {
              "title": "DhcpOption",
              "type": "object",
              "properties": {
                "code": {
                  "description": "The code for the DHCP option. This should be an integer between 2 and 254.",
                  "type": "string",
                  "required": true
                },
                "type": {
                  "description": "The type for the DHCP option. One of: \"text\", \"ip\", \"hex\", or \"integer\".",
                  "type": "string",
                  "required": true
                },
                "value": {
                  "description": "The value for the DHCP option",
                  "type": "string",
                  "required": true
                }
              }
            }
          }
        }
      },
      "generateNetworkCameraSnapshot": {
        "title": "generateNetworkCameraSnapshot",
        "example": {},
        "type": "object",
        "properties": {
          "timestamp": {
            "description": "[optional] The snapshot will be taken from this time on the camera. The timestamp is expected to be in ISO 8601 format. If no timestamp is specified, we will assume current time.",
            "type": "string"
          }
        }
      },
      "IpsecPolicies": {
        "title": "IpsecPolicies",
        "description": "Custom IPSec policies for the VPN peer. If not included and a preset has not been chosen, the default preset for IPSec policies will be used.",
        "type": "object",
        "properties": {
          "ikeCipherAlgo": {
            "description": "This is the cipher algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des'",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ikeAuthAlgo": {
            "description": "This is the authentication algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'sha1', 'md5'",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ikeDiffieHellmanGroup": {
            "description": "This is the Diffie-Hellman group to be used in Phase 1. The value should be an array with one of the following algorithms: 'group5', 'group2', 'group1'",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ikeLifetime": {
            "description": "The lifetime of the Phase 1 SA in seconds.",
            "type": "integer",
            "format": "int32"
          },
          "childCipherAlgo": {
            "description": "This is the cipher algorithms to be used in Phase 2. The value should be an array with one or more of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des', 'null'",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "childAuthAlgo": {
            "description": "This is the authentication algorithms to be used in Phase 2. The value should be an array with one of the following algorithms: 'sha1', 'md5'",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "childPfsGroup": {
            "description": "This is the Diffie-Hellman group to be used for Perfect Forward Secrecy in Phase 2. The value should be an array with one of the following values: 'disabled', 'group5', 'group2', 'group1'",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "childLifetime": {
            "description": "The lifetime of the Phase 2 SA in seconds.",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "updateNetworkVlansEnabledState": {
        "title": "updateNetworkVlansEnabledState",
        "example": {
          "enabled": true
        },
        "type": "object",
        "properties": {
          "enabled": {
            "description": "Boolean indicating whether to enable (true) or disable (false) VLANs for the network",
            "type": "boolean",
            "required": true
          }
        }
      },
      "updateNetworkUplinkSettings": {
        "title": "updateNetworkUplinkSettings",
        "example": {
          "bandwidthLimits": {
            "wan1": {
              "limitUp": 1000000,
              "limitDown": 1000000
            },
            "wan2": {
              "limitUp": 1000000,
              "limitDown": 1000000
            },
            "cellular": {
              "limitUp": 51200,
              "limitDown": 51200
            }
          }
        },
        "type": "object",
        "properties": {
          "bandwidthLimits": {
            "title": "BandwidthLimits6",
            "description": "A mapping of uplinks ('wan1', 'wan2' or 'cellular') to their bandwidth settings (be sure to check which uplinks are supported for your network). Bandwidth setting objects have the following structure",
            "type": "object",
            "properties": {
              "limitUp": {
                "description": "The maximum upload limit (integer, in Kbps). null indicates no limit",
                "type": "integer",
                "format": "int32"
              },
              "limitDown": {
                "description": "The maximum download limit (integer, in Kbps). null indicates no limit",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        }
      },
      "updateNetworkPortForwardingRules": {
        "title": "updateNetworkPortForwardingRules",
        "example": {
          "rules": [
            {
              "lanIp": "192.168.128.1",
              "allowedIps": [
                "any"
              ],
              "name": "Description of Port Forwarding Rule",
              "protocol": "tcp",
              "publicPort": "8100-8101",
              "localPort": "442-443",
              "uplink": "both"
            }
          ]
        },
        "type": "object",
        "properties": {
          "rules": {
            "description": "An array of port forwarding params",
            "type": "array",
            "items": {
              "title": "Rule11",
              "type": "object",
              "properties": {
                "name": {
                  "description": "A descriptive name for the rule",
                  "type": "string"
                },
                "lanIp": {
                  "description": "The IP address of the server or device that hosts the internal resource that you wish to make available on the WAN",
                  "type": "string"
                },
                "uplink": {
                  "description": "The physical WAN interface on which the traffic will arrive ('internet1' or, if available, 'internet2' or 'both')",
                  "type": "string"
                },
                "publicPort": {
                  "description": "A port or port ranges that will be forwarded to the host on the LAN",
                  "type": "string"
                },
                "localPort": {
                  "description": "A port or port ranges that will receive the forwarded traffic from the WAN",
                  "type": "string"
                },
                "allowedIps": {
                  "description": "An array of ranges of WAN IP addresses that are allowed to make inbound connections on the specified ports or port ranges (or any)",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "protocol": {
                  "description": "TCP or UDP",
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "updateNetworkOneToOneNatRules": {
        "title": "updateNetworkOneToOneNatRules",
        "example": {
          "rules": [
            {
              "name": "Service behind NAT",
              "lanIp": "192.168.128.22",
              "publicIp": "146.12.3.33",
              "uplink": "internet1",
              "allowedInbound": [
                {
                  "protocol": "tcp",
                  "destinationPorts": [
                    "80"
                  ],
                  "allowedIps": [
                    "10.82.112.0/24",
                    "10.82.0.0/16"
                  ]
                },
                {
                  "protocol": "udp",
                  "destinationPorts": [
                    "8080"
                  ],
                  "allowedIps": [
                    "10.81.110.5",
                    "10.81.0.0/16"
                  ]
                }
              ]
            }
          ]
        },
        "type": "object",
        "properties": {
          "rules": {
            "description": "An array of 1:1 nat rules",
            "type": "array",
            "items": {
              "title": "Rule10",
              "type": "object",
              "properties": {
                "name": {
                  "description": "A descriptive name for the rule",
                  "type": "string"
                },
                "publicIp": {
                  "description": "The IP address that will be used to access the internal resource from the WAN",
                  "type": "string"
                },
                "lanIp": {
                  "description": "The IP address of the server or device that hosts the internal resource that you wish to make available on the WAN",
                  "type": "string"
                },
                "uplink": {
                  "description": "The physical WAN interface on which the traffic will arrive ('internet1' or, if available, 'internet2')",
                  "type": "string"
                },
                "allowedInbound": {
                  "description": "The ports this mapping will provide access on, and the remote IPs that will be allowed access to the resource",
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "protocol": {
                  "description": "Either of the following: 'tcp', 'udp', 'icmp-ping' or 'any'",
                  "type": "string"
                },
                "destinationPorts": {
                  "description": "An array of ports or port ranges that will be forwarded to the host on the LAN",
                  "type": "string"
                },
                "allowedIps": {
                  "description": "An array of ranges of WAN IP addresses that are allowed to make inbound connections on the specified ports or port ranges, or 'any'",
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "updateNetworkOneToManyNatRules": {
        "title": "updateNetworkOneToManyNatRules",
        "example": {
          "rules": [
            {
              "publicIp": "146.11.11.13",
              "uplink": "internet1",
              "portRules": [
                {
                  "name": "Rule 1",
                  "protocol": "tcp",
                  "publicPort": "9443",
                  "localIp": "192.168.128.1",
                  "localPort": "443",
                  "allowedIps": [
                    "any"
                  ]
                },
                {
                  "name": "Rule 2",
                  "protocol": "tcp",
                  "publicPort": "8080",
                  "localIp": "192.168.128.1",
                  "localPort": "80",
                  "allowedIps": [
                    "10.82.110.0/24",
                    "10.82.111.0/24"
                  ]
                }
              ]
            }
          ]
        },
        "type": "object",
        "properties": {
          "rules": {
            "description": "An array of 1:Many nat rules",
            "type": "array",
            "items": {
              "title": "Rule9",
              "type": "object",
              "properties": {
                "publicIp": {
                  "description": "The IP address that will be used to access the internal resource from the WAN",
                  "type": "string"
                },
                "uplink": {
                  "description": "The physical WAN interface on which the traffic will arrive ('internet1' or, if available, 'internet2')",
                  "type": "string"
                },
                "portRules": {
                  "description": "An array of associated forwarding rules",
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "name": {
                  "description": "A description of the rule",
                  "type": "string"
                },
                "protocol": {
                  "description": "'tcp' or 'udp'",
                  "type": "string"
                },
                "publicPort": {
                  "description": "Destination port of the traffic that is arriving on the WAN",
                  "type": "string"
                },
                "localIp": {
                  "description": "Local IP address to which traffic will be forwarded",
                  "type": "string"
                },
                "localPort": {
                  "description": "Destination port of the forwarded traffic that will be sent from the MX to the specified host on the LAN. If you simply wish to forward the traffic without translating the port, this should be the same as the Public port",
                  "type": "string"
                },
                "allowedIps": {
                  "description": "Remote IP addresses or ranges that are permitted to access the internal resource via this port forwarding rule, or 'any'",
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "updateNetworkSyslogServers": {
        "title": "updateNetworkSyslogServers",
        "example": {
          "servers": [
            {
              "host": "1.2.3.4",
              "port": 443,
              "roles": [
                "Wireless event log",
                "URLs"
              ]
            }
          ]
        },
        "type": "object",
        "properties": {
          "servers": {
            "description": "A list of the syslog servers for this network",
            "type": "array",
            "items": {
              "title": "Server",
              "type": "object",
              "properties": {
                "host": {
                  "description": "The IP address of the syslog server",
                  "type": "string",
                  "required": true
                },
                "port": {
                  "description": "The port of the syslog server",
                  "type": "integer",
                  "format": "int32",
                  "required": true
                },
                "roles": {
                  "description": "A list of roles for the syslog server. Options (case-insensitive): 'Wireless event log', 'Appliance event log', 'Switch event log', 'Air Marshal events', 'Flows', 'URLs', 'IDS alerts', 'Security events'",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "required": true
                }
              }
            },
            "required": true
          }
        }
      },
      "removeNetworkSwitchStack": {
        "title": "removeNetworkSwitchStack",
        "example": {
          "serial": "QBZY-XWVU-TSRQ"
        },
        "type": "object",
        "properties": {
          "serial": {
            "description": "The serial of the switch to be removed",
            "type": "string",
            "required": true
          }
        }
      },
      "addNetworkSwitchStack": {
        "title": "addNetworkSwitchStack",
        "example": {
          "serial": "QBZY-XWVU-TSRQ"
        },
        "type": "object",
        "properties": {
          "serial": {
            "description": "The serial of the switch to be added",
            "type": "string",
            "required": true
          }
        }
      },
      "PowerException": {
        "title": "PowerException",
        "type": "object",
        "properties": {
          "serial": {
            "description": "Serial number of the switch",
            "type": "string",
            "required": true
          },
          "powerType": {
            "title": "PowerType",
            "description": "Per switch exception (combined, redundant, useNetworkSetting)",
            "example": "combined",
            "type": "string",
            "enum": [
              "combined",
              "redundant",
              "useNetworkSetting"
            ],
            "required": true
          }
        }
      },
      "AllowedUrl": {
        "title": "AllowedUrl",
        "type": "object",
        "properties": {
          "url": {
            "description": "The url to whitelist",
            "type": "string"
          },
          "comment": {
            "description": "Comment about the whitelisted entity",
            "type": "string"
          }
        }
      },
      "updateOrganizationSecurityIntrusionSettings": {
        "title": "updateOrganizationSecurityIntrusionSettings",
        "example": {
          "whitelistedRules": [
            {
              "ruleId": "meraki:intrusion/snort/GID/01/SID/688",
              "message": "SQL sa login failed"
            },
            {
              "ruleId": "meraki:intrusion/snort/GID/01/SID/5805",
              "message": "MALWARE-OTHER Trackware myway speedbar runtime detection - switch engines"
            }
          ]
        },
        "type": "object",
        "properties": {
          "whitelistedRules": {
            "description": "Sets a list of specific SNORT® signatures to whitelist",
            "type": "array",
            "items": {
              "title": "WhitelistedRule",
              "type": "object",
              "properties": {
                "ruleId": {
                  "description": "A rule identifier of the format meraki:intrusion/snort/GID/<gid>/SID/<sid>. gid and sid can be obtained from either https://www.snort.org/rule-docs or as ruleIds from the security events in /organization/[orgId]/securityEvents",
                  "type": "string",
                  "required": true
                },
                "message": {
                  "description": "Message is optional and is ignored on a PUT call. It is allowed in order for PUT to be compatible with GET",
                  "type": "string"
                }
              }
            },
            "required": true
          }
        }
      },
      "Alert": {
        "title": "Alert",
        "type": "object",
        "properties": {
          "type": {
            "description": "The type of alert",
            "type": "string"
          },
          "enabled": {
            "description": "A boolean depicting if the alert is turned on or off",
            "type": "boolean"
          },
          "alertDestinations": {
            "description": "A hash of destinations for this specific alert. Keys include: emails: A list of emails that will recieve information about the alert, allAdmins: If true, then all network admins will receive emails, and snmp: If true, then an SNMP trap will be sent if there is an SNMP trap server configured for this network.",
            "type": "object"
          },
          "filters": {
            "description": "A hash of specific configuration data for the alert. Only filters specific to the alert will be updated.",
            "type": "object"
          }
        }
      },
      "updateNetworkDeviceWirelessRadioSettings": {
        "title": "updateNetworkDeviceWirelessRadioSettings",
        "example": {
          "rfProfileId": "1234"
        },
        "type": "object",
        "properties": {
          "rfProfileId": {
            "description": "The ID of an RF profile to assign to the device. If the value of this parameter is null, the appropriate basic RF profile\n(indoor or outdoor) will be assigned to the device. Assigning an RF profile will clear ALL manually configured overrides\non the device (channel width, channel, power).",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "claimNetworkDevices": {
        "title": "claimNetworkDevices",
        "example": {
          "serial": "Q234-ABCD-5678"
        },
        "type": "object",
        "properties": {
          "serial": {
            "description": "The serial of a device",
            "type": "string",
            "required": true
          }
        }
      },
      "Rule9": {
        "title": "Rule9",
        "type": "object",
        "properties": {
          "publicIp": {
            "description": "The IP address that will be used to access the internal resource from the WAN",
            "type": "string"
          },
          "uplink": {
            "description": "The physical WAN interface on which the traffic will arrive ('internet1' or, if available, 'internet2')",
            "type": "string"
          },
          "portRules": {
            "description": "An array of associated forwarding rules",
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "name": {
            "description": "A description of the rule",
            "type": "string"
          },
          "protocol": {
            "description": "'tcp' or 'udp'",
            "type": "string"
          },
          "publicPort": {
            "description": "Destination port of the traffic that is arriving on the WAN",
            "type": "string"
          },
          "localIp": {
            "description": "Local IP address to which traffic will be forwarded",
            "type": "string"
          },
          "localPort": {
            "description": "Destination port of the forwarded traffic that will be sent from the MX to the specified host on the LAN. If you simply wish to forward the traffic without translating the port, this should be the same as the Public port",
            "type": "string"
          },
          "allowedIps": {
            "description": "Remote IP addresses or ranges that are permitted to access the internal resource via this port forwarding rule, or 'any'",
            "type": "string"
          }
        }
      },
      "updateDeviceSwitchPort": {
        "title": "updateDeviceSwitchPort",
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the switch port",
            "type": "string"
          },
          "tags": {
            "description": "The tags of the switch port",
            "type": "string"
          },
          "enabled": {
            "description": "The status of the switch port",
            "type": "string"
          },
          "type": {
            "description": "The type of the switch port (\"access\" or \"trunk\")",
            "type": "string"
          },
          "vlan": {
            "description": "The VLAN of the switch port",
            "type": "string"
          },
          "voiceVlan": {
            "description": "The voice VLAN of the switch port. Only applicable to access ports.",
            "type": "string"
          },
          "allowedVlans": {
            "description": "The VLANs allowed on the switch port. Only applicable to trunk ports.",
            "type": "string"
          },
          "poeEnabled": {
            "description": "The PoE status of the switch port",
            "type": "string"
          },
          "isolationEnabled": {
            "description": "The isolation status of the switch port",
            "type": "string"
          },
          "rstpEnabled": {
            "description": "The rapid spanning tree protocol status",
            "type": "string"
          },
          "stpGuard": {
            "description": "The state of the STP guard (\"disabled\", \"Root guard\", \"BPDU guard\", \"Loop guard\")",
            "type": "string"
          },
          "accessPolicyNumber": {
            "description": "The number of the access policy of the switch port. Only applicable to access ports.",
            "type": "string"
          },
          "linkNegotiation": {
            "description": "The link speed for the switch port",
            "type": "string"
          }
        }
      },
      "SplashPage": {
        "title": "SplashPage",
        "description": "The type of splash page for the SSID ('None', 'Click-through splash page', 'Billing', 'Password-protected with Meraki RADIUS', 'Password-protected with custom RADIUS', 'Password-protected with Active Directory', 'Password-protected with LDAP', 'SMS authentication', 'Systems Manager Sentry', 'Facebook Wi-Fi', 'Google OAuth' or 'Sponsored guest'). This attribute is not supported for template children.",
        "example": "None",
        "type": "string",
        "enum": [
          "None",
          "Click-through splash page",
          "Billing",
          "Password-protected with Meraki RADIUS",
          "Password-protected with custom RADIUS",
          "Password-protected with Active Directory",
          "Password-protected with LDAP",
          "SMS authentication",
          "Systems Manager Sentry",
          "Facebook Wi-Fi",
          "Google OAuth",
          "Sponsored guest"
        ]
      },
      "Subnet": {
        "title": "Subnet",
        "type": "object",
        "properties": {
          "localSubnet": {
            "description": "The CIDR notation subnet used within the VPN",
            "type": "string",
            "required": true
          },
          "useVpn": {
            "description": "Indicates the presence of the subnet in the VPN",
            "type": "boolean"
          }
        }
      },
      "updateNetworkSsid": {
        "title": "updateNetworkSsid",
        "example": {
          "name": "My SSID",
          "enabled": true
        },
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of an SSID",
            "type": "string"
          },
          "enabled": {
            "description": "Whether or not an SSID is enabled",
            "type": "boolean"
          },
          "authMode": {
            "title": "AuthMode",
            "description": "The association control method for the SSID ('open', 'psk', 'open-with-radius', '8021x-meraki' or '8021x-radius')",
            "example": "open",
            "type": "string",
            "enum": [
              "open",
              "psk",
              "open-with-radius",
              "8021x-meraki",
              "8021x-radius"
            ]
          },
          "encryptionMode": {
            "title": "EncryptionMode",
            "description": "The psk encryption mode for the SSID ('wpa', 'wep' or 'wpa-eap')",
            "example": "wpa",
            "type": "string",
            "enum": [
              "wpa",
              "wep",
              "wpa-eap"
            ]
          },
          "psk": {
            "description": "The passkey for the SSID. This param is only valid if the authMode is 'psk'",
            "type": "string"
          },
          "wpaEncryptionMode": {
            "title": "WpaEncryptionMode",
            "description": "The types of WPA encryption. ('WPA1 and WPA2' or 'WPA2 only')",
            "example": "WPA1 and WPA2",
            "type": "string",
            "enum": [
              "WPA1 and WPA2",
              "WPA2 only"
            ]
          },
          "splashPage": {
            "title": "SplashPage",
            "description": "The type of splash page for the SSID ('None', 'Click-through splash page', 'Billing', 'Password-protected with Meraki RADIUS', 'Password-protected with custom RADIUS', 'Password-protected with Active Directory', 'Password-protected with LDAP', 'SMS authentication', 'Systems Manager Sentry', 'Facebook Wi-Fi', 'Google OAuth' or 'Sponsored guest'). This attribute is not supported for template children.",
            "example": "None",
            "type": "string",
            "enum": [
              "None",
              "Click-through splash page",
              "Billing",
              "Password-protected with Meraki RADIUS",
              "Password-protected with custom RADIUS",
              "Password-protected with Active Directory",
              "Password-protected with LDAP",
              "SMS authentication",
              "Systems Manager Sentry",
              "Facebook Wi-Fi",
              "Google OAuth",
              "Sponsored guest"
            ]
          },
          "radiusServers": {
            "description": "The RADIUS 802.1x servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius'",
            "type": "array",
            "items": {
              "title": "RadiusServer",
              "type": "object",
              "properties": {
                "host": {
                  "description": "IP address of your RADIUS server",
                  "type": "string"
                },
                "port": {
                  "description": "UDP port the RADIUS server listens on for Access-requests",
                  "type": "integer",
                  "format": "int32"
                },
                "secret": {
                  "description": "RADIUS client shared secret",
                  "type": "string"
                }
              }
            }
          },
          "radiusCoaEnabled": {
            "description": "If true, Meraki devices will act as a RADIUS Dynamic Authorization Server and will respond to RADIUS Change-of-Authorization and Disconnect messages sent by the RADIUS server.",
            "type": "boolean"
          },
          "radiusFailoverPolicy": {
            "title": "RadiusFailoverPolicy",
            "description": "This policy determines how authentication requests should be handled in the event that all of the configured RADIUS servers are unreachable ('Deny access' or 'Allow access')",
            "example": "Deny access",
            "type": "string",
            "enum": [
              "Deny access",
              "Allow access"
            ]
          },
          "radiusLoadBalancingPolicy": {
            "title": "RadiusLoadBalancingPolicy",
            "description": "This policy determines which RADIUS server will be contacted first in an authentication attempt and the ordering of any necessary retry attempts ('Strict priority order' or 'Round robin')",
            "example": "Strict priority order",
            "type": "string",
            "enum": [
              "Strict priority order",
              "Round robin"
            ]
          },
          "radiusAccountingEnabled": {
            "description": "Whether or not RADIUS accounting is enabled. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius'",
            "type": "boolean"
          },
          "radiusAccountingServers": {
            "description": "The RADIUS accounting 802.1x servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius' and radiusAccountingEnabled is 'true'",
            "type": "array",
            "items": {
              "title": "RadiusAccountingServer",
              "type": "object",
              "properties": {
                "host": {
                  "description": "IP address to which the APs will send RADIUS accounting messages",
                  "type": "string"
                },
                "port": {
                  "description": "Port on the RADIUS server that is listening for accounting messages",
                  "type": "integer",
                  "format": "int32"
                },
                "secret": {
                  "description": "Shared key used to authenticate messages between the APs and RADIUS server",
                  "type": "string"
                }
              }
            }
          },
          "ipAssignmentMode": {
            "title": "IpAssignmentMode",
            "description": "The client IP assignment mode ('NAT mode', 'Bridge mode', 'Layer 3 roaming', 'Layer 3 roaming with a concentrator' or 'VPN')",
            "example": "NAT mode",
            "type": "string",
            "enum": [
              "NAT mode",
              "Bridge mode",
              "Layer 3 roaming",
              "Layer 3 roaming with a concentrator",
              "VPN"
            ]
          },
          "useVlanTagging": {
            "description": "Direct trafic to use specific VLANs. This param is only valid with 'Bridge mode' and 'Layer 3 roaming'",
            "type": "boolean"
          },
          "concentratorNetworkId": {
            "description": "The concentrator to use for 'Layer 3 roaming with a concentrator' or 'VPN'.",
            "type": "string"
          },
          "vlanId": {
            "description": "The VLAN ID used for VLAN tagging. This param is only valid with 'Layer 3 roaming with a concentrator' and 'VPN'",
            "type": "integer",
            "format": "int32"
          },
          "defaultVlanId": {
            "description": "The default VLAN ID used for 'all other APs'. This param is only valid with 'Bridge mode' and 'Layer 3 roaming'",
            "type": "integer",
            "format": "int32"
          },
          "apTagsAndVlanIds": {
            "description": "The list of tags and VLAN IDs used for VLAN tagging. This param is only valid with 'Bridge mode', 'Layer 3 roaming'",
            "type": "array",
            "items": {
              "title": "ApTagsAndVlanId",
              "type": "object",
              "properties": {
                "tags": {
                  "description": "Comma-separated list of AP tags",
                  "type": "string"
                },
                "vlanId": {
                  "description": "Numerical identifier that is assigned to the VLAN",
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "walledGardenEnabled": {
            "description": "Allow access to a configurable list of IP ranges, which users may access prior to sign-on.",
            "type": "boolean"
          },
          "walledGardenRanges": {
            "description": "Specify your walled garden by entering space-separated addresses, ranges using CIDR notation, domain names, and domain wildcards (e.g. 192.168.1.1/24 192.168.37.10/32 www.yahoo.com *.google.com). Meraki's splash page is automatically included in your walled garden.",
            "type": "string"
          },
          "minBitrate": {
            "description": "The minimum bitrate in Mbps. ('1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54')",
            "type": "number",
            "format": "double"
          },
          "bandSelection": {
            "title": "BandSelection",
            "description": "The client-serving radio frequencies. ('Dual band operation', '5 GHz band only' or 'Dual band operation with Band Steering')",
            "example": "Dual band operation",
            "type": "string",
            "enum": [
              "Dual band operation",
              "5 GHz band only",
              "Dual band operation with Band Steering"
            ]
          },
          "perClientBandwidthLimitUp": {
            "description": "The upload bandwidth limit in Kbps. (0 represents no limit.)",
            "type": "integer",
            "format": "int32"
          },
          "perClientBandwidthLimitDown": {
            "description": "The download bandwidth limit in Kbps. (0 represents no limit.)",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "createNetworkSmProfileClarity": {
        "title": "createNetworkSmProfileClarity",
        "type": "object",
        "properties": {
          "name": {
            "description": "The name to be given to the new profile",
            "type": "string"
          },
          "scope": {
            "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned",
            "type": "string"
          },
          "PluginBundleID": {
            "description": "The bundle ID of the application, defaults to com.cisco.ciscosecurity.app",
            "type": "string"
          },
          "FilterBrowsers": {
            "description": "Whether or not to enable browser traffic filtering (one of true, false). Default true.",
            "type": "string"
          },
          "FilterSockets": {
            "description": "Whether or not to enable socket traffic filtering (one of true, false). Default true.",
            "type": "string"
          },
          "VendorConfig": {
            "description": "The specific VendorConfig to be passed to the filtering framework, as JSON. VendorConfig should be an array of objects, as:\n[ { \"key\": \"some_key\", type: \"some_type\", \"value\": \"some_value\" }, ... ]\n\ntype is one of manual_string, manual_int, manual_boolean, manual_choice, manual_multiselect, manual_list,\nauto_username, auto_email, auto_mac_address, auto_serial_number, auto_notes, auto_name",
            "type": "string"
          }
        }
      },
      "createNetworkPiiRequest": {
        "title": "createNetworkPiiRequest",
        "example": {
          "type": "delete",
          "datasets": [
            "usage",
            "events"
          ],
          "mac": "00:77:00:77:00:77"
        },
        "type": "object",
        "properties": {
          "type": {
            "title": "Type5",
            "description": "One of \"delete\" or \"restrict processing\"",
            "example": "delete",
            "type": "string",
            "enum": [
              "delete",
              "restrict processing"
            ]
          },
          "datasets": {
            "description": "The datasets related to the provided key that should be deleted. Only applies to \"delete\" requests. The value \"all\" will be expanded to all datasets applicable to this type. The datasets by applicable to each type are: mac (usage, events, traffic), email (users, loginAttempts), username (users, loginAttempts), bluetoothMac (client, connectivity), smDeviceId (device), smUserId (user)",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "username": {
            "description": "The username of a network log in. Only applies to \"delete\" requests.",
            "type": "string"
          },
          "email": {
            "description": "The email of a network user account. Only applies to \"delete\" requests.",
            "type": "string"
          },
          "mac": {
            "description": "The MAC of a network client device. Applies to both \"restrict processing\" and \"delete\" requests.",
            "type": "string"
          },
          "smDeviceId": {
            "description": "The sm_device_id of a Systems Manager device. The only way to \"restrict processing\" or \"delete\" a Systems Manager device. Must include \"device\" in the dataset for a \"delete\" request to destroy the device.",
            "type": "string"
          },
          "smUserId": {
            "description": "The sm_user_id of a Systems Manager user. The only way to \"restrict processing\" or \"delete\" a Systems Manager user. Must include \"user\" in the dataset for a \"delete\" request to destroy the user.",
            "type": "string"
          }
        }
      },
      "Peer": {
        "title": "Peer",
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the VPN peer",
            "type": "string",
            "required": true
          },
          "publicIp": {
            "description": "The public IP of the VPN peer",
            "type": "string",
            "required": true
          },
          "privateSubnets": {
            "description": "The list of the private subnets of the VPN peer",
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": true
          },
          "ipsecPolicies": {
            "title": "IpsecPolicies",
            "description": "Custom IPSec policies for the VPN peer. If not included and a preset has not been chosen, the default preset for IPSec policies will be used.",
            "type": "object",
            "properties": {
              "ikeCipherAlgo": {
                "description": "This is the cipher algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des'",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "ikeAuthAlgo": {
                "description": "This is the authentication algorithm to be used in Phase 1. The value should be an array with one of the following algorithms: 'sha1', 'md5'",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "ikeDiffieHellmanGroup": {
                "description": "This is the Diffie-Hellman group to be used in Phase 1. The value should be an array with one of the following algorithms: 'group5', 'group2', 'group1'",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "ikeLifetime": {
                "description": "The lifetime of the Phase 1 SA in seconds.",
                "type": "integer",
                "format": "int32"
              },
              "childCipherAlgo": {
                "description": "This is the cipher algorithms to be used in Phase 2. The value should be an array with one or more of the following algorithms: 'aes256', 'aes192', 'aes128', 'tripledes', 'des', 'null'",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "childAuthAlgo": {
                "description": "This is the authentication algorithms to be used in Phase 2. The value should be an array with one of the following algorithms: 'sha1', 'md5'",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "childPfsGroup": {
                "description": "This is the Diffie-Hellman group to be used for Perfect Forward Secrecy in Phase 2. The value should be an array with one of the following values: 'disabled', 'group5', 'group2', 'group1'",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "childLifetime": {
                "description": "The lifetime of the Phase 2 SA in seconds.",
                "type": "integer",
                "format": "int32"
              }
            }
          },
          "ipsecPoliciesPreset": {
            "description": "One of the following available presets: 'default', 'aws', 'azure'. If this is provided, the 'ipsecPolicies' parameter is ignored.",
            "type": "string"
          },
          "secret": {
            "description": "The shared secret with the VPN peer",
            "type": "string",
            "required": true
          },
          "networkTags": {
            "description": "A list of network tags that will connect with this peer. Use ['all'] for all networks. Use ['none'] for no networks. If not included, the default is ['all'].",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "claimOrganization": {
        "title": "claimOrganization",
        "example": {
          "order": "4CXXXXXXX"
        },
        "type": "object",
        "properties": {
          "order": {
            "description": "The order number that should be claimed",
            "type": "string"
          },
          "serial": {
            "description": "The serial of the device that should be claimed",
            "type": "string"
          },
          "licenseKey": {
            "description": "The license key that should be claimed",
            "type": "string"
          },
          "licenseMode": {
            "description": "Either 'renew' or 'addDevices'. 'addDevices' will increase the license limit, while 'renew' will extend the amount of time until expiration. This parameter is required when claiming by licenseKey. Please see <a target='_blank' href='https://documentation.meraki.com/zGeneral_Administration/Licensing/Adding_an_Enterprise_license_to_an_existing_Dashboard_account'>this article</a> for more information.",
            "type": "string"
          }
        }
      },
      "Wan2": {
        "title": "Wan2",
        "description": "WAN 2 settings (only for MX devices)",
        "type": "object",
        "properties": {
          "wanEnabled": {
            "title": "WanEnabled",
            "description": "Enable or disable the interface (only for MX devices). Valid values are 'enabled', 'disabled', and 'not configured'.",
            "example": "enabled",
            "type": "string",
            "enum": [
              "enabled",
              "disabled",
              "not configured"
            ]
          },
          "usingStaticIp": {
            "description": "Configue the interface to have static IP settings or use DHCP.",
            "type": "boolean"
          },
          "staticIp": {
            "description": "The IP the device should use on the WAN.",
            "type": "string"
          },
          "staticGatewayIp": {
            "description": "The IP of the gateway on the WAN.",
            "type": "string"
          },
          "staticSubnetMask": {
            "description": "The subnet mask for the WAN.",
            "type": "string"
          },
          "staticDns": {
            "description": "Up to two DNS IPs.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "vlan": {
            "description": "The VLAN that management traffic should be tagged with. Applies whether usingStaticIp is true or false.",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Wan1": {
        "title": "Wan1",
        "description": "WAN 1 settings",
        "type": "object",
        "properties": {
          "wanEnabled": {
            "title": "WanEnabled",
            "description": "Enable or disable the interface (only for MX devices). Valid values are 'enabled', 'disabled', and 'not configured'.",
            "example": "enabled",
            "type": "string",
            "enum": [
              "enabled",
              "disabled",
              "not configured"
            ]
          },
          "usingStaticIp": {
            "description": "Configue the interface to have static IP settings or use DHCP.",
            "type": "boolean"
          },
          "staticIp": {
            "description": "The IP the device should use on the WAN.",
            "type": "string"
          },
          "staticGatewayIp": {
            "description": "The IP of the gateway on the WAN.",
            "type": "string"
          },
          "staticSubnetMask": {
            "description": "The subnet mask for the WAN.",
            "type": "string"
          },
          "staticDns": {
            "description": "Up to two DNS IPs.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "vlan": {
            "description": "The VLAN that management traffic should be tagged with. Applies whether usingStaticIp is true or false.",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Type2": {
        "title": "Type2",
        "description": "Type of the L7 Rule. Must be 'application', 'applicationCategory', 'host', 'port' or 'ipRange'",
        "example": "application",
        "type": "string",
        "enum": [
          "application",
          "applicationCategory",
          "host",
          "port",
          "ipRange"
        ]
      },
      "L3FirewallRule": {
        "title": "L3FirewallRule",
        "type": "object",
        "properties": {
          "comment": {
            "description": "Description of the rule (optional)",
            "type": "string"
          },
          "policy": {
            "description": "'allow' or 'deny' traffic specified by this rule",
            "type": "string",
            "required": true
          },
          "protocol": {
            "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')",
            "type": "string",
            "required": true
          },
          "destPort": {
            "description": "Destination port (integer in the range 1-65535), a port range (e.g. 8080-9090), or 'any'",
            "type": "string"
          },
          "destCidr": {
            "description": "Destination IP address (in IP or CIDR notation), a fully-qualified domain name (FQDN, if your network supports it) or 'any'.",
            "type": "string",
            "required": true
          }
        }
      },
      "Type1": {
        "title": "Type1",
        "description": "The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.",
        "example": "application",
        "type": "string",
        "enum": [
          "application",
          "applicationCategory",
          "host",
          "port",
          "ipRange",
          "localNet"
        ],
        "required": true
      },
      "TrafficShapingRule": {
        "title": "TrafficShapingRule",
        "type": "object",
        "properties": {
          "definitions": {
            "description": "A list of objects describing the definitions of your traffic shaping rule. At least one definition is required.",
            "type": "array",
            "items": {
              "title": "Definition",
              "type": "object",
              "properties": {
                "type": {
                  "title": "Type1",
                  "description": "The type of definition. Can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.",
                  "example": "application",
                  "type": "string",
                  "enum": [
                    "application",
                    "applicationCategory",
                    "host",
                    "port",
                    "ipRange",
                    "localNet"
                  ],
                  "required": true
                },
                "value": {
                  "description": "If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": \"meraki:layer7/...\" }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).",
                  "type": "string",
                  "required": true
                }
              }
            },
            "required": true
          },
          "perClientBandwidthLimits": {
            "title": "PerClientBandwidthLimits",
            "description": "An object describing the bandwidth settings for your rule.",
            "type": "object",
            "properties": {
              "settings": {
                "description": "How bandwidth limits are applied by your rule. Can be one of 'network default', 'ignore' or 'custom'.",
                "type": "string"
              },
              "bandwidthLimits": {
                "title": "BandwidthLimits1",
                "description": "The bandwidth limits object, specifying the upload ('limitUp') and download ('limitDown') speed in Kbps. These are only enforced if 'settings' is set to 'custom'.",
                "type": "object",
                "properties": {
                  "limitUp": {
                    "description": "The maximum upload limit (integer, in Kbps).",
                    "type": "integer",
                    "format": "int32"
                  },
                  "limitDown": {
                    "description": "The maximum download limit (integer, in Kbps).",
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          },
          "dscpTagValue": {
            "description": "The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.",
            "type": "integer",
            "format": "int32"
          },
          "pcpTagValue": {
            "description": "The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).\n    null means 'Do not set PCP tag'.",
            "type": "integer",
            "format": "int32"
          },
          "priority": {
            "description": "A string, indicating the priority level for packets bound to your rule.\n    Can be 'low', 'normal' or 'high'.",
            "type": "string"
          }
        }
      },
      "Scheduling": {
        "title": "Scheduling",
        "description": "The schedule for the group policy. Schedules are applied to days of the week.",
        "type": "object",
        "properties": {
          "enabled": {
            "description": "Whether scheduling is enabled (true) or disabled (false). Defaults to false. If true, the schedule objects for each day of the week (monday - sunday) are parsed.",
            "type": "boolean"
          },
          "monday": {
            "title": "Monday",
            "description": "The schedule object for Monday.",
            "type": "object",
            "properties": {
              "active": {
                "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.",
                "type": "boolean"
              },
              "from": {
                "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.",
                "type": "string"
              },
              "to": {
                "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.",
                "type": "string"
              }
            }
          },
          "tuesday": {
            "title": "Tuesday",
            "description": "The schedule object for Tuesday.",
            "type": "object",
            "properties": {
              "active": {
                "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.",
                "type": "boolean"
              },
              "from": {
                "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.",
                "type": "string"
              },
              "to": {
                "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.",
                "type": "string"
              }
            }
          },
          "wednesday": {
            "title": "Wednesday",
            "description": "The schedule object for Wednesday.",
            "type": "object",
            "properties": {
              "active": {
                "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.",
                "type": "boolean"
              },
              "from": {
                "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.",
                "type": "string"
              },
              "to": {
                "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.",
                "type": "string"
              }
            }
          },
          "thursday": {
            "title": "Thursday",
            "description": "The schedule object for Thursday.",
            "type": "object",
            "properties": {
              "active": {
                "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.",
                "type": "boolean"
              },
              "from": {
                "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.",
                "type": "string"
              },
              "to": {
                "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.",
                "type": "string"
              }
            }
          },
          "friday": {
            "title": "Friday",
            "description": "The schedule object for Friday.",
            "type": "object",
            "properties": {
              "active": {
                "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.",
                "type": "boolean"
              },
              "from": {
                "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.",
                "type": "string"
              },
              "to": {
                "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.",
                "type": "string"
              }
            }
          },
          "saturday": {
            "title": "Saturday",
            "description": "The schedule object for Saturday.",
            "type": "object",
            "properties": {
              "active": {
                "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.",
                "type": "boolean"
              },
              "from": {
                "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.",
                "type": "string"
              },
              "to": {
                "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.",
                "type": "string"
              }
            }
          },
          "sunday": {
            "title": "Sunday",
            "description": "The schedule object for Sunday.",
            "type": "object",
            "properties": {
              "active": {
                "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true.",
                "type": "boolean"
              },
              "from": {
                "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed.",
                "type": "string"
              },
              "to": {
                "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed.",
                "type": "string"
              }
            }
          }
        }
      },
      "Rule4": {
        "title": "Rule4",
        "type": "object",
        "properties": {
          "comment": {
            "description": "Description of the rule (optional)",
            "type": "string"
          },
          "policy": {
            "description": "'allow' or 'deny' traffic specified by this rule",
            "type": "string",
            "required": true
          },
          "protocol": {
            "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')",
            "type": "string",
            "required": true
          },
          "destPort": {
            "description": "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'",
            "type": "string"
          },
          "destCidr": {
            "description": "Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'",
            "type": "string",
            "required": true
          }
        }
      },
      "Rule3": {
        "title": "Rule3",
        "type": "object",
        "properties": {
          "comment": {
            "description": "Description of the rule (optional)",
            "type": "string"
          },
          "policy": {
            "description": "'allow' or 'deny' traffic specified by this rule",
            "type": "string",
            "required": true
          },
          "protocol": {
            "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')",
            "type": "string",
            "required": true
          },
          "srcPort": {
            "description": "Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'",
            "type": "string"
          },
          "srcCidr": {
            "description": "Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (FQDN not supported)",
            "type": "string",
            "required": true
          },
          "destPort": {
            "description": "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'",
            "type": "string"
          },
          "destCidr": {
            "description": "Comma-separated list of destination IP address(es) (in IP or CIDR notation) or 'any' (FQDN not supported)",
            "type": "string",
            "required": true
          },
          "syslogEnabled": {
            "description": "Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)",
            "type": "boolean"
          }
        }
      },
      "Type": {
        "title": "Type",
        "description": "Type of the L7 rule. One of: 'application', 'applicationCategory', 'host', 'port', 'ipRange'",
        "example": "application",
        "type": "string",
        "enum": [
          "application",
          "applicationCategory",
          "host",
          "port",
          "ipRange"
        ]
      },
      "cloneOrganization": {
        "title": "cloneOrganization",
        "example": {
          "name": "My organization"
        },
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the new organization",
            "type": "string"
          }
        }
      },
      "Rule": {
        "title": "Rule",
        "type": "object",
        "properties": {
          "comment": {
            "description": "Description of the rule (optional)",
            "type": "string"
          },
          "policy": {
            "description": "'allow' or 'deny' traffic specified by this rule",
            "type": "string",
            "required": true
          },
          "protocol": {
            "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')",
            "type": "string",
            "required": true
          },
          "srcPort": {
            "description": "Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'",
            "type": "string"
          },
          "srcCidr": {
            "description": "Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (note: FQDN not supported for source addresses)",
            "type": "string",
            "required": true
          },
          "destPort": {
            "description": "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'",
            "type": "string"
          },
          "destCidr": {
            "description": "Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'",
            "type": "string",
            "required": true
          },
          "syslogEnabled": {
            "description": "Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)",
            "type": "boolean"
          }
        }
      },
      "updateNetworkDevice": {
        "title": "updateNetworkDevice",
        "example": {
          "name": "My AP",
          "lat": 37.4180951010362,
          "lng": -122.098531723022,
          "serial": "Q234-ABCD-5678",
          "mac": "00:11:22:33:44:55",
          "tags": " recently-added "
        },
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of a device",
            "type": "string"
          },
          "tags": {
            "description": "The tags of a device",
            "type": "string"
          },
          "lat": {
            "description": "The latitude of a device",
            "type": "number",
            "format": "double"
          },
          "lng": {
            "description": "The longitude of a device",
            "type": "number",
            "format": "double"
          },
          "address": {
            "description": "The address of a device",
            "type": "string"
          },
          "notes": {
            "description": "The notes for the device. String. Limited to 255 characters.",
            "type": "string"
          },
          "moveMapMarker": {
            "description": "Whether or not to set the latitude and longitude of a device based on the new address. Only applies when lat and lng are not specified.",
            "type": "boolean"
          },
          "switchProfileId": {
            "description": "The ID of a switch profile to bind to the device (for available switch profiles, see the 'Switch Profiles' endpoint). Use null to unbind the switch device from the current profile. For a device to be bindable to a switch profile, it must (1) be a switch, and (2) belong to a network that is bound to a configuration template.",
            "type": "string"
          }
        }
      },
      "updateOrganization": {
        "title": "updateOrganization",
        "example": {
          "name": "My organization"
        },
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the organization",
            "type": "string"
          }
        }
      },
      "createOrganization": {
        "title": "createOrganization",
        "example": {
          "name": "My organization"
        },
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the organization",
            "type": "string"
          }
        }
      },
      "createNetworkHttpServersWebhookTest": {
        "title": "createNetworkHttpServersWebhookTest",
        "type": "object",
        "properties": {
          "url": {
            "description": "The URL where the test webhook will be sent",
            "type": "string"
          }
        }
      },
      "Policy1": {
        "title": "Policy1",
        "description": "The policy applied to matching traffic. Must be 'deny'.",
        "example": "deny",
        "type": "string",
        "enum": [
          "deny"
        ]
      },
      "provisionNetworkClients": {
        "title": "provisionNetworkClients",
        "example": {
          "mac": "00:11:22:33:44:55",
          "name": "Miles's phone",
          "devicePolicy": "Group policy",
          "groupPolicyId": "101"
        },
        "type": "object",
        "properties": {
          "mac": {
            "description": "The MAC address of the client. Required.",
            "type": "string"
          },
          "name": {
            "description": "The display name for the client. Optional. Limited to 255 bytes.",
            "type": "string"
          },
          "devicePolicy": {
            "description": "The policy to apply to the specified client. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required.",
            "type": "string"
          },
          "groupPolicyId": {
            "description": "The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to \"Group policy\". Otherwise this is ignored.",
            "type": "string"
          }
        }
      },
      "Policy": {
        "title": "Policy",
        "description": "'Deny' traffic specified by this rule",
        "example": "deny",
        "type": "string",
        "enum": [
          "deny"
        ]
      },
      "updateNetwork": {
        "title": "updateNetwork",
        "example": {
          "name": "Long Island Office",
          "timeZone": "America/Los_Angeles",
          "tags": " tag1 tag2 ",
          "disableMyMerakiCom": false
        },
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the new network",
            "type": "string"
          },
          "timeZone": {
            "description": "The timezone of the network. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article.</a>",
            "type": "string"
          },
          "tags": {
            "description": "A space-separated list of tags to be applied to the network",
            "type": "string"
          },
          "disableMyMerakiCom": {
            "description": "Disables the local device status pages (<a target='_blank' href='http://my.meraki.com/'>my.meraki.com, </a><a target='_blank' href='http://ap.meraki.com/'>ap.meraki.com, </a><a target='_blank' href='http://switch.meraki.com/'>switch.meraki.com, </a><a target='_blank' href='http://wired.meraki.com/'>wired.meraki.com</a>). Optional (defaults to false)",
            "type": "boolean"
          },
          "disableRemoteStatusPage": {
            "description": "Disables access to the device status page (<a target='_blank'>http://[device's LAN IP])</a>. Optional. Can only be set if disableMyMerakiCom is set to false",
            "type": "boolean"
          }
        }
      },
      "createOrganizationNetwork": {
        "title": "createOrganizationNetwork",
        "example": {
          "name": "Long Island Office",
          "timeZone": "America/Los_Angeles",
          "tags": " tag1 tag2 ",
          "disableMyMerakiCom": false,
          "type": "appliance switch camera"
        },
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the new network",
            "type": "string",
            "required": true
          },
          "type": {
            "description": "The type of the new network. Valid types are wireless, appliance, switch, systemsManager, camera, or a space-separated list of those for a combined network.",
            "type": "string",
            "required": true
          },
          "tags": {
            "description": "A space-separated list of tags to be applied to the network",
            "type": "string"
          },
          "timeZone": {
            "description": "The timezone of the network. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article.</a>",
            "type": "string"
          },
          "copyFromNetworkId": {
            "description": "The ID of the network to copy configuration from. Other provided parameters will override the copied configuration, except type which must match this network's type exactly.",
            "type": "string"
          },
          "disableMyMerakiCom": {
            "description": "Disables the local device status pages (<a target='_blank' href='http://my.meraki.com/'>my.meraki.com, </a><a target='_blank' href='http://ap.meraki.com/'>ap.meraki.com, </a><a target='_blank' href='http://switch.meraki.com/'>switch.meraki.com, </a><a target='_blank' href='http://wired.meraki.com/'>wired.meraki.com</a>). Optional (defaults to false)",
            "type": "boolean"
          },
          "disableRemoteStatusPage": {
            "description": "Disables access to the device status page (<a target='_blank'>http://[device's LAN IP])</a>. Optional. Can only be set if disableMyMerakiCom is set to false",
            "type": "boolean"
          }
        }
      },
      "updateNetworkBluetoothSettings": {
        "title": "updateNetworkBluetoothSettings",
        "example": {
          "scanningEnabled": true,
          "advertisingEnabled": true,
          "uuid": "00000000-0000-0000-000-000000000000",
          "majorMinorAssignmentMode": "Non-unique",
          "major": 1
        },
        "type": "object",
        "properties": {
          "scanningEnabled": {
            "description": "Whether APs will scan for Bluetooth enabled clients. (true, false)",
            "type": "boolean"
          },
          "advertisingEnabled": {
            "description": "Whether APs will advertise beacons. (true, false)",
            "type": "boolean"
          },
          "uuid": {
            "description": "The UUID to be used in the beacon identifier.",
            "type": "string"
          },
          "majorMinorAssignmentMode": {
            "description": "The way major and minor number should be assigned to nodes in the network. ('Unique', 'Non-unique')",
            "type": "string"
          },
          "major": {
            "description": "The major number to be used in the beacon identifier. Only valid in 'Non-unique' mode.",
            "type": "integer",
            "format": "int32"
          },
          "minor": {
            "description": "The minor number to be used in the beacon identifier. Only valid in 'Non-unique' mode.",
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "updateNetworkCellularFirewallRules": {
        "title": "updateNetworkCellularFirewallRules",
        "example": {
          "rules": [
            {
              "comment": "Allow TCP traffic to subnet with HTTP servers.",
              "policy": "allow",
              "protocol": "tcp",
              "destPort": 443,
              "destCidr": "192.168.1.0/24",
              "srcPort": "Any",
              "srcCidr": "Any",
              "syslogEnabled": false
            }
          ]
        },
        "type": "object",
        "properties": {
          "rules": {
            "description": "An ordered array of the firewall rules (not including the default rule)",
            "type": "array",
            "items": {
              "title": "Rule",
              "type": "object",
              "properties": {
                "comment": {
                  "description": "Description of the rule (optional)",
                  "type": "string"
                },
                "policy": {
                  "description": "'allow' or 'deny' traffic specified by this rule",
                  "type": "string",
                  "required": true
                },
                "protocol": {
                  "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')",
                  "type": "string",
                  "required": true
                },
                "srcPort": {
                  "description": "Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'",
                  "type": "string"
                },
                "srcCidr": {
                  "description": "Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (note: FQDN not supported for source addresses)",
                  "type": "string",
                  "required": true
                },
                "destPort": {
                  "description": "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'",
                  "type": "string"
                },
                "destCidr": {
                  "description": "Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'",
                  "type": "string",
                  "required": true
                },
                "syslogEnabled": {
                  "description": "Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)",
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "kind": "N",
    "path": [
      "tags"
    ],
    "rhs": [
      {
        "name": "Action batches",
        "description": ""
      },
      {
        "name": "Admins",
        "description": ""
      },
      {
        "name": "Alert settings",
        "description": ""
      },
      {
        "name": "MV Sense",
        "description": ""
      },
      {
        "name": "API usage",
        "description": ""
      },
      {
        "name": "Bluetooth clients",
        "description": ""
      },
      {
        "name": "Networks",
        "description": ""
      },
      {
        "name": "Cameras",
        "description": ""
      },
      {
        "name": "Clients",
        "description": ""
      },
      {
        "name": "Config templates",
        "description": ""
      },
      {
        "name": "Devices",
        "description": ""
      },
      {
        "name": "MX cellular firewall",
        "description": ""
      },
      {
        "name": "MX L3 firewall",
        "description": ""
      },
      {
        "name": "MX L7 application categories",
        "description": ""
      },
      {
        "name": "MX L7 firewall",
        "description": ""
      },
      {
        "name": "MX VPN firewall",
        "description": ""
      },
      {
        "name": "MR L3 firewall",
        "description": ""
      },
      {
        "name": "Group policies",
        "description": ""
      },
      {
        "name": "HTTP servers",
        "description": ""
      },
      {
        "name": "Management interface settings",
        "description": ""
      },
      {
        "name": "Meraki auth users",
        "description": ""
      },
      {
        "name": "NetFlow settings",
        "description": ""
      },
      {
        "name": "OpenAPI Spec",
        "description": ""
      },
      {
        "name": "Organizations",
        "description": ""
      },
      {
        "name": "PII",
        "description": ""
      },
      {
        "name": "Radio settings",
        "description": ""
      },
      {
        "name": "SAML roles",
        "description": ""
      },
      {
        "name": "Security events",
        "description": ""
      },
      {
        "name": "Intrusion settings",
        "description": ""
      },
      {
        "name": "Malware settings",
        "description": ""
      },
      {
        "name": "Named tag scope",
        "description": ""
      },
      {
        "name": "SM",
        "description": ""
      },
      {
        "name": "SNMP settings",
        "description": ""
      },
      {
        "name": "Splash login attempts",
        "description": ""
      },
      {
        "name": "Splash settings",
        "description": ""
      },
      {
        "name": "SSIDs",
        "description": ""
      },
      {
        "name": "Switch settings",
        "description": ""
      },
      {
        "name": "Switch ports",
        "description": ""
      },
      {
        "name": "Switch profiles",
        "description": ""
      },
      {
        "name": "Switch stacks",
        "description": ""
      },
      {
        "name": "Syslog servers",
        "description": ""
      },
      {
        "name": "Traffic shaping",
        "description": ""
      },
      {
        "name": "Webhook logs",
        "description": ""
      },
      {
        "name": "Content filtering categories",
        "description": ""
      },
      {
        "name": "Content filtering rules",
        "description": ""
      },
      {
        "name": "Firewalled services",
        "description": ""
      },
      {
        "name": "MX 1:Many NAT rules",
        "description": ""
      },
      {
        "name": "MX 1:1 NAT rules",
        "description": ""
      },
      {
        "name": "MX port forwarding rules",
        "description": ""
      },
      {
        "name": "Static routes",
        "description": ""
      },
      {
        "name": "Uplink settings",
        "description": ""
      },
      {
        "name": "VLANs",
        "description": ""
      },
      {
        "name": "Wireless health",
        "description": ""
      }
    ],
    "type": "unmatchDiffs",
    "name": "UnmatchDiffs"
  },
  {
    "ruleId": "rename-path",
    "message": "Path ``/networks/{network_id}/sm/devices`` renamed to `/networks/{networkId}/sm/devices`",
    "path": "`/networks/{network_id}/sm/devices`",
    "newPath": "/networks/{networkId}/sm/devices",
    "type": "renamed",
    "name": "Renamed"
  },
  {
    "ruleId": "rename-path",
    "message": "Path ``/networks/{network_id}/sm/users`` renamed to `/networks/{networkId}/sm/users`",
    "path": "`/networks/{network_id}/sm/users`",
    "newPath": "/networks/{networkId}/sm/users",
    "type": "renamed",
    "name": "Renamed"
  },
  {
    "ruleId": "rename-path",
    "message": "Path ``/networks/{network_id}/sm/devices/tags`` renamed to `/networks/{networkId}/sm/devices/tags`",
    "path": "`/networks/{network_id}/sm/devices/tags`",
    "newPath": "/networks/{networkId}/sm/devices/tags",
    "type": "renamed",
    "name": "Renamed"
  },
  {
    "ruleId": "rename-path",
    "message": "Path ``/networks/{network_id}/sm/device/fields`` renamed to `/networks/{networkId}/sm/device/fields`",
    "path": "`/networks/{network_id}/sm/device/fields`",
    "newPath": "/networks/{networkId}/sm/device/fields",
    "type": "renamed",
    "name": "Renamed"
  },
  {
    "ruleId": "rename-path",
    "message": "Path ``/networks/{network_id}/sm/device/wipe`` renamed to `/networks/{networkId}/sm/device/wipe`",
    "path": "`/networks/{network_id}/sm/device/wipe`",
    "newPath": "/networks/{networkId}/sm/device/wipe",
    "type": "renamed",
    "name": "Renamed"
  },
  {
    "ruleId": "rename-path",
    "message": "Path ``/networks/{network_id}/sm/devices/checkin`` renamed to `/networks/{networkId}/sm/devices/checkin`",
    "path": "`/networks/{network_id}/sm/devices/checkin`",
    "newPath": "/networks/{networkId}/sm/devices/checkin",
    "type": "renamed",
    "name": "Renamed"
  },
  {
    "ruleId": "rename-path",
    "message": "Path ``/networks/{network_id}/sm/devices/move`` renamed to `/networks/{networkId}/sm/devices/move`",
    "path": "`/networks/{network_id}/sm/devices/move`",
    "newPath": "/networks/{networkId}/sm/devices/move",
    "type": "renamed",
    "name": "Renamed"
  },
  {
    "ruleId": "rename-path",
    "message": "Path ``/networks/{network_id}/sm/devices/{deviceId}/unenroll`` renamed to `/networks/{networkId}/sm/devices/{deviceId}/unenroll`",
    "path": "`/networks/{network_id}/sm/devices/{deviceId}/unenroll`",
    "newPath": "/networks/{networkId}/sm/devices/{deviceId}/unenroll",
    "type": "renamed",
    "name": "Renamed"
  },
  {
    "ruleId": "rename-path",
    "message": "Path ``/networks/{network_id}/sm/profiles`` renamed to `/networks/{networkId}/sm/profiles`",
    "path": "`/networks/{network_id}/sm/profiles`",
    "newPath": "/networks/{networkId}/sm/profiles",
    "type": "renamed",
    "name": "Renamed"
  }
]