{
  "oldVersion": null,
  "newVersion": null,
  "uniqueNames": [
    "Renamed",
    "Major",
    "Changes",
    "UnmatchDiffs"
  ],
  "uniqueGroups": [
    "Admins",
    null,
    "Networks",
    "Cameras",
    "Devices",
    "Group policies",
    "HTTP servers",
    "Organizations",
    "PII",
    "SAML roles",
    "Named tag scope",
    "SM",
    "Switch stacks",
    "Syslog servers",
    "Static routes",
    "VLANs",
    "Config templates",
    "SSIDs",
    "Wireless health",
    "Action batches",
    "Clients",
    "OpenAPI Spec",
    "Organization alert settings",
    "Radio settings",
    "Intrusion settings",
    "Security events",
    "Geofence regions",
    "Geofences",
    "Tags",
    "Traffic shaping",
    "Uplink interface settings",
    "Webhook logs",
    "IDS alerts"
  ],
  "uniqueMethods": [
    "post",
    null,
    "put",
    "delete",
    "get"
  ],
  "diff": [
    {
      "ruleId": "edit-operation-id",
      "message": "`/organizations/{organizationId}/admins` (post) - OperationId turned from `createOrganizationAdmins` to `createOrganizationAdmin`",
      "messageHtml": "OperationId turned from <code>createOrganizationAdmins</code> to <code>createOrganizationAdmin</code>",
      "path": "/organizations/{organizationId}/admins",
      "method": "post",
      "previousOperationId": "createOrganizationAdmins",
      "currentOperationId": "createOrganizationAdmin",
      "type": "warnings",
      "name": "Major",
      "group": "Admins",
      "apiDetails": {
        "summary": "Create a new dashboard administrator",
        "description": "Create a new dashboard administrator",
        "operationId": "createOrganizationAdmin",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "createOrganizationAdmin",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "The email of the dashboard administrator. This attribute can not be updated.",
                  "required": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the dashboard administrator",
                  "required": true
                },
                "orgAccess": {
                  "type": "string",
                  "description": "The privilege of the dashboard administrator on the organization (full, read-only, none)",
                  "required": true
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "tag": {
                        "type": "string",
                        "description": "The name of the tag",
                        "required": true
                      },
                      "access": {
                        "type": "string",
                        "description": "The privilege of the dashboard administrator on the tag",
                        "required": true
                      }
                    }
                  },
                  "description": "The list of tags that the dashboard administrator has privileges on"
                },
                "networks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The network ID",
                        "required": true
                      },
                      "access": {
                        "type": "string",
                        "description": "The privilege of the dashboard administrator on the network",
                        "required": true
                      }
                    }
                  },
                  "description": "The list of networks that the dashboard administrator has privileges on"
                }
              },
              "example": {
                "name": "Miles Meraki",
                "email": "miles@meraki.com",
                "orgAccess": "none",
                "tags": [
                  {
                    "tag": "west",
                    "access": "read-only"
                  }
                ]
              }
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "212406",
                "name": "Miles Meraki",
                "email": "miles@meraki.com",
                "orgAccess": "none",
                "accountStatus": "ok",
                "twoFactorAuthEnabled": false,
                "hasApiKey": true,
                "lastActive": "2019-01-28 14:58:56 -0800",
                "tags": [
                  {
                    "tag": "west",
                    "access": "read-only"
                  }
                ],
                "networks": [
                  {
                    "id": "N_24329156",
                    "access": "full"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Admins"
        ]
      }
    },
    {
      "ruleId": "delete-path",
      "message": "`/devices/{serial}/camera/analytics/zones/{zoneId}/history` - Deleted",
      "messageHtml": "Deleted",
      "path": "/devices/{serial}/camera/analytics/zones/{zoneId}/history",
      "type": "warnings",
      "name": "Major"
    },
    {
      "ruleId": "edit-operation-id",
      "message": "`/organizations/{organizationId}/networks` (post) - OperationId turned from `createOrganizationNetworks` to `createOrganizationNetwork`",
      "messageHtml": "OperationId turned from <code>createOrganizationNetworks</code> to <code>createOrganizationNetwork</code>",
      "path": "/organizations/{organizationId}/networks",
      "method": "post",
      "previousOperationId": "createOrganizationNetworks",
      "currentOperationId": "createOrganizationNetwork",
      "type": "warnings",
      "name": "Major",
      "group": "Networks",
      "apiDetails": {
        "summary": "Create a network",
        "description": "Create a network",
        "operationId": "createOrganizationNetwork",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "createOrganizationNetwork",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the new network",
                  "required": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the new network. Valid types are wireless, appliance, switch, phone, systemsManager, camera or a space-separated list of those for a combined network.",
                  "required": true
                },
                "tags": {
                  "type": "string",
                  "description": "A space-separated list of tags to be applied to the network"
                },
                "timeZone": {
                  "type": "string",
                  "description": "The timezone of the network. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article.</a>"
                },
                "copyFromNetworkId": {
                  "type": "string",
                  "description": "The ID of the network to copy configuration from. Other provided parameters will override the copied configuration, except type which must match this network's type exactly."
                },
                "disableMyMerakiCom": {
                  "type": "boolean",
                  "description": "Disables the local device status pages (<a target='_blank' href='http://my.meraki.com/'>my.meraki.com, </a><a target='_blank' href='http://ap.meraki.com/'>ap.meraki.com, </a><a target='_blank' href='http://switch.meraki.com/'>switch.meraki.com, </a><a target='_blank' href='http://wired.meraki.com/'>wired.meraki.com</a>). Optional (defaults to false)"
                },
                "disableRemoteStatusPage": {
                  "type": "boolean",
                  "description": "Disables access to the device status page (<a target='_blank'>http://[device's LAN IP])</a>. Optional. Can only be set if disableMyMerakiCom is set to false"
                }
              },
              "example": {
                "name": "Long Island Office",
                "timeZone": "America/Los_Angeles",
                "tags": " tag1 tag2 ",
                "disableMyMerakiCom": false,
                "type": "appliance switch camera"
              }
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "L_123456",
                "organizationId": 2930418,
                "name": "Long Island Office",
                "timeZone": "America/Los_Angeles",
                "tags": " tag1 tag2 ",
                "type": "combined",
                "disableMyMerakiCom": false
              }
            }
          }
        },
        "tags": [
          "Networks"
        ]
      }
    },
    {
      "ruleId": "edit-operation-id",
      "message": "`/networks/{networkId}/cameras/{serial}/snapshot` (post) - OperationId turned from `snapshotNetworkCamera` to `generateNetworkCameraSnapshot`",
      "messageHtml": "OperationId turned from <code>snapshotNetworkCamera</code> to <code>generateNetworkCameraSnapshot</code>",
      "path": "/networks/{networkId}/cameras/{serial}/snapshot",
      "method": "post",
      "previousOperationId": "snapshotNetworkCamera",
      "currentOperationId": "generateNetworkCameraSnapshot",
      "type": "warnings",
      "name": "Major",
      "group": "Cameras",
      "apiDetails": {
        "summary": "Generate a snapshot of what the camera sees at the specified time and return a link to that image.",
        "description": "Generate a snapshot of what the camera sees at the specified time and return a link to that image.",
        "operationId": "generateNetworkCameraSnapshot",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "generateNetworkCameraSnapshot",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "timestamp": {
                  "type": "string",
                  "description": "[optional] The snapshot will be taken from this time on the camera. The timestamp is expected to be in ISO 8601 format. If no timestamp is specified, we will assume current time."
                }
              },
              "example": {}
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "url": "https://spn4.meraki.com/stream/jpeg/snapshot/b2d123asdf423qd22d2",
                "expiry": "Access to the image will expire at 2018-12-11T03:12:39Z."
              }
            }
          }
        },
        "tags": [
          "Cameras"
        ]
      }
    },
    {
      "ruleId": "edit-operation-id",
      "message": "`/networks/{networkId}/devices/{serial}/blinkLeds` (post) - OperationId turned from `blinkLedsNetworkDevice` to `blinkNetworkDeviceLeds`",
      "messageHtml": "OperationId turned from <code>blinkLedsNetworkDevice</code> to <code>blinkNetworkDeviceLeds</code>",
      "path": "/networks/{networkId}/devices/{serial}/blinkLeds",
      "method": "post",
      "previousOperationId": "blinkLedsNetworkDevice",
      "currentOperationId": "blinkNetworkDeviceLeds",
      "type": "warnings",
      "name": "Major",
      "group": "Devices",
      "apiDetails": {
        "summary": "Blink the LEDs on a device",
        "description": "Blink the LEDs on a device",
        "operationId": "blinkNetworkDeviceLeds",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "blinkNetworkDeviceLeds",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "duration": {
                  "type": "integer",
                  "description": "The duration in seconds. Must be between 5 and 120. Default is 20 seconds"
                },
                "period": {
                  "type": "integer",
                  "description": "The period in milliseconds. Must be between 100 and 1000. Default is 160 milliseconds"
                },
                "duty": {
                  "type": "integer",
                  "description": "The duty cycle as the percent active. Must be between 10 and 90. Default is 50."
                }
              },
              "example": {
                "duration": 20,
                "period": 160,
                "duty": 50
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "sentToDevice": true
              }
            }
          }
        },
        "tags": [
          "Devices"
        ]
      }
    },
    {
      "ruleId": "edit-operation-id",
      "message": "`/networks/{networkId}/groupPolicies` (post) - OperationId turned from `createNetworkGroupPolicies` to `createNetworkGroupPolicy`",
      "messageHtml": "OperationId turned from <code>createNetworkGroupPolicies</code> to <code>createNetworkGroupPolicy</code>",
      "path": "/networks/{networkId}/groupPolicies",
      "method": "post",
      "previousOperationId": "createNetworkGroupPolicies",
      "currentOperationId": "createNetworkGroupPolicy",
      "type": "warnings",
      "name": "Major",
      "group": "Group policies",
      "apiDetails": {
        "summary": "Create a group policy",
        "description": "Create a group policy",
        "operationId": "createNetworkGroupPolicy",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "createNetworkGroupPolicy",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name for your group policy. Required.",
                  "required": true
                },
                "scheduling": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "Whether scheduling is enabled (true) or disabled (false). Defaults to false. If true, the schedule objects for each day of the week (monday - sunday) are parsed."
                    },
                    "monday": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                        },
                        "from": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                        },
                        "to": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                        }
                      },
                      "description": "The schedule object for Monday."
                    },
                    "tuesday": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                        },
                        "from": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                        },
                        "to": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                        }
                      },
                      "description": "The schedule object for Tuesday."
                    },
                    "wednesday": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                        },
                        "from": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                        },
                        "to": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                        }
                      },
                      "description": "The schedule object for Wednesday."
                    },
                    "thursday": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                        },
                        "from": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                        },
                        "to": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                        }
                      },
                      "description": "The schedule object for Thursday."
                    },
                    "friday": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                        },
                        "from": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                        },
                        "to": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                        }
                      },
                      "description": "The schedule object for Friday."
                    },
                    "saturday": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                        },
                        "from": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                        },
                        "to": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                        }
                      },
                      "description": "The schedule object for Saturday."
                    },
                    "sunday": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                        },
                        "from": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                        },
                        "to": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                        }
                      },
                      "description": "The schedule object for Sunday."
                    }
                  },
                  "description": "    The schedule for the group policy. Schedules are applied to days of the week.\n"
                },
                "bandwidth": {
                  "type": "object",
                  "properties": {
                    "settings": {
                      "type": "string",
                      "description": "How bandwidth limits are enforced. Can be 'network default', 'ignore' or 'custom'."
                    },
                    "bandwidthLimits": {
                      "type": "object",
                      "properties": {
                        "limitUp": {
                          "type": "integer",
                          "description": "The maximum upload limit (integer, in Kbps). null indicates no limit"
                        },
                        "limitDown": {
                          "type": "integer",
                          "description": "The maximum download limit (integer, in Kbps). null indicates no limit"
                        }
                      },
                      "description": "The bandwidth limits object, specifying upload and download speed for clients bound to the group policy. These are only enforced if 'settings' is set to 'custom'."
                    }
                  },
                  "description": "    The bandwidth settings for clients bound to your group policy.\n"
                },
                "firewallAndTrafficShaping": {
                  "type": "object",
                  "properties": {
                    "settings": {
                      "type": "string",
                      "description": "How firewall and traffic shaping rules are enforced. Can be 'network default', 'ignore' or 'custom'."
                    },
                    "trafficShapingRules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "definitions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "    If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": <string> }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).\n"
                                }
                              }
                            },
                            "description": "    A list of objects describing the definition of your traffic shaping rule. Each\n    definition object has the structure { \"type\": <string>, \"value\": <string OR object> }.\n    \"type\" can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.\n\n        If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n\n\n        If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": <string> }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).\n\n"
                          },
                          "perClientBandwidthLimits": {
                            "type": "object",
                            "properties": {
                              "settings": {
                                "type": "string",
                                "description": "'network default', 'ignore' or 'custom'"
                              },
                              "bandwidthLimits": {
                                "type": "object",
                                "properties": {
                                  "limitUp": {
                                    "type": "integer",
                                    "description": "The maximum upload limit (integer, in Kbps)."
                                  },
                                  "limitDown": {
                                    "type": "integer",
                                    "description": "The maximum download limit (integer, in Kbps)."
                                  }
                                },
                                "description": "The bandwidth limits object, specifying the upload and download speed."
                              }
                            },
                            "description": "    An object describing the bandwidth settings for your rule, with the structure\n    { \"settings\": <string> , \"bandwidthLimits\": { \"limitUp\": <integer>, \"limitDown\": <integer> } }.\n    'settings' can be set to 'network default', 'ignore' or 'custom'. While 'limitUp' and 'limitDown'\n    are the upload and download speeds, respectively, in Kbps (defaults to 5120).\n    Note that 'bandwidthLimits' are only enforced if 'settings' is set to 'custom'.\n"
                          },
                          "dscpTagValue": {
                            "type": "integer",
                            "description": "    The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.\n"
                          },
                          "pcpTagValue": {
                            "type": "integer",
                            "description": "    The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).\n    null means 'Do not set PCP tag'.\n"
                          },
                          "priority": {
                            "type": "string",
                            "description": "    A string, indicating the priority level for packets bound to your rule.\n    Can be 'low', 'normal' or 'high'.\n"
                          }
                        }
                      },
                      "description": "    An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.\n"
                    },
                    "l3FirewallRules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "comment": {
                            "type": "string",
                            "description": "Description of the rule (optional)"
                          },
                          "policy": {
                            "type": "string",
                            "description": "'Allow' or 'Deny' traffic specified by this rule",
                            "required": true
                          },
                          "protocol": {
                            "type": "string",
                            "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')",
                            "required": true
                          },
                          "srcPort": {
                            "type": "string",
                            "description": "Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'"
                          },
                          "srcCidr": {
                            "type": "string",
                            "description": "Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (note: FQDN not supported for source addresses)",
                            "required": true
                          },
                          "destPort": {
                            "type": "string",
                            "description": "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'"
                          },
                          "destCidr": {
                            "type": "string",
                            "description": "Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'",
                            "required": true
                          }
                        }
                      },
                      "description": "An ordered array of the L3 firewall rules"
                    },
                    "l7FirewallRules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "policy": {
                            "type": "string",
                            "enum": [
                              "deny"
                            ],
                            "description": "The policy applied to matching traffic. Must be 'deny'."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "application",
                              "applicationCategory",
                              "host",
                              "port",
                              "ipRange"
                            ],
                            "description": "Type of the L7 Rule. Must be 'application', 'applicationCategory', 'host', 'port' or 'ipRange'"
                          },
                          "value": {
                            "type": "string",
                            "description": "The 'value' of what you want to block. If 'type' is 'host', 'port' or 'ipRange', 'value' must be a string matching either a hostname (e.g. somewhere.com), a port (e.g. 8080), or an IP range (e.g. 192.1.0.0/16). If 'type' is 'application' or 'applicationCategory', then 'value' must be an object with an ID for the application."
                          }
                        }
                      },
                      "description": "An ordered array of L7 firewall rules"
                    }
                  },
                  "description": "    The firewall and traffic shaping rules and settings for your policy.\n"
                }
              },
              "example": {
                "name": "No video streaming",
                "scheduling": {
                  "enabled": true,
                  "monday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "tuesday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "wednesday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "thursday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "friday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "saturday": {
                    "active": false,
                    "from": "0:00",
                    "to": "24:00"
                  },
                  "sunday": {
                    "active": false,
                    "from": "0:00",
                    "to": "24:00"
                  }
                },
                "bandwidth": {
                  "settings": "custom",
                  "bandwidthLimits": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  }
                }
              }
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "name": "No video streaming",
                "groupPolicyId": "101",
                "scheduling": {
                  "enabled": true,
                  "monday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "tuesday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "wednesday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "thursday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "friday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "saturday": {
                    "active": false,
                    "from": "0:00",
                    "to": "24:00"
                  },
                  "sunday": {
                    "active": false,
                    "from": "0:00",
                    "to": "24:00"
                  }
                },
                "bandwidth": {
                  "settings": "custom",
                  "bandwidthLimits": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Group policies"
        ]
      }
    },
    {
      "ruleId": "edit-operation-id",
      "message": "`/networks/{networkId}/httpServers` (post) - OperationId turned from `createNetworkHttpServers` to `createNetworkHttpServer`",
      "messageHtml": "OperationId turned from <code>createNetworkHttpServers</code> to <code>createNetworkHttpServer</code>",
      "path": "/networks/{networkId}/httpServers",
      "method": "post",
      "previousOperationId": "createNetworkHttpServers",
      "currentOperationId": "createNetworkHttpServer",
      "type": "warnings",
      "name": "Major",
      "group": "HTTP servers",
      "apiDetails": {
        "summary": "Add an HTTP server",
        "description": "Add an HTTP server",
        "operationId": "createNetworkHttpServer",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "createNetworkHttpServer",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "A name for easy reference to the HTTP server",
                  "type": "string"
                },
                "url": {
                  "description": "The URL of the HTTP server",
                  "type": "string"
                },
                "sharedSecret": {
                  "description": "A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki.",
                  "type": "string"
                }
              },
              "example": {
                "name": "My HTTP server",
                "url": "https://www.example.com/webhooks",
                "sharedSecret": "foobar"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "ABC123",
                "networkId": "N_123",
                "name": "My HTTP server",
                "url": "https://www.example.com/webhooks",
                "sharedSecret": "foobar"
              }
            }
          }
        },
        "tags": [
          "HTTP servers"
        ]
      }
    },
    {
      "ruleId": "edit-operation-id",
      "message": "`/networks/{networkId}/httpServers/webhookTests` (post) - OperationId turned from `createNetworkHttpServersWebhookTests` to `createNetworkHttpServersWebhookTest`",
      "messageHtml": "OperationId turned from <code>createNetworkHttpServersWebhookTests</code> to <code>createNetworkHttpServersWebhookTest</code>",
      "path": "/networks/{networkId}/httpServers/webhookTests",
      "method": "post",
      "previousOperationId": "createNetworkHttpServersWebhookTests",
      "currentOperationId": "createNetworkHttpServersWebhookTest",
      "type": "warnings",
      "name": "Major",
      "group": "HTTP servers",
      "apiDetails": {
        "summary": "Send a test webhook",
        "description": "Send a test webhook",
        "operationId": "createNetworkHttpServersWebhookTest",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "createNetworkHttpServersWebhookTest",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "url": {
                  "description": "The URL where the test webhook will be sent",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "1234",
                "url": "https://www.example.com/path",
                "status": "enqueued"
              }
            }
          }
        },
        "tags": [
          "HTTP servers"
        ]
      }
    },
    {
      "ruleId": "edit-operation-id",
      "message": "`/organizations` (post) - OperationId turned from `createOrganizations` to `createOrganization`",
      "messageHtml": "OperationId turned from <code>createOrganizations</code> to <code>createOrganization</code>",
      "path": "/organizations",
      "method": "post",
      "previousOperationId": "createOrganizations",
      "currentOperationId": "createOrganization",
      "type": "warnings",
      "name": "Major",
      "group": "Organizations",
      "apiDetails": {
        "summary": "Create a new organization",
        "description": "Create a new organization",
        "operationId": "createOrganization",
        "parameters": [
          {
            "name": "createOrganization",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the organization",
                  "type": "string"
                }
              },
              "example": {
                "name": "My organization"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": 2930418,
                "name": "My organization"
              }
            }
          }
        },
        "tags": [
          "Organizations"
        ]
      }
    },
    {
      "ruleId": "edit-operation-id",
      "message": "`/networks/{networkId}/pii/requests` (post) - OperationId turned from `createNetworkPiiRequests` to `createNetworkPiiRequest`",
      "messageHtml": "OperationId turned from <code>createNetworkPiiRequests</code> to <code>createNetworkPiiRequest</code>",
      "path": "/networks/{networkId}/pii/requests",
      "method": "post",
      "previousOperationId": "createNetworkPiiRequests",
      "currentOperationId": "createNetworkPiiRequest",
      "type": "warnings",
      "name": "Major",
      "group": "PII",
      "apiDetails": {
        "summary": "Submit a new delete or restrict processing PII request",
        "description": "Submit a new delete or restrict processing PII request\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/requests\n```",
        "operationId": "createNetworkPiiRequest",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "createNetworkPiiRequest",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "description": "One of \"delete\" or \"restrict processing\"",
                  "type": "string"
                },
                "datasets": {
                  "description": "The datasets related to the provided key that should be deleted. Only applies to \"delete\" requests. The value \"all\" will be expanded to all datasets applicable to this type. The datasets by applicable to each type are: mac (usage, events, traffic), email (users, loginAttempts), username (users, loginAttempts), bluetoothMac (client, connectivity), smDeviceId (device), smUserId (user)",
                  "type": "string"
                },
                "username": {
                  "description": "The username of a network log in. Only applies to \"delete\" requests.",
                  "type": "string"
                },
                "email": {
                  "description": "The email of a network user account. Only applies to \"delete\" requests.",
                  "type": "string"
                },
                "mac": {
                  "description": "The MAC of a network client device. Applies to both \"restrict processing\" and \"delete\" requests.",
                  "type": "string"
                },
                "smDeviceId": {
                  "description": "The sm_device_id of a Systems Manager device. The only way to \"restrict processing\" or \"delete\" a Systems Manager device. Must include \"device\" in the dataset for a \"delete\" request to destroy the device.",
                  "type": "string"
                },
                "smUserId": {
                  "description": "The sm_user_id of a Systems Manager user. The only way to \"restrict processing\" or \"delete\" a Systems Manager user. Must include \"user\" in the dataset for a \"delete\" request to destroy the user.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            }
          }
        },
        "tags": [
          "PII"
        ]
      }
    },
    {
      "ruleId": "edit-operation-id",
      "message": "`/organizations/{organizationId}/samlRoles` (post) - OperationId turned from `createOrganizationSamlRoles` to `createOrganizationSamlRole`",
      "messageHtml": "OperationId turned from <code>createOrganizationSamlRoles</code> to <code>createOrganizationSamlRole</code>",
      "path": "/organizations/{organizationId}/samlRoles",
      "method": "post",
      "previousOperationId": "createOrganizationSamlRoles",
      "currentOperationId": "createOrganizationSamlRole",
      "type": "warnings",
      "name": "Major",
      "group": "SAML roles",
      "apiDetails": {
        "summary": "Create a SAML role",
        "description": "Create a SAML role",
        "operationId": "createOrganizationSamlRole",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "createOrganizationSamlRole",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "role": {
                  "description": "The role of the SAML administrator",
                  "type": "string"
                },
                "orgAccess": {
                  "description": "The privilege of the SAML administrator on the organization",
                  "type": "string"
                },
                "tags": {
                  "description": "The list of tags that the SAML administrator has privileges on",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "tag": {
                        "description": "The name of the tag",
                        "type": "string"
                      },
                      "access": {
                        "description": "The privilege of the SAML administrator on the tag",
                        "type": "string"
                      }
                    }
                  }
                },
                "networks": {
                  "description": "The list of networks that the SAML administrator has privileges on",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "The network ID",
                        "type": "string"
                      },
                      "access": {
                        "description": "The privilege of the SAML administrator on the network",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "TEdJIEN1c3RvbWVy",
                "role": "myrole",
                "orgAccess": "none",
                "networks": [
                  {
                    "id": "N_1234",
                    "access": "full"
                  }
                ],
                "tags": [
                  {
                    "tag": "west",
                    "access": "read-only"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "SAML roles"
        ]
      }
    },
    {
      "ruleId": "edit-operation-id",
      "message": "`/networks/{networkId}/sm/targetGroups` (post) - OperationId turned from `createNetworkSmTargetGroups` to `createNetworkSmTargetGroup`",
      "messageHtml": "OperationId turned from <code>createNetworkSmTargetGroups</code> to <code>createNetworkSmTargetGroup</code>",
      "path": "/networks/{networkId}/sm/targetGroups",
      "method": "post",
      "previousOperationId": "createNetworkSmTargetGroups",
      "currentOperationId": "createNetworkSmTargetGroup",
      "type": "warnings",
      "name": "Major",
      "group": "Named tag scope",
      "apiDetails": {
        "summary": "Add a target group",
        "description": "Add a target group",
        "operationId": "createNetworkSmTargetGroup",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "createNetworkSmTargetGroup",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of this target group",
                  "type": "string"
                },
                "scope": {
                  "description": "The scope and tag options of the target group. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none, followed by tags",
                  "type": "string"
                }
              },
              "example": {
                "name": "My target group",
                "scope": "none",
                "tags": "[]",
                "type": "devices"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "name": "My target group",
                "scope": "none",
                "tags": "[]",
                "type": "devices"
              }
            }
          }
        },
        "tags": [
          "Named tag scope"
        ]
      }
    },
    {
      "ruleId": "edit-operation-id",
      "message": "`/networks/{network_id}/sm/app/polaris/{appId}` (put) - OperationId turned from `updateNetworkSmAppPolari` to `updateNetworkSmAppPolaris`",
      "messageHtml": "OperationId turned from <code>updateNetworkSmAppPolari</code> to <code>updateNetworkSmAppPolaris</code>",
      "path": "/networks/{network_id}/sm/app/polaris/{appId}",
      "method": "put",
      "previousOperationId": "updateNetworkSmAppPolari",
      "currentOperationId": "updateNetworkSmAppPolaris",
      "type": "warnings",
      "name": "Major",
      "group": "SM",
      "apiDetails": {
        "summary": "Update an existing Polaris app",
        "description": "Update an existing Polaris app",
        "operationId": "updateNetworkSmAppPolaris",
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "appId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkSmAppPolaris",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "scope": {
                  "description": "The scope (one of all, none, automatic, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned",
                  "type": "string"
                },
                "preventAutoInstall": {
                  "description": "Whether or not SM should auto-install this app (one of true or false). False by default.",
                  "type": "string"
                },
                "usesVPP": {
                  "description": "Whether or not the app should use VPP by device assignment (one of true or false). False by default.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            }
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    {
      "ruleId": "edit-operation-id",
      "message": "`/networks/{network_id}/sm/app/polaris/{appId}` (delete) - OperationId turned from `deleteNetworkSmAppPolari` to `deleteNetworkSmAppPolaris`",
      "messageHtml": "OperationId turned from <code>deleteNetworkSmAppPolari</code> to <code>deleteNetworkSmAppPolaris</code>",
      "path": "/networks/{network_id}/sm/app/polaris/{appId}",
      "method": "delete",
      "previousOperationId": "deleteNetworkSmAppPolari",
      "currentOperationId": "deleteNetworkSmAppPolaris",
      "type": "warnings",
      "name": "Major",
      "group": "SM",
      "apiDetails": {
        "summary": "Delete a Cisco Polaris app",
        "description": "Delete a Cisco Polaris app",
        "operationId": "deleteNetworkSmAppPolaris",
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "appId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    {
      "ruleId": "edit-operation-id",
      "message": "`/networks/{network_id}/sm/devices/lock` (put) - OperationId turned from `updateNetworkSmDevicesLock` to `lockNetworkSmDevices`",
      "messageHtml": "OperationId turned from <code>updateNetworkSmDevicesLock</code> to <code>lockNetworkSmDevices</code>",
      "path": "/networks/{network_id}/sm/devices/lock",
      "method": "put",
      "previousOperationId": "updateNetworkSmDevicesLock",
      "currentOperationId": "lockNetworkSmDevices",
      "type": "warnings",
      "name": "Major",
      "group": "SM",
      "apiDetails": {
        "summary": "Lock a set of devices",
        "description": "Lock a set of devices",
        "operationId": "lockNetworkSmDevices",
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "lockNetworkSmDevices",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "wifiMacs": {
                  "description": "The wifiMacs of the devices to be locked.",
                  "type": "string"
                },
                "ids": {
                  "description": "The ids of the devices to be locked.",
                  "type": "string"
                },
                "serials": {
                  "description": "The serials of the devices to be locked.",
                  "type": "string"
                },
                "scope": {
                  "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be wiped.",
                  "type": "string"
                },
                "pin": {
                  "description": "The pin number for locking macOS devices (a six digit number). Required only for macOS devices.",
                  "type": "string"
                }
              },
              "example": {
                "ids": "\"1284392014819\""
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    {
      "ruleId": "edit-operation-id",
      "message": "`/networks/{network_id}/sm/device/wipe` (put) - OperationId turned from `updateNetworkSmDeviceWipe` to `wipeNetworkSmDevice`",
      "messageHtml": "OperationId turned from <code>updateNetworkSmDeviceWipe</code> to <code>wipeNetworkSmDevice</code>",
      "path": "/networks/{network_id}/sm/device/wipe",
      "method": "put",
      "previousOperationId": "updateNetworkSmDeviceWipe",
      "currentOperationId": "wipeNetworkSmDevice",
      "type": "warnings",
      "name": "Major",
      "group": "SM",
      "apiDetails": {
        "summary": "Wipe a device",
        "description": "Wipe a device",
        "operationId": "wipeNetworkSmDevice",
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "wipeNetworkSmDevice",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "wifiMac": {
                  "description": "The wifiMac of the device to be wiped.",
                  "type": "string"
                },
                "id": {
                  "description": "The id of the device to be wiped.",
                  "type": "string"
                },
                "serial": {
                  "description": "The serial of the device to be wiped.",
                  "type": "string"
                },
                "pin": {
                  "description": "The pin number (a six digit value) for wiping a macOS device. Required only for macOS devices.",
                  "type": "string"
                }
              },
              "example": {
                "id": "1284392014819"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    {
      "ruleId": "edit-operation-id",
      "message": "`/networks/{network_id}/sm/devices/checkin` (put) - OperationId turned from `updateNetworkSmDevicesCheckin` to `checkinNetworkSmDevices`",
      "messageHtml": "OperationId turned from <code>updateNetworkSmDevicesCheckin</code> to <code>checkinNetworkSmDevices</code>",
      "path": "/networks/{network_id}/sm/devices/checkin",
      "method": "put",
      "previousOperationId": "updateNetworkSmDevicesCheckin",
      "currentOperationId": "checkinNetworkSmDevices",
      "type": "warnings",
      "name": "Major",
      "group": "SM",
      "apiDetails": {
        "summary": "Force check-in a set of devices",
        "description": "Force check-in a set of devices",
        "operationId": "checkinNetworkSmDevices",
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "checkinNetworkSmDevices",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "wifiMacs": {
                  "description": "The wifiMacs of the devices to be checked-in.",
                  "type": "string"
                },
                "ids": {
                  "description": "The ids of the devices to be checked-in.",
                  "type": "string"
                },
                "serials": {
                  "description": "The serials of the devices to be checked-in.",
                  "type": "string"
                },
                "scope": {
                  "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be checked-in.",
                  "type": "string"
                }
              },
              "example": {
                "ids": "\"1284392014819\""
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    {
      "ruleId": "edit-operation-id",
      "message": "`/networks/{network_id}/sm/devices/move` (put) - OperationId turned from `updateNetworkSmDevicesMove` to `moveNetworkSmDevices`",
      "messageHtml": "OperationId turned from <code>updateNetworkSmDevicesMove</code> to <code>moveNetworkSmDevices</code>",
      "path": "/networks/{network_id}/sm/devices/move",
      "method": "put",
      "previousOperationId": "updateNetworkSmDevicesMove",
      "currentOperationId": "moveNetworkSmDevices",
      "type": "warnings",
      "name": "Major",
      "group": "SM",
      "apiDetails": {
        "summary": "Move a set of devices to a new network",
        "description": "Move a set of devices to a new network",
        "operationId": "moveNetworkSmDevices",
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "moveNetworkSmDevices",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "wifiMacs": {
                  "description": "The wifiMacs of the devices to be moved.",
                  "type": "string"
                },
                "ids": {
                  "description": "The ids of the devices to be moved.",
                  "type": "string"
                },
                "serials": {
                  "description": "The serials of the devices to be moved.",
                  "type": "string"
                },
                "scope": {
                  "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be moved.",
                  "type": "string"
                },
                "newNetwork": {
                  "description": "The new network to which the devices will be moved.",
                  "type": "string"
                }
              },
              "example": {
                "ids": "\"1284392014819\"",
                "newNetwork": "N_24329156"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    {
      "ruleId": "edit-operation-id",
      "message": "`/networks/{networkId}/switchStacks` (post) - OperationId turned from `createNetworkSwitchStacks` to `createNetworkSwitchStack`",
      "messageHtml": "OperationId turned from <code>createNetworkSwitchStacks</code> to <code>createNetworkSwitchStack</code>",
      "path": "/networks/{networkId}/switchStacks",
      "method": "post",
      "previousOperationId": "createNetworkSwitchStacks",
      "currentOperationId": "createNetworkSwitchStack",
      "type": "warnings",
      "name": "Major",
      "group": "Switch stacks",
      "apiDetails": {
        "summary": "Create a stack",
        "description": "Create a stack",
        "operationId": "createNetworkSwitchStack",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "createNetworkSwitchStack",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the new stack",
                  "required": true
                },
                "serials": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "An array of switch serials to be added into the new stack",
                  "required": true
                }
              },
              "example": {
                "name": "A cool stack",
                "serials": [
                  "QBZY-XWVU-TSRQ",
                  "QBAB-CDEF-GHIJ"
                ]
              }
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "8473",
                "name": "A cool stack",
                "serials": [
                  "QBZY-XWVU-TSRQ",
                  "QBAB-CDEF-GHIJ"
                ]
              }
            }
          }
        },
        "tags": [
          "Switch stacks"
        ]
      }
    },
    {
      "ruleId": "edit-object-property-required",
      "message": "`paths//networks/{networkId}/syslogServers/put/parameters/updateNetworkSyslogServers/schema/properties/servers/items` - Property `host` became required",
      "messageHtml": "Property <code>host</code> became required",
      "objectPath": "paths//networks/{networkId}/syslogServers/put/parameters/updateNetworkSyslogServers/schema/properties/servers/items",
      "path": "/networks/{networkId}/syslogServers",
      "method": "put",
      "property": "host",
      "type": "warnings",
      "name": "Major",
      "group": "Syslog servers",
      "apiDetails": {
        "summary": "Update the syslog servers for a network",
        "description": "Update the syslog servers for a network",
        "operationId": "updateNetworkSyslogServers",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkSyslogServers",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "servers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "host": {
                        "type": "string",
                        "description": "The IP address of the syslog server",
                        "required": true
                      },
                      "port": {
                        "type": "integer",
                        "description": "The port of the syslog server",
                        "required": true
                      },
                      "roles": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "A list of roles for the syslog server. Options (case-insensitive): 'Wireless event log', 'Appliance event log', 'Switch event log', 'Air Marshal events', 'Flows', 'URLs', 'IDS alerts', 'Security events'",
                        "required": true
                      }
                    }
                  },
                  "description": "A list of the syslog servers for this network",
                  "required": true
                }
              },
              "example": {
                "servers": [
                  {
                    "host": "1.2.3.4",
                    "port": 443,
                    "roles": [
                      "Wireless event log",
                      "URLs"
                    ]
                  }
                ]
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "host": "1.2.3.4",
                  "port": 443,
                  "roles": [
                    "Wireless event log",
                    "URLs"
                  ]
                }
              ]
            }
          }
        },
        "tags": [
          "Syslog servers"
        ]
      }
    },
    {
      "ruleId": "edit-object-property-required",
      "message": "`paths//networks/{networkId}/syslogServers/put/parameters/updateNetworkSyslogServers/schema/properties/servers/items` - Property `port` became required",
      "messageHtml": "Property <code>port</code> became required",
      "objectPath": "paths//networks/{networkId}/syslogServers/put/parameters/updateNetworkSyslogServers/schema/properties/servers/items",
      "path": "/networks/{networkId}/syslogServers",
      "method": "put",
      "property": "port",
      "type": "warnings",
      "name": "Major",
      "group": "Syslog servers",
      "apiDetails": {
        "summary": "Update the syslog servers for a network",
        "description": "Update the syslog servers for a network",
        "operationId": "updateNetworkSyslogServers",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkSyslogServers",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "servers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "host": {
                        "type": "string",
                        "description": "The IP address of the syslog server",
                        "required": true
                      },
                      "port": {
                        "type": "integer",
                        "description": "The port of the syslog server",
                        "required": true
                      },
                      "roles": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "A list of roles for the syslog server. Options (case-insensitive): 'Wireless event log', 'Appliance event log', 'Switch event log', 'Air Marshal events', 'Flows', 'URLs', 'IDS alerts', 'Security events'",
                        "required": true
                      }
                    }
                  },
                  "description": "A list of the syslog servers for this network",
                  "required": true
                }
              },
              "example": {
                "servers": [
                  {
                    "host": "1.2.3.4",
                    "port": 443,
                    "roles": [
                      "Wireless event log",
                      "URLs"
                    ]
                  }
                ]
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "host": "1.2.3.4",
                  "port": 443,
                  "roles": [
                    "Wireless event log",
                    "URLs"
                  ]
                }
              ]
            }
          }
        },
        "tags": [
          "Syslog servers"
        ]
      }
    },
    {
      "ruleId": "edit-object-property-required",
      "message": "`paths//networks/{networkId}/syslogServers/put/parameters/updateNetworkSyslogServers/schema/properties/servers/items` - Property `roles` became required",
      "messageHtml": "Property <code>roles</code> became required",
      "objectPath": "paths//networks/{networkId}/syslogServers/put/parameters/updateNetworkSyslogServers/schema/properties/servers/items",
      "path": "/networks/{networkId}/syslogServers",
      "method": "put",
      "property": "roles",
      "type": "warnings",
      "name": "Major",
      "group": "Syslog servers",
      "apiDetails": {
        "summary": "Update the syslog servers for a network",
        "description": "Update the syslog servers for a network",
        "operationId": "updateNetworkSyslogServers",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkSyslogServers",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "servers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "host": {
                        "type": "string",
                        "description": "The IP address of the syslog server",
                        "required": true
                      },
                      "port": {
                        "type": "integer",
                        "description": "The port of the syslog server",
                        "required": true
                      },
                      "roles": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "A list of roles for the syslog server. Options (case-insensitive): 'Wireless event log', 'Appliance event log', 'Switch event log', 'Air Marshal events', 'Flows', 'URLs', 'IDS alerts', 'Security events'",
                        "required": true
                      }
                    }
                  },
                  "description": "A list of the syslog servers for this network",
                  "required": true
                }
              },
              "example": {
                "servers": [
                  {
                    "host": "1.2.3.4",
                    "port": 443,
                    "roles": [
                      "Wireless event log",
                      "URLs"
                    ]
                  }
                ]
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "host": "1.2.3.4",
                  "port": 443,
                  "roles": [
                    "Wireless event log",
                    "URLs"
                  ]
                }
              ]
            }
          }
        },
        "tags": [
          "Syslog servers"
        ]
      }
    },
    {
      "ruleId": "edit-object-property-required",
      "message": "`paths//networks/{networkId}/syslogServers/put/parameters/updateNetworkSyslogServers/schema` - Property `servers` became required",
      "messageHtml": "Property <code>servers</code> became required",
      "objectPath": "paths//networks/{networkId}/syslogServers/put/parameters/updateNetworkSyslogServers/schema",
      "path": "/networks/{networkId}/syslogServers",
      "method": "put",
      "property": "servers",
      "type": "warnings",
      "name": "Major",
      "group": "Syslog servers",
      "apiDetails": {
        "summary": "Update the syslog servers for a network",
        "description": "Update the syslog servers for a network",
        "operationId": "updateNetworkSyslogServers",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkSyslogServers",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "servers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "host": {
                        "type": "string",
                        "description": "The IP address of the syslog server",
                        "required": true
                      },
                      "port": {
                        "type": "integer",
                        "description": "The port of the syslog server",
                        "required": true
                      },
                      "roles": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "A list of roles for the syslog server. Options (case-insensitive): 'Wireless event log', 'Appliance event log', 'Switch event log', 'Air Marshal events', 'Flows', 'URLs', 'IDS alerts', 'Security events'",
                        "required": true
                      }
                    }
                  },
                  "description": "A list of the syslog servers for this network",
                  "required": true
                }
              },
              "example": {
                "servers": [
                  {
                    "host": "1.2.3.4",
                    "port": 443,
                    "roles": [
                      "Wireless event log",
                      "URLs"
                    ]
                  }
                ]
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "host": "1.2.3.4",
                  "port": 443,
                  "roles": [
                    "Wireless event log",
                    "URLs"
                  ]
                }
              ]
            }
          }
        },
        "tags": [
          "Syslog servers"
        ]
      }
    },
    {
      "ruleId": "edit-param-required",
      "message": "`/networks/{networkId}/syslogServers` (put) - Param `updateNetworkSyslogServers` became required",
      "messageHtml": "Param <code>updateNetworkSyslogServers</code> became required",
      "path": "/networks/{networkId}/syslogServers",
      "method": "put",
      "param": "updateNetworkSyslogServers",
      "type": "warnings",
      "name": "Major",
      "group": "Syslog servers",
      "apiDetails": {
        "summary": "Update the syslog servers for a network",
        "description": "Update the syslog servers for a network",
        "operationId": "updateNetworkSyslogServers",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkSyslogServers",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "servers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "host": {
                        "type": "string",
                        "description": "The IP address of the syslog server",
                        "required": true
                      },
                      "port": {
                        "type": "integer",
                        "description": "The port of the syslog server",
                        "required": true
                      },
                      "roles": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "A list of roles for the syslog server. Options (case-insensitive): 'Wireless event log', 'Appliance event log', 'Switch event log', 'Air Marshal events', 'Flows', 'URLs', 'IDS alerts', 'Security events'",
                        "required": true
                      }
                    }
                  },
                  "description": "A list of the syslog servers for this network",
                  "required": true
                }
              },
              "example": {
                "servers": [
                  {
                    "host": "1.2.3.4",
                    "port": 443,
                    "roles": [
                      "Wireless event log",
                      "URLs"
                    ]
                  }
                ]
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "host": "1.2.3.4",
                  "port": 443,
                  "roles": [
                    "Wireless event log",
                    "URLs"
                  ]
                }
              ]
            }
          }
        },
        "tags": [
          "Syslog servers"
        ]
      }
    },
    {
      "ruleId": "edit-operation-id",
      "message": "`/networks/{networkId}/staticRoutes` (post) - OperationId turned from `createNetworkStaticRoutes` to `createNetworkStaticRoute`",
      "messageHtml": "OperationId turned from <code>createNetworkStaticRoutes</code> to <code>createNetworkStaticRoute</code>",
      "path": "/networks/{networkId}/staticRoutes",
      "method": "post",
      "previousOperationId": "createNetworkStaticRoutes",
      "currentOperationId": "createNetworkStaticRoute",
      "type": "warnings",
      "name": "Major",
      "group": "Static routes",
      "apiDetails": {
        "summary": "Add a static route",
        "description": "Add a static route",
        "operationId": "createNetworkStaticRoute",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "createNetworkStaticRoute",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the new static route",
                  "type": "string"
                },
                "subnet": {
                  "description": "The subnet of the static route",
                  "type": "string"
                },
                "gatewayIp": {
                  "description": "The gateway IP (next hop) of the static route",
                  "type": "string"
                }
              },
              "example": {
                "name": "My route",
                "subnet": "192.168.1.0/24",
                "gatewayIp": "1.2.3.5"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "name": "My route",
                "subnet": "192.168.1.0/24",
                "gatewayIp": "1.2.3.5"
              }
            }
          }
        },
        "tags": [
          "Static routes"
        ]
      }
    },
    {
      "ruleId": "edit-operation-id",
      "message": "`/networks/{networkId}/vlans` (post) - OperationId turned from `createNetworkVlans` to `createNetworkVlan`",
      "messageHtml": "OperationId turned from <code>createNetworkVlans</code> to <code>createNetworkVlan</code>",
      "path": "/networks/{networkId}/vlans",
      "method": "post",
      "previousOperationId": "createNetworkVlans",
      "currentOperationId": "createNetworkVlan",
      "type": "warnings",
      "name": "Major",
      "group": "VLANs",
      "apiDetails": {
        "summary": "Add a VLAN",
        "description": "Add a VLAN",
        "operationId": "createNetworkVlan",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "createNetworkVlan",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The VLAN ID of the new VLAN (must be between 1 and 4094)",
                  "required": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the new VLAN",
                  "required": true
                },
                "subnet": {
                  "type": "string",
                  "description": "The subnet of the VLAN",
                  "required": true
                },
                "applianceIp": {
                  "type": "string",
                  "description": "The local IP of the appliance on the VLAN",
                  "required": true
                }
              },
              "example": {
                "id": "1234",
                "name": "My VLAN",
                "subnet": "192.168.1.0/24",
                "applianceIp": "1.2.3.4"
              }
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "1234",
                "networkId": "N_24329156",
                "name": "My VLAN",
                "applianceIp": "1.2.3.4",
                "subnet": "192.168.1.0/24",
                "fixedIpAssignments": {},
                "reservedIpRanges": [],
                "dnsNameservers": "google_dns",
                "dhcpHandling": "Run a DHCP server",
                "dhcpLeaseTime": "1 day",
                "dhcpBootOptionsEnabled": false,
                "dhcpBootNextServer": null,
                "dhcpBootFilename": null,
                "dhcpOptions": []
              }
            }
          }
        },
        "tags": [
          "VLANs"
        ]
      }
    },
    {
      "ruleId": "delete-param",
      "message": "`/networks/{networkId}/cameras/{serial}/snapshot` (post) - Param `snapshotNetworkCamera` deleted",
      "messageHtml": "Param <code>snapshotNetworkCamera</code> Deleted",
      "path": "/networks/{networkId}/cameras/{serial}/snapshot",
      "method": "post",
      "param": "snapshotNetworkCamera",
      "type": "infos",
      "name": "Changes",
      "group": "Cameras",
      "apiDetails": {
        "summary": "Generate a snapshot of what the camera sees at the specified time and return a link to that image.",
        "description": "Generate a snapshot of what the camera sees at the specified time and return a link to that image.",
        "operationId": "generateNetworkCameraSnapshot",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "generateNetworkCameraSnapshot",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "timestamp": {
                  "type": "string",
                  "description": "[optional] The snapshot will be taken from this time on the camera. The timestamp is expected to be in ISO 8601 format. If no timestamp is specified, we will assume current time."
                }
              },
              "example": {}
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "url": "https://spn4.meraki.com/stream/jpeg/snapshot/b2d123asdf423qd22d2",
                "expiry": "Access to the image will expire at 2018-12-11T03:12:39Z."
              }
            }
          }
        },
        "tags": [
          "Cameras"
        ]
      }
    },
    {
      "ruleId": "add-optional-param",
      "message": "`/networks/{networkId}/cameras/{serial}/snapshot` (post) - Optional param `generateNetworkCameraSnapshot` added",
      "messageHtml": "Optional param <code>generateNetworkCameraSnapshot</code> added",
      "path": "/networks/{networkId}/cameras/{serial}/snapshot",
      "method": "post",
      "param": "generateNetworkCameraSnapshot",
      "type": "infos",
      "name": "Changes",
      "group": "Cameras",
      "apiDetails": {
        "summary": "Generate a snapshot of what the camera sees at the specified time and return a link to that image.",
        "description": "Generate a snapshot of what the camera sees at the specified time and return a link to that image.",
        "operationId": "generateNetworkCameraSnapshot",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "generateNetworkCameraSnapshot",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "timestamp": {
                  "type": "string",
                  "description": "[optional] The snapshot will be taken from this time on the camera. The timestamp is expected to be in ISO 8601 format. If no timestamp is specified, we will assume current time."
                }
              },
              "example": {}
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "url": "https://spn4.meraki.com/stream/jpeg/snapshot/b2d123asdf423qd22d2",
                "expiry": "Access to the image will expire at 2018-12-11T03:12:39Z."
              }
            }
          }
        },
        "tags": [
          "Cameras"
        ]
      }
    },
    {
      "ruleId": "add-method",
      "message": "`/organizations/{organizationId}/configTemplates/{id}` (put) - Method added",
      "messageHtml": "Method added",
      "path": "/organizations/{organizationId}/configTemplates/{id}",
      "method": "put",
      "type": "infos",
      "name": "Changes",
      "group": "Config templates",
      "apiDetails": {
        "summary": "Update a configuration template",
        "description": "Update a configuration template",
        "operationId": "updateOrganizationConfigTemplate",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateOrganizationConfigTemplate",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the configuration template",
                  "type": "string"
                },
                "timeZone": {
                  "description": "The timezone of the configuration template. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article.</a>",
                  "type": "string"
                },
                "version": {
                  "description": "The name of the version to upgrade the template to",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "N_24329156",
                "name": "My config template"
              }
            }
          }
        },
        "tags": [
          "Config templates"
        ]
      }
    },
    {
      "ruleId": "delete-param",
      "message": "`/networks/{networkId}/devices/{serial}/blinkLeds` (post) - Param `blinkLedsNetworkDevice` deleted",
      "messageHtml": "Param <code>blinkLedsNetworkDevice</code> Deleted",
      "path": "/networks/{networkId}/devices/{serial}/blinkLeds",
      "method": "post",
      "param": "blinkLedsNetworkDevice",
      "type": "infos",
      "name": "Changes",
      "group": "Devices",
      "apiDetails": {
        "summary": "Blink the LEDs on a device",
        "description": "Blink the LEDs on a device",
        "operationId": "blinkNetworkDeviceLeds",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "blinkNetworkDeviceLeds",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "duration": {
                  "type": "integer",
                  "description": "The duration in seconds. Must be between 5 and 120. Default is 20 seconds"
                },
                "period": {
                  "type": "integer",
                  "description": "The period in milliseconds. Must be between 100 and 1000. Default is 160 milliseconds"
                },
                "duty": {
                  "type": "integer",
                  "description": "The duty cycle as the percent active. Must be between 10 and 90. Default is 50."
                }
              },
              "example": {
                "duration": 20,
                "period": 160,
                "duty": 50
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "sentToDevice": true
              }
            }
          }
        },
        "tags": [
          "Devices"
        ]
      }
    },
    {
      "ruleId": "add-optional-param",
      "message": "`/networks/{networkId}/devices/{serial}/blinkLeds` (post) - Optional param `blinkNetworkDeviceLeds` added",
      "messageHtml": "Optional param <code>blinkNetworkDeviceLeds</code> added",
      "path": "/networks/{networkId}/devices/{serial}/blinkLeds",
      "method": "post",
      "param": "blinkNetworkDeviceLeds",
      "type": "infos",
      "name": "Changes",
      "group": "Devices",
      "apiDetails": {
        "summary": "Blink the LEDs on a device",
        "description": "Blink the LEDs on a device",
        "operationId": "blinkNetworkDeviceLeds",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "blinkNetworkDeviceLeds",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "duration": {
                  "type": "integer",
                  "description": "The duration in seconds. Must be between 5 and 120. Default is 20 seconds"
                },
                "period": {
                  "type": "integer",
                  "description": "The period in milliseconds. Must be between 100 and 1000. Default is 160 milliseconds"
                },
                "duty": {
                  "type": "integer",
                  "description": "The duty cycle as the percent active. Must be between 10 and 90. Default is 50."
                }
              },
              "example": {
                "duration": 20,
                "period": 160,
                "duty": 50
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "sentToDevice": true
              }
            }
          }
        },
        "tags": [
          "Devices"
        ]
      }
    },
    {
      "ruleId": "add-optional-object-property",
      "message": "`paths//networks/{networkId}/groupPolicies/{groupPolicyId}/put/parameters/updateNetworkGroupPolicy/schema` - Optional property `firewallAndTrafficShaping` Added",
      "messageHtml": "Optional property <code>firewallAndTrafficShaping</code> Added",
      "path": "/networks/{networkId}/groupPolicies/{groupPolicyId}",
      "method": "put",
      "objectPath": "paths//networks/{networkId}/groupPolicies/{groupPolicyId}/put/parameters/updateNetworkGroupPolicy/schema",
      "property": "firewallAndTrafficShaping",
      "type": "infos",
      "name": "Changes",
      "group": "Group policies",
      "apiDetails": {
        "summary": "Update a group policy",
        "description": "Update a group policy",
        "operationId": "updateNetworkGroupPolicy",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "groupPolicyId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkGroupPolicy",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name for your group policy."
                },
                "scheduling": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "Whether scheduling is enabled (true) or disabled (false). Defaults to false. If true, the schedule objects for each day of the week (monday - sunday) are parsed."
                    },
                    "monday": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                        },
                        "from": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                        },
                        "to": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                        }
                      },
                      "description": "The schedule object for Monday."
                    },
                    "tuesday": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                        },
                        "from": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                        },
                        "to": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                        }
                      },
                      "description": "The schedule object for Tuesday."
                    },
                    "wednesday": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                        },
                        "from": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                        },
                        "to": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                        }
                      },
                      "description": "The schedule object for Wednesday."
                    },
                    "thursday": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                        },
                        "from": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                        },
                        "to": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                        }
                      },
                      "description": "The schedule object for Thursday."
                    },
                    "friday": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                        },
                        "from": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                        },
                        "to": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                        }
                      },
                      "description": "The schedule object for Friday."
                    },
                    "saturday": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                        },
                        "from": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                        },
                        "to": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                        }
                      },
                      "description": "The schedule object for Saturday."
                    },
                    "sunday": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                        },
                        "from": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                        },
                        "to": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                        }
                      },
                      "description": "The schedule object for Sunday."
                    }
                  },
                  "description": "    The schedule for the group policy. Schedules are applied to days of the week.\n"
                },
                "bandwidth": {
                  "type": "object",
                  "properties": {
                    "settings": {
                      "type": "string",
                      "description": "How bandwidth limits are enforced. Can be 'network default', 'ignore' or 'custom'."
                    },
                    "bandwidthLimits": {
                      "type": "object",
                      "properties": {
                        "limitUp": {
                          "type": "integer",
                          "description": "The maximum upload limit (integer, in Kbps). null indicates no limit"
                        },
                        "limitDown": {
                          "type": "integer",
                          "description": "The maximum download limit (integer, in Kbps). null indicates no limit"
                        }
                      },
                      "description": "The bandwidth limits object, specifying upload and download speed for clients bound to the group policy. These are only enforced if 'settings' is set to 'custom'."
                    }
                  },
                  "description": "    The bandwidth settings for clients bound to your group policy.\n"
                },
                "firewallAndTrafficShaping": {
                  "type": "object",
                  "properties": {
                    "settings": {
                      "type": "string",
                      "description": "How firewall and traffic shaping rules are enforced. Can be 'network default', 'ignore' or 'custom'."
                    },
                    "trafficShapingRules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "definitions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "    If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": <string> }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).\n"
                                }
                              }
                            },
                            "description": "    A list of objects describing the definition of your traffic shaping rule. Each\n    definition object has the structure { \"type\": <string>, \"value\": <string OR object> }.\n    \"type\" can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.\n\n        If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n\n\n        If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": <string> }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).\n\n"
                          },
                          "perClientBandwidthLimits": {
                            "type": "object",
                            "properties": {
                              "settings": {
                                "type": "string",
                                "description": "'network default', 'ignore' or 'custom'"
                              },
                              "bandwidthLimits": {
                                "type": "object",
                                "properties": {
                                  "limitUp": {
                                    "type": "integer",
                                    "description": "The maximum upload limit (integer, in Kbps)."
                                  },
                                  "limitDown": {
                                    "type": "integer",
                                    "description": "The maximum download limit (integer, in Kbps)."
                                  }
                                },
                                "description": "The bandwidth limits object, specifying the upload and download speed."
                              }
                            },
                            "description": "    An object describing the bandwidth settings for your rule, with the structure\n    { \"settings\": <string> , \"bandwidthLimits\": { \"limitUp\": <integer>, \"limitDown\": <integer> } }.\n    'settings' can be set to 'network default', 'ignore' or 'custom'. While 'limitUp' and 'limitDown'\n    are the upload and download speeds, respectively, in Kbps (defaults to 5120).\n    Note that 'bandwidthLimits' are only enforced if 'settings' is set to 'custom'.\n"
                          },
                          "dscpTagValue": {
                            "type": "integer",
                            "description": "    The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.\n"
                          },
                          "pcpTagValue": {
                            "type": "integer",
                            "description": "    The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).\n    null means 'Do not set PCP tag'.\n"
                          },
                          "priority": {
                            "type": "string",
                            "description": "    A string, indicating the priority level for packets bound to your rule.\n    Can be 'low', 'normal' or 'high'.\n"
                          }
                        }
                      },
                      "description": "    An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.\n"
                    },
                    "l3FirewallRules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "comment": {
                            "type": "string",
                            "description": "Description of the rule (optional)"
                          },
                          "policy": {
                            "type": "string",
                            "description": "'Allow' or 'Deny' traffic specified by this rule",
                            "required": true
                          },
                          "protocol": {
                            "type": "string",
                            "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')",
                            "required": true
                          },
                          "srcPort": {
                            "type": "string",
                            "description": "Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'"
                          },
                          "srcCidr": {
                            "type": "string",
                            "description": "Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (note: FQDN not supported for source addresses)",
                            "required": true
                          },
                          "destPort": {
                            "type": "string",
                            "description": "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'"
                          },
                          "destCidr": {
                            "type": "string",
                            "description": "Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'",
                            "required": true
                          }
                        }
                      },
                      "description": "An ordered array of the L3 firewall rules"
                    },
                    "l7FirewallRules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "policy": {
                            "type": "string",
                            "enum": [
                              "deny"
                            ],
                            "description": "The policy applied to matching traffic. Must be 'deny'."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "application",
                              "applicationCategory",
                              "host",
                              "port",
                              "ipRange"
                            ],
                            "description": "Type of the L7 Rule. Must be 'application', 'applicationCategory', 'host', 'port' or 'ipRange'"
                          },
                          "value": {
                            "type": "string",
                            "description": "The 'value' of what you want to block. If 'type' is 'host', 'port' or 'ipRange', 'value' must be a string matching either a hostname (e.g. somewhere.com), a port (e.g. 8080), or an IP range (e.g. 192.1.0.0/16). If 'type' is 'application' or 'applicationCategory', then 'value' must be an object with an ID for the application."
                          }
                        }
                      },
                      "description": "An ordered array of L7 firewall rules"
                    }
                  },
                  "description": "    The firewall and traffic shaping rules and settings for your policy.\n"
                }
              },
              "example": {
                "name": "No video streaming",
                "scheduling": {
                  "enabled": true,
                  "monday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "tuesday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "wednesday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "thursday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "friday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "saturday": {
                    "active": false,
                    "from": "0:00",
                    "to": "24:00"
                  },
                  "sunday": {
                    "active": false,
                    "from": "0:00",
                    "to": "24:00"
                  }
                },
                "bandwidth": {
                  "settings": "custom",
                  "bandwidthLimits": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "name": "No video streaming",
                "groupPolicyId": "101",
                "scheduling": {
                  "enabled": true,
                  "monday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "tuesday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "wednesday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "thursday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "friday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "saturday": {
                    "active": false,
                    "from": "0:00",
                    "to": "24:00"
                  },
                  "sunday": {
                    "active": false,
                    "from": "0:00",
                    "to": "24:00"
                  }
                },
                "bandwidth": {
                  "settings": "custom",
                  "bandwidthLimits": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Group policies"
        ]
      }
    },
    {
      "ruleId": "delete-param",
      "message": "`/networks/{network_id}/sm/devices/lock` (put) - Param `updateNetworkSmDevicesLock` deleted",
      "messageHtml": "Param <code>updateNetworkSmDevicesLock</code> Deleted",
      "path": "/networks/{network_id}/sm/devices/lock",
      "method": "put",
      "param": "updateNetworkSmDevicesLock",
      "type": "infos",
      "name": "Changes",
      "group": "SM",
      "apiDetails": {
        "summary": "Lock a set of devices",
        "description": "Lock a set of devices",
        "operationId": "lockNetworkSmDevices",
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "lockNetworkSmDevices",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "wifiMacs": {
                  "description": "The wifiMacs of the devices to be locked.",
                  "type": "string"
                },
                "ids": {
                  "description": "The ids of the devices to be locked.",
                  "type": "string"
                },
                "serials": {
                  "description": "The serials of the devices to be locked.",
                  "type": "string"
                },
                "scope": {
                  "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be wiped.",
                  "type": "string"
                },
                "pin": {
                  "description": "The pin number for locking macOS devices (a six digit number). Required only for macOS devices.",
                  "type": "string"
                }
              },
              "example": {
                "ids": "\"1284392014819\""
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    {
      "ruleId": "add-optional-param",
      "message": "`/networks/{network_id}/sm/devices/lock` (put) - Optional param `lockNetworkSmDevices` added",
      "messageHtml": "Optional param <code>lockNetworkSmDevices</code> added",
      "path": "/networks/{network_id}/sm/devices/lock",
      "method": "put",
      "param": "lockNetworkSmDevices",
      "type": "infos",
      "name": "Changes",
      "group": "SM",
      "apiDetails": {
        "summary": "Lock a set of devices",
        "description": "Lock a set of devices",
        "operationId": "lockNetworkSmDevices",
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "lockNetworkSmDevices",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "wifiMacs": {
                  "description": "The wifiMacs of the devices to be locked.",
                  "type": "string"
                },
                "ids": {
                  "description": "The ids of the devices to be locked.",
                  "type": "string"
                },
                "serials": {
                  "description": "The serials of the devices to be locked.",
                  "type": "string"
                },
                "scope": {
                  "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be wiped.",
                  "type": "string"
                },
                "pin": {
                  "description": "The pin number for locking macOS devices (a six digit number). Required only for macOS devices.",
                  "type": "string"
                }
              },
              "example": {
                "ids": "\"1284392014819\""
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    {
      "ruleId": "delete-param",
      "message": "`/networks/{network_id}/sm/device/wipe` (put) - Param `updateNetworkSmDeviceWipe` deleted",
      "messageHtml": "Param <code>updateNetworkSmDeviceWipe</code> Deleted",
      "path": "/networks/{network_id}/sm/device/wipe",
      "method": "put",
      "param": "updateNetworkSmDeviceWipe",
      "type": "infos",
      "name": "Changes",
      "group": "SM",
      "apiDetails": {
        "summary": "Wipe a device",
        "description": "Wipe a device",
        "operationId": "wipeNetworkSmDevice",
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "wipeNetworkSmDevice",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "wifiMac": {
                  "description": "The wifiMac of the device to be wiped.",
                  "type": "string"
                },
                "id": {
                  "description": "The id of the device to be wiped.",
                  "type": "string"
                },
                "serial": {
                  "description": "The serial of the device to be wiped.",
                  "type": "string"
                },
                "pin": {
                  "description": "The pin number (a six digit value) for wiping a macOS device. Required only for macOS devices.",
                  "type": "string"
                }
              },
              "example": {
                "id": "1284392014819"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    {
      "ruleId": "add-optional-param",
      "message": "`/networks/{network_id}/sm/device/wipe` (put) - Optional param `wipeNetworkSmDevice` added",
      "messageHtml": "Optional param <code>wipeNetworkSmDevice</code> added",
      "path": "/networks/{network_id}/sm/device/wipe",
      "method": "put",
      "param": "wipeNetworkSmDevice",
      "type": "infos",
      "name": "Changes",
      "group": "SM",
      "apiDetails": {
        "summary": "Wipe a device",
        "description": "Wipe a device",
        "operationId": "wipeNetworkSmDevice",
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "wipeNetworkSmDevice",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "wifiMac": {
                  "description": "The wifiMac of the device to be wiped.",
                  "type": "string"
                },
                "id": {
                  "description": "The id of the device to be wiped.",
                  "type": "string"
                },
                "serial": {
                  "description": "The serial of the device to be wiped.",
                  "type": "string"
                },
                "pin": {
                  "description": "The pin number (a six digit value) for wiping a macOS device. Required only for macOS devices.",
                  "type": "string"
                }
              },
              "example": {
                "id": "1284392014819"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    {
      "ruleId": "delete-param",
      "message": "`/networks/{network_id}/sm/devices/checkin` (put) - Param `updateNetworkSmDevicesCheckin` deleted",
      "messageHtml": "Param <code>updateNetworkSmDevicesCheckin</code> Deleted",
      "path": "/networks/{network_id}/sm/devices/checkin",
      "method": "put",
      "param": "updateNetworkSmDevicesCheckin",
      "type": "infos",
      "name": "Changes",
      "group": "SM",
      "apiDetails": {
        "summary": "Force check-in a set of devices",
        "description": "Force check-in a set of devices",
        "operationId": "checkinNetworkSmDevices",
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "checkinNetworkSmDevices",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "wifiMacs": {
                  "description": "The wifiMacs of the devices to be checked-in.",
                  "type": "string"
                },
                "ids": {
                  "description": "The ids of the devices to be checked-in.",
                  "type": "string"
                },
                "serials": {
                  "description": "The serials of the devices to be checked-in.",
                  "type": "string"
                },
                "scope": {
                  "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be checked-in.",
                  "type": "string"
                }
              },
              "example": {
                "ids": "\"1284392014819\""
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    {
      "ruleId": "add-optional-param",
      "message": "`/networks/{network_id}/sm/devices/checkin` (put) - Optional param `checkinNetworkSmDevices` added",
      "messageHtml": "Optional param <code>checkinNetworkSmDevices</code> added",
      "path": "/networks/{network_id}/sm/devices/checkin",
      "method": "put",
      "param": "checkinNetworkSmDevices",
      "type": "infos",
      "name": "Changes",
      "group": "SM",
      "apiDetails": {
        "summary": "Force check-in a set of devices",
        "description": "Force check-in a set of devices",
        "operationId": "checkinNetworkSmDevices",
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "checkinNetworkSmDevices",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "wifiMacs": {
                  "description": "The wifiMacs of the devices to be checked-in.",
                  "type": "string"
                },
                "ids": {
                  "description": "The ids of the devices to be checked-in.",
                  "type": "string"
                },
                "serials": {
                  "description": "The serials of the devices to be checked-in.",
                  "type": "string"
                },
                "scope": {
                  "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be checked-in.",
                  "type": "string"
                }
              },
              "example": {
                "ids": "\"1284392014819\""
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    {
      "ruleId": "delete-param",
      "message": "`/networks/{network_id}/sm/devices/move` (put) - Param `updateNetworkSmDevicesMove` deleted",
      "messageHtml": "Param <code>updateNetworkSmDevicesMove</code> Deleted",
      "path": "/networks/{network_id}/sm/devices/move",
      "method": "put",
      "param": "updateNetworkSmDevicesMove",
      "type": "infos",
      "name": "Changes",
      "group": "SM",
      "apiDetails": {
        "summary": "Move a set of devices to a new network",
        "description": "Move a set of devices to a new network",
        "operationId": "moveNetworkSmDevices",
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "moveNetworkSmDevices",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "wifiMacs": {
                  "description": "The wifiMacs of the devices to be moved.",
                  "type": "string"
                },
                "ids": {
                  "description": "The ids of the devices to be moved.",
                  "type": "string"
                },
                "serials": {
                  "description": "The serials of the devices to be moved.",
                  "type": "string"
                },
                "scope": {
                  "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be moved.",
                  "type": "string"
                },
                "newNetwork": {
                  "description": "The new network to which the devices will be moved.",
                  "type": "string"
                }
              },
              "example": {
                "ids": "\"1284392014819\"",
                "newNetwork": "N_24329156"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    {
      "ruleId": "add-optional-param",
      "message": "`/networks/{network_id}/sm/devices/move` (put) - Optional param `moveNetworkSmDevices` added",
      "messageHtml": "Optional param <code>moveNetworkSmDevices</code> added",
      "path": "/networks/{network_id}/sm/devices/move",
      "method": "put",
      "param": "moveNetworkSmDevices",
      "type": "infos",
      "name": "Changes",
      "group": "SM",
      "apiDetails": {
        "summary": "Move a set of devices to a new network",
        "description": "Move a set of devices to a new network",
        "operationId": "moveNetworkSmDevices",
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "moveNetworkSmDevices",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "wifiMacs": {
                  "description": "The wifiMacs of the devices to be moved.",
                  "type": "string"
                },
                "ids": {
                  "description": "The ids of the devices to be moved.",
                  "type": "string"
                },
                "serials": {
                  "description": "The serials of the devices to be moved.",
                  "type": "string"
                },
                "scope": {
                  "description": "The scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be moved.",
                  "type": "string"
                },
                "newNetwork": {
                  "description": "The new network to which the devices will be moved.",
                  "type": "string"
                }
              },
              "example": {
                "ids": "\"1284392014819\"",
                "newNetwork": "N_24329156"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "success": true
              }
            }
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    {
      "ruleId": "add-optional-object-property",
      "message": "`paths//networks/{networkId}/ssids/{number}/put/parameters/updateNetworkSsid/schema` - Optional property `radiusAttributeForGroupPolicies` Added",
      "messageHtml": "Optional property <code>radiusAttributeForGroupPolicies</code> Added",
      "path": "/networks/{networkId}/ssids/{number}",
      "method": "put",
      "objectPath": "paths//networks/{networkId}/ssids/{number}/put/parameters/updateNetworkSsid/schema",
      "property": "radiusAttributeForGroupPolicies",
      "type": "infos",
      "name": "Changes",
      "group": "SSIDs",
      "apiDetails": {
        "summary": "Update the attributes of an SSID",
        "description": "Update the attributes of an SSID",
        "operationId": "updateNetworkSsid",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "number",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkSsid",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of an SSID",
                  "type": "string"
                },
                "enabled": {
                  "description": "Whether or not an SSID is enabled",
                  "type": "boolean"
                },
                "authMode": {
                  "description": "The association control method for the SSID ('open', 'psk', 'open-with-radius', '8021x-meraki', '8021x-radius')",
                  "type": "string"
                },
                "encryptionMode": {
                  "description": "The psk encryption mode for the SSID ('wpa', 'wep', 'wpa-eap')",
                  "type": "string"
                },
                "psk": {
                  "description": "The passkey for the SSID. This param is only valid if the authMode is 'psk'",
                  "type": "string"
                },
                "wpaEncryptionMode": {
                  "description": "The types of WPA encryption. ('WPA1 and WPA2', 'WPA2 only')",
                  "type": "string"
                },
                "splashPage": {
                  "description": "The type of splash page for the SSID ('None', 'Click-through splash page', 'Billing', 'Password-protected with Meraki RADIUS', 'Password-protected with custom RADIUS', 'Password-protected with Active Directory', 'Password-protected with LDAP', 'SMS authentication', 'Systems Manager Sentry', 'Facebook Wi-Fi', 'Google OAuth', 'Sponsored guest'). This attribute is not supported for template children.",
                  "type": "string"
                },
                "radiusServers": {
                  "description": "The RADIUS 802.1x servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius'",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "host": {
                        "description": "IP address of your RADIUS server",
                        "type": "string"
                      },
                      "port": {
                        "description": "UDP port the RADIUS server listens on for Access-requests",
                        "type": "string"
                      },
                      "secret": {
                        "description": "RADIUS client shared secret",
                        "type": "string"
                      }
                    }
                  }
                },
                "radiusCoaEnabled": {
                  "description": "If true, Meraki devices will act as a RADIUS Dynamic Authorization Server and will respond to RADIUS Change-of-Authorization and Disconnect messages sent by the RADIUS server.",
                  "type": "string"
                },
                "radiusFailoverPolicy": {
                  "description": "This policy determines how authentication requests should be handled in the event that all of the configured RADIUS servers are unreachable ('Deny access', 'Allow access')",
                  "type": "string"
                },
                "radiusLoadBalancingPolicy": {
                  "description": "This policy determines which RADIUS server will be contacted first in an authentication attempt and the ordering of any necessary retry attempts ('Strict priority order', 'Round robin')",
                  "type": "string"
                },
                "radiusAccountingEnabled": {
                  "description": "Whether or not RADIUS accounting is enabled. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius'",
                  "type": "string"
                },
                "radiusAccountingServers": {
                  "description": "The RADIUS accounting 802.1x servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius' and radiusAccountingEnabled is 'true'",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "host": {
                        "description": "IP address to which the APs will send RADIUS accounting messages",
                        "type": "string"
                      },
                      "port": {
                        "description": "Port on the RADIUS server that is listening for accounting messages",
                        "type": "string"
                      },
                      "secret": {
                        "description": "Shared key used to authenticate messages between the APs and RADIUS server",
                        "type": "string"
                      }
                    }
                  }
                },
                "radiusAttributeForGroupPolicies": {
                  "description": "Specify the RADIUS attribute used to look up group policies. Access points must receive this attribute in the RADIUS Access-Accept message. The value of the attribute must match the group policy name configured on this page (Filter-Id, Reply-Message, Airespace-ACL-Name, Aruba-User-Role)",
                  "type": "string"
                },
                "ipAssignmentMode": {
                  "description": "The client IP assignment mode ('NAT mode', 'Bridge mode', 'Layer 3 roaming', 'Layer 3 roaming with a concentrator', 'VPN')",
                  "type": "string"
                },
                "useVlanTagging": {
                  "description": "Direct trafic to use specific VLANs. This param is only valid with 'Bridge mode' and 'Layer 3 roaming'",
                  "type": "string"
                },
                "concentratorNetworkId": {
                  "description": "The concentrator to use for 'Layer 3 roaming with a concentrator' or 'VPN'.",
                  "type": "string"
                },
                "vlanId": {
                  "description": "The VLAN ID used for VLAN tagging. This param is only valid with 'Layer 3 roaming with a concentrator' and 'VPN'",
                  "type": "string"
                },
                "defaultVlanId": {
                  "description": "The default VLAN ID used for 'all other APs'. This param is only valid with 'Bridge mode' and 'Layer 3 roaming'",
                  "type": "string"
                },
                "apTagsAndVlanIds": {
                  "description": "The list of tags and VLAN IDs used for VLAN tagging. This param is only valid with 'Bridge mode', 'Layer 3 roaming'",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "tags": {
                        "description": "Comma-separated list of AP tags",
                        "type": "string"
                      },
                      "vlanId": {
                        "description": "Numerical identifier that is assigned to the VLAN",
                        "type": "string"
                      }
                    }
                  }
                },
                "walledGardenEnabled": {
                  "description": "Allow access to a configurable list of IP ranges, which users may access prior to sign-on.",
                  "type": "string"
                },
                "walledGardenRanges": {
                  "description": "Specify your walled garden by entering space-separated addresses, ranges using CIDR notation, domain names, and domain wildcards (e.g. 192.168.1.1/24 192.168.37.10/32 www.yahoo.com *.google.com). Meraki's splash page is automatically included in your walled garden.",
                  "type": "string"
                },
                "radiusOverride": {
                  "description": "If true, the RADIUS response can override VLAN tag. This is not valid with NAT mode client IP assignment.",
                  "type": "string"
                },
                "minBitrate": {
                  "description": "The minimum bitrate in Mbps. (1, 2, 5.5, 6, 9, 11, 12, 18, 24, 36, 48, 54)",
                  "type": "string"
                },
                "bandSelection": {
                  "description": "The client-serving radio frequencies. (Dual band operation, 5 GHz band only, Dual band operation with Band Steering)",
                  "type": "string"
                },
                "perClientBandwidthLimitUp": {
                  "description": "The upload bandwidth limit in Kbps. (0 represents no limit.)",
                  "type": "string"
                },
                "perClientBandwidthLimitDown": {
                  "description": "The download bandwidth limit in Kbps. (0 represents no limit.)",
                  "type": "string"
                }
              },
              "example": {
                "name": "My SSID",
                "enabled": true
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "number": 0,
                "name": "My SSID",
                "enabled": true,
                "splashPage": "Click-through splash page",
                "ssidAdminAccessible": false,
                "authMode": "open",
                "ipAssignmentMode": "NAT mode",
                "bandSelection": "5 GHz band only",
                "perClientBandwidthLimitUp": 0,
                "perClientBandwidthLimitDown": 0
              }
            }
          }
        },
        "tags": [
          "SSIDs"
        ]
      }
    },
    {
      "ruleId": "add-optional-object-property",
      "message": "`paths//networks/{networkId}/ssids/{number}/put/parameters/updateNetworkSsid/schema` - Optional property `radiusOverride` Added",
      "messageHtml": "Optional property <code>radiusOverride</code> Added",
      "path": "/networks/{networkId}/ssids/{number}",
      "method": "put",
      "objectPath": "paths//networks/{networkId}/ssids/{number}/put/parameters/updateNetworkSsid/schema",
      "property": "radiusOverride",
      "type": "infos",
      "name": "Changes",
      "group": "SSIDs",
      "apiDetails": {
        "summary": "Update the attributes of an SSID",
        "description": "Update the attributes of an SSID",
        "operationId": "updateNetworkSsid",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "number",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkSsid",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of an SSID",
                  "type": "string"
                },
                "enabled": {
                  "description": "Whether or not an SSID is enabled",
                  "type": "boolean"
                },
                "authMode": {
                  "description": "The association control method for the SSID ('open', 'psk', 'open-with-radius', '8021x-meraki', '8021x-radius')",
                  "type": "string"
                },
                "encryptionMode": {
                  "description": "The psk encryption mode for the SSID ('wpa', 'wep', 'wpa-eap')",
                  "type": "string"
                },
                "psk": {
                  "description": "The passkey for the SSID. This param is only valid if the authMode is 'psk'",
                  "type": "string"
                },
                "wpaEncryptionMode": {
                  "description": "The types of WPA encryption. ('WPA1 and WPA2', 'WPA2 only')",
                  "type": "string"
                },
                "splashPage": {
                  "description": "The type of splash page for the SSID ('None', 'Click-through splash page', 'Billing', 'Password-protected with Meraki RADIUS', 'Password-protected with custom RADIUS', 'Password-protected with Active Directory', 'Password-protected with LDAP', 'SMS authentication', 'Systems Manager Sentry', 'Facebook Wi-Fi', 'Google OAuth', 'Sponsored guest'). This attribute is not supported for template children.",
                  "type": "string"
                },
                "radiusServers": {
                  "description": "The RADIUS 802.1x servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius'",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "host": {
                        "description": "IP address of your RADIUS server",
                        "type": "string"
                      },
                      "port": {
                        "description": "UDP port the RADIUS server listens on for Access-requests",
                        "type": "string"
                      },
                      "secret": {
                        "description": "RADIUS client shared secret",
                        "type": "string"
                      }
                    }
                  }
                },
                "radiusCoaEnabled": {
                  "description": "If true, Meraki devices will act as a RADIUS Dynamic Authorization Server and will respond to RADIUS Change-of-Authorization and Disconnect messages sent by the RADIUS server.",
                  "type": "string"
                },
                "radiusFailoverPolicy": {
                  "description": "This policy determines how authentication requests should be handled in the event that all of the configured RADIUS servers are unreachable ('Deny access', 'Allow access')",
                  "type": "string"
                },
                "radiusLoadBalancingPolicy": {
                  "description": "This policy determines which RADIUS server will be contacted first in an authentication attempt and the ordering of any necessary retry attempts ('Strict priority order', 'Round robin')",
                  "type": "string"
                },
                "radiusAccountingEnabled": {
                  "description": "Whether or not RADIUS accounting is enabled. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius'",
                  "type": "string"
                },
                "radiusAccountingServers": {
                  "description": "The RADIUS accounting 802.1x servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius' and radiusAccountingEnabled is 'true'",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "host": {
                        "description": "IP address to which the APs will send RADIUS accounting messages",
                        "type": "string"
                      },
                      "port": {
                        "description": "Port on the RADIUS server that is listening for accounting messages",
                        "type": "string"
                      },
                      "secret": {
                        "description": "Shared key used to authenticate messages between the APs and RADIUS server",
                        "type": "string"
                      }
                    }
                  }
                },
                "radiusAttributeForGroupPolicies": {
                  "description": "Specify the RADIUS attribute used to look up group policies. Access points must receive this attribute in the RADIUS Access-Accept message. The value of the attribute must match the group policy name configured on this page (Filter-Id, Reply-Message, Airespace-ACL-Name, Aruba-User-Role)",
                  "type": "string"
                },
                "ipAssignmentMode": {
                  "description": "The client IP assignment mode ('NAT mode', 'Bridge mode', 'Layer 3 roaming', 'Layer 3 roaming with a concentrator', 'VPN')",
                  "type": "string"
                },
                "useVlanTagging": {
                  "description": "Direct trafic to use specific VLANs. This param is only valid with 'Bridge mode' and 'Layer 3 roaming'",
                  "type": "string"
                },
                "concentratorNetworkId": {
                  "description": "The concentrator to use for 'Layer 3 roaming with a concentrator' or 'VPN'.",
                  "type": "string"
                },
                "vlanId": {
                  "description": "The VLAN ID used for VLAN tagging. This param is only valid with 'Layer 3 roaming with a concentrator' and 'VPN'",
                  "type": "string"
                },
                "defaultVlanId": {
                  "description": "The default VLAN ID used for 'all other APs'. This param is only valid with 'Bridge mode' and 'Layer 3 roaming'",
                  "type": "string"
                },
                "apTagsAndVlanIds": {
                  "description": "The list of tags and VLAN IDs used for VLAN tagging. This param is only valid with 'Bridge mode', 'Layer 3 roaming'",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "tags": {
                        "description": "Comma-separated list of AP tags",
                        "type": "string"
                      },
                      "vlanId": {
                        "description": "Numerical identifier that is assigned to the VLAN",
                        "type": "string"
                      }
                    }
                  }
                },
                "walledGardenEnabled": {
                  "description": "Allow access to a configurable list of IP ranges, which users may access prior to sign-on.",
                  "type": "string"
                },
                "walledGardenRanges": {
                  "description": "Specify your walled garden by entering space-separated addresses, ranges using CIDR notation, domain names, and domain wildcards (e.g. 192.168.1.1/24 192.168.37.10/32 www.yahoo.com *.google.com). Meraki's splash page is automatically included in your walled garden.",
                  "type": "string"
                },
                "radiusOverride": {
                  "description": "If true, the RADIUS response can override VLAN tag. This is not valid with NAT mode client IP assignment.",
                  "type": "string"
                },
                "minBitrate": {
                  "description": "The minimum bitrate in Mbps. (1, 2, 5.5, 6, 9, 11, 12, 18, 24, 36, 48, 54)",
                  "type": "string"
                },
                "bandSelection": {
                  "description": "The client-serving radio frequencies. (Dual band operation, 5 GHz band only, Dual band operation with Band Steering)",
                  "type": "string"
                },
                "perClientBandwidthLimitUp": {
                  "description": "The upload bandwidth limit in Kbps. (0 represents no limit.)",
                  "type": "string"
                },
                "perClientBandwidthLimitDown": {
                  "description": "The download bandwidth limit in Kbps. (0 represents no limit.)",
                  "type": "string"
                }
              },
              "example": {
                "name": "My SSID",
                "enabled": true
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "number": 0,
                "name": "My SSID",
                "enabled": true,
                "splashPage": "Click-through splash page",
                "ssidAdminAccessible": false,
                "authMode": "open",
                "ipAssignmentMode": "NAT mode",
                "bandSelection": "5 GHz band only",
                "perClientBandwidthLimitUp": 0,
                "perClientBandwidthLimitDown": 0
              }
            }
          }
        },
        "tags": [
          "SSIDs"
        ]
      }
    },
    {
      "ruleId": "add-optional-param",
      "message": "`/networks/{networkId}/connectionStats` (get) - Optional param `timespan` added",
      "messageHtml": "Optional param <code>timespan</code> added",
      "path": "/networks/{networkId}/connectionStats",
      "method": "get",
      "param": "timespan",
      "type": "infos",
      "name": "Changes",
      "group": "Wireless health",
      "apiDetails": {
        "summary": "Aggregated connectivity info for this network",
        "description": "Aggregated connectivity info for this network",
        "operationId": "getNetworkConnectionStats",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
          },
          {
            "type": "string",
            "name": "t1",
            "in": "query",
            "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
          },
          {
            "type": "integer",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
          },
          {
            "type": "integer",
            "name": "ssid",
            "in": "query",
            "description": "Filter results by SSID"
          },
          {
            "type": "integer",
            "name": "vlan",
            "in": "query",
            "description": "Filter results by VLAN"
          },
          {
            "type": "string",
            "name": "apTag",
            "in": "query",
            "description": "Filter results by AP Tag"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "assoc": 1,
                "auth": 5,
                "dhcp": 0,
                "dns": 0,
                "success": 51
              }
            }
          }
        },
        "tags": [
          "Wireless health"
        ]
      }
    },
    {
      "ruleId": "add-optional-param",
      "message": "`/networks/{networkId}/devices/connectionStats` (get) - Optional param `timespan` added",
      "messageHtml": "Optional param <code>timespan</code> added",
      "path": "/networks/{networkId}/devices/connectionStats",
      "method": "get",
      "param": "timespan",
      "type": "infos",
      "name": "Changes",
      "group": "Wireless health",
      "apiDetails": {
        "summary": "Aggregated connectivity info for this network, grouped by node",
        "description": "Aggregated connectivity info for this network, grouped by node",
        "operationId": "getNetworkDevicesConnectionStats",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
          },
          {
            "type": "string",
            "name": "t1",
            "in": "query",
            "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
          },
          {
            "type": "integer",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
          },
          {
            "type": "integer",
            "name": "ssid",
            "in": "query",
            "description": "Filter results by SSID"
          },
          {
            "type": "integer",
            "name": "vlan",
            "in": "query",
            "description": "Filter results by VLAN"
          },
          {
            "type": "string",
            "name": "apTag",
            "in": "query",
            "description": "Filter results by AP Tag"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "serial": "Q2JC-2MJM-FHRD",
                  "connectionStats": {
                    "assoc": 0,
                    "auth": 1,
                    "dhcp": 0,
                    "dns": 0,
                    "success": 43
                  }
                },
                {
                  "serial": "Q2FJ-3SHB-Y2K2",
                  "connectionStats": {
                    "assoc": 1,
                    "auth": 4,
                    "dhcp": 0,
                    "dns": 0,
                    "success": 8
                  }
                }
              ]
            }
          }
        },
        "tags": [
          "Wireless health"
        ]
      }
    },
    {
      "ruleId": "add-optional-param",
      "message": "`/networks/{networkId}/devices/{serial}/connectionStats` (get) - Optional param `timespan` added",
      "messageHtml": "Optional param <code>timespan</code> added",
      "path": "/networks/{networkId}/devices/{serial}/connectionStats",
      "method": "get",
      "param": "timespan",
      "type": "infos",
      "name": "Changes",
      "group": "Wireless health",
      "apiDetails": {
        "summary": "Aggregated connectivity info for a given AP on this network",
        "description": "Aggregated connectivity info for a given AP on this network",
        "operationId": "getNetworkDeviceConnectionStats",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
          },
          {
            "type": "string",
            "name": "t1",
            "in": "query",
            "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
          },
          {
            "type": "integer",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
          },
          {
            "type": "integer",
            "name": "ssid",
            "in": "query",
            "description": "Filter results by SSID"
          },
          {
            "type": "integer",
            "name": "vlan",
            "in": "query",
            "description": "Filter results by VLAN"
          },
          {
            "type": "string",
            "name": "apTag",
            "in": "query",
            "description": "Filter results by AP Tag"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "serial": "Q2JC-2MJM-FHRD",
                "connectionStats": {
                  "assoc": 0,
                  "auth": 1,
                  "dhcp": 0,
                  "dns": 0,
                  "success": 43
                }
              }
            }
          }
        },
        "tags": [
          "Wireless health"
        ]
      }
    },
    {
      "ruleId": "add-optional-param",
      "message": "`/networks/{networkId}/clients/connectionStats` (get) - Optional param `timespan` added",
      "messageHtml": "Optional param <code>timespan</code> added",
      "path": "/networks/{networkId}/clients/connectionStats",
      "method": "get",
      "param": "timespan",
      "type": "infos",
      "name": "Changes",
      "group": "Wireless health",
      "apiDetails": {
        "summary": "Aggregated connectivity info for this network, grouped by clients",
        "description": "Aggregated connectivity info for this network, grouped by clients",
        "operationId": "getNetworkClientsConnectionStats",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
          },
          {
            "type": "string",
            "name": "t1",
            "in": "query",
            "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
          },
          {
            "type": "integer",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
          },
          {
            "type": "integer",
            "name": "ssid",
            "in": "query",
            "description": "Filter results by SSID"
          },
          {
            "type": "integer",
            "name": "vlan",
            "in": "query",
            "description": "Filter results by VLAN"
          },
          {
            "type": "string",
            "name": "apTag",
            "in": "query",
            "description": "Filter results by AP Tag"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "mac": "00:61:71:c8:51:27",
                  "connectionStats": {
                    "assoc": 0,
                    "auth": 4,
                    "dhcp": 0,
                    "dns": 0,
                    "success": 10
                  }
                },
                {
                  "mac": "1c:4d:70:7f:5e:5e",
                  "connectionStats": {
                    "assoc": 0,
                    "auth": 1,
                    "dhcp": 0,
                    "dns": 0,
                    "success": 24
                  }
                },
                {
                  "mac": "1c:4d:70:81:8d:0a",
                  "connectionStats": {
                    "assoc": 1,
                    "auth": 0,
                    "dhcp": 0,
                    "dns": 0,
                    "success": 16
                  }
                }
              ]
            }
          }
        },
        "tags": [
          "Wireless health"
        ]
      }
    },
    {
      "ruleId": "add-optional-param",
      "message": "`/networks/{networkId}/clients/{clientId}/connectionStats` (get) - Optional param `timespan` added",
      "messageHtml": "Optional param <code>timespan</code> added",
      "path": "/networks/{networkId}/clients/{clientId}/connectionStats",
      "method": "get",
      "param": "timespan",
      "type": "infos",
      "name": "Changes",
      "group": "Wireless health",
      "apiDetails": {
        "summary": "Aggregated connectivity info for a given client on this network",
        "description": "Aggregated connectivity info for a given client on this network",
        "operationId": "getNetworkClientConnectionStats",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "clientId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
          },
          {
            "type": "string",
            "name": "t1",
            "in": "query",
            "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
          },
          {
            "type": "integer",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
          },
          {
            "type": "integer",
            "name": "ssid",
            "in": "query",
            "description": "Filter results by SSID"
          },
          {
            "type": "integer",
            "name": "vlan",
            "in": "query",
            "description": "Filter results by VLAN"
          },
          {
            "type": "string",
            "name": "apTag",
            "in": "query",
            "description": "Filter results by AP Tag"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "mac": "00:61:71:c8:51:27",
                "connectionStats": {
                  "assoc": 0,
                  "auth": 4,
                  "dhcp": 0,
                  "dns": 0,
                  "success": 10
                }
              }
            }
          }
        },
        "tags": [
          "Wireless health"
        ]
      }
    },
    {
      "ruleId": "add-optional-param",
      "message": "`/networks/{networkId}/latencyStats` (get) - Optional param `timespan` added",
      "messageHtml": "Optional param <code>timespan</code> added",
      "path": "/networks/{networkId}/latencyStats",
      "method": "get",
      "param": "timespan",
      "type": "infos",
      "name": "Changes",
      "group": "Wireless health",
      "apiDetails": {
        "summary": "Aggregated latency info for this network",
        "description": "Aggregated latency info for this network",
        "operationId": "getNetworkLatencyStats",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
          },
          {
            "type": "string",
            "name": "t1",
            "in": "query",
            "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
          },
          {
            "type": "integer",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
          },
          {
            "type": "integer",
            "name": "ssid",
            "in": "query",
            "description": "Filter results by SSID"
          },
          {
            "type": "integer",
            "name": "vlan",
            "in": "query",
            "description": "Filter results by VLAN"
          },
          {
            "type": "string",
            "name": "apTag",
            "in": "query",
            "description": "Filter results by AP Tag"
          },
          {
            "type": "string",
            "name": "fields",
            "in": "query",
            "description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "backgroundTraffic": {
                  "rawDistribution": {
                    "0": 1234,
                    "1": 2345,
                    "2": 3456,
                    "4": 4567,
                    "8": 5678,
                    "16": 6789,
                    "32": 7890,
                    "64": 8901,
                    "128": 9012,
                    "256": 83,
                    "512": 1234,
                    "1024": 2345,
                    "2048": 9999
                  },
                  "avg": 606.52
                },
                "bestEffortTraffic": "same shape as backgroundTraffic",
                "videoTraffic": "same shape as backgroundTraffic",
                "voiceTraffic": "same shape as backgroundTraffic"
              }
            }
          }
        },
        "tags": [
          "Wireless health"
        ]
      }
    },
    {
      "ruleId": "add-optional-param",
      "message": "`/networks/{networkId}/devices/latencyStats` (get) - Optional param `timespan` added",
      "messageHtml": "Optional param <code>timespan</code> added",
      "path": "/networks/{networkId}/devices/latencyStats",
      "method": "get",
      "param": "timespan",
      "type": "infos",
      "name": "Changes",
      "group": "Wireless health",
      "apiDetails": {
        "summary": "Aggregated latency info for this network, grouped by node",
        "description": "Aggregated latency info for this network, grouped by node",
        "operationId": "getNetworkDevicesLatencyStats",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
          },
          {
            "type": "string",
            "name": "t1",
            "in": "query",
            "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
          },
          {
            "type": "integer",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
          },
          {
            "type": "integer",
            "name": "ssid",
            "in": "query",
            "description": "Filter results by SSID"
          },
          {
            "type": "integer",
            "name": "vlan",
            "in": "query",
            "description": "Filter results by VLAN"
          },
          {
            "type": "string",
            "name": "apTag",
            "in": "query",
            "description": "Filter results by AP Tag"
          },
          {
            "type": "string",
            "name": "fields",
            "in": "query",
            "description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "serial": "Q2JC-2MJM-FHRD",
                  "latencyStats": {
                    "backgroundTraffic": {
                      "rawDistribution": {
                        "0": 1234,
                        "1": 2345,
                        "2": 3456,
                        "4": 4567,
                        "8": 5678,
                        "16": 6789,
                        "32": 7890,
                        "64": 8901,
                        "128": 9012,
                        "256": 83,
                        "512": 1234,
                        "1024": 2345,
                        "2048": 9999
                      },
                      "avg": 606.52
                    },
                    "bestEffortTraffic": "same shape as backgroundTraffic",
                    "videoTraffic": "same shape as backgroundTraffic",
                    "voiceTraffic": "same shape as backgroundTraffic"
                  }
                },
                {
                  "serial": "Q2FJ-3SHB-Y2K2",
                  "latencyStats": {
                    "backgroundTraffic": {
                      "rawDistribution": {
                        "0": 1234,
                        "1": 2345,
                        "2": 3456,
                        "4": 4567,
                        "8": 5678,
                        "16": 6789,
                        "32": 7890,
                        "64": 8901,
                        "128": 9012,
                        "256": 83,
                        "512": 1234,
                        "1024": 2345,
                        "2048": 9999
                      },
                      "avg": 606.52
                    },
                    "bestEffortTraffic": "same shape as backgroundTraffic",
                    "videoTraffic": "same shape as backgroundTraffic",
                    "voiceTraffic": "same shape as backgroundTraffic"
                  }
                }
              ]
            }
          }
        },
        "tags": [
          "Wireless health"
        ]
      }
    },
    {
      "ruleId": "add-optional-param",
      "message": "`/networks/{networkId}/devices/{serial}/latencyStats` (get) - Optional param `timespan` added",
      "messageHtml": "Optional param <code>timespan</code> added",
      "path": "/networks/{networkId}/devices/{serial}/latencyStats",
      "method": "get",
      "param": "timespan",
      "type": "infos",
      "name": "Changes",
      "group": "Wireless health",
      "apiDetails": {
        "summary": "Aggregated latency info for a given AP on this network",
        "description": "Aggregated latency info for a given AP on this network",
        "operationId": "getNetworkDeviceLatencyStats",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
          },
          {
            "type": "string",
            "name": "t1",
            "in": "query",
            "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
          },
          {
            "type": "integer",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
          },
          {
            "type": "integer",
            "name": "ssid",
            "in": "query",
            "description": "Filter results by SSID"
          },
          {
            "type": "integer",
            "name": "vlan",
            "in": "query",
            "description": "Filter results by VLAN"
          },
          {
            "type": "string",
            "name": "apTag",
            "in": "query",
            "description": "Filter results by AP Tag"
          },
          {
            "type": "string",
            "name": "fields",
            "in": "query",
            "description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "serial": "Q2JC-2MJM-FHRD",
                "latencyStats": {
                  "backgroundTraffic": {
                    "rawDistribution": {
                      "0": 1234,
                      "1": 2345,
                      "2": 3456,
                      "4": 4567,
                      "8": 5678,
                      "16": 6789,
                      "32": 7890,
                      "64": 8901,
                      "128": 9012,
                      "256": 83,
                      "512": 1234,
                      "1024": 2345,
                      "2048": 9999
                    },
                    "avg": 606.52
                  },
                  "bestEffortTraffic": "same shape as backgroundTraffic",
                  "videoTraffic": "same shape as backgroundTraffic",
                  "voiceTraffic": "same shape as backgroundTraffic"
                }
              }
            }
          }
        },
        "tags": [
          "Wireless health"
        ]
      }
    },
    {
      "ruleId": "add-optional-param",
      "message": "`/networks/{networkId}/clients/latencyStats` (get) - Optional param `timespan` added",
      "messageHtml": "Optional param <code>timespan</code> added",
      "path": "/networks/{networkId}/clients/latencyStats",
      "method": "get",
      "param": "timespan",
      "type": "infos",
      "name": "Changes",
      "group": "Wireless health",
      "apiDetails": {
        "summary": "Aggregated latency info for this network, grouped by clients",
        "description": "Aggregated latency info for this network, grouped by clients",
        "operationId": "getNetworkClientsLatencyStats",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
          },
          {
            "type": "string",
            "name": "t1",
            "in": "query",
            "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
          },
          {
            "type": "integer",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
          },
          {
            "type": "integer",
            "name": "ssid",
            "in": "query",
            "description": "Filter results by SSID"
          },
          {
            "type": "integer",
            "name": "vlan",
            "in": "query",
            "description": "Filter results by VLAN"
          },
          {
            "type": "string",
            "name": "apTag",
            "in": "query",
            "description": "Filter results by AP Tag"
          },
          {
            "type": "string",
            "name": "fields",
            "in": "query",
            "description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "mac": "00:61:71:c8:51:27",
                  "latencyStats": {
                    "backgroundTraffic": {
                      "rawDistribution": {
                        "0": 1234,
                        "1": 2345,
                        "2": 3456,
                        "4": 4567,
                        "8": 5678,
                        "16": 6789,
                        "32": 7890,
                        "64": 8901,
                        "128": 9012,
                        "256": 83,
                        "512": 1234,
                        "1024": 2345,
                        "2048": 9999
                      },
                      "avg": 606.52
                    },
                    "bestEffortTraffic": "same shape as backgroundTraffic",
                    "videoTraffic": "same shape as backgroundTraffic",
                    "voiceTraffic": "same shape as backgroundTraffic"
                  }
                },
                {
                  "mac": "1c:4d:70:7f:5e:5e",
                  "latencyStats": {
                    "backgroundTraffic": {
                      "rawDistribution": {
                        "0": 1234,
                        "1": 2345,
                        "2": 3456,
                        "4": 4567,
                        "8": 5678,
                        "16": 6789,
                        "32": 7890,
                        "64": 8901,
                        "128": 9012,
                        "256": 83,
                        "512": 1234,
                        "1024": 2345,
                        "2048": 9999
                      },
                      "avg": 606.52
                    },
                    "bestEffortTraffic": "same shape as backgroundTraffic",
                    "videoTraffic": "same shape as backgroundTraffic",
                    "voiceTraffic": "same shape as backgroundTraffic"
                  }
                },
                {
                  "mac": "1c:4d:70:81:8d:0a",
                  "latencyStats": {
                    "backgroundTraffic": {
                      "rawDistribution": {
                        "0": 1234,
                        "1": 2345,
                        "2": 3456,
                        "4": 4567,
                        "8": 5678,
                        "16": 6789,
                        "32": 7890,
                        "64": 8901,
                        "128": 9012,
                        "256": 83,
                        "512": 1234,
                        "1024": 2345,
                        "2048": 9999
                      },
                      "avg": 606.52
                    },
                    "bestEffortTraffic": "same shape as backgroundTraffic",
                    "videoTraffic": "same shape as backgroundTraffic",
                    "voiceTraffic": "same shape as backgroundTraffic"
                  }
                }
              ]
            }
          }
        },
        "tags": [
          "Wireless health"
        ]
      }
    },
    {
      "ruleId": "add-optional-param",
      "message": "`/networks/{networkId}/clients/{clientId}/latencyStats` (get) - Optional param `timespan` added",
      "messageHtml": "Optional param <code>timespan</code> added",
      "path": "/networks/{networkId}/clients/{clientId}/latencyStats",
      "method": "get",
      "param": "timespan",
      "type": "infos",
      "name": "Changes",
      "group": "Wireless health",
      "apiDetails": {
        "summary": "Aggregated latency info for a given client on this network",
        "description": "Aggregated latency info for a given client on this network",
        "operationId": "getNetworkClientLatencyStats",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "clientId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
          },
          {
            "type": "string",
            "name": "t1",
            "in": "query",
            "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
          },
          {
            "type": "integer",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
          },
          {
            "type": "integer",
            "name": "ssid",
            "in": "query",
            "description": "Filter results by SSID"
          },
          {
            "type": "integer",
            "name": "vlan",
            "in": "query",
            "description": "Filter results by VLAN"
          },
          {
            "type": "string",
            "name": "apTag",
            "in": "query",
            "description": "Filter results by AP Tag"
          },
          {
            "type": "string",
            "name": "fields",
            "in": "query",
            "description": "Partial selection: If present, this call will return only the selected fields of [\"rawDistribution\", \"avg\"]. All fields will be returned by default. Selected fields must be entered as a comma separated string."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "mac": "00:61:71:c8:51:27",
                "latencyStats": {
                  "backgroundTraffic": {
                    "rawDistribution": {
                      "0": 1234,
                      "1": 2345,
                      "2": 3456,
                      "4": 4567,
                      "8": 5678,
                      "16": 6789,
                      "32": 7890,
                      "64": 8901,
                      "128": 9012,
                      "256": 83,
                      "512": 1234,
                      "1024": 2345,
                      "2048": 9999
                    },
                    "avg": 606.52
                  },
                  "bestEffortTraffic": "same shape as backgroundTraffic",
                  "videoTraffic": "same shape as backgroundTraffic",
                  "voiceTraffic": "same shape as backgroundTraffic"
                }
              }
            }
          }
        },
        "tags": [
          "Wireless health"
        ]
      }
    },
    {
      "ruleId": "add-optional-param",
      "message": "`/networks/{networkId}/failedConnections` (get) - Optional param `timespan` added",
      "messageHtml": "Optional param <code>timespan</code> added",
      "path": "/networks/{networkId}/failedConnections",
      "method": "get",
      "param": "timespan",
      "type": "infos",
      "name": "Changes",
      "group": "Wireless health",
      "apiDetails": {
        "summary": "List of all failed client connection events on this network in a given time range",
        "description": "List of all failed client connection events on this network in a given time range",
        "operationId": "getNetworkFailedConnections",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today."
          },
          {
            "type": "string",
            "name": "t1",
            "in": "query",
            "description": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0."
          },
          {
            "type": "integer",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 7 days."
          },
          {
            "type": "integer",
            "name": "ssid",
            "in": "query",
            "description": "Filter results by SSID"
          },
          {
            "type": "integer",
            "name": "vlan",
            "in": "query",
            "description": "Filter results by VLAN"
          },
          {
            "type": "string",
            "name": "apTag",
            "in": "query",
            "description": "Filter results by AP Tag"
          },
          {
            "type": "string",
            "name": "serial",
            "in": "query",
            "description": "Filter by AP"
          },
          {
            "type": "string",
            "name": "clientId",
            "in": "query",
            "description": "Filter by client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "ssidNumber": 0,
                  "vlan": -1,
                  "clientMac": "00:61:71:c8:51:27",
                  "serial": "Q2JC-2MJM-FHRD",
                  "failureStep": "auth",
                  "type": "802.1X auth fail",
                  "ts": 1532032592
                },
                {
                  "ssidNumber": 0,
                  "vlan": -1,
                  "clientMac": "00:61:71:c8:51:27",
                  "nodeId": "Q2FJ-3SHB-Y2K2",
                  "failureStep": "auth",
                  "type": "802.1X auth fail",
                  "ts": 1532032593
                },
                {
                  "ssidNumber": 0,
                  "vlan": -1,
                  "clientMac": "00:61:71:c8:51:27",
                  "nodeId": "Q2FJ-3SHB-Y2K2",
                  "failureStep": "auth",
                  "type": "802.1X auth fail",
                  "ts": 1532032594
                },
                {
                  "ssidNumber": 0,
                  "vlan": -1,
                  "clientMac": "00:61:71:c8:51:27",
                  "nodeId": "Q2FJ-3SHB-Y2K2",
                  "failureStep": "auth",
                  "type": "802.1X auth fail",
                  "ts": 1532032595
                },
                {
                  "ssidNumber": 0,
                  "vlan": -1,
                  "clientMac": "1c:4d:70:7f:5e:5e",
                  "nodeId": "Q2FJ-3SHB-Y2K2",
                  "failureStep": "assoc",
                  "type": "802.1X auth fail",
                  "ts": 1532032592
                },
                {
                  "ssidNumber": 0,
                  "vlan": -1,
                  "clientMac": "1c:4d:70:81:8d:0a",
                  "nodeId": "Q2FJ-3SHB-Y2K2",
                  "failureStep": "auth",
                  "type": "802.1X auth fail",
                  "ts": 1532032595
                }
              ]
            }
          }
        },
        "tags": [
          "Wireless health"
        ]
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/organizations/{organizationId}/actionBatches` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge get\">GET</div> \n      <i>getOrganizationActionBatches</i>\n      <br>\n      <b>Return the list of action batches in the organization</b>\n      \n      <pre><code>[\n    {\n        &quot;id&quot;: &quot;123&quot;,\n        &quot;status&quot;: &quot;in progress&quot;,\n        &quot;confirmed&quot;: true,\n        &quot;synchronous&quot;: false,\n        &quot;actions&quot;: [\n            {\n                &quot;resource&quot;: &quot;/devices/QXXX-XXXX-XXXX/switchPorts/3&quot;,\n                &quot;operation&quot;: &quot;update&quot;,\n                &quot;body&quot;: {\n                    &quot;enabled&quot;: false\n                }\n            }\n        ]\n    }\n]</code></pre>\n      \n      <br>\n      <div class=\"mr-4 badge post\">POST</div> \n      <i>createOrganizationActionBatch</i>\n      <br>\n      <b>Create an action batch</b>\n      \n      <pre><code>{\n    &quot;id&quot;: &quot;123&quot;,\n    &quot;status&quot;: &quot;in progress&quot;,\n    &quot;confirmed&quot;: true,\n    &quot;synchronous&quot;: false,\n    &quot;actions&quot;: [\n        {\n            &quot;resource&quot;: &quot;/devices/QXXX-XXXX-XXXX/switchPorts/3&quot;,\n            &quot;operation&quot;: &quot;update&quot;,\n            &quot;body&quot;: {\n                &quot;enabled&quot;: false\n            }\n        }\n    ]\n}</code></pre>\n      ",
      "path": "/organizations/{organizationId}/actionBatches",
      "type": "infos",
      "name": "Changes",
      "group": "Action batches",
      "apiDetails": {
        "post": {
          "summary": "Create an action batch",
          "description": "Create an action batch",
          "operationId": "createOrganizationActionBatch",
          "parameters": [
            {
              "name": "organizationId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "createOrganizationActionBatch",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "confirmed": {
                    "description": "Set to true for immediate execution. Set to false if the action should be previewed before executing.",
                    "type": "string"
                  },
                  "synchronous": {
                    "description": "Force the batch to run synchronous. There can be at most 20 actions in synchronous batch.",
                    "type": "string"
                  },
                  "actions": {
                    "description": "A set of changes to make as part of this action",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "resource": {
                          "description": "Unique identifier for the resource to be acted on",
                          "type": "string"
                        },
                        "operation": {
                          "description": "The operation to be used. One of \"create\", \"update\", \"destroy\".",
                          "type": "string"
                        },
                        "body": {
                          "description": "The body of the action",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "id": "123",
                  "status": "in progress",
                  "confirmed": true,
                  "synchronous": false,
                  "actions": [
                    {
                      "resource": "/devices/QXXX-XXXX-XXXX/switchPorts/3",
                      "operation": "update",
                      "body": {
                        "enabled": false
                      }
                    }
                  ]
                }
              }
            }
          },
          "tags": [
            "Action batches"
          ]
        },
        "get": {
          "summary": "Return the list of action batches in the organization",
          "description": "Return the list of action batches in the organization",
          "operationId": "getOrganizationActionBatches",
          "parameters": [
            {
              "name": "organizationId",
              "in": "path",
              "type": "string",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": [
                  {
                    "id": "123",
                    "status": "in progress",
                    "confirmed": true,
                    "synchronous": false,
                    "actions": [
                      {
                        "resource": "/devices/QXXX-XXXX-XXXX/switchPorts/3",
                        "operation": "update",
                        "body": {
                          "enabled": false
                        }
                      }
                    ]
                  }
                ]
              }
            }
          },
          "tags": [
            "Action batches"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/organizations/{organizationId}/actionBatches/{id}` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge get\">GET</div> \n      <i>getOrganizationActionBatch</i>\n      <br>\n      <b>Return an action batch</b>\n      \n      <pre><code>{\n    &quot;id&quot;: &quot;123&quot;,\n    &quot;status&quot;: &quot;in progress&quot;,\n    &quot;confirmed&quot;: true,\n    &quot;synchronous&quot;: false,\n    &quot;actions&quot;: [\n        {\n            &quot;resource&quot;: &quot;/devices/QXXX-XXXX-XXXX/switchPorts/3&quot;,\n            &quot;operation&quot;: &quot;update&quot;,\n            &quot;body&quot;: {\n                &quot;enabled&quot;: false\n            }\n        }\n    ]\n}</code></pre>\n      \n      <br>\n      <div class=\"mr-4 badge put\">PUT</div> \n      <i>updateOrganizationActionBatch</i>\n      <br>\n      <b>Update an action batch</b>\n      \n      <pre><code>{\n    &quot;id&quot;: &quot;123&quot;,\n    &quot;status&quot;: &quot;in progress&quot;,\n    &quot;confirmed&quot;: true,\n    &quot;synchronous&quot;: false,\n    &quot;actions&quot;: [\n        {\n            &quot;resource&quot;: &quot;/devices/QXXX-XXXX-XXXX/switchPorts/3&quot;,\n            &quot;operation&quot;: &quot;update&quot;,\n            &quot;body&quot;: {\n                &quot;enabled&quot;: false\n            }\n        }\n    ]\n}</code></pre>\n      \n      <br>\n      <div class=\"mr-4 badge delete\">DELETE</div> \n      <i>deleteOrganizationActionBatch</i>\n      <br>\n      <b>Delete an action batch</b>\n      \n      <pre><code></code></pre>\n      ",
      "path": "/organizations/{organizationId}/actionBatches/{id}",
      "type": "infos",
      "name": "Changes",
      "group": "Action batches",
      "apiDetails": {
        "get": {
          "summary": "Return an action batch",
          "description": "Return an action batch",
          "operationId": "getOrganizationActionBatch",
          "parameters": [
            {
              "name": "organizationId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "in": "path",
              "type": "string",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "id": "123",
                  "status": "in progress",
                  "confirmed": true,
                  "synchronous": false,
                  "actions": [
                    {
                      "resource": "/devices/QXXX-XXXX-XXXX/switchPorts/3",
                      "operation": "update",
                      "body": {
                        "enabled": false
                      }
                    }
                  ]
                }
              }
            }
          },
          "tags": [
            "Action batches"
          ]
        },
        "delete": {
          "summary": "Delete an action batch",
          "description": "Delete an action batch",
          "operationId": "deleteOrganizationActionBatch",
          "parameters": [
            {
              "name": "organizationId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "in": "path",
              "type": "string",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation"
            }
          },
          "tags": [
            "Action batches"
          ]
        },
        "put": {
          "summary": "Update an action batch",
          "description": "Update an action batch",
          "operationId": "updateOrganizationActionBatch",
          "parameters": [
            {
              "name": "organizationId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "id",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "updateOrganizationActionBatch",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "confirmed": {
                    "description": "A boolean representing whether or not the batch has been confirmed. This property cannot be unset once it is true.",
                    "type": "string"
                  },
                  "synchronous": {
                    "description": "Force the batch to run synchronous. There can be at most 20 actions in synchronous batch.",
                    "type": "string"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "id": "123",
                  "status": "in progress",
                  "confirmed": true,
                  "synchronous": false,
                  "actions": [
                    {
                      "resource": "/devices/QXXX-XXXX-XXXX/switchPorts/3",
                      "operation": "update",
                      "body": {
                        "enabled": false
                      }
                    }
                  ]
                }
              }
            }
          },
          "tags": [
            "Action batches"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/organizations/{organizationId}/networks/combine` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge post\">POST</div> \n      <i>combineOrganizationNetworks</i>\n      <br>\n      <b>Combine multiple networks into a single network</b>\n      \n      <pre><code>{\n    &quot;resultingNetwork&quot;: {\n        &quot;id&quot;: &quot;L_123456&quot;,\n        &quot;organizationId&quot;: 2930418,\n        &quot;name&quot;: &quot;Long Island Office&quot;,\n        &quot;timeZone&quot;: &quot;America/Los_Angeles&quot;,\n        &quot;tags&quot;: &quot; tag1 tag2 &quot;,\n        &quot;type&quot;: &quot;combined&quot;,\n        &quot;disableMyMerakiCom&quot;: false\n    }\n}</code></pre>\n      ",
      "path": "/organizations/{organizationId}/networks/combine",
      "type": "infos",
      "name": "Changes",
      "group": "Networks",
      "apiDetails": {
        "post": {
          "summary": "Combine multiple networks into a single network",
          "description": "Combine multiple networks into a single network",
          "operationId": "combineOrganizationNetworks",
          "parameters": [
            {
              "name": "organizationId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "combineOrganizationNetworks",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the combined network",
                    "required": true
                  },
                  "networkIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "A list of the network IDs that will be combined. If an ID of a combined network is included in this list, the other networks in the list will be grouped into that network",
                    "required": true
                  }
                },
                "example": {
                  "name": "Long Island Office",
                  "networkIds": [
                    "N_1234",
                    "N_5678"
                  ]
                }
              },
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "resultingNetwork": {
                    "id": "L_123456",
                    "organizationId": 2930418,
                    "name": "Long Island Office",
                    "timeZone": "America/Los_Angeles",
                    "tags": " tag1 tag2 ",
                    "type": "combined",
                    "disableMyMerakiCom": false
                  }
                }
              }
            }
          },
          "tags": [
            "Networks"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/networks/{networkId}/split` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge post\">POST</div> \n      <i>splitNetwork</i>\n      <br>\n      <b>Split a combined network into individual networks for each type of device</b>\n      \n      <pre><code>{\n    &quot;resultingNetworks&quot;: [\n        {\n            &quot;id&quot;: &quot;N_1234&quot;,\n            &quot;organizationId&quot;: 2930418,\n            &quot;name&quot;: &quot;Long Island Office - switch&quot;,\n            &quot;timeZone&quot;: &quot;America/Los_Angeles&quot;,\n            &quot;tags&quot;: &quot; tag1 tag2 &quot;,\n            &quot;type&quot;: &quot;switch&quot;,\n            &quot;disableMyMerakiCom&quot;: false\n        },\n        {\n            &quot;id&quot;: &quot;N_5678&quot;,\n            &quot;organizationId&quot;: 2930418,\n            &quot;name&quot;: &quot;Long Island Office - wireless&quot;,\n            &quot;timeZone&quot;: &quot;America/Los_Angeles&quot;,\n            &quot;tags&quot;: &quot; tag1 tag2 &quot;,\n            &quot;type&quot;: &quot;wireless&quot;,\n            &quot;disableMyMerakiCom&quot;: false\n        }\n    ]\n}</code></pre>\n      ",
      "path": "/networks/{networkId}/split",
      "type": "infos",
      "name": "Changes",
      "group": "Networks",
      "apiDetails": {
        "post": {
          "summary": "Split a combined network into individual networks for each type of device",
          "description": "Split a combined network into individual networks for each type of device",
          "operationId": "splitNetwork",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "resultingNetworks": [
                    {
                      "id": "N_1234",
                      "organizationId": 2930418,
                      "name": "Long Island Office - switch",
                      "timeZone": "America/Los_Angeles",
                      "tags": " tag1 tag2 ",
                      "type": "switch",
                      "disableMyMerakiCom": false
                    },
                    {
                      "id": "N_5678",
                      "organizationId": 2930418,
                      "name": "Long Island Office - wireless",
                      "timeZone": "America/Los_Angeles",
                      "tags": " tag1 tag2 ",
                      "type": "wireless",
                      "disableMyMerakiCom": false
                    }
                  ]
                }
              }
            }
          },
          "tags": [
            "Networks"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/networks/{networkId}/clients` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge get\">GET</div> \n      <i>getNetworkClients</i>\n      <br>\n      <b>List the clients that have used this network in the timespan</b>\n      \n      <pre><code>{\n    &quot;usage&quot;: {\n        &quot;sent&quot;: 138,\n        &quot;recv&quot;: 61\n    },\n    &quot;id&quot;: &quot;k74272e&quot;,\n    &quot;description&quot;: &quot;Miles's phone&quot;,\n    &quot;mac&quot;: &quot;00:11:22:33:44:55&quot;,\n    &quot;ip&quot;: &quot;1.2.3.4&quot;,\n    &quot;user&quot;: &quot;milesmeraki&quot;,\n    &quot;vlan&quot;: 255,\n    &quot;switchport&quot;: null,\n    &quot;ip6&quot;: &quot;&quot;,\n    &quot;firstSeen&quot;: 1518365681,\n    &quot;lastSeen&quot;: 1526087474,\n    &quot;manufacturer&quot;: &quot;Apple&quot;,\n    &quot;os&quot;: &quot;iOS&quot;\n}</code></pre>\n      ",
      "path": "/networks/{networkId}/clients",
      "type": "infos",
      "name": "Changes",
      "group": "Clients",
      "apiDetails": {
        "get": {
          "summary": "List the clients that have used this network in the timespan",
          "description": "List the clients that have used this network in the timespan",
          "operationId": "getNetworkClients",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "type": "string",
              "name": "t0",
              "in": "query",
              "description": "The beginning of the timespan for the data. The maximum lookback period is 31 days from today."
            },
            {
              "type": "integer",
              "name": "timespan",
              "in": "query",
              "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
            },
            {
              "type": "integer",
              "name": "perPage",
              "in": "query",
              "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 10."
            },
            {
              "type": "string",
              "name": "startingAfter",
              "in": "query",
              "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
            },
            {
              "type": "string",
              "name": "endingBefore",
              "in": "query",
              "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "headers": {
                "Link": {
                  "type": "string",
                  "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                }
              },
              "examples": {
                "application/json": {
                  "usage": {
                    "sent": 138,
                    "recv": 61
                  },
                  "id": "k74272e",
                  "description": "Miles's phone",
                  "mac": "00:11:22:33:44:55",
                  "ip": "1.2.3.4",
                  "user": "milesmeraki",
                  "vlan": 255,
                  "switchport": null,
                  "ip6": "",
                  "firstSeen": 1518365681,
                  "lastSeen": 1526087474,
                  "manufacturer": "Apple",
                  "os": "iOS"
                }
              }
            }
          },
          "tags": [
            "Clients"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/organizations/{organizationId}/openapiSpec` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge get\">GET</div> \n      <i>getOrganizationOpenapiSpec</i>\n      <br>\n      <b>Return the OpenAPI Specification of the organization's API documentation in JSON</b>\n      \n      <pre><code>{\n    &quot;swagger&quot;: &quot;2.0&quot;,\n    &quot;info&quot;: {\n        &quot;version&quot;: &quot;0&quot;,\n        &quot;title&quot;: &quot;Meraki Dashboard API&quot;,\n        &quot;description&quot;: &quot;The Cisco Meraki Dashboard API is a modern REST API based on the [OpenAPI](https://swagger.io/docs/specification/about/) specification.\\n\\n## What can the API be used for?\\nThe Dashboard API can be used for many purposes. It’s meant to be an open-ended tool. Here are some examples of use cases:\\n\\n* Add new organizations, admins, networks, devices, VLANs, and more\\n* Configure networks at scale\\n* Automatically on-board and off-board new employees’ teleworker setups\\n* Build your own dashboard for store managers, field techs, or unique use cases\\n\\n## Enabling the Dashboard API\\n1. Begin by logging into [Meraki Dashboard](https://dashboard.meraki.com) and navigating to **Organization &gt; Settings**\\n\\n2. Locate the section titled **Dashboard API access** and select **Enable Access**, then **Save** your changes\\n\\n3. After enabling the API, choose your username at the top-right of the Meraki Dashboard and select **my profile**\\n\\n4. Locate the section titled **Dashboard API access** and select **Generate new API key**\\n\\n*Note: The API key is associated with a Dashboard administrator account. You can generate, revoke, and regenerate your API key on your profile.*\\n\\n**Keep your API key safe as it provides authentication to all of your organizations with the API enabled. If your API key is shared, you can regenerate your API key at any time. This will revoke the existing API key.**\\n\\nCopy and store your API key in a safe place. Dashboard does not store API keys in plaintext for security reasons, so this is the only time you will be able to record it. If you lose or forget your API key, you will have to revoke it and generate a new one.\\n\\nEvery request must specify an API key via a request header.\\n\\nThe API key must be specified in the URL header. The API will return a 404 (rather than a 403) in response to a request with a missing or incorrect API key in order to prevent leaking the existence of resources to unauthorized users.\\n\\n`X-Cisco-Meraki-API-Key: &lt;secret key&gt;`\\n\\nRead more about API [authorization](../api/#/python/getting-started/authorizing-your-client)\\n\\n\\n## Versioning\\nOnce an API version is released, we will make only backwards-compatible changes to it. Backwards-compatible changes include:\\n\\n* Adding new API resources\\n\\n* Adding new optional request parameters to existing API methods\\n\\n* Adding new properties to existing API responses\\n\\n* Changing the order of properties in existing API responses\\n\\n## Rate Limit\\n* The Dashboard API is limited to **5 calls per second**, per organization.\\n* A burst of 5 additional calls are allowed in the first second, so a maximum of 15 calls in the first 2 seconds.\\n* The rate limiting technique is based off of the [token bucket model](https://en.wikipedia.org/wiki/Token_bucket).\\n* An error with a `429` status code will be returned when the rate limit has been exceeded.\\n* Expect to backoff for 1 - 2 seconds if the limit has been exceeded. You may have to wait potentially longer if a large number of requests were made within this timeframe.\\n\\n\\n## Additional Details\\nIdentifiers in the API are opaque strings. A `{networkId}`, for example, might be the string “126043”, whereas an `{orderId}` might contain characters, such as “4S1234567”. Client applications must not try to parse them as numbers. Even identifiers that look like numbers might be too long to encode without loss of precision in Javascript, where the only numeric type is IEEE 754 floating point.\\n\\nVerbs in the API follow the usual REST conventions:\\n\\n`GET` returns the value of a resource or a list of resources, depending on whether an identifier is specified. For example, a `GET` of `/v0/organizations` returns a list of organizations, whereas a `GET` of `/v0/organizations/{organizationId}` returns a particular organization.\\n\\n`POST` adds a new resource, as in a `POST` to `/v0/organizations/{organizationId}/admins`, or performs some other non-idempotent change.\\n\\n`PUT` updates a resource. `PUTs` are idempotent; they update a resource, creating it first if it does not already exist. A `PUT` should specify all the fields of a resource; the API will revert omitted fields to their default value.\\n\\n`DELETE` removes a resource.\\n&quot;,\n        &quot;x-codegen-settings&quot;: {\n            &quot;appendContentHeaders&quot;: true,\n            &quot;brandLabel&quot;: &quot;meraki&quot;,\n            &quot;collectParameters&quot;: true,\n            &quot;doNotSplitWords&quot;: [\n                &quot;SSIDs&quot;,\n                &quot;VLANs&quot;\n            ],\n            &quot;generateAsyncCode&quot;: true,\n            &quot;projectName&quot;: &quot;meraki&quot;,\n            &quot;sortResources&quot;: true,\n            &quot;useEnumPostfix&quot;: true,\n            &quot;useMethodPrefix&quot;: false,\n            &quot;useModelPostfix&quot;: true,\n            &quot;validateRequiredParameters&quot;: true\n        }\n    },\n    &quot;host&quot;: &quot;api.meraki.com&quot;,\n    &quot;basePath&quot;: &quot;/api/v0&quot;,\n    &quot;schemes&quot;: [\n        &quot;https&quot;\n    ],\n    &quot;consumes&quot;: [\n        &quot;application/json&quot;\n    ],\n    &quot;produces&quot;: [\n        &quot;application/json&quot;\n    ],\n    &quot;securityDefinitions&quot;: {\n        &quot;meraki_api_key&quot;: {\n            &quot;type&quot;: &quot;apiKey&quot;,\n            &quot;name&quot;: &quot;X-Cisco-Meraki-API-Key&quot;,\n            &quot;in&quot;: &quot;header&quot;\n        }\n    },\n    &quot;security&quot;: [\n        {\n            &quot;meraki_api_key&quot;: []\n        }\n    ],\n    &quot;paths&quot;: {\n        &quot;/pets&quot;: {\n            &quot;get&quot;: {\n                &quot;description&quot;: &quot;Returns all pets from the system&quot;,\n                &quot;operationId&quot;: &quot;getPets&quot;,\n                &quot;responses&quot;: {\n                    &quot;200&quot;: {\n                        &quot;description&quot;: &quot;Successful operation&quot;,\n                        &quot;examples&quot;: {\n                            &quot;application/json&quot;: [\n                                {\n                                    &quot;id&quot;: 1,\n                                    &quot;name&quot;: &quot;Riley&quot;,\n                                    &quot;type&quot;: &quot;Cat&quot;\n                                }\n                            ]\n                        }\n                    }\n                }\n            }\n        }\n    }\n}</code></pre>\n      ",
      "path": "/organizations/{organizationId}/openapiSpec",
      "type": "infos",
      "name": "Changes",
      "group": "OpenAPI Spec",
      "apiDetails": {
        "get": {
          "summary": "Return the OpenAPI Specification of the organization's API documentation in JSON",
          "description": "Return the OpenAPI Specification of the organization's API documentation in JSON",
          "operationId": "getOrganizationOpenapiSpec",
          "parameters": [
            {
              "name": "organizationId",
              "in": "path",
              "type": "string",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "swagger": "2.0",
                  "info": {
                    "version": "0",
                    "title": "Meraki Dashboard API",
                    "description": "The Cisco Meraki Dashboard API is a modern REST API based on the [OpenAPI](https://swagger.io/docs/specification/about/) specification.\n\n## What can the API be used for?\nThe Dashboard API can be used for many purposes. It’s meant to be an open-ended tool. Here are some examples of use cases:\n\n* Add new organizations, admins, networks, devices, VLANs, and more\n* Configure networks at scale\n* Automatically on-board and off-board new employees’ teleworker setups\n* Build your own dashboard for store managers, field techs, or unique use cases\n\n## Enabling the Dashboard API\n1. Begin by logging into [Meraki Dashboard](https://dashboard.meraki.com) and navigating to **Organization > Settings**\n\n2. Locate the section titled **Dashboard API access** and select **Enable Access**, then **Save** your changes\n\n3. After enabling the API, choose your username at the top-right of the Meraki Dashboard and select **my profile**\n\n4. Locate the section titled **Dashboard API access** and select **Generate new API key**\n\n*Note: The API key is associated with a Dashboard administrator account. You can generate, revoke, and regenerate your API key on your profile.*\n\n**Keep your API key safe as it provides authentication to all of your organizations with the API enabled. If your API key is shared, you can regenerate your API key at any time. This will revoke the existing API key.**\n\nCopy and store your API key in a safe place. Dashboard does not store API keys in plaintext for security reasons, so this is the only time you will be able to record it. If you lose or forget your API key, you will have to revoke it and generate a new one.\n\nEvery request must specify an API key via a request header.\n\nThe API key must be specified in the URL header. The API will return a 404 (rather than a 403) in response to a request with a missing or incorrect API key in order to prevent leaking the existence of resources to unauthorized users.\n\n`X-Cisco-Meraki-API-Key: <secret key>`\n\nRead more about API [authorization](../api/#/python/getting-started/authorizing-your-client)\n\n\n## Versioning\nOnce an API version is released, we will make only backwards-compatible changes to it. Backwards-compatible changes include:\n\n* Adding new API resources\n\n* Adding new optional request parameters to existing API methods\n\n* Adding new properties to existing API responses\n\n* Changing the order of properties in existing API responses\n\n## Rate Limit\n* The Dashboard API is limited to **5 calls per second**, per organization.\n* A burst of 5 additional calls are allowed in the first second, so a maximum of 15 calls in the first 2 seconds.\n* The rate limiting technique is based off of the [token bucket model](https://en.wikipedia.org/wiki/Token_bucket).\n* An error with a `429` status code will be returned when the rate limit has been exceeded.\n* Expect to backoff for 1 - 2 seconds if the limit has been exceeded. You may have to wait potentially longer if a large number of requests were made within this timeframe.\n\n\n## Additional Details\nIdentifiers in the API are opaque strings. A `{networkId}`, for example, might be the string “126043”, whereas an `{orderId}` might contain characters, such as “4S1234567”. Client applications must not try to parse them as numbers. Even identifiers that look like numbers might be too long to encode without loss of precision in Javascript, where the only numeric type is IEEE 754 floating point.\n\nVerbs in the API follow the usual REST conventions:\n\n`GET` returns the value of a resource or a list of resources, depending on whether an identifier is specified. For example, a `GET` of `/v0/organizations` returns a list of organizations, whereas a `GET` of `/v0/organizations/{organizationId}` returns a particular organization.\n\n`POST` adds a new resource, as in a `POST` to `/v0/organizations/{organizationId}/admins`, or performs some other non-idempotent change.\n\n`PUT` updates a resource. `PUTs` are idempotent; they update a resource, creating it first if it does not already exist. A `PUT` should specify all the fields of a resource; the API will revert omitted fields to their default value.\n\n`DELETE` removes a resource.\n",
                    "x-codegen-settings": {
                      "appendContentHeaders": true,
                      "brandLabel": "meraki",
                      "collectParameters": true,
                      "doNotSplitWords": [
                        "SSIDs",
                        "VLANs"
                      ],
                      "generateAsyncCode": true,
                      "projectName": "meraki",
                      "sortResources": true,
                      "useEnumPostfix": true,
                      "useMethodPrefix": false,
                      "useModelPostfix": true,
                      "validateRequiredParameters": true
                    }
                  },
                  "host": "api.meraki.com",
                  "basePath": "/api/v0",
                  "schemes": [
                    "https"
                  ],
                  "consumes": [
                    "application/json"
                  ],
                  "produces": [
                    "application/json"
                  ],
                  "securityDefinitions": {
                    "meraki_api_key": {
                      "type": "apiKey",
                      "name": "X-Cisco-Meraki-API-Key",
                      "in": "header"
                    }
                  },
                  "security": [
                    {
                      "meraki_api_key": []
                    }
                  ],
                  "paths": {
                    "/pets": {
                      "get": {
                        "description": "Returns all pets from the system",
                        "operationId": "getPets",
                        "responses": {
                          "200": {
                            "description": "Successful operation",
                            "examples": {
                              "application/json": [
                                {
                                  "id": 1,
                                  "name": "Riley",
                                  "type": "Cat"
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "tags": [
            "OpenAPI Spec"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/organizations/{organizationId}/alertSettings` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge get\">GET</div> \n      <i>getOrganizationAlertSettings</i>\n      <br>\n      <b>Return the alert configuration for this organization</b>\n      \n      <pre><code>{\n    &quot;defaultDestinations&quot;: {\n        &quot;emails&quot;: [\n            &quot;miles@meraki.com&quot;\n        ],\n        &quot;allAdmins&quot;: true\n    },\n    &quot;alerts&quot;: [\n        {\n            &quot;type&quot;: &quot;insightAppOutage&quot;,\n            &quot;enabled&quot;: true,\n            &quot;alertDestinations&quot;: {\n                &quot;emails&quot;: [\n                    &quot;miles@meraki.com&quot;\n                ],\n                &quot;allAdmins&quot;: false\n            },\n            &quot;filters&quot;: {\n                &quot;alertOnAllApps&quot;: true\n            }\n        }\n    ]\n}</code></pre>\n      \n      <br>\n      <div class=\"mr-4 badge put\">PUT</div> \n      <i>updateOrganizationAlertSettings</i>\n      <br>\n      <b>Update the alert configuration for this organization</b>\n      \n      <pre><code>{\n    &quot;defaultDestinations&quot;: {\n        &quot;emails&quot;: [\n            &quot;miles@meraki.com&quot;\n        ],\n        &quot;allAdmins&quot;: true\n    },\n    &quot;alerts&quot;: [\n        {\n            &quot;type&quot;: &quot;insightAppOutage&quot;,\n            &quot;enabled&quot;: true,\n            &quot;alertDestinations&quot;: {\n                &quot;emails&quot;: [\n                    &quot;miles@meraki.com&quot;\n                ],\n                &quot;allAdmins&quot;: false\n            },\n            &quot;filters&quot;: {\n                &quot;alertOnAllApps&quot;: true\n            }\n        }\n    ]\n}</code></pre>\n      ",
      "path": "/organizations/{organizationId}/alertSettings",
      "type": "infos",
      "name": "Changes",
      "group": "Organization alert settings",
      "apiDetails": {
        "get": {
          "summary": "Return the alert configuration for this organization",
          "description": "Return the alert configuration for this organization",
          "operationId": "getOrganizationAlertSettings",
          "parameters": [
            {
              "name": "organizationId",
              "in": "path",
              "type": "string",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "defaultDestinations": {
                    "emails": [
                      "miles@meraki.com"
                    ],
                    "allAdmins": true
                  },
                  "alerts": [
                    {
                      "type": "insightAppOutage",
                      "enabled": true,
                      "alertDestinations": {
                        "emails": [
                          "miles@meraki.com"
                        ],
                        "allAdmins": false
                      },
                      "filters": {
                        "alertOnAllApps": true
                      }
                    }
                  ]
                }
              }
            }
          },
          "tags": [
            "Organization alert settings"
          ]
        },
        "put": {
          "summary": "Update the alert configuration for this organization",
          "description": "Update the alert configuration for this organization",
          "operationId": "updateOrganizationAlertSettings",
          "parameters": [
            {
              "name": "organizationId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "updateOrganizationAlertSettings",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "defaultDestinations": {
                    "description": "The org-wide destinations for all alerts on the network.",
                    "type": "object",
                    "properties": {
                      "emails": {
                        "description": "A list of emails that will recieve the alert(s).",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "allAdmins": {
                        "description": "If true, then all organization admins will receive emails.",
                        "type": "boolean"
                      }
                    }
                  },
                  "alerts": {
                    "description": "Alert-specific configuration for each type. Only alerts that pertain to the whole organization can be updated.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "description": "The type of alert",
                          "type": "string"
                        },
                        "enabled": {
                          "description": "A boolean depicting if the alert is turned on or off",
                          "type": "boolean"
                        },
                        "alertDestinations": {
                          "description": "A hash of destinations for this specific alert. Keys include: emails: A list of emails that will recieve information about the alert, allAdmins: If true, then all network admins will receive emails.",
                          "type": "object"
                        },
                        "filters": {
                          "description": "A hash of specific configuration data for the alert. Only filters specific to the alert will be updated.",
                          "type": "object"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "defaultDestinations": {
                    "emails": [
                      "miles@meraki.com"
                    ],
                    "allAdmins": true
                  },
                  "alerts": [
                    {
                      "type": "insightAppOutage",
                      "enabled": true,
                      "alertDestinations": {
                        "emails": [
                          "miles@meraki.com"
                        ],
                        "allAdmins": false
                      },
                      "filters": {
                        "alertOnAllApps": true
                      }
                    }
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "defaultDestinations": {
                    "emails": [
                      "miles@meraki.com"
                    ],
                    "allAdmins": true
                  },
                  "alerts": [
                    {
                      "type": "insightAppOutage",
                      "enabled": true,
                      "alertDestinations": {
                        "emails": [
                          "miles@meraki.com"
                        ],
                        "allAdmins": false
                      },
                      "filters": {
                        "alertOnAllApps": true
                      }
                    }
                  ]
                }
              }
            }
          },
          "tags": [
            "Organization alert settings"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/networks/{networkId}/devices/{serial}/wireless/radioSettings` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge get\">GET</div> \n      <i>getNetworkDeviceWirelessRadioSettings</i>\n      <br>\n      <b>Return the radio settings of a device</b>\n      \n      <pre><code>{\n    &quot;serial&quot;: &quot;Q234-ABCD-5678&quot;,\n    &quot;rfProfileId&quot;: &quot;1234&quot;\n}</code></pre>\n      \n      <br>\n      <div class=\"mr-4 badge put\">PUT</div> \n      <i>updateNetworkDeviceWirelessRadioSettings</i>\n      <br>\n      <b>Update the radio settings of a device</b>\n      \n      <pre><code>{\n    &quot;serial&quot;: &quot;Q234-ABCD-5678&quot;,\n    &quot;rfProfileId&quot;: &quot;1234&quot;\n}</code></pre>\n      ",
      "path": "/networks/{networkId}/devices/{serial}/wireless/radioSettings",
      "type": "infos",
      "name": "Changes",
      "group": "Radio settings",
      "apiDetails": {
        "get": {
          "summary": "Return the radio settings of a device",
          "description": "Return the radio settings of a device",
          "operationId": "getNetworkDeviceWirelessRadioSettings",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "serial",
              "in": "path",
              "type": "string",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "serial": "Q234-ABCD-5678",
                  "rfProfileId": "1234"
                }
              }
            }
          },
          "tags": [
            "Radio settings"
          ]
        },
        "put": {
          "summary": "Update the radio settings of a device",
          "description": "Update the radio settings of a device",
          "operationId": "updateNetworkDeviceWirelessRadioSettings",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "serial",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "updateNetworkDeviceWirelessRadioSettings",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "rfProfileId": {
                    "type": "integer",
                    "description": "The ID of an RF profile to assign to the device. If the value of this parameter is null, the appropriate basic RF profile\n(indoor or outdoor) will be assigned to the device. Assigning an RF profile will clear ALL manually configured overrides\non the device (channel width, channel, power).\n"
                  }
                },
                "example": {
                  "rfProfileId": "1234"
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "serial": "Q234-ABCD-5678",
                  "rfProfileId": "1234"
                }
              }
            }
          },
          "tags": [
            "Radio settings"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/networks/{networkId}/wireless/rfProfiles` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge get\">GET</div> \n      <i>getNetworkWirelessRfProfiles</i>\n      <br>\n      <b>List the non-basic RF profiles for this network</b>\n      \n      <pre><code>[\n    {\n        &quot;id&quot;: &quot;1234&quot;,\n        &quot;networkId&quot;: &quot;N_24329156&quot;,\n        &quot;name&quot;: &quot;Some Custom RF Profile&quot;\n    }\n]</code></pre>\n      ",
      "path": "/networks/{networkId}/wireless/rfProfiles",
      "type": "infos",
      "name": "Changes",
      "group": "Radio settings",
      "apiDetails": {
        "get": {
          "summary": "List the non-basic RF profiles for this network",
          "description": "List the non-basic RF profiles for this network",
          "operationId": "getNetworkWirelessRfProfiles",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "type": "boolean",
              "name": "includeTemplateProfiles",
              "in": "query",
              "description": "      If the network is bound to a template, this parameter controls whether or not the non-basic RF profiles defined on the template\n      should be included in the response alongside the non-basic profiles defined on the bound network. Defaults to false.\n"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": [
                  {
                    "id": "1234",
                    "networkId": "N_24329156",
                    "name": "Some Custom RF Profile"
                  }
                ]
              }
            }
          },
          "tags": [
            "Radio settings"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/networks/{networkId}/security/intrusionSettings` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge get\">GET</div> \n      <i>getNetworkSecurityIntrusionSettings</i>\n      <br>\n      <b>Returns all supported intrusion settings for an MX network</b>\n      \n      <pre><code>{\n    &quot;mode&quot;: &quot;prevention&quot;,\n    &quot;idsRulesets&quot;: &quot;balanced&quot;,\n    &quot;protectedNetworks&quot;: {\n        &quot;useDefault&quot;: false,\n        &quot;includedCidr&quot;: [\n            &quot;10.0.0.0/8&quot;,\n            &quot;127.0.0.0/8&quot;,\n            &quot;169.254.0.0/16&quot;,\n            &quot;172.16.0.0/12&quot;\n        ],\n        &quot;excludedCidr&quot;: [\n            &quot;10.0.0.0/8&quot;,\n            &quot;127.0.0.0/8&quot;\n        ]\n    }\n}</code></pre>\n      \n      <br>\n      <div class=\"mr-4 badge put\">PUT</div> \n      <i>updateNetworkSecurityIntrusionSettings</i>\n      <br>\n      <b>Set the supported instrusion settings for an MX network</b>\n      \n      <pre><code>{\n    &quot;mode&quot;: &quot;prevention&quot;,\n    &quot;idsRulesets&quot;: &quot;balanced&quot;,\n    &quot;protectedNetworks&quot;: {\n        &quot;useDefault&quot;: false,\n        &quot;includedCidr&quot;: [\n            &quot;10.0.0.0/8&quot;,\n            &quot;127.0.0.0/8&quot;,\n            &quot;169.254.0.0/16&quot;,\n            &quot;172.16.0.0/12&quot;\n        ],\n        &quot;excludedCidr&quot;: [\n            &quot;10.0.0.0/8&quot;,\n            &quot;127.0.0.0/8&quot;\n        ]\n    }\n}</code></pre>\n      ",
      "path": "/networks/{networkId}/security/intrusionSettings",
      "type": "infos",
      "name": "Changes",
      "group": "Intrusion settings",
      "apiDetails": {
        "get": {
          "summary": "Returns all supported intrusion settings for an MX network",
          "description": "Returns all supported intrusion settings for an MX network",
          "operationId": "getNetworkSecurityIntrusionSettings",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "mode": "prevention",
                  "idsRulesets": "balanced",
                  "protectedNetworks": {
                    "useDefault": false,
                    "includedCidr": [
                      "10.0.0.0/8",
                      "127.0.0.0/8",
                      "169.254.0.0/16",
                      "172.16.0.0/12"
                    ],
                    "excludedCidr": [
                      "10.0.0.0/8",
                      "127.0.0.0/8"
                    ]
                  }
                }
              }
            }
          },
          "tags": [
            "Intrusion settings"
          ]
        },
        "put": {
          "summary": "Set the supported instrusion settings for an MX network",
          "description": "Set the supported instrusion settings for an MX network",
          "operationId": "updateNetworkSecurityIntrusionSettings",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "updateNetworkSecurityIntrusionSettings",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "mode": {
                    "description": "Set mode to 'disabled'/'detection'/'prevention' (optional - omitting will leave current config unchanged)",
                    "type": "string"
                  },
                  "protectedNetworks": {
                    "description": "Set the included/excluded networks from the intrusion engine (optional - omitting will leave current config unchanged)",
                    "type": "object",
                    "properties": {
                      "useDefault": {
                        "description": "true/false whether to use special IPv4 addresses: https://tools.ietf.org/html/rfc5735 (required). Default value is true if none currently saved",
                        "type": "boolean"
                      },
                      "includedCidr": {
                        "description": "list of IP addresses or subnets being protected (required if 'useDefault' is false)",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "mode": "prevention",
                  "idsRulesets": "balanced",
                  "protectedNetworks": {
                    "useDefault": false,
                    "includedCidr": [
                      "10.0.0.0/8",
                      "127.0.0.0/8",
                      "169.254.0.0/16",
                      "172.16.0.0/12"
                    ],
                    "excludedCidr": [
                      "10.0.0.0/8",
                      "127.0.0.0/8"
                    ]
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "mode": "prevention",
                  "idsRulesets": "balanced",
                  "protectedNetworks": {
                    "useDefault": false,
                    "includedCidr": [
                      "10.0.0.0/8",
                      "127.0.0.0/8",
                      "169.254.0.0/16",
                      "172.16.0.0/12"
                    ],
                    "excludedCidr": [
                      "10.0.0.0/8",
                      "127.0.0.0/8"
                    ]
                  }
                }
              }
            }
          },
          "tags": [
            "Intrusion settings"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/organizations/{organizationId}/security/intrusionSettings` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge get\">GET</div> \n      <i>getOrganizationSecurityIntrusionSettings</i>\n      <br>\n      <b>Returns all supported intrusion settings for an organization.</b>\n      \n      <pre><code>{\n    &quot;whitelistedRules&quot;: [\n        {\n            &quot;ruleId&quot;: &quot;meraki:intrusion/snort/GID/01/SID/688&quot;,\n            &quot;message&quot;: &quot;SQL sa login failed&quot;\n        },\n        {\n            &quot;ruleId&quot;: &quot;meraki:intrusion/snort/GID/01/SID/5805&quot;,\n            &quot;message&quot;: &quot;MALWARE-OTHER Trackware myway speedbar runtime detection - switch engines&quot;\n        }\n    ]\n}</code></pre>\n      \n      <br>\n      <div class=\"mr-4 badge put\">PUT</div> \n      <i>updateOrganizationSecurityIntrusionSettings</i>\n      <br>\n      <b>Sets supported intrusion settings for an organization.</b>\n      \n      <pre><code>{\n    &quot;whitelistedRules&quot;: [\n        {\n            &quot;ruleId&quot;: &quot;meraki:intrusion/snort/GID/01/SID/688&quot;,\n            &quot;message&quot;: &quot;SQL sa login failed&quot;\n        },\n        {\n            &quot;ruleId&quot;: &quot;meraki:intrusion/snort/GID/01/SID/5805&quot;,\n            &quot;message&quot;: &quot;MALWARE-OTHER Trackware myway speedbar runtime detection - switch engines&quot;\n        }\n    ]\n}</code></pre>\n      ",
      "path": "/organizations/{organizationId}/security/intrusionSettings",
      "type": "infos",
      "name": "Changes",
      "group": "Intrusion settings",
      "apiDetails": {
        "get": {
          "summary": "Returns all supported intrusion settings for an organization.",
          "description": "Returns all supported intrusion settings for an organization.",
          "operationId": "getOrganizationSecurityIntrusionSettings",
          "parameters": [
            {
              "name": "organizationId",
              "in": "path",
              "type": "string",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "whitelistedRules": [
                    {
                      "ruleId": "meraki:intrusion/snort/GID/01/SID/688",
                      "message": "SQL sa login failed"
                    },
                    {
                      "ruleId": "meraki:intrusion/snort/GID/01/SID/5805",
                      "message": "MALWARE-OTHER Trackware myway speedbar runtime detection - switch engines"
                    }
                  ]
                }
              }
            }
          },
          "tags": [
            "Intrusion settings"
          ]
        },
        "put": {
          "summary": "Sets supported intrusion settings for an organization.",
          "description": "Sets supported intrusion settings for an organization.",
          "operationId": "updateOrganizationSecurityIntrusionSettings",
          "parameters": [
            {
              "name": "organizationId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "updateOrganizationSecurityIntrusionSettings",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "whitelistedRules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "ruleId": {
                          "type": "string",
                          "description": "A rule identifier of the format meraki:intrusion/snort/GID/<gid>/SID/<sid>. gid and sid can be obtained from either https://www.snort.org/rule-docs or as ruleIds from the security events in /organization/[orgId]/securityEvents",
                          "required": true
                        },
                        "message": {
                          "type": "string",
                          "description": "Message is optional and is ignored on a PUT call. It is allowed in order for PUT to be compatible with GET"
                        }
                      }
                    },
                    "description": "Sets a list of specific SNORT® signatures to whitelist",
                    "required": true
                  }
                },
                "example": {
                  "whitelistedRules": [
                    {
                      "ruleId": "meraki:intrusion/snort/GID/01/SID/688",
                      "message": "SQL sa login failed"
                    },
                    {
                      "ruleId": "meraki:intrusion/snort/GID/01/SID/5805",
                      "message": "MALWARE-OTHER Trackware myway speedbar runtime detection - switch engines"
                    }
                  ]
                }
              },
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "whitelistedRules": [
                    {
                      "ruleId": "meraki:intrusion/snort/GID/01/SID/688",
                      "message": "SQL sa login failed"
                    },
                    {
                      "ruleId": "meraki:intrusion/snort/GID/01/SID/5805",
                      "message": "MALWARE-OTHER Trackware myway speedbar runtime detection - switch engines"
                    }
                  ]
                }
              }
            }
          },
          "tags": [
            "Intrusion settings"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/networks/{networkId}/securityEvents` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge get\">GET</div> \n      <i>getNetworkSecurityEvents</i>\n      <br>\n      <b>List the security events for a network</b>\n      \n      <pre><code>[\n    {\n        &quot;ts&quot;: 1547683314.270398,\n        &quot;deviceMac&quot;: &quot;00:18:0a:01:02:03&quot;,\n        &quot;clientMac&quot;: &quot;A1:B2:C3:D4:E5:F6&quot;,\n        &quot;srcIp&quot;: &quot;1.2.3.4:34195&quot;,\n        &quot;destIp&quot;: &quot;10.20.30.40:80&quot;,\n        &quot;protocol&quot;: &quot;tcp/ip&quot;,\n        &quot;priority&quot;: &quot;2&quot;,\n        &quot;classification&quot;: &quot;4&quot;,\n        &quot;blocked&quot;: true,\n        &quot;message&quot;: &quot;SERVER-WEBAPP JBoss JMX console access attempt&quot;,\n        &quot;signature&quot;: &quot;1:21516:9&quot;,\n        &quot;sigSource&quot;: &quot;&quot;\n    },\n    {\n        &quot;ts&quot;: 1547683827.723265,\n        &quot;deviceMac&quot;: &quot;00:18:0a:01:02:03&quot;,\n        &quot;clientMac&quot;: &quot;A1:B2:C3:D4:E5:F6&quot;,\n        &quot;srcIp&quot;: &quot;1.2.3.4:56023&quot;,\n        &quot;destIp&quot;: &quot;10.20.30.40:80&quot;,\n        &quot;protocol&quot;: &quot;tcp/ip&quot;,\n        &quot;priority&quot;: &quot;1&quot;,\n        &quot;classification&quot;: &quot;33&quot;,\n        &quot;blocked&quot;: true,\n        &quot;message&quot;: &quot;POLICY-OTHER Adobe ColdFusion admin interface access attempt&quot;,\n        &quot;signature&quot;: &quot;1:25975:2&quot;,\n        &quot;sigSource&quot;: &quot;&quot;\n    }\n]</code></pre>\n      ",
      "path": "/networks/{networkId}/securityEvents",
      "type": "infos",
      "name": "Changes",
      "group": "Security events",
      "apiDetails": {
        "get": {
          "summary": "List the security events for a network",
          "description": "List the security events for a network",
          "operationId": "getNetworkSecurityEvents",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "type": "string",
              "name": "t0",
              "in": "query",
              "description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
            },
            {
              "type": "string",
              "name": "t1",
              "in": "query",
              "description": "The end of the timespan for the data. t1 can be a maximum of 365 days after t0."
            },
            {
              "type": "integer",
              "name": "timespan",
              "in": "query",
              "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 31 days."
            },
            {
              "type": "integer",
              "name": "perPage",
              "in": "query",
              "required": true,
              "description": "The number of entries per page returned. Acceptable range is 3 - 1000."
            },
            {
              "type": "string",
              "name": "startingAfter",
              "in": "query",
              "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
            },
            {
              "type": "string",
              "name": "endingBefore",
              "in": "query",
              "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "headers": {
                "Link": {
                  "type": "string",
                  "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                }
              },
              "examples": {
                "application/json": [
                  {
                    "ts": 1547683314.270398,
                    "deviceMac": "00:18:0a:01:02:03",
                    "clientMac": "A1:B2:C3:D4:E5:F6",
                    "srcIp": "1.2.3.4:34195",
                    "destIp": "10.20.30.40:80",
                    "protocol": "tcp/ip",
                    "priority": "2",
                    "classification": "4",
                    "blocked": true,
                    "message": "SERVER-WEBAPP JBoss JMX console access attempt",
                    "signature": "1:21516:9",
                    "sigSource": ""
                  },
                  {
                    "ts": 1547683827.723265,
                    "deviceMac": "00:18:0a:01:02:03",
                    "clientMac": "A1:B2:C3:D4:E5:F6",
                    "srcIp": "1.2.3.4:56023",
                    "destIp": "10.20.30.40:80",
                    "protocol": "tcp/ip",
                    "priority": "1",
                    "classification": "33",
                    "blocked": true,
                    "message": "POLICY-OTHER Adobe ColdFusion admin interface access attempt",
                    "signature": "1:25975:2",
                    "sigSource": ""
                  }
                ]
              }
            }
          },
          "tags": [
            "Security events"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/organizations/{organizationId}/securityEvents` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge get\">GET</div> \n      <i>getOrganizationSecurityEvents</i>\n      <br>\n      <b>List the security events for an organization</b>\n      \n      <pre><code>[\n    {\n        &quot;ts&quot;: 1547683314.270398,\n        &quot;deviceMac&quot;: &quot;00:18:0a:01:02:03&quot;,\n        &quot;clientMac&quot;: &quot;A1:B2:C3:D4:E5:F6&quot;,\n        &quot;srcIp&quot;: &quot;1.2.3.4:34195&quot;,\n        &quot;destIp&quot;: &quot;10.20.30.40:80&quot;,\n        &quot;protocol&quot;: &quot;tcp/ip&quot;,\n        &quot;priority&quot;: &quot;2&quot;,\n        &quot;classification&quot;: &quot;4&quot;,\n        &quot;blocked&quot;: true,\n        &quot;message&quot;: &quot;SERVER-WEBAPP JBoss JMX console access attempt&quot;,\n        &quot;signature&quot;: &quot;1:21516:9&quot;,\n        &quot;sigSource&quot;: &quot;&quot;\n    },\n    {\n        &quot;ts&quot;: 1547683827.723265,\n        &quot;deviceMac&quot;: &quot;00:18:0a:01:02:03&quot;,\n        &quot;clientMac&quot;: &quot;A1:B2:C3:D4:E5:F6&quot;,\n        &quot;srcIp&quot;: &quot;1.2.3.4:56023&quot;,\n        &quot;destIp&quot;: &quot;10.20.30.40:80&quot;,\n        &quot;protocol&quot;: &quot;tcp/ip&quot;,\n        &quot;priority&quot;: &quot;1&quot;,\n        &quot;classification&quot;: &quot;33&quot;,\n        &quot;blocked&quot;: true,\n        &quot;message&quot;: &quot;POLICY-OTHER Adobe ColdFusion admin interface access attempt&quot;,\n        &quot;signature&quot;: &quot;1:25975:2&quot;,\n        &quot;sigSource&quot;: &quot;&quot;\n    }\n]</code></pre>\n      ",
      "path": "/organizations/{organizationId}/securityEvents",
      "type": "infos",
      "name": "Changes",
      "group": "Security events",
      "apiDetails": {
        "get": {
          "summary": "List the security events for an organization",
          "description": "List the security events for an organization",
          "operationId": "getOrganizationSecurityEvents",
          "parameters": [
            {
              "name": "organizationId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "type": "string",
              "name": "t0",
              "in": "query",
              "description": "The beginning of the timespan for the data. The maximum lookback period is 365 days from today."
            },
            {
              "type": "string",
              "name": "t1",
              "in": "query",
              "description": "The end of the timespan for the data. t1 can be a maximum of 365 days after t0."
            },
            {
              "type": "integer",
              "name": "timespan",
              "in": "query",
              "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 365 days. The default is 31 days."
            },
            {
              "type": "integer",
              "name": "perPage",
              "in": "query",
              "required": true,
              "description": "The number of entries per page returned. Acceptable range is 3 - 1000."
            },
            {
              "type": "string",
              "name": "startingAfter",
              "in": "query",
              "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
            },
            {
              "type": "string",
              "name": "endingBefore",
              "in": "query",
              "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "headers": {
                "Link": {
                  "type": "string",
                  "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                }
              },
              "examples": {
                "application/json": [
                  {
                    "ts": 1547683314.270398,
                    "deviceMac": "00:18:0a:01:02:03",
                    "clientMac": "A1:B2:C3:D4:E5:F6",
                    "srcIp": "1.2.3.4:34195",
                    "destIp": "10.20.30.40:80",
                    "protocol": "tcp/ip",
                    "priority": "2",
                    "classification": "4",
                    "blocked": true,
                    "message": "SERVER-WEBAPP JBoss JMX console access attempt",
                    "signature": "1:21516:9",
                    "sigSource": ""
                  },
                  {
                    "ts": 1547683827.723265,
                    "deviceMac": "00:18:0a:01:02:03",
                    "clientMac": "A1:B2:C3:D4:E5:F6",
                    "srcIp": "1.2.3.4:56023",
                    "destIp": "10.20.30.40:80",
                    "protocol": "tcp/ip",
                    "priority": "1",
                    "classification": "33",
                    "blocked": true,
                    "message": "POLICY-OTHER Adobe ColdFusion admin interface access attempt",
                    "signature": "1:25975:2",
                    "sigSource": ""
                  }
                ]
              }
            }
          },
          "tags": [
            "Security events"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/networks/{networkId}/sm/geofences/{geofenceId}/regions` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge get\">GET</div> \n      <i>getNetworkSmGeofenceRegions</i>\n      <br>\n      <b>List the geofence's regions associated with the specified geofence</b>\n      \n      <pre><code>[\n    {\n        &quot;description&quot;: &quot;This is a sample geofence region&quot;,\n        &quot;type&quot;: &quot;circle&quot;,\n        &quot;lat&quot;: 10,\n        &quot;lon&quot;: 10,\n        &quot;radius&quot;: 10\n    }\n]</code></pre>\n      \n      <br>\n      <div class=\"mr-4 badge post\">POST</div> \n      <i>createNetworkSmGeofenceRegion</i>\n      <br>\n      <b>Add a new geofence region to the specified geofence</b>\n      \n      <pre><code>{\n    &quot;description&quot;: &quot;This is a sample geofence region&quot;,\n    &quot;type&quot;: &quot;circle&quot;,\n    &quot;lat&quot;: 10,\n    &quot;lon&quot;: 10,\n    &quot;radius&quot;: 10\n}</code></pre>\n      ",
      "path": "/networks/{networkId}/sm/geofences/{geofenceId}/regions",
      "type": "infos",
      "name": "Changes",
      "group": "Geofence regions",
      "apiDetails": {
        "get": {
          "summary": "List the geofence's regions associated with the specified geofence",
          "description": "List the geofence's regions associated with the specified geofence",
          "operationId": "getNetworkSmGeofenceRegions",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "geofenceId",
              "in": "path",
              "type": "string",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": [
                  {
                    "description": "This is a sample geofence region",
                    "type": "circle",
                    "lat": 10,
                    "lon": 10,
                    "radius": 10
                  }
                ]
              }
            }
          },
          "tags": [
            "Geofence regions"
          ]
        },
        "post": {
          "summary": "Add a new geofence region to the specified geofence",
          "description": "Add a new geofence region to the specified geofence",
          "operationId": "createNetworkSmGeofenceRegion",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "geofenceId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "createNetworkSmGeofenceRegion",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "description": "The description of this region",
                    "type": "string"
                  },
                  "type": {
                    "description": "The type of this region. Can only be \"rectangle\" or \"circle\"",
                    "type": "string"
                  },
                  "lat": {
                    "description": "The latitudinal coordinate of the geofence region's center. Can only be for a circle geofence region",
                    "type": "integer"
                  },
                  "lon": {
                    "description": "The longitudinal coordinate of the geofence region's center. Can only be for a circle geofence region",
                    "type": "integer"
                  },
                  "radius": {
                    "description": "The radius of the geofence region. Can only be for a circle geofence region",
                    "type": "integer"
                  },
                  "north": {
                    "description": "The northern edge of the geofence region. Can only be for a rectangle geofence region",
                    "type": "string"
                  },
                  "east": {
                    "description": "The eastern edge of the geofence region. Can only be for a rectangle geofence region",
                    "type": "string"
                  },
                  "south": {
                    "description": "The southern edge of the geofence region. Can only be for a rectangle geofence region",
                    "type": "string"
                  },
                  "west": {
                    "description": "The western edge of the geofence region. Can only be for a rectangle geofence region",
                    "type": "string"
                  }
                },
                "example": {
                  "description": "This is a sample geofence region",
                  "type": "circle",
                  "lat": 10,
                  "lon": 10,
                  "radius": 10
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "description": "This is a sample geofence region",
                  "type": "circle",
                  "lat": 10,
                  "lon": 10,
                  "radius": 10
                }
              }
            }
          },
          "tags": [
            "Geofence regions"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/networks/{networkId}/sm/geofences/{geofenceId}/regions/{regionId}` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge get\">GET</div> \n      <i>getNetworkSmGeofenceRegion</i>\n      <br>\n      <b>Show the specified geofence region</b>\n      \n      <pre><code>{\n    &quot;description&quot;: &quot;This is a sample geofence region&quot;,\n    &quot;type&quot;: &quot;circle&quot;,\n    &quot;lat&quot;: 10,\n    &quot;lon&quot;: 10,\n    &quot;radius&quot;: 10\n}</code></pre>\n      \n      <br>\n      <div class=\"mr-4 badge put\">PUT</div> \n      <i>updateNetworkSmGeofenceRegion</i>\n      <br>\n      <b>Update a specified geofence region</b>\n      \n      <pre><code>{\n    &quot;description&quot;: &quot;This is a sample geofence region&quot;,\n    &quot;type&quot;: &quot;circle&quot;,\n    &quot;lat&quot;: 10,\n    &quot;lon&quot;: 10,\n    &quot;radius&quot;: 10\n}</code></pre>\n      \n      <br>\n      <div class=\"mr-4 badge delete\">DELETE</div> \n      <i>deleteNetworkSmGeofenceRegion</i>\n      <br>\n      <b>Delete a geofence region attached to the specified geofence</b>\n      \n      <pre><code></code></pre>\n      ",
      "path": "/networks/{networkId}/sm/geofences/{geofenceId}/regions/{regionId}",
      "type": "infos",
      "name": "Changes",
      "group": "Geofence regions",
      "apiDetails": {
        "get": {
          "summary": "Show the specified geofence region",
          "description": "Show the specified geofence region",
          "operationId": "getNetworkSmGeofenceRegion",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "geofenceId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "regionId",
              "in": "path",
              "type": "string",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "description": "This is a sample geofence region",
                  "type": "circle",
                  "lat": 10,
                  "lon": 10,
                  "radius": 10
                }
              }
            }
          },
          "tags": [
            "Geofence regions"
          ]
        },
        "put": {
          "summary": "Update a specified geofence region",
          "description": "Update a specified geofence region",
          "operationId": "updateNetworkSmGeofenceRegion",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "geofenceId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "regionId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "updateNetworkSmGeofenceRegion",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "description": "The description of this region",
                    "type": "string"
                  },
                  "type": {
                    "description": "The type of this region. Can only be \"rectangle\" or \"circle\"",
                    "type": "string"
                  },
                  "lat": {
                    "description": "The latitudinal coordinate of the geofence region's center. Can only be for a circle geofence region",
                    "type": "integer"
                  },
                  "lon": {
                    "description": "The longitudinal coordinate of the geofence region's center. Can only be for a circle geofence region",
                    "type": "integer"
                  },
                  "radius": {
                    "description": "The radius of the geofence region. Can only be for a circle geofence region",
                    "type": "integer"
                  },
                  "north": {
                    "description": "The northern edge of the geofence region. Can only be for a rectangle geofence region",
                    "type": "string"
                  },
                  "east": {
                    "description": "The eastern edge of the geofence region. Can only be for a rectangle geofence region",
                    "type": "string"
                  },
                  "south": {
                    "description": "The southern edge of the geofence region. Can only be for a rectangle geofence region",
                    "type": "string"
                  },
                  "west": {
                    "description": "The western edge of the geofence region. Can only be for a rectangle geofence region",
                    "type": "string"
                  }
                },
                "example": {
                  "description": "This is a sample geofence region",
                  "type": "circle",
                  "lat": 10,
                  "lon": 10,
                  "radius": 10
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "description": "This is a sample geofence region",
                  "type": "circle",
                  "lat": 10,
                  "lon": 10,
                  "radius": 10
                }
              }
            }
          },
          "tags": [
            "Geofence regions"
          ]
        },
        "delete": {
          "summary": "Delete a geofence region attached to the specified geofence",
          "description": "Delete a geofence region attached to the specified geofence",
          "operationId": "deleteNetworkSmGeofenceRegion",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "geofenceId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "regionId",
              "in": "path",
              "type": "string",
              "required": true
            }
          ],
          "responses": {
            "204": {
              "description": "Successful operation"
            }
          },
          "tags": [
            "Geofence regions"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/networks/{networkId}/sm/geofences` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge get\">GET</div> \n      <i>getNetworkSmGeofences</i>\n      <br>\n      <b>List the geofences in this network</b>\n      \n      <pre><code>[\n    {\n        &quot;name&quot;: &quot;My Geofence&quot;,\n        &quot;description&quot;: &quot;This is a sample geofence&quot;,\n        &quot;maxTimeOutside&quot;: 5\n    }\n]</code></pre>\n      \n      <br>\n      <div class=\"mr-4 badge post\">POST</div> \n      <i>createNetworkSmGeofence</i>\n      <br>\n      <b>Add a new geofence</b>\n      \n      <pre><code>{\n    &quot;name&quot;: &quot;My Geofence&quot;,\n    &quot;description&quot;: &quot;This is a sample geofence&quot;,\n    &quot;maxTimeOutside&quot;: 5\n}</code></pre>\n      ",
      "path": "/networks/{networkId}/sm/geofences",
      "type": "infos",
      "name": "Changes",
      "group": "Geofences",
      "apiDetails": {
        "get": {
          "summary": "List the geofences in this network",
          "description": "List the geofences in this network",
          "operationId": "getNetworkSmGeofences",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": [
                  {
                    "name": "My Geofence",
                    "description": "This is a sample geofence",
                    "maxTimeOutside": 5
                  }
                ]
              }
            }
          },
          "tags": [
            "Geofences"
          ]
        },
        "post": {
          "summary": "Add a new geofence",
          "description": "Add a new geofence",
          "operationId": "createNetworkSmGeofence",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "createNetworkSmGeofence",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The name of this geofence",
                    "type": "string"
                  },
                  "description": {
                    "description": "The description of this geofence",
                    "type": "string"
                  },
                  "maxTimeOutside": {
                    "description": "The maximum time outside of a geofence area a device can be before being considered violating the geofence.",
                    "type": "integer"
                  }
                },
                "example": {
                  "name": "My Geofence",
                  "description": "This is a sample geofence",
                  "maxTimeOutside": 5
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "name": "My Geofence",
                  "description": "This is a sample geofence",
                  "maxTimeOutside": 5
                }
              }
            }
          },
          "tags": [
            "Geofences"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/networks/{networkId}/sm/geofences/{geofenceId}` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge get\">GET</div> \n      <i>getNetworkSmGeofence</i>\n      <br>\n      <b>Returns a specific geofence</b>\n      \n      <pre><code>{\n    &quot;name&quot;: &quot;My Geofence&quot;,\n    &quot;description&quot;: &quot;This is a sample geofence&quot;,\n    &quot;maxTimeOutside&quot;: 5\n}</code></pre>\n      \n      <br>\n      <div class=\"mr-4 badge put\">PUT</div> \n      <i>updateNetworkSmGeofence</i>\n      <br>\n      <b>Update a geofence</b>\n      \n      <pre><code>{\n    &quot;name&quot;: &quot;My Geofence&quot;,\n    &quot;description&quot;: &quot;This is a sample geofence&quot;,\n    &quot;maxTimeOutside&quot;: 5\n}</code></pre>\n      ",
      "path": "/networks/{networkId}/sm/geofences/{geofenceId}",
      "type": "infos",
      "name": "Changes",
      "group": "Geofences",
      "apiDetails": {
        "get": {
          "summary": "Returns a specific geofence",
          "description": "Returns a specific geofence",
          "operationId": "getNetworkSmGeofence",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "geofenceId",
              "in": "path",
              "type": "string",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "name": "My Geofence",
                  "description": "This is a sample geofence",
                  "maxTimeOutside": 5
                }
              }
            }
          },
          "tags": [
            "Geofences"
          ]
        },
        "put": {
          "summary": "Update a geofence",
          "description": "Update a geofence",
          "operationId": "updateNetworkSmGeofence",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "geofenceId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "updateNetworkSmGeofence",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The name of this geofence",
                    "type": "string"
                  },
                  "description": {
                    "description": "The description of this geofence",
                    "type": "string"
                  },
                  "maxTimeOutside": {
                    "description": "The maximum time outside of a geofence area a device can be before being considered violating the geofence.",
                    "type": "integer"
                  }
                },
                "example": {
                  "name": "My Geofence",
                  "description": "This is a sample geofence",
                  "maxTimeOutside": 5
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "name": "My Geofence",
                  "description": "This is a sample geofence",
                  "maxTimeOutside": 5
                }
              }
            }
          },
          "tags": [
            "Geofences"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/networks/{networkId}/sm/geofences/{geofence_id}` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge delete\">DELETE</div> \n      <i>deleteNetworkSmGeofence</i>\n      <br>\n      <b>Delete a geofence</b>\n      \n      <pre><code></code></pre>\n      ",
      "path": "/networks/{networkId}/sm/geofences/{geofence_id}",
      "type": "infos",
      "name": "Changes",
      "group": "Geofences",
      "apiDetails": {
        "delete": {
          "summary": "Delete a geofence",
          "description": "Delete a geofence",
          "operationId": "deleteNetworkSmGeofence",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "geofence_id",
              "in": "path",
              "type": "string",
              "required": true
            }
          ],
          "responses": {
            "204": {
              "description": "Successful operation"
            }
          },
          "tags": [
            "Geofences"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/networks/{networkId}/sm/tags` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge get\">GET</div> \n      <i>getNetworkSmTags</i>\n      <br>\n      <b>List the tags on this node group</b>\n      \n      <pre><code>[\n    {\n        &quot;name&quot;: &quot;Geofence Tag&quot;,\n        &quot;type&quot;: &quot;geofence&quot;,\n        &quot;scope&quot;: &quot;withAll&quot;,\n        &quot;tags&quot;: [\n            &quot;tag&quot;,\n            &quot;test&quot;\n        ]\n    }\n]</code></pre>\n      ",
      "path": "/networks/{networkId}/sm/tags",
      "type": "infos",
      "name": "Changes",
      "group": "Tags",
      "apiDetails": {
        "get": {
          "summary": "List the tags on this node group",
          "description": "List the tags on this node group",
          "operationId": "getNetworkSmTags",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "type",
              "description": "Define the tag type. Required.",
              "in": "query",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": [
                  {
                    "name": "Geofence Tag",
                    "type": "geofence",
                    "scope": "withAll",
                    "tags": [
                      "tag",
                      "test"
                    ]
                  }
                ]
              }
            }
          },
          "tags": [
            "Tags"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/networks/{networkId}/sm/tags/{tagId}` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge get\">GET</div> \n      <i>getNetworkSmTag</i>\n      <br>\n      <b>Show a specific tag</b>\n      \n      <pre><code>{\n    &quot;name&quot;: &quot;Geofence Tag&quot;,\n    &quot;type&quot;: &quot;geofence&quot;,\n    &quot;scope&quot;: &quot;withAll&quot;,\n    &quot;tags&quot;: [\n        &quot;tag&quot;,\n        &quot;test&quot;\n    ]\n}</code></pre>\n      \n      <br>\n      <div class=\"mr-4 badge post\">POST</div> \n      <i>createNetworkSmTag</i>\n      <br>\n      <b>Add a new tag</b>\n      \n      <pre><code>{\n    &quot;name&quot;: &quot;Geofence Tag&quot;,\n    &quot;type&quot;: &quot;geofence&quot;,\n    &quot;scope&quot;: &quot;withAll&quot;,\n    &quot;tags&quot;: [\n        &quot;tag&quot;,\n        &quot;test&quot;\n    ]\n}</code></pre>\n      \n      <br>\n      <div class=\"mr-4 badge put\">PUT</div> \n      <i>updateNetworkSmTag</i>\n      <br>\n      <b>Update a tag</b>\n      \n      <pre><code>{\n    &quot;name&quot;: &quot;Geofence Tag&quot;,\n    &quot;type&quot;: &quot;geofence&quot;,\n    &quot;scope&quot;: &quot;withAll&quot;,\n    &quot;tags&quot;: [\n        &quot;tag&quot;,\n        &quot;test&quot;\n    ]\n}</code></pre>\n      \n      <br>\n      <div class=\"mr-4 badge delete\">DELETE</div> \n      <i>deleteNetworkSmTag</i>\n      <br>\n      <b>Delete a tag</b>\n      \n      <pre><code></code></pre>\n      ",
      "path": "/networks/{networkId}/sm/tags/{tagId}",
      "type": "infos",
      "name": "Changes",
      "group": "Tags",
      "apiDetails": {
        "get": {
          "summary": "Show a specific tag",
          "description": "Show a specific tag",
          "operationId": "getNetworkSmTag",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "tagId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "type",
              "description": "Define the tag type. Required.",
              "in": "query",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "name": "Geofence Tag",
                  "type": "geofence",
                  "scope": "withAll",
                  "tags": [
                    "tag",
                    "test"
                  ]
                }
              }
            }
          },
          "tags": [
            "Tags"
          ]
        },
        "put": {
          "summary": "Update a tag",
          "description": "Update a tag",
          "operationId": "updateNetworkSmTag",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "tagId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "updateNetworkSmTag",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "description": "Defines the tag type. Required.",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of this tag.",
                    "type": "string"
                  },
                  "associatedId": {
                    "description": "ID of the associated entity (not used for manual tags).",
                    "type": "string"
                  }
                },
                "example": {
                  "name": "Geofence Tag",
                  "type": "geofence",
                  "scope": "withAll",
                  "tags": [
                    "tag",
                    "test"
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "name": "Geofence Tag",
                  "type": "geofence",
                  "scope": "withAll",
                  "tags": [
                    "tag",
                    "test"
                  ]
                }
              }
            }
          },
          "tags": [
            "Tags"
          ]
        },
        "post": {
          "summary": "Add a new tag",
          "description": "Add a new tag",
          "operationId": "createNetworkSmTag",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "tagId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "createNetworkSmTag",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "description": "Defines the tag type. Required.",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of this tag.",
                    "type": "string"
                  },
                  "associatedId": {
                    "description": "ID of the associated entity (not used for manual tags).",
                    "type": "string"
                  }
                },
                "example": {
                  "name": "Geofence Tag",
                  "type": "geofence",
                  "scope": "withAll",
                  "tags": [
                    "tag",
                    "test"
                  ]
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "name": "Geofence Tag",
                  "type": "geofence",
                  "scope": "withAll",
                  "tags": [
                    "tag",
                    "test"
                  ]
                }
              }
            }
          },
          "tags": [
            "Tags"
          ]
        },
        "delete": {
          "summary": "Delete a tag",
          "description": "Delete a tag",
          "operationId": "deleteNetworkSmTag",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "tagId",
              "in": "path",
              "type": "string",
              "required": true
            }
          ],
          "responses": {
            "204": {
              "description": "Successful operation"
            }
          },
          "tags": [
            "Tags"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/networks/{networkId}/sm/tags/{tagId}/scopedDevices` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge get\">GET</div> \n      <i>getNetworkSmTagScopedDevices</i>\n      <br>\n      <b>Get the devices in scope of this tag</b>\n      \n      <pre><code>{\n    &quot;name&quot;: &quot;Geofence Tag&quot;,\n    &quot;type&quot;: &quot;geofence&quot;,\n    &quot;scope&quot;: &quot;withAll&quot;,\n    &quot;tags&quot;: [\n        &quot;tag&quot;,\n        &quot;test&quot;\n    ]\n}</code></pre>\n      ",
      "path": "/networks/{networkId}/sm/tags/{tagId}/scopedDevices",
      "type": "infos",
      "name": "Changes",
      "group": "Tags",
      "apiDetails": {
        "get": {
          "summary": "Get the devices in scope of this tag",
          "description": "Get the devices in scope of this tag",
          "operationId": "getNetworkSmTagScopedDevices",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "tagId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "type",
              "description": "Defines the tag type. Required.",
              "in": "query",
              "type": "string"
            },
            {
              "name": "scope",
              "description": "The scope and tag options of the target group. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none, followed by tags.",
              "in": "query",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "name": "Geofence Tag",
                  "type": "geofence",
                  "scope": "withAll",
                  "tags": [
                    "tag",
                    "test"
                  ]
                }
              }
            }
          },
          "tags": [
            "Tags"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/networks/{networkId}/ssids/{number}/reset` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge post\">POST</div> \n      <i>resetNetworkSsid</i>\n      <br>\n      <b>Reset configuration and stats for an SSID</b>\n      \n      <pre><code>{\n    &quot;number&quot;: 0,\n    &quot;name&quot;: &quot;My SSID&quot;,\n    &quot;enabled&quot;: true,\n    &quot;splashPage&quot;: &quot;Click-through splash page&quot;,\n    &quot;ssidAdminAccessible&quot;: false,\n    &quot;authMode&quot;: &quot;open&quot;,\n    &quot;ipAssignmentMode&quot;: &quot;NAT mode&quot;,\n    &quot;bandSelection&quot;: &quot;5 GHz band only&quot;,\n    &quot;perClientBandwidthLimitUp&quot;: 0,\n    &quot;perClientBandwidthLimitDown&quot;: 0\n}</code></pre>\n      ",
      "path": "/networks/{networkId}/ssids/{number}/reset",
      "type": "infos",
      "name": "Changes",
      "group": "SSIDs",
      "apiDetails": {
        "post": {
          "summary": "Reset configuration and stats for an SSID",
          "description": "Reset configuration and stats for an SSID",
          "operationId": "resetNetworkSsid",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "in": "path",
              "type": "string",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "number": 0,
                  "name": "My SSID",
                  "enabled": true,
                  "splashPage": "Click-through splash page",
                  "ssidAdminAccessible": false,
                  "authMode": "open",
                  "ipAssignmentMode": "NAT mode",
                  "bandSelection": "5 GHz band only",
                  "perClientBandwidthLimitUp": 0,
                  "perClientBandwidthLimitDown": 0
                }
              }
            }
          },
          "tags": [
            "SSIDs"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/networks/{networkId}/trafficShaping` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge get\">GET</div> \n      <i>getNetworkTrafficShaping</i>\n      <br>\n      <b>Display the traffic shaping settings for an MX network</b>\n      \n      <pre><code>{\n    &quot;defaultRulesEnabled&quot;: true,\n    &quot;rules&quot;: [\n        {\n            &quot;definitions&quot;: [\n                {\n                    &quot;type&quot;: &quot;host&quot;,\n                    &quot;value&quot;: &quot;google.com&quot;\n                },\n                {\n                    &quot;type&quot;: &quot;port&quot;,\n                    &quot;value&quot;: &quot;9090&quot;\n                },\n                {\n                    &quot;type&quot;: &quot;ipRange&quot;,\n                    &quot;value&quot;: &quot;192.1.0.0&quot;\n                },\n                {\n                    &quot;type&quot;: &quot;ipRange&quot;,\n                    &quot;value&quot;: &quot;192.1.0.0/16&quot;\n                },\n                {\n                    &quot;type&quot;: &quot;ipRange&quot;,\n                    &quot;value&quot;: &quot;10.1.0.0/16:80&quot;\n                },\n                {\n                    &quot;type&quot;: &quot;localNet&quot;,\n                    &quot;value&quot;: &quot;192.168.0.0/16&quot;\n                },\n                {\n                    &quot;type&quot;: &quot;applicationCategory&quot;,\n                    &quot;value&quot;: {\n                        &quot;id&quot;: &quot;meraki:layer7/category/2&quot;,\n                        &quot;name&quot;: &quot;Blogging&quot;\n                    }\n                },\n                {\n                    &quot;type&quot;: &quot;application&quot;,\n                    &quot;value&quot;: {\n                        &quot;id&quot;: &quot;meraki:layer7/application/133&quot;,\n                        &quot;name&quot;: &quot;Battle.net&quot;\n                    }\n                }\n            ],\n            &quot;perClientBandwidthLimits&quot;: {\n                &quot;settings&quot;: &quot;custom&quot;,\n                &quot;bandwidthLimits&quot;: {\n                    &quot;limitUp&quot;: 1000000,\n                    &quot;limitDown&quot;: 1000000\n                }\n            },\n            &quot;dscpTagValue&quot;: null,\n            &quot;priority&quot;: &quot;normal&quot;\n        }\n    ]\n}</code></pre>\n      \n      <br>\n      <div class=\"mr-4 badge put\">PUT</div> \n      <i>updateNetworkTrafficShaping</i>\n      <br>\n      <b>Update the traffic shaping settings for an MX network</b>\n      \n      <pre><code>{\n    &quot;defaultRulesEnabled&quot;: true,\n    &quot;rules&quot;: [\n        {\n            &quot;definitions&quot;: [\n                {\n                    &quot;type&quot;: &quot;host&quot;,\n                    &quot;value&quot;: &quot;google.com&quot;\n                },\n                {\n                    &quot;type&quot;: &quot;port&quot;,\n                    &quot;value&quot;: &quot;9090&quot;\n                },\n                {\n                    &quot;type&quot;: &quot;ipRange&quot;,\n                    &quot;value&quot;: &quot;192.1.0.0&quot;\n                },\n                {\n                    &quot;type&quot;: &quot;ipRange&quot;,\n                    &quot;value&quot;: &quot;192.1.0.0/16&quot;\n                },\n                {\n                    &quot;type&quot;: &quot;ipRange&quot;,\n                    &quot;value&quot;: &quot;10.1.0.0/16:80&quot;\n                },\n                {\n                    &quot;type&quot;: &quot;localNet&quot;,\n                    &quot;value&quot;: &quot;192.168.0.0/16&quot;\n                },\n                {\n                    &quot;type&quot;: &quot;applicationCategory&quot;,\n                    &quot;value&quot;: {\n                        &quot;id&quot;: &quot;meraki:layer7/category/2&quot;,\n                        &quot;name&quot;: &quot;Blogging&quot;\n                    }\n                },\n                {\n                    &quot;type&quot;: &quot;application&quot;,\n                    &quot;value&quot;: {\n                        &quot;id&quot;: &quot;meraki:layer7/application/133&quot;,\n                        &quot;name&quot;: &quot;Battle.net&quot;\n                    }\n                }\n            ],\n            &quot;perClientBandwidthLimits&quot;: {\n                &quot;settings&quot;: &quot;custom&quot;,\n                &quot;bandwidthLimits&quot;: {\n                    &quot;limitUp&quot;: 1000000,\n                    &quot;limitDown&quot;: 1000000\n                }\n            },\n            &quot;dscpTagValue&quot;: null,\n            &quot;priority&quot;: &quot;normal&quot;\n        }\n    ]\n}</code></pre>\n      ",
      "path": "/networks/{networkId}/trafficShaping",
      "type": "infos",
      "name": "Changes",
      "group": "Traffic shaping",
      "apiDetails": {
        "put": {
          "summary": "Update the traffic shaping settings for an MX network",
          "description": "Update the traffic shaping settings for an MX network",
          "operationId": "updateNetworkTrafficShaping",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "updateNetworkTrafficShaping",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "defaultRulesEnabled": {
                    "type": "boolean",
                    "description": "    Whether default traffic shaping rules are enabled (true) or disabled (false).\n    There are 4 default rules, which can\n    be seen on your network's traffic shaping page. Note that default rules\n    count against the rule limit of 8.\n"
                  },
                  "rules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "definitions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'"
                              },
                              "value": {
                                "type": "string",
                                "description": "    If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": <string> }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).\n"
                              }
                            }
                          },
                          "description": "    A list of objects describing the definition of your traffic shaping rule. Each\n    definition object has the structure { \"type\": <string>, \"value\": <string OR object> }.\n    \"type\" can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.\n\n        If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n\n\n        If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": <string> }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).\n\n"
                        },
                        "perClientBandwidthLimits": {
                          "type": "object",
                          "properties": {
                            "settings": {
                              "type": "string",
                              "description": "'network default', 'ignore' or 'custom'"
                            },
                            "bandwidthLimits": {
                              "type": "object",
                              "properties": {
                                "limitUp": {
                                  "type": "integer",
                                  "description": "The maximum upload limit (integer, in Kbps)."
                                },
                                "limitDown": {
                                  "type": "integer",
                                  "description": "The maximum download limit (integer, in Kbps)."
                                }
                              },
                              "description": "The bandwidth limits object, specifying the upload and download speed."
                            }
                          },
                          "description": "    An object describing the bandwidth settings for your rule, with the structure\n    { \"settings\": <string> , \"bandwidthLimits\": { \"limitUp\": <integer>, \"limitDown\": <integer> } }.\n    'settings' can be set to 'network default', 'ignore' or 'custom'. While 'limitUp' and 'limitDown'\n    are the upload and download speeds, respectively, in Kbps (defaults to 5120).\n    Note that 'bandwidthLimits' are only enforced if 'settings' is set to 'custom'.\n"
                        },
                        "dscpTagValue": {
                          "type": "integer",
                          "description": "    The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.\n"
                        },
                        "priority": {
                          "type": "string",
                          "description": "    A string, indicating the priority level for packets bound to your rule.\n    Can be 'low', 'normal' or 'high'.\n"
                        }
                      }
                    },
                    "description": "    An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.\n"
                  }
                },
                "example": {
                  "defaultRulesEnabled": true,
                  "rules": [
                    {
                      "definitions": [
                        {
                          "type": "host",
                          "value": "google.com"
                        },
                        {
                          "type": "port",
                          "value": "9090"
                        },
                        {
                          "type": "ipRange",
                          "value": "192.1.0.0"
                        },
                        {
                          "type": "ipRange",
                          "value": "192.1.0.0/16"
                        },
                        {
                          "type": "ipRange",
                          "value": "10.1.0.0/16:80"
                        },
                        {
                          "type": "localNet",
                          "value": "192.168.0.0/16"
                        },
                        {
                          "type": "applicationCategory",
                          "value": {
                            "id": "meraki:layer7/category/2",
                            "name": "Blogging"
                          }
                        },
                        {
                          "type": "application",
                          "value": {
                            "id": "meraki:layer7/application/133",
                            "name": "Battle.net"
                          }
                        }
                      ],
                      "perClientBandwidthLimits": {
                        "settings": "custom",
                        "bandwidthLimits": {
                          "limitUp": 1000000,
                          "limitDown": 1000000
                        }
                      },
                      "dscpTagValue": null,
                      "priority": "normal"
                    }
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "defaultRulesEnabled": true,
                  "rules": [
                    {
                      "definitions": [
                        {
                          "type": "host",
                          "value": "google.com"
                        },
                        {
                          "type": "port",
                          "value": "9090"
                        },
                        {
                          "type": "ipRange",
                          "value": "192.1.0.0"
                        },
                        {
                          "type": "ipRange",
                          "value": "192.1.0.0/16"
                        },
                        {
                          "type": "ipRange",
                          "value": "10.1.0.0/16:80"
                        },
                        {
                          "type": "localNet",
                          "value": "192.168.0.0/16"
                        },
                        {
                          "type": "applicationCategory",
                          "value": {
                            "id": "meraki:layer7/category/2",
                            "name": "Blogging"
                          }
                        },
                        {
                          "type": "application",
                          "value": {
                            "id": "meraki:layer7/application/133",
                            "name": "Battle.net"
                          }
                        }
                      ],
                      "perClientBandwidthLimits": {
                        "settings": "custom",
                        "bandwidthLimits": {
                          "limitUp": 1000000,
                          "limitDown": 1000000
                        }
                      },
                      "dscpTagValue": null,
                      "priority": "normal"
                    }
                  ]
                }
              }
            }
          },
          "tags": [
            "Traffic shaping"
          ]
        },
        "get": {
          "summary": "Display the traffic shaping settings for an MX network",
          "description": "Display the traffic shaping settings for an MX network",
          "operationId": "getNetworkTrafficShaping",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "defaultRulesEnabled": true,
                  "rules": [
                    {
                      "definitions": [
                        {
                          "type": "host",
                          "value": "google.com"
                        },
                        {
                          "type": "port",
                          "value": "9090"
                        },
                        {
                          "type": "ipRange",
                          "value": "192.1.0.0"
                        },
                        {
                          "type": "ipRange",
                          "value": "192.1.0.0/16"
                        },
                        {
                          "type": "ipRange",
                          "value": "10.1.0.0/16:80"
                        },
                        {
                          "type": "localNet",
                          "value": "192.168.0.0/16"
                        },
                        {
                          "type": "applicationCategory",
                          "value": {
                            "id": "meraki:layer7/category/2",
                            "name": "Blogging"
                          }
                        },
                        {
                          "type": "application",
                          "value": {
                            "id": "meraki:layer7/application/133",
                            "name": "Battle.net"
                          }
                        }
                      ],
                      "perClientBandwidthLimits": {
                        "settings": "custom",
                        "bandwidthLimits": {
                          "limitUp": 1000000,
                          "limitDown": 1000000
                        }
                      },
                      "dscpTagValue": null,
                      "priority": "normal"
                    }
                  ]
                }
              }
            }
          },
          "tags": [
            "Traffic shaping"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/networks/{networkId}/ssids/{number}/trafficShaping` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge get\">GET</div> \n      <i>getNetworkSsidTrafficShaping</i>\n      <br>\n      <b>Display the traffic shaping settings for a SSID on an MR network</b>\n      \n      <pre><code>{\n    &quot;trafficShapingEnabled&quot;: true,\n    &quot;defaultRulesEnabled&quot;: true,\n    &quot;rules&quot;: [\n        {\n            &quot;definitions&quot;: [\n                {\n                    &quot;type&quot;: &quot;host&quot;,\n                    &quot;value&quot;: &quot;google.com&quot;\n                },\n                {\n                    &quot;type&quot;: &quot;port&quot;,\n                    &quot;value&quot;: &quot;9090&quot;\n                },\n                {\n                    &quot;type&quot;: &quot;ipRange&quot;,\n                    &quot;value&quot;: &quot;192.1.0.0&quot;\n                },\n                {\n                    &quot;type&quot;: &quot;ipRange&quot;,\n                    &quot;value&quot;: &quot;192.1.0.0/16&quot;\n                },\n                {\n                    &quot;type&quot;: &quot;ipRange&quot;,\n                    &quot;value&quot;: &quot;10.1.0.0/16:80&quot;\n                },\n                {\n                    &quot;type&quot;: &quot;localNet&quot;,\n                    &quot;value&quot;: &quot;192.168.0.0/16&quot;\n                },\n                {\n                    &quot;type&quot;: &quot;applicationCategory&quot;,\n                    &quot;value&quot;: {\n                        &quot;id&quot;: &quot;meraki:layer7/category/2&quot;,\n                        &quot;name&quot;: &quot;Blogging&quot;\n                    }\n                },\n                {\n                    &quot;type&quot;: &quot;application&quot;,\n                    &quot;value&quot;: {\n                        &quot;id&quot;: &quot;meraki:layer7/application/133&quot;,\n                        &quot;name&quot;: &quot;Battle.net&quot;\n                    }\n                }\n            ],\n            &quot;perClientBandwidthLimits&quot;: {\n                &quot;settings&quot;: &quot;custom&quot;,\n                &quot;bandwidthLimits&quot;: {\n                    &quot;limitUp&quot;: 1000000,\n                    &quot;limitDown&quot;: 1000000\n                }\n            },\n            &quot;dscpTagValue&quot;: null,\n            &quot;pcpTagValue&quot;: null\n        }\n    ]\n}</code></pre>\n      \n      <br>\n      <div class=\"mr-4 badge put\">PUT</div> \n      <i>updateNetworkSsidTrafficShaping</i>\n      <br>\n      <b>Update the traffic shaping settings for an SSID on an MR network</b>\n      \n      <pre><code>{\n    &quot;trafficShapingEnabled&quot;: true,\n    &quot;defaultRulesEnabled&quot;: true,\n    &quot;rules&quot;: [\n        {\n            &quot;definitions&quot;: [\n                {\n                    &quot;type&quot;: &quot;host&quot;,\n                    &quot;value&quot;: &quot;google.com&quot;\n                },\n                {\n                    &quot;type&quot;: &quot;port&quot;,\n                    &quot;value&quot;: &quot;9090&quot;\n                },\n                {\n                    &quot;type&quot;: &quot;ipRange&quot;,\n                    &quot;value&quot;: &quot;192.1.0.0&quot;\n                },\n                {\n                    &quot;type&quot;: &quot;ipRange&quot;,\n                    &quot;value&quot;: &quot;192.1.0.0/16&quot;\n                },\n                {\n                    &quot;type&quot;: &quot;ipRange&quot;,\n                    &quot;value&quot;: &quot;10.1.0.0/16:80&quot;\n                },\n                {\n                    &quot;type&quot;: &quot;localNet&quot;,\n                    &quot;value&quot;: &quot;192.168.0.0/16&quot;\n                },\n                {\n                    &quot;type&quot;: &quot;applicationCategory&quot;,\n                    &quot;value&quot;: {\n                        &quot;id&quot;: &quot;meraki:layer7/category/2&quot;,\n                        &quot;name&quot;: &quot;Blogging&quot;\n                    }\n                },\n                {\n                    &quot;type&quot;: &quot;application&quot;,\n                    &quot;value&quot;: {\n                        &quot;id&quot;: &quot;meraki:layer7/application/133&quot;,\n                        &quot;name&quot;: &quot;Battle.net&quot;\n                    }\n                }\n            ],\n            &quot;perClientBandwidthLimits&quot;: {\n                &quot;settings&quot;: &quot;custom&quot;,\n                &quot;bandwidthLimits&quot;: {\n                    &quot;limitUp&quot;: 1000000,\n                    &quot;limitDown&quot;: 1000000\n                }\n            },\n            &quot;dscpTagValue&quot;: null,\n            &quot;pcpTagValue&quot;: null\n        }\n    ]\n}</code></pre>\n      ",
      "path": "/networks/{networkId}/ssids/{number}/trafficShaping",
      "type": "infos",
      "name": "Changes",
      "group": "Traffic shaping",
      "apiDetails": {
        "put": {
          "summary": "Update the traffic shaping settings for an SSID on an MR network",
          "description": "Update the traffic shaping settings for an SSID on an MR network",
          "operationId": "updateNetworkSsidTrafficShaping",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "updateNetworkSsidTrafficShaping",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "trafficShapingEnabled": {
                    "type": "boolean",
                    "description": "Whether traffic shaping rules are applied to clients on your SSID."
                  },
                  "defaultRulesEnabled": {
                    "type": "boolean",
                    "description": "    Whether default traffic shaping rules are enabled (true) or disabled (false).\n    There are 4 default rules, which can\n    be seen on your network's traffic shaping page. Note that default rules\n    count against the rule limit of 8.\n"
                  },
                  "rules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "definitions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'"
                              },
                              "value": {
                                "type": "string",
                                "description": "    If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": <string> }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).\n"
                              }
                            }
                          },
                          "description": "    A list of objects describing the definition of your traffic shaping rule. Each\n    definition object has the structure { \"type\": <string>, \"value\": <string OR object> }.\n    \"type\" can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.\n\n        If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n\n\n        If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": <string> }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).\n\n"
                        },
                        "perClientBandwidthLimits": {
                          "type": "object",
                          "properties": {
                            "settings": {
                              "type": "string",
                              "description": "'network default', 'ignore' or 'custom'"
                            },
                            "bandwidthLimits": {
                              "type": "object",
                              "properties": {
                                "limitUp": {
                                  "type": "integer",
                                  "description": "The maximum upload limit (integer, in Kbps)."
                                },
                                "limitDown": {
                                  "type": "integer",
                                  "description": "The maximum download limit (integer, in Kbps)."
                                }
                              },
                              "description": "The bandwidth limits object, specifying the upload and download speed."
                            }
                          },
                          "description": "    An object describing the bandwidth settings for your rule, with the structure\n    { \"settings\": <string> , \"bandwidthLimits\": { \"limitUp\": <integer>, \"limitDown\": <integer> } }.\n    'settings' can be set to 'network default', 'ignore' or 'custom'. While 'limitUp' and 'limitDown'\n    are the upload and download speeds, respectively, in Kbps (defaults to 5120).\n    Note that 'bandwidthLimits' are only enforced if 'settings' is set to 'custom'.\n"
                        },
                        "dscpTagValue": {
                          "type": "integer",
                          "description": "    The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.\n"
                        },
                        "pcpTagValue": {
                          "type": "integer",
                          "description": "    The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).\n    null means 'Do not set PCP tag'.\n"
                        }
                      }
                    },
                    "description": "    An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.\n"
                  }
                },
                "example": {
                  "trafficShapingEnabled": true,
                  "defaultRulesEnabled": true,
                  "rules": [
                    {
                      "definitions": [
                        {
                          "type": "host",
                          "value": "google.com"
                        },
                        {
                          "type": "port",
                          "value": "9090"
                        },
                        {
                          "type": "ipRange",
                          "value": "192.1.0.0"
                        },
                        {
                          "type": "ipRange",
                          "value": "192.1.0.0/16"
                        },
                        {
                          "type": "ipRange",
                          "value": "10.1.0.0/16:80"
                        },
                        {
                          "type": "localNet",
                          "value": "192.168.0.0/16"
                        },
                        {
                          "type": "applicationCategory",
                          "value": {
                            "id": "meraki:layer7/category/2",
                            "name": "Blogging"
                          }
                        },
                        {
                          "type": "application",
                          "value": {
                            "id": "meraki:layer7/application/133",
                            "name": "Battle.net"
                          }
                        }
                      ],
                      "perClientBandwidthLimits": {
                        "settings": "custom",
                        "bandwidthLimits": {
                          "limitUp": 1000000,
                          "limitDown": 1000000
                        }
                      },
                      "dscpTagValue": null,
                      "pcpTagValue": null
                    }
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "trafficShapingEnabled": true,
                  "defaultRulesEnabled": true,
                  "rules": [
                    {
                      "definitions": [
                        {
                          "type": "host",
                          "value": "google.com"
                        },
                        {
                          "type": "port",
                          "value": "9090"
                        },
                        {
                          "type": "ipRange",
                          "value": "192.1.0.0"
                        },
                        {
                          "type": "ipRange",
                          "value": "192.1.0.0/16"
                        },
                        {
                          "type": "ipRange",
                          "value": "10.1.0.0/16:80"
                        },
                        {
                          "type": "localNet",
                          "value": "192.168.0.0/16"
                        },
                        {
                          "type": "applicationCategory",
                          "value": {
                            "id": "meraki:layer7/category/2",
                            "name": "Blogging"
                          }
                        },
                        {
                          "type": "application",
                          "value": {
                            "id": "meraki:layer7/application/133",
                            "name": "Battle.net"
                          }
                        }
                      ],
                      "perClientBandwidthLimits": {
                        "settings": "custom",
                        "bandwidthLimits": {
                          "limitUp": 1000000,
                          "limitDown": 1000000
                        }
                      },
                      "dscpTagValue": null,
                      "pcpTagValue": null
                    }
                  ]
                }
              }
            }
          },
          "tags": [
            "Traffic shaping"
          ]
        },
        "get": {
          "summary": "Display the traffic shaping settings for a SSID on an MR network",
          "description": "Display the traffic shaping settings for a SSID on an MR network",
          "operationId": "getNetworkSsidTrafficShaping",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "number",
              "in": "path",
              "type": "string",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "trafficShapingEnabled": true,
                  "defaultRulesEnabled": true,
                  "rules": [
                    {
                      "definitions": [
                        {
                          "type": "host",
                          "value": "google.com"
                        },
                        {
                          "type": "port",
                          "value": "9090"
                        },
                        {
                          "type": "ipRange",
                          "value": "192.1.0.0"
                        },
                        {
                          "type": "ipRange",
                          "value": "192.1.0.0/16"
                        },
                        {
                          "type": "ipRange",
                          "value": "10.1.0.0/16:80"
                        },
                        {
                          "type": "localNet",
                          "value": "192.168.0.0/16"
                        },
                        {
                          "type": "applicationCategory",
                          "value": {
                            "id": "meraki:layer7/category/2",
                            "name": "Blogging"
                          }
                        },
                        {
                          "type": "application",
                          "value": {
                            "id": "meraki:layer7/application/133",
                            "name": "Battle.net"
                          }
                        }
                      ],
                      "perClientBandwidthLimits": {
                        "settings": "custom",
                        "bandwidthLimits": {
                          "limitUp": 1000000,
                          "limitDown": 1000000
                        }
                      },
                      "dscpTagValue": null,
                      "pcpTagValue": null
                    }
                  ]
                }
              }
            }
          },
          "tags": [
            "Traffic shaping"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/networks/{networkId}/trafficShaping/dscpTaggingOptions` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge get\">GET</div> \n      <i>getNetworkTrafficShapingDscpTaggingOptions</i>\n      <br>\n      <b>Returns the available DSCP tagging options for your traffic shaping rules.</b>\n      \n      <pre><code>[\n    {\n        &quot;dscpTagValue&quot;: 10,\n        &quot;description&quot;: &quot;AF11 - High Throughput, Latency Insensitive, Low Drop&quot;\n    },\n    {\n        &quot;dscpTagValue&quot;: 12,\n        &quot;description&quot;: &quot;AF12 - High Throughput, Latency Insensitive, Medium Drop&quot;\n    },\n    {\n        &quot;dscpTagValue&quot;: 14,\n        &quot;description&quot;: &quot;AF13 - High Throughput, Latency Insensitive, High Drop&quot;\n    },\n    {\n        &quot;dscpTagValue&quot;: 18,\n        &quot;description&quot;: &quot;AF21 - Low Latency Data, Low Drop&quot;\n    }\n]</code></pre>\n      ",
      "path": "/networks/{networkId}/trafficShaping/dscpTaggingOptions",
      "type": "infos",
      "name": "Changes",
      "group": "Traffic shaping",
      "apiDetails": {
        "get": {
          "summary": "Returns the available DSCP tagging options for your traffic shaping rules.",
          "description": "Returns the available DSCP tagging options for your traffic shaping rules.",
          "operationId": "getNetworkTrafficShapingDscpTaggingOptions",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": [
                  {
                    "dscpTagValue": 10,
                    "description": "AF11 - High Throughput, Latency Insensitive, Low Drop"
                  },
                  {
                    "dscpTagValue": 12,
                    "description": "AF12 - High Throughput, Latency Insensitive, Medium Drop"
                  },
                  {
                    "dscpTagValue": 14,
                    "description": "AF13 - High Throughput, Latency Insensitive, High Drop"
                  },
                  {
                    "dscpTagValue": 18,
                    "description": "AF21 - Low Latency Data, Low Drop"
                  }
                ]
              }
            }
          },
          "tags": [
            "Traffic shaping"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/networks/{networkId}/trafficShaping/applicationCategories` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge get\">GET</div> \n      <i>getNetworkTrafficShapingApplicationCategories</i>\n      <br>\n      <b>Returns the application categories for traffic shaping rules.</b>\n      \n      <pre><code>[\n    {\n        &quot;applicationCategories&quot;: [\n            {\n                &quot;id&quot;: &quot;meraki:layer7/category/24&quot;,\n                &quot;name&quot;: &quot;Advertising&quot;,\n                &quot;applications&quot;: [\n                    {\n                        &quot;id&quot;: &quot;meraki:layer7/application/5&quot;,\n                        &quot;name&quot;: &quot;Advertising.com&quot;\n                    },\n                    {\n                        &quot;id&quot;: &quot;meraki:layer7/application/0&quot;,\n                        &quot;name&quot;: &quot;AppNexus&quot;\n                    },\n                    {\n                        &quot;id&quot;: &quot;meraki:layer7/application/1&quot;,\n                        &quot;name&quot;: &quot;Brightroll&quot;\n                    }\n                ]\n            }\n        ]\n    }\n]</code></pre>\n      ",
      "path": "/networks/{networkId}/trafficShaping/applicationCategories",
      "type": "infos",
      "name": "Changes",
      "group": "Traffic shaping",
      "apiDetails": {
        "get": {
          "summary": "Returns the application categories for traffic shaping rules.",
          "description": "Returns the application categories for traffic shaping rules.",
          "operationId": "getNetworkTrafficShapingApplicationCategories",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": [
                  {
                    "applicationCategories": [
                      {
                        "id": "meraki:layer7/category/24",
                        "name": "Advertising",
                        "applications": [
                          {
                            "id": "meraki:layer7/application/5",
                            "name": "Advertising.com"
                          },
                          {
                            "id": "meraki:layer7/application/0",
                            "name": "AppNexus"
                          },
                          {
                            "id": "meraki:layer7/application/1",
                            "name": "Brightroll"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            }
          },
          "tags": [
            "Traffic shaping"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/networks/{networkdId}/devices/{serial}/uplinkInterfaceSettings` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge get\">GET</div> \n      <i>getNetworkDeviceUplinkInterfaceSettings</i>\n      <br>\n      <b>Return the uplink interface settings for a device</b>\n      \n      <pre><code>{\n    &quot;wan1&quot;: {\n        &quot;usingStaticIp&quot;: true,\n        &quot;staticIp&quot;: &quot;1.2.3.4&quot;,\n        &quot;staticSubnetMask&quot;: &quot;255.255.255.0&quot;,\n        &quot;staticGatewayIp&quot;: &quot;1.2.3.1&quot;,\n        &quot;staticDns&quot;: [\n            &quot;1.2.3.2&quot;,\n            &quot;1.2.3.3&quot;\n        ],\n        &quot;vlan&quot;: 7\n    },\n    &quot;wan2&quot;: {\n        &quot;usingStaticIp&quot;: false,\n        &quot;vlan&quot;: 2\n    }\n}</code></pre>\n      ",
      "path": "/networks/{networkdId}/devices/{serial}/uplinkInterfaceSettings",
      "type": "infos",
      "name": "Changes",
      "group": "Uplink interface settings",
      "apiDetails": {
        "get": {
          "summary": "Return the uplink interface settings for a device",
          "description": "Return the uplink interface settings for a device",
          "operationId": "getNetworkDeviceUplinkInterfaceSettings",
          "parameters": [
            {
              "name": "networkdId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "serial",
              "in": "path",
              "type": "string",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "wan1": {
                    "usingStaticIp": true,
                    "staticIp": "1.2.3.4",
                    "staticSubnetMask": "255.255.255.0",
                    "staticGatewayIp": "1.2.3.1",
                    "staticDns": [
                      "1.2.3.2",
                      "1.2.3.3"
                    ],
                    "vlan": 7
                  },
                  "wan2": {
                    "usingStaticIp": false,
                    "vlan": 2
                  }
                }
              }
            }
          },
          "tags": [
            "Uplink interface settings"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/networks/{networkId}/devices/{serial}/uplinkInterfaceSettings` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge put\">PUT</div> \n      <i>updateNetworkDeviceUplinkInterfaceSettings</i>\n      <br>\n      <b>Update the uplink interface settings for a device</b>\n      \n      <pre><code>{\n    &quot;wan1&quot;: {\n        &quot;usingStaticIp&quot;: true,\n        &quot;staticIp&quot;: &quot;1.2.3.4&quot;,\n        &quot;staticSubnetMask&quot;: &quot;255.255.255.0&quot;,\n        &quot;staticGatewayIp&quot;: &quot;1.2.3.1&quot;,\n        &quot;staticDns&quot;: [\n            &quot;1.2.3.2&quot;,\n            &quot;1.2.3.3&quot;\n        ],\n        &quot;vlan&quot;: 7\n    },\n    &quot;wan2&quot;: {\n        &quot;usingStaticIp&quot;: false,\n        &quot;vlan&quot;: 2\n    }\n}</code></pre>\n      ",
      "path": "/networks/{networkId}/devices/{serial}/uplinkInterfaceSettings",
      "type": "infos",
      "name": "Changes",
      "group": "Uplink interface settings",
      "apiDetails": {
        "put": {
          "summary": "Update the uplink interface settings for a device",
          "description": "Update the uplink interface settings for a device",
          "operationId": "updateNetworkDeviceUplinkInterfaceSettings",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "serial",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "updateNetworkDeviceUplinkInterfaceSettings",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "wan1": {
                    "type": "object",
                    "properties": {
                      "usingStaticIp": {
                        "type": "boolean",
                        "description": "Configue the interface to have static IP settings or use DHCP."
                      },
                      "staticIp": {
                        "type": "string",
                        "description": "The IP the device should use on the WAN."
                      },
                      "staticGatewayIp": {
                        "type": "string",
                        "description": "The IP of the gateway on the WAN."
                      },
                      "staticSubnetMask": {
                        "type": "string",
                        "description": "The subnet mask for the WAN."
                      },
                      "staticDns": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Up to two DNS IPs."
                      },
                      "vlan": {
                        "type": "integer",
                        "description": "The VLAN that management traffic should be tagged with. Applies whether usingStaticIp is true or false."
                      }
                    },
                    "description": "WAN 1 settings"
                  },
                  "wan2": {
                    "type": "object",
                    "properties": {
                      "usingStaticIp": {
                        "type": "boolean",
                        "description": "Configue the interface to have static IP settings or use DHCP."
                      },
                      "staticIp": {
                        "type": "string",
                        "description": "The IP the device should use on the WAN."
                      },
                      "staticGatewayIp": {
                        "type": "string",
                        "description": "The IP of the gateway on the WAN."
                      },
                      "staticSubnetMask": {
                        "type": "string",
                        "description": "The subnet mask for the WAN."
                      },
                      "staticDns": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Up to two DNS IPs."
                      },
                      "vlan": {
                        "type": "integer",
                        "description": "The VLAN that management traffic should be tagged with. Applies whether usingStaticIp is true or false."
                      }
                    },
                    "description": "WAN 2 settings (only for MX devices)"
                  }
                },
                "example": {
                  "wan1": {
                    "usingStaticIp": true,
                    "staticIp": "1.2.3.4",
                    "staticSubnetMask": "255.255.255.0",
                    "staticGatewayIp": "1.2.3.1",
                    "staticDns": [
                      "1.2.3.2",
                      "1.2.3.3"
                    ],
                    "vlan": 7
                  },
                  "wan2": {
                    "usingStaticIp": false,
                    "vlan": 2
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "wan1": {
                    "usingStaticIp": true,
                    "staticIp": "1.2.3.4",
                    "staticSubnetMask": "255.255.255.0",
                    "staticGatewayIp": "1.2.3.1",
                    "staticDns": [
                      "1.2.3.2",
                      "1.2.3.3"
                    ],
                    "vlan": 7
                  },
                  "wan2": {
                    "usingStaticIp": false,
                    "vlan": 2
                  }
                }
              }
            }
          },
          "tags": [
            "Uplink interface settings"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/organizations/{organizationId}/webhookLogs` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge get\">GET</div> \n      <i>getOrganizationWebhookLogs</i>\n      <br>\n      <b>Return the log of webhook POSTs sent</b>\n      \n      <pre><code>[\n    {\n        &quot;organizationId&quot;: &quot;33619&quot;,\n        &quot;networkId&quot;: &quot;L_22742&quot;,\n        &quot;alertType&quot;: &quot;Settings changed&quot;,\n        &quot;url&quot;: &quot;https://www.example.com/path&quot;,\n        &quot;sentAt&quot;: &quot;2019-01-01T13:37:28.123456Z&quot;,\n        &quot;loggedAt&quot;: &quot;2019-01-01T13:37:28.423456Z&quot;,\n        &quot;responseCode&quot;: 200,\n        &quot;responseDuration&quot;: 244\n    }\n]</code></pre>\n      ",
      "path": "/organizations/{organizationId}/webhookLogs",
      "type": "infos",
      "name": "Changes",
      "group": "Webhook logs",
      "apiDetails": {
        "get": {
          "summary": "Return the log of webhook POSTs sent",
          "description": "Return the log of webhook POSTs sent",
          "operationId": "getOrganizationWebhookLogs",
          "parameters": [
            {
              "name": "organizationId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "type": "string",
              "name": "t0",
              "in": "query",
              "description": "The beginning of the timespan for the data. The maximum lookback period is 90 days from today."
            },
            {
              "type": "string",
              "name": "t1",
              "in": "query",
              "description": "The end of the timespan for the data. t1 can be a maximum of 31 days after t0."
            },
            {
              "type": "integer",
              "name": "timespan",
              "in": "query",
              "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 31 days. The default is 1 day."
            },
            {
              "type": "integer",
              "name": "perPage",
              "in": "query",
              "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50."
            },
            {
              "type": "string",
              "name": "startingAfter",
              "in": "query",
              "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
            },
            {
              "type": "string",
              "name": "endingBefore",
              "in": "query",
              "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
            },
            {
              "type": "string",
              "name": "url",
              "in": "query",
              "description": "The URL the webhook was sent to"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "headers": {
                "Link": {
                  "type": "string",
                  "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                }
              },
              "examples": {
                "application/json": [
                  {
                    "organizationId": "33619",
                    "networkId": "L_22742",
                    "alertType": "Settings changed",
                    "url": "https://www.example.com/path",
                    "sentAt": "2019-01-01T13:37:28.123456Z",
                    "loggedAt": "2019-01-01T13:37:28.423456Z",
                    "responseCode": 200,
                    "responseDuration": 244
                  }
                ]
              }
            }
          },
          "tags": [
            "Webhook logs"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/ids_alerts?start_time=<float_start_time>&end_time=<optional_float_end_time>` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge get\">GET</div> \n      <i>getIds_alerts?start_time=<float_start_time>&end_time=<optional_float_end_time></i>\n      <br>\n      <b>Query a shard for up to the last 24 hours of IDS alert data</b>\n      \n      <pre><code></code></pre>\n      ",
      "path": "/ids_alerts?start_time=<float_start_time>&end_time=<optional_float_end_time>",
      "type": "infos",
      "name": "Changes",
      "group": "IDS alerts",
      "apiDetails": {
        "get": {
          "summary": "Query a shard for up to the last 24 hours of IDS alert data",
          "description": "Query a shard for up to the last 24 hours of IDS alert data",
          "operationId": "getIds_alerts?start_time=<float_start_time>&end_time=<optional_float_end_time>",
          "parameters": [
            {
              "name": "start_time",
              "description": "The start time (exclusive) of the query specified as seconds since the epoch expressed as a floating-point number.",
              "in": "query",
              "type": "string"
            },
            {
              "name": "end_time",
              "description": "The end time (exclusive) of the query specified as seconds since the epoch expressed as a floating-point number. This parameter is optional.",
              "in": "query",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation"
            }
          },
          "tags": [
            "IDS alerts"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/ids_alerts/packet?q_ts=<ids_alert_timestamp>q_organization_id=<organization_id>&q_network_id=<network_id>` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge get\">GET</div> \n      <i>getIds_alertsPacket?q_ts=<ids_alert_timestamp>q_organization_id=<organization_id>&q_network_id=<network_id></i>\n      <br>\n      <b>Query a single network for the packet that generated the ids alert at the given timestamp</b>\n      \n      <pre><code></code></pre>\n      ",
      "path": "/ids_alerts/packet?q_ts=<ids_alert_timestamp>q_organization_id=<organization_id>&q_network_id=<network_id>",
      "type": "infos",
      "name": "Changes",
      "group": "IDS alerts",
      "apiDetails": {
        "get": {
          "summary": "Query a single network for the packet that generated the ids alert at the given timestamp",
          "description": "Query a single network for the packet that generated the ids alert at the given timestamp",
          "operationId": "getIds_alertsPacket?q_ts=<ids_alert_timestamp>q_organization_id=<organization_id>&q_network_id=<network_id>",
          "parameters": [
            {
              "name": "q_ts",
              "description": "The timestamp of the original ids alert",
              "in": "query",
              "type": "string"
            },
            {
              "name": "q_org_id",
              "description": "The organization id of the ids alert",
              "in": "query",
              "type": "string"
            },
            {
              "name": "q_network_id",
              "description": "The network id of the ids alert",
              "in": "query",
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation"
            }
          },
          "tags": [
            "IDS alerts"
          ]
        }
      }
    },
    {
      "kind": "N",
      "path": [
        "info",
        "x-codegen-settings",
        "brandLabel"
      ],
      "rhs": "meraki",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "info",
        "x-codegen-settings",
        "projectName"
      ],
      "rhs": "meraki",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "info",
        "x-codegen-settings",
        "validateRequiredParameters"
      ],
      "rhs": true,
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/devices/{serial}/camera/analytics/live",
        "get",
        "responses",
        "200",
        "examples",
        "application/json"
      ],
      "lhs": [
        {
          "ts": "2018-08-15T18:32:38.123Z",
          "zones": {
            "0": {
              "person": 0
            }
          }
        }
      ],
      "rhs": {
        "ts": "2018-08-15T18:32:38.123Z",
        "zones": {
          "0": {
            "person": 0
          }
        }
      },
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/connectionStats",
        "get",
        "parameters",
        "t0",
        "description"
      ],
      "lhs": "Start of the requested time range in seconds since epoch (Required)",
      "rhs": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today.",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/connectionStats",
        "get",
        "parameters",
        "t1",
        "description"
      ],
      "lhs": "End of the requested time range in seconds since epoch (Required)",
      "rhs": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0.",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/connectionStats",
        "get",
        "parameters",
        "ssid",
        "type"
      ],
      "lhs": "string",
      "rhs": "integer",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/connectionStats",
        "get",
        "parameters",
        "vlan",
        "type"
      ],
      "lhs": "string",
      "rhs": "integer",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/devices/connectionStats",
        "get",
        "parameters",
        "t0",
        "description"
      ],
      "lhs": "Start of the requested time range in seconds since epoch (Required)",
      "rhs": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today.",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/devices/connectionStats",
        "get",
        "parameters",
        "t1",
        "description"
      ],
      "lhs": "End of the requested time range in seconds since epoch (Required)",
      "rhs": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0.",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/devices/connectionStats",
        "get",
        "parameters",
        "ssid",
        "type"
      ],
      "lhs": "string",
      "rhs": "integer",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/devices/connectionStats",
        "get",
        "parameters",
        "vlan",
        "type"
      ],
      "lhs": "string",
      "rhs": "integer",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/devices/{serial}/connectionStats",
        "get",
        "parameters",
        "t0",
        "description"
      ],
      "lhs": "Start of the requested time range in seconds since epoch (Required)",
      "rhs": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today.",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/devices/{serial}/connectionStats",
        "get",
        "parameters",
        "t1",
        "description"
      ],
      "lhs": "End of the requested time range in seconds since epoch (Required)",
      "rhs": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0.",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/devices/{serial}/connectionStats",
        "get",
        "parameters",
        "ssid",
        "type"
      ],
      "lhs": "string",
      "rhs": "integer",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/devices/{serial}/connectionStats",
        "get",
        "parameters",
        "vlan",
        "type"
      ],
      "lhs": "string",
      "rhs": "integer",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/clients/connectionStats",
        "get",
        "parameters",
        "t0",
        "description"
      ],
      "lhs": "Start of the requested time range in seconds since epoch (Required)",
      "rhs": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today.",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/clients/connectionStats",
        "get",
        "parameters",
        "t1",
        "description"
      ],
      "lhs": "End of the requested time range in seconds since epoch (Required)",
      "rhs": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0.",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/clients/connectionStats",
        "get",
        "parameters",
        "ssid",
        "type"
      ],
      "lhs": "string",
      "rhs": "integer",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/clients/connectionStats",
        "get",
        "parameters",
        "vlan",
        "type"
      ],
      "lhs": "string",
      "rhs": "integer",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/clients/{clientId}/connectionStats",
        "get",
        "parameters",
        "t0",
        "description"
      ],
      "lhs": "Start of the requested time range in seconds since epoch (Required)",
      "rhs": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today.",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/clients/{clientId}/connectionStats",
        "get",
        "parameters",
        "t1",
        "description"
      ],
      "lhs": "End of the requested time range in seconds since epoch (Required)",
      "rhs": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0.",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/clients/{clientId}/connectionStats",
        "get",
        "parameters",
        "ssid",
        "type"
      ],
      "lhs": "string",
      "rhs": "integer",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/clients/{clientId}/connectionStats",
        "get",
        "parameters",
        "vlan",
        "type"
      ],
      "lhs": "string",
      "rhs": "integer",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/latencyStats",
        "get",
        "parameters",
        "t0",
        "description"
      ],
      "lhs": "Start of the requested time range in seconds since epoch (Required)",
      "rhs": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today.",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/latencyStats",
        "get",
        "parameters",
        "t1",
        "description"
      ],
      "lhs": "End of the requested time range in seconds since epoch (Required)",
      "rhs": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0.",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/latencyStats",
        "get",
        "parameters",
        "ssid",
        "type"
      ],
      "lhs": "string",
      "rhs": "integer",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/latencyStats",
        "get",
        "parameters",
        "vlan",
        "type"
      ],
      "lhs": "string",
      "rhs": "integer",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/devices/latencyStats",
        "get",
        "parameters",
        "t0",
        "description"
      ],
      "lhs": "Start of the requested time range in seconds since epoch (Required)",
      "rhs": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today.",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/devices/latencyStats",
        "get",
        "parameters",
        "t1",
        "description"
      ],
      "lhs": "End of the requested time range in seconds since epoch (Required)",
      "rhs": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0.",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/devices/latencyStats",
        "get",
        "parameters",
        "ssid",
        "type"
      ],
      "lhs": "string",
      "rhs": "integer",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/devices/latencyStats",
        "get",
        "parameters",
        "vlan",
        "type"
      ],
      "lhs": "string",
      "rhs": "integer",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/devices/{serial}/latencyStats",
        "get",
        "parameters",
        "t0",
        "description"
      ],
      "lhs": "Start of the requested time range in seconds since epoch (Required)",
      "rhs": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today.",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/devices/{serial}/latencyStats",
        "get",
        "parameters",
        "t1",
        "description"
      ],
      "lhs": "End of the requested time range in seconds since epoch (Required)",
      "rhs": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0.",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/devices/{serial}/latencyStats",
        "get",
        "parameters",
        "ssid",
        "type"
      ],
      "lhs": "string",
      "rhs": "integer",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/devices/{serial}/latencyStats",
        "get",
        "parameters",
        "vlan",
        "type"
      ],
      "lhs": "string",
      "rhs": "integer",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/clients/latencyStats",
        "get",
        "parameters",
        "t0",
        "description"
      ],
      "lhs": "Start of the requested time range in seconds since epoch (Required)",
      "rhs": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today.",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/clients/latencyStats",
        "get",
        "parameters",
        "t1",
        "description"
      ],
      "lhs": "End of the requested time range in seconds since epoch (Required)",
      "rhs": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0.",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/clients/latencyStats",
        "get",
        "parameters",
        "ssid",
        "type"
      ],
      "lhs": "string",
      "rhs": "integer",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/clients/latencyStats",
        "get",
        "parameters",
        "vlan",
        "type"
      ],
      "lhs": "string",
      "rhs": "integer",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/clients/{clientId}/latencyStats",
        "get",
        "parameters",
        "t0",
        "description"
      ],
      "lhs": "Start of the requested time range in seconds since epoch (Required)",
      "rhs": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today.",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/clients/{clientId}/latencyStats",
        "get",
        "parameters",
        "t1",
        "description"
      ],
      "lhs": "End of the requested time range in seconds since epoch (Required)",
      "rhs": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0.",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/clients/{clientId}/latencyStats",
        "get",
        "parameters",
        "ssid",
        "type"
      ],
      "lhs": "string",
      "rhs": "integer",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/clients/{clientId}/latencyStats",
        "get",
        "parameters",
        "vlan",
        "type"
      ],
      "lhs": "string",
      "rhs": "integer",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/failedConnections",
        "get",
        "parameters",
        "t0",
        "description"
      ],
      "lhs": "Start of the requested time range in seconds since epoch (Required)",
      "rhs": "The beginning of the timespan for the data. The maximum lookback period is 180 days from today.",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/failedConnections",
        "get",
        "parameters",
        "t1",
        "description"
      ],
      "lhs": "End of the requested time range in seconds since epoch (Required)",
      "rhs": "The end of the timespan for the data. t1 can be a maximum of 7 days after t0.",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/failedConnections",
        "get",
        "parameters",
        "ssid",
        "type"
      ],
      "lhs": "string",
      "rhs": "integer",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/failedConnections",
        "get",
        "parameters",
        "vlan",
        "type"
      ],
      "lhs": "string",
      "rhs": "integer",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "ruleId": "rename-path",
      "message": "Path ``/devices/{serial}/camera/analytics/zones/{zoneId}/history`` renamed to `/devices/{serial}/camera/analytics/zones/{zone_id}/history`",
      "messageHtml": "Path <code>`/devices/{serial}/camera/analytics/zones/{zoneId}/history`</code> renamed to <code>/devices/{serial}/camera/analytics/zones/{zone_id}/history</code>",
      "path": "`/devices/{serial}/camera/analytics/zones/{zoneId}/history`",
      "newPath": "/devices/{serial}/camera/analytics/zones/{zone_id}/history",
      "type": "renamed",
      "name": "Renamed"
    },
    {
      "ruleId": "rename-param",
      "message": "`/organizations/{organizationId}/admins` (*post*) - Param `createOrganizationAdmins` renamed to `createOrganizationAdmin`",
      "messageHtml": "Param <code>createOrganizationAdmins</code> renamed to <code>createOrganizationAdmin</code>",
      "path": "/organizations/{organizationId}/admins",
      "method": "post",
      "param": "createOrganizationAdmins",
      "newParam": "createOrganizationAdmin",
      "type": "renamed",
      "name": "Renamed",
      "group": "Admins",
      "apiDetails": {
        "summary": "Create a new dashboard administrator",
        "description": "Create a new dashboard administrator",
        "operationId": "createOrganizationAdmin",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "createOrganizationAdmin",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "The email of the dashboard administrator. This attribute can not be updated.",
                  "required": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the dashboard administrator",
                  "required": true
                },
                "orgAccess": {
                  "type": "string",
                  "description": "The privilege of the dashboard administrator on the organization (full, read-only, none)",
                  "required": true
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "tag": {
                        "type": "string",
                        "description": "The name of the tag",
                        "required": true
                      },
                      "access": {
                        "type": "string",
                        "description": "The privilege of the dashboard administrator on the tag",
                        "required": true
                      }
                    }
                  },
                  "description": "The list of tags that the dashboard administrator has privileges on"
                },
                "networks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The network ID",
                        "required": true
                      },
                      "access": {
                        "type": "string",
                        "description": "The privilege of the dashboard administrator on the network",
                        "required": true
                      }
                    }
                  },
                  "description": "The list of networks that the dashboard administrator has privileges on"
                }
              },
              "example": {
                "name": "Miles Meraki",
                "email": "miles@meraki.com",
                "orgAccess": "none",
                "tags": [
                  {
                    "tag": "west",
                    "access": "read-only"
                  }
                ]
              }
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "212406",
                "name": "Miles Meraki",
                "email": "miles@meraki.com",
                "orgAccess": "none",
                "accountStatus": "ok",
                "twoFactorAuthEnabled": false,
                "hasApiKey": true,
                "lastActive": "2019-01-28 14:58:56 -0800",
                "tags": [
                  {
                    "tag": "west",
                    "access": "read-only"
                  }
                ],
                "networks": [
                  {
                    "id": "N_24329156",
                    "access": "full"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "Admins"
        ]
      }
    },
    {
      "ruleId": "rename-param",
      "message": "`/organizations/{organizationId}/networks` (*post*) - Param `createOrganizationNetworks` renamed to `createOrganizationNetwork`",
      "messageHtml": "Param <code>createOrganizationNetworks</code> renamed to <code>createOrganizationNetwork</code>",
      "path": "/organizations/{organizationId}/networks",
      "method": "post",
      "param": "createOrganizationNetworks",
      "newParam": "createOrganizationNetwork",
      "type": "renamed",
      "name": "Renamed",
      "group": "Networks",
      "apiDetails": {
        "summary": "Create a network",
        "description": "Create a network",
        "operationId": "createOrganizationNetwork",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "createOrganizationNetwork",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the new network",
                  "required": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the new network. Valid types are wireless, appliance, switch, phone, systemsManager, camera or a space-separated list of those for a combined network.",
                  "required": true
                },
                "tags": {
                  "type": "string",
                  "description": "A space-separated list of tags to be applied to the network"
                },
                "timeZone": {
                  "type": "string",
                  "description": "The timezone of the network. For a list of allowed timezones, please see the 'TZ' column in the table in <a target='_blank' href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>this article.</a>"
                },
                "copyFromNetworkId": {
                  "type": "string",
                  "description": "The ID of the network to copy configuration from. Other provided parameters will override the copied configuration, except type which must match this network's type exactly."
                },
                "disableMyMerakiCom": {
                  "type": "boolean",
                  "description": "Disables the local device status pages (<a target='_blank' href='http://my.meraki.com/'>my.meraki.com, </a><a target='_blank' href='http://ap.meraki.com/'>ap.meraki.com, </a><a target='_blank' href='http://switch.meraki.com/'>switch.meraki.com, </a><a target='_blank' href='http://wired.meraki.com/'>wired.meraki.com</a>). Optional (defaults to false)"
                },
                "disableRemoteStatusPage": {
                  "type": "boolean",
                  "description": "Disables access to the device status page (<a target='_blank'>http://[device's LAN IP])</a>. Optional. Can only be set if disableMyMerakiCom is set to false"
                }
              },
              "example": {
                "name": "Long Island Office",
                "timeZone": "America/Los_Angeles",
                "tags": " tag1 tag2 ",
                "disableMyMerakiCom": false,
                "type": "appliance switch camera"
              }
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "L_123456",
                "organizationId": 2930418,
                "name": "Long Island Office",
                "timeZone": "America/Los_Angeles",
                "tags": " tag1 tag2 ",
                "type": "combined",
                "disableMyMerakiCom": false
              }
            }
          }
        },
        "tags": [
          "Networks"
        ]
      }
    },
    {
      "ruleId": "rename-param",
      "message": "`/networks/{networkId}/groupPolicies` (*post*) - Param `createNetworkGroupPolicies` renamed to `createNetworkGroupPolicy`",
      "messageHtml": "Param <code>createNetworkGroupPolicies</code> renamed to <code>createNetworkGroupPolicy</code>",
      "path": "/networks/{networkId}/groupPolicies",
      "method": "post",
      "param": "createNetworkGroupPolicies",
      "newParam": "createNetworkGroupPolicy",
      "type": "renamed",
      "name": "Renamed",
      "group": "Group policies",
      "apiDetails": {
        "summary": "Create a group policy",
        "description": "Create a group policy",
        "operationId": "createNetworkGroupPolicy",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "createNetworkGroupPolicy",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name for your group policy. Required.",
                  "required": true
                },
                "scheduling": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean",
                      "description": "Whether scheduling is enabled (true) or disabled (false). Defaults to false. If true, the schedule objects for each day of the week (monday - sunday) are parsed."
                    },
                    "monday": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                        },
                        "from": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                        },
                        "to": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                        }
                      },
                      "description": "The schedule object for Monday."
                    },
                    "tuesday": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                        },
                        "from": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                        },
                        "to": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                        }
                      },
                      "description": "The schedule object for Tuesday."
                    },
                    "wednesday": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                        },
                        "from": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                        },
                        "to": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                        }
                      },
                      "description": "The schedule object for Wednesday."
                    },
                    "thursday": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                        },
                        "from": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                        },
                        "to": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                        }
                      },
                      "description": "The schedule object for Thursday."
                    },
                    "friday": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                        },
                        "from": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                        },
                        "to": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                        }
                      },
                      "description": "The schedule object for Friday."
                    },
                    "saturday": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                        },
                        "from": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                        },
                        "to": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                        }
                      },
                      "description": "The schedule object for Saturday."
                    },
                    "sunday": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean",
                          "description": "Whether the schedule is active (true) or inactive (false) during the time specified between 'from' and 'to'. Defaults to true."
                        },
                        "from": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be less than the time specified in 'to'. Defaults to '00:00'. Only 30 minute increments are allowed."
                        },
                        "to": {
                          "type": "string",
                          "description": "The time, from '00:00' to '24:00'. Must be greater than the time specified in 'from'. Defaults to '24:00'. Only 30 minute increments are allowed."
                        }
                      },
                      "description": "The schedule object for Sunday."
                    }
                  },
                  "description": "    The schedule for the group policy. Schedules are applied to days of the week.\n"
                },
                "bandwidth": {
                  "type": "object",
                  "properties": {
                    "settings": {
                      "type": "string",
                      "description": "How bandwidth limits are enforced. Can be 'network default', 'ignore' or 'custom'."
                    },
                    "bandwidthLimits": {
                      "type": "object",
                      "properties": {
                        "limitUp": {
                          "type": "integer",
                          "description": "The maximum upload limit (integer, in Kbps). null indicates no limit"
                        },
                        "limitDown": {
                          "type": "integer",
                          "description": "The maximum download limit (integer, in Kbps). null indicates no limit"
                        }
                      },
                      "description": "The bandwidth limits object, specifying upload and download speed for clients bound to the group policy. These are only enforced if 'settings' is set to 'custom'."
                    }
                  },
                  "description": "    The bandwidth settings for clients bound to your group policy.\n"
                },
                "firewallAndTrafficShaping": {
                  "type": "object",
                  "properties": {
                    "settings": {
                      "type": "string",
                      "description": "How firewall and traffic shaping rules are enforced. Can be 'network default', 'ignore' or 'custom'."
                    },
                    "trafficShapingRules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "definitions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'"
                                },
                                "value": {
                                  "type": "string",
                                  "description": "    If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n     If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": <string> }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).\n"
                                }
                              }
                            },
                            "description": "    A list of objects describing the definition of your traffic shaping rule. Each\n    definition object has the structure { \"type\": <string>, \"value\": <string OR object> }.\n    \"type\" can be one of 'application', 'applicationCategory', 'host', 'port', 'ipRange' or 'localNet'.\n\n        If \"type\" is 'host', 'port', 'ipRange' or 'localNet', then \"value\" must be a string, matching either\n    a hostname (e.g. \"somesite.com\"), a port (e.g. 8080), or an IP range (\"192.1.0.0\",\n    \"192.1.0.0/16\", or \"10.1.0.0/16:80\"). 'localNet' also supports CIDR notation, excluding\n    custom ports.\n\n\n        If \"type\" is 'application' or 'applicationCategory', then \"value\" must be an object\n    with the structure { \"id\": <string> }, where \"id\" is the application category or\n    application ID (for a list of IDs for your network, use the trafficShaping/applicationCategories\n    endpoint).\n\n"
                          },
                          "perClientBandwidthLimits": {
                            "type": "object",
                            "properties": {
                              "settings": {
                                "type": "string",
                                "description": "'network default', 'ignore' or 'custom'"
                              },
                              "bandwidthLimits": {
                                "type": "object",
                                "properties": {
                                  "limitUp": {
                                    "type": "integer",
                                    "description": "The maximum upload limit (integer, in Kbps)."
                                  },
                                  "limitDown": {
                                    "type": "integer",
                                    "description": "The maximum download limit (integer, in Kbps)."
                                  }
                                },
                                "description": "The bandwidth limits object, specifying the upload and download speed."
                              }
                            },
                            "description": "    An object describing the bandwidth settings for your rule, with the structure\n    { \"settings\": <string> , \"bandwidthLimits\": { \"limitUp\": <integer>, \"limitDown\": <integer> } }.\n    'settings' can be set to 'network default', 'ignore' or 'custom'. While 'limitUp' and 'limitDown'\n    are the upload and download speeds, respectively, in Kbps (defaults to 5120).\n    Note that 'bandwidthLimits' are only enforced if 'settings' is set to 'custom'.\n"
                          },
                          "dscpTagValue": {
                            "type": "integer",
                            "description": "    The DSCP tag applied by your rule. null means 'Do not change DSCP tag'.\n    For a list of possible tag values, use the trafficShaping/dscpTaggingOptions endpoint.\n"
                          },
                          "pcpTagValue": {
                            "type": "integer",
                            "description": "    The PCP tag applied by your rule. Can be 0 (lowest priority) through 7 (highest priority).\n    null means 'Do not set PCP tag'.\n"
                          },
                          "priority": {
                            "type": "string",
                            "description": "    A string, indicating the priority level for packets bound to your rule.\n    Can be 'low', 'normal' or 'high'.\n"
                          }
                        }
                      },
                      "description": "    An array of traffic shaping rules. Rules are applied in the order that\n    they are specified in. An empty list (or null) means no rules. Note that\n    you are allowed a maximum of 8 rules.\n"
                    },
                    "l3FirewallRules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "comment": {
                            "type": "string",
                            "description": "Description of the rule (optional)"
                          },
                          "policy": {
                            "type": "string",
                            "description": "'Allow' or 'Deny' traffic specified by this rule",
                            "required": true
                          },
                          "protocol": {
                            "type": "string",
                            "description": "The type of protocol (must be 'tcp', 'udp', 'icmp' or 'any')",
                            "required": true
                          },
                          "srcPort": {
                            "type": "string",
                            "description": "Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'"
                          },
                          "srcCidr": {
                            "type": "string",
                            "description": "Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (note: FQDN not supported for source addresses)",
                            "required": true
                          },
                          "destPort": {
                            "type": "string",
                            "description": "Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'"
                          },
                          "destCidr": {
                            "type": "string",
                            "description": "Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'",
                            "required": true
                          }
                        }
                      },
                      "description": "An ordered array of the L3 firewall rules"
                    },
                    "l7FirewallRules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "policy": {
                            "type": "string",
                            "enum": [
                              "deny"
                            ],
                            "description": "The policy applied to matching traffic. Must be 'deny'."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "application",
                              "applicationCategory",
                              "host",
                              "port",
                              "ipRange"
                            ],
                            "description": "Type of the L7 Rule. Must be 'application', 'applicationCategory', 'host', 'port' or 'ipRange'"
                          },
                          "value": {
                            "type": "string",
                            "description": "The 'value' of what you want to block. If 'type' is 'host', 'port' or 'ipRange', 'value' must be a string matching either a hostname (e.g. somewhere.com), a port (e.g. 8080), or an IP range (e.g. 192.1.0.0/16). If 'type' is 'application' or 'applicationCategory', then 'value' must be an object with an ID for the application."
                          }
                        }
                      },
                      "description": "An ordered array of L7 firewall rules"
                    }
                  },
                  "description": "    The firewall and traffic shaping rules and settings for your policy.\n"
                }
              },
              "example": {
                "name": "No video streaming",
                "scheduling": {
                  "enabled": true,
                  "monday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "tuesday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "wednesday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "thursday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "friday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "saturday": {
                    "active": false,
                    "from": "0:00",
                    "to": "24:00"
                  },
                  "sunday": {
                    "active": false,
                    "from": "0:00",
                    "to": "24:00"
                  }
                },
                "bandwidth": {
                  "settings": "custom",
                  "bandwidthLimits": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  }
                }
              }
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "name": "No video streaming",
                "groupPolicyId": "101",
                "scheduling": {
                  "enabled": true,
                  "monday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "tuesday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "wednesday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "thursday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "friday": {
                    "active": true,
                    "from": "9:00",
                    "to": "17:00"
                  },
                  "saturday": {
                    "active": false,
                    "from": "0:00",
                    "to": "24:00"
                  },
                  "sunday": {
                    "active": false,
                    "from": "0:00",
                    "to": "24:00"
                  }
                },
                "bandwidth": {
                  "settings": "custom",
                  "bandwidthLimits": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Group policies"
        ]
      }
    },
    {
      "ruleId": "rename-param",
      "message": "`/networks/{networkId}/httpServers` (*post*) - Param `createNetworkHttpServers` renamed to `createNetworkHttpServer`",
      "messageHtml": "Param <code>createNetworkHttpServers</code> renamed to <code>createNetworkHttpServer</code>",
      "path": "/networks/{networkId}/httpServers",
      "method": "post",
      "param": "createNetworkHttpServers",
      "newParam": "createNetworkHttpServer",
      "type": "renamed",
      "name": "Renamed",
      "group": "HTTP servers",
      "apiDetails": {
        "summary": "Add an HTTP server",
        "description": "Add an HTTP server",
        "operationId": "createNetworkHttpServer",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "createNetworkHttpServer",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "A name for easy reference to the HTTP server",
                  "type": "string"
                },
                "url": {
                  "description": "The URL of the HTTP server",
                  "type": "string"
                },
                "sharedSecret": {
                  "description": "A shared secret that will be included in POSTs sent to the HTTP server. This secret can be used to verify that the request was sent by Meraki.",
                  "type": "string"
                }
              },
              "example": {
                "name": "My HTTP server",
                "url": "https://www.example.com/webhooks",
                "sharedSecret": "foobar"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "ABC123",
                "networkId": "N_123",
                "name": "My HTTP server",
                "url": "https://www.example.com/webhooks",
                "sharedSecret": "foobar"
              }
            }
          }
        },
        "tags": [
          "HTTP servers"
        ]
      }
    },
    {
      "ruleId": "rename-param",
      "message": "`/networks/{networkId}/httpServers/webhookTests` (*post*) - Param `createNetworkHttpServersWebhookTests` renamed to `createNetworkHttpServersWebhookTest`",
      "messageHtml": "Param <code>createNetworkHttpServersWebhookTests</code> renamed to <code>createNetworkHttpServersWebhookTest</code>",
      "path": "/networks/{networkId}/httpServers/webhookTests",
      "method": "post",
      "param": "createNetworkHttpServersWebhookTests",
      "newParam": "createNetworkHttpServersWebhookTest",
      "type": "renamed",
      "name": "Renamed",
      "group": "HTTP servers",
      "apiDetails": {
        "summary": "Send a test webhook",
        "description": "Send a test webhook",
        "operationId": "createNetworkHttpServersWebhookTest",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "createNetworkHttpServersWebhookTest",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "url": {
                  "description": "The URL where the test webhook will be sent",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "1234",
                "url": "https://www.example.com/path",
                "status": "enqueued"
              }
            }
          }
        },
        "tags": [
          "HTTP servers"
        ]
      }
    },
    {
      "ruleId": "rename-param",
      "message": "`/organizations` (*post*) - Param `createOrganizations` renamed to `createOrganization`",
      "messageHtml": "Param <code>createOrganizations</code> renamed to <code>createOrganization</code>",
      "path": "/organizations",
      "method": "post",
      "param": "createOrganizations",
      "newParam": "createOrganization",
      "type": "renamed",
      "name": "Renamed",
      "group": "Organizations",
      "apiDetails": {
        "summary": "Create a new organization",
        "description": "Create a new organization",
        "operationId": "createOrganization",
        "parameters": [
          {
            "name": "createOrganization",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the organization",
                  "type": "string"
                }
              },
              "example": {
                "name": "My organization"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": 2930418,
                "name": "My organization"
              }
            }
          }
        },
        "tags": [
          "Organizations"
        ]
      }
    },
    {
      "ruleId": "rename-param",
      "message": "`/networks/{networkId}/pii/requests` (*post*) - Param `createNetworkPiiRequests` renamed to `createNetworkPiiRequest`",
      "messageHtml": "Param <code>createNetworkPiiRequests</code> renamed to <code>createNetworkPiiRequest</code>",
      "path": "/networks/{networkId}/pii/requests",
      "method": "post",
      "param": "createNetworkPiiRequests",
      "newParam": "createNetworkPiiRequest",
      "type": "renamed",
      "name": "Renamed",
      "group": "PII",
      "apiDetails": {
        "summary": "Submit a new delete or restrict processing PII request",
        "description": "Submit a new delete or restrict processing PII request\n\n## ALTERNATE PATH\n\n```\n/organizations/{organizationId}/pii/requests\n```",
        "operationId": "createNetworkPiiRequest",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "createNetworkPiiRequest",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "description": "One of \"delete\" or \"restrict processing\"",
                  "type": "string"
                },
                "datasets": {
                  "description": "The datasets related to the provided key that should be deleted. Only applies to \"delete\" requests. The value \"all\" will be expanded to all datasets applicable to this type. The datasets by applicable to each type are: mac (usage, events, traffic), email (users, loginAttempts), username (users, loginAttempts), bluetoothMac (client, connectivity), smDeviceId (device), smUserId (user)",
                  "type": "string"
                },
                "username": {
                  "description": "The username of a network log in. Only applies to \"delete\" requests.",
                  "type": "string"
                },
                "email": {
                  "description": "The email of a network user account. Only applies to \"delete\" requests.",
                  "type": "string"
                },
                "mac": {
                  "description": "The MAC of a network client device. Applies to both \"restrict processing\" and \"delete\" requests.",
                  "type": "string"
                },
                "smDeviceId": {
                  "description": "The sm_device_id of a Systems Manager device. The only way to \"restrict processing\" or \"delete\" a Systems Manager device. Must include \"device\" in the dataset for a \"delete\" request to destroy the device.",
                  "type": "string"
                },
                "smUserId": {
                  "description": "The sm_user_id of a Systems Manager user. The only way to \"restrict processing\" or \"delete\" a Systems Manager user. Must include \"user\" in the dataset for a \"delete\" request to destroy the user.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            }
          }
        },
        "tags": [
          "PII"
        ]
      }
    },
    {
      "ruleId": "rename-param",
      "message": "`/organizations/{organizationId}/samlRoles` (*post*) - Param `createOrganizationSamlRoles` renamed to `createOrganizationSamlRole`",
      "messageHtml": "Param <code>createOrganizationSamlRoles</code> renamed to <code>createOrganizationSamlRole</code>",
      "path": "/organizations/{organizationId}/samlRoles",
      "method": "post",
      "param": "createOrganizationSamlRoles",
      "newParam": "createOrganizationSamlRole",
      "type": "renamed",
      "name": "Renamed",
      "group": "SAML roles",
      "apiDetails": {
        "summary": "Create a SAML role",
        "description": "Create a SAML role",
        "operationId": "createOrganizationSamlRole",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "createOrganizationSamlRole",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "role": {
                  "description": "The role of the SAML administrator",
                  "type": "string"
                },
                "orgAccess": {
                  "description": "The privilege of the SAML administrator on the organization",
                  "type": "string"
                },
                "tags": {
                  "description": "The list of tags that the SAML administrator has privileges on",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "tag": {
                        "description": "The name of the tag",
                        "type": "string"
                      },
                      "access": {
                        "description": "The privilege of the SAML administrator on the tag",
                        "type": "string"
                      }
                    }
                  }
                },
                "networks": {
                  "description": "The list of networks that the SAML administrator has privileges on",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "The network ID",
                        "type": "string"
                      },
                      "access": {
                        "description": "The privilege of the SAML administrator on the network",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "TEdJIEN1c3RvbWVy",
                "role": "myrole",
                "orgAccess": "none",
                "networks": [
                  {
                    "id": "N_1234",
                    "access": "full"
                  }
                ],
                "tags": [
                  {
                    "tag": "west",
                    "access": "read-only"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "SAML roles"
        ]
      }
    },
    {
      "ruleId": "rename-param",
      "message": "`/networks/{networkId}/sm/targetGroups` (*post*) - Param `createNetworkSmTargetGroups` renamed to `createNetworkSmTargetGroup`",
      "messageHtml": "Param <code>createNetworkSmTargetGroups</code> renamed to <code>createNetworkSmTargetGroup</code>",
      "path": "/networks/{networkId}/sm/targetGroups",
      "method": "post",
      "param": "createNetworkSmTargetGroups",
      "newParam": "createNetworkSmTargetGroup",
      "type": "renamed",
      "name": "Renamed",
      "group": "Named tag scope",
      "apiDetails": {
        "summary": "Add a target group",
        "description": "Add a target group",
        "operationId": "createNetworkSmTargetGroup",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "createNetworkSmTargetGroup",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of this target group",
                  "type": "string"
                },
                "scope": {
                  "description": "The scope and tag options of the target group. Comma separated values beginning with one of withAny, withAll, withoutAny, withoutAll, all, none, followed by tags",
                  "type": "string"
                }
              },
              "example": {
                "name": "My target group",
                "scope": "none",
                "tags": "[]",
                "type": "devices"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "name": "My target group",
                "scope": "none",
                "tags": "[]",
                "type": "devices"
              }
            }
          }
        },
        "tags": [
          "Named tag scope"
        ]
      }
    },
    {
      "ruleId": "rename-param",
      "message": "`/networks/{network_id}/sm/app/polaris/{appId}` (*put*) - Param `updateNetworkSmAppPolari` renamed to `updateNetworkSmAppPolaris`",
      "messageHtml": "Param <code>updateNetworkSmAppPolari</code> renamed to <code>updateNetworkSmAppPolaris</code>",
      "path": "/networks/{network_id}/sm/app/polaris/{appId}",
      "method": "put",
      "param": "updateNetworkSmAppPolari",
      "newParam": "updateNetworkSmAppPolaris",
      "type": "renamed",
      "name": "Renamed",
      "group": "SM",
      "apiDetails": {
        "summary": "Update an existing Polaris app",
        "description": "Update an existing Polaris app",
        "operationId": "updateNetworkSmAppPolaris",
        "parameters": [
          {
            "name": "network_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "appId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkSmAppPolaris",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "scope": {
                  "description": "The scope (one of all, none, automatic, withAny, withAll, withoutAny, or withoutAll) and a set of tags of the devices to be assigned",
                  "type": "string"
                },
                "preventAutoInstall": {
                  "description": "Whether or not SM should auto-install this app (one of true or false). False by default.",
                  "type": "string"
                },
                "usesVPP": {
                  "description": "Whether or not the app should use VPP by device assignment (one of true or false). False by default.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            }
          }
        },
        "tags": [
          "SM"
        ]
      }
    },
    {
      "ruleId": "rename-param",
      "message": "`/networks/{networkId}/switchStacks` (*post*) - Param `createNetworkSwitchStacks` renamed to `createNetworkSwitchStack`",
      "messageHtml": "Param <code>createNetworkSwitchStacks</code> renamed to <code>createNetworkSwitchStack</code>",
      "path": "/networks/{networkId}/switchStacks",
      "method": "post",
      "param": "createNetworkSwitchStacks",
      "newParam": "createNetworkSwitchStack",
      "type": "renamed",
      "name": "Renamed",
      "group": "Switch stacks",
      "apiDetails": {
        "summary": "Create a stack",
        "description": "Create a stack",
        "operationId": "createNetworkSwitchStack",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "createNetworkSwitchStack",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the new stack",
                  "required": true
                },
                "serials": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "An array of switch serials to be added into the new stack",
                  "required": true
                }
              },
              "example": {
                "name": "A cool stack",
                "serials": [
                  "QBZY-XWVU-TSRQ",
                  "QBAB-CDEF-GHIJ"
                ]
              }
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "8473",
                "name": "A cool stack",
                "serials": [
                  "QBZY-XWVU-TSRQ",
                  "QBAB-CDEF-GHIJ"
                ]
              }
            }
          }
        },
        "tags": [
          "Switch stacks"
        ]
      }
    },
    {
      "ruleId": "rename-param",
      "message": "`/networks/{networkId}/staticRoutes` (*post*) - Param `createNetworkStaticRoutes` renamed to `createNetworkStaticRoute`",
      "messageHtml": "Param <code>createNetworkStaticRoutes</code> renamed to <code>createNetworkStaticRoute</code>",
      "path": "/networks/{networkId}/staticRoutes",
      "method": "post",
      "param": "createNetworkStaticRoutes",
      "newParam": "createNetworkStaticRoute",
      "type": "renamed",
      "name": "Renamed",
      "group": "Static routes",
      "apiDetails": {
        "summary": "Add a static route",
        "description": "Add a static route",
        "operationId": "createNetworkStaticRoute",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "createNetworkStaticRoute",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the new static route",
                  "type": "string"
                },
                "subnet": {
                  "description": "The subnet of the static route",
                  "type": "string"
                },
                "gatewayIp": {
                  "description": "The gateway IP (next hop) of the static route",
                  "type": "string"
                }
              },
              "example": {
                "name": "My route",
                "subnet": "192.168.1.0/24",
                "gatewayIp": "1.2.3.5"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "name": "My route",
                "subnet": "192.168.1.0/24",
                "gatewayIp": "1.2.3.5"
              }
            }
          }
        },
        "tags": [
          "Static routes"
        ]
      }
    },
    {
      "ruleId": "rename-param",
      "message": "`/networks/{networkId}/vlans` (*post*) - Param `createNetworkVlans` renamed to `createNetworkVlan`",
      "messageHtml": "Param <code>createNetworkVlans</code> renamed to <code>createNetworkVlan</code>",
      "path": "/networks/{networkId}/vlans",
      "method": "post",
      "param": "createNetworkVlans",
      "newParam": "createNetworkVlan",
      "type": "renamed",
      "name": "Renamed",
      "group": "VLANs",
      "apiDetails": {
        "summary": "Add a VLAN",
        "description": "Add a VLAN",
        "operationId": "createNetworkVlan",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "createNetworkVlan",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The VLAN ID of the new VLAN (must be between 1 and 4094)",
                  "required": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the new VLAN",
                  "required": true
                },
                "subnet": {
                  "type": "string",
                  "description": "The subnet of the VLAN",
                  "required": true
                },
                "applianceIp": {
                  "type": "string",
                  "description": "The local IP of the appliance on the VLAN",
                  "required": true
                }
              },
              "example": {
                "id": "1234",
                "name": "My VLAN",
                "subnet": "192.168.1.0/24",
                "applianceIp": "1.2.3.4"
              }
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "1234",
                "networkId": "N_24329156",
                "name": "My VLAN",
                "applianceIp": "1.2.3.4",
                "subnet": "192.168.1.0/24",
                "fixedIpAssignments": {},
                "reservedIpRanges": [],
                "dnsNameservers": "google_dns",
                "dhcpHandling": "Run a DHCP server",
                "dhcpLeaseTime": "1 day",
                "dhcpBootOptionsEnabled": false,
                "dhcpBootNextServer": null,
                "dhcpBootFilename": null,
                "dhcpOptions": []
              }
            }
          }
        },
        "tags": [
          "VLANs"
        ]
      }
    }
  ]
}