{
  "oldVersion": null,
  "newVersion": null,
  "uniqueNames": [
    "Renamed",
    "Updates",
    "Changes",
    "UnmatchDiffs"
  ],
  "uniqueGroups": [
    null,
    "Networks",
    "SSIDs",
    "Radio settings",
    "Bluetooth clients",
    "Clients",
    "Devices",
    "Management interface settings",
    "SM",
    "MX static routes",
    "Switch settings",
    "Uplink settings",
    "Organizations",
    "Admins",
    "Connectivity monitoring destinations",
    "Events",
    "Floorplans",
    "Wireless settings",
    "Dashboard branding policies"
  ],
  "uniqueMethods": [
    null,
    "put",
    "get",
    "post",
    "delete"
  ],
  "diff": [
    {
      "ruleId": "delete-path",
      "message": "`/networks/{networkID}/switchStacks/{switchStackId}/remove` - Deleted",
      "messageHtml": "Deleted",
      "path": "/networks/{networkID}/switchStacks/{switchStackId}/remove",
      "type": "errors",
      "name": "Updates"
    },
    {
      "ruleId": "edit-object-property-required",
      "message": "`paths//networks/{networkId}/siteToSiteVpn/put/parameters/updateNetworkSiteToSiteVpn/schema` - Property `mode` became required",
      "messageHtml": "Property <code>mode</code> became required",
      "objectPath": "paths//networks/{networkId}/siteToSiteVpn/put/parameters/updateNetworkSiteToSiteVpn/schema",
      "path": "/networks/{networkId}/siteToSiteVpn",
      "method": "put",
      "property": "mode",
      "type": "errors",
      "name": "Updates",
      "group": "Networks",
      "apiDetails": {
        "description": "Update the site-to-site VPN settings of a network. Only valid for MX networks in NAT mode.",
        "operationId": "updateNetworkSiteToSiteVpn",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkSiteToSiteVpn",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "mode": {
                  "type": "string",
                  "enum": [
                    "none",
                    "spoke",
                    "hub"
                  ],
                  "description": "The site-to-site VPN mode. Can be one of 'none', 'spoke' or 'hub'",
                  "required": true
                },
                "hubs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "hubId": {
                        "type": "string",
                        "description": "The network ID of the hub.",
                        "required": true
                      },
                      "useDefaultRoute": {
                        "type": "boolean",
                        "description": "Only valid in 'spoke' mode. Indicates whether default route traffic should be sent to this hub."
                      }
                    }
                  },
                  "description": "The list of VPN hubs, in order of preference. In spoke mode, at least 1 hub is required."
                },
                "subnets": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "localSubnet": {
                        "type": "string",
                        "description": "The CIDR notation subnet used within the VPN",
                        "required": true
                      },
                      "useVpn": {
                        "type": "boolean",
                        "description": "Indicates the presence of the subnet in the VPN"
                      }
                    }
                  },
                  "description": "The list of subnets and their VPN presence."
                }
              },
              "example": {
                "mode": "spoke",
                "hubs": [
                  {
                    "hubId": "N_4901849",
                    "useDefaultRoute": true
                  },
                  {
                    "hubId": "N_1892489",
                    "useDefaultRoute": false
                  }
                ],
                "subnets": [
                  {
                    "localSubnet": "192.168.1.0/24",
                    "useVpn": true
                  },
                  {
                    "localSubnet": "192.168.128.0/24",
                    "useVpn": true
                  }
                ]
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "mode": "spoke",
                "hubs": [
                  {
                    "hubId": "N_4901849",
                    "useDefaultRoute": true
                  },
                  {
                    "hubId": "N_1892489",
                    "useDefaultRoute": false
                  }
                ],
                "subnets": [
                  {
                    "localSubnet": "192.168.1.0/24",
                    "useVpn": true
                  },
                  {
                    "localSubnet": "192.168.128.0/24",
                    "useVpn": true
                  }
                ]
              }
            }
          }
        },
        "summary": "Update the site-to-site VPN settings of a network. Only valid for MX networks in NAT mode.",
        "tags": [
          "Networks"
        ]
      }
    },
    {
      "ruleId": "edit-param-required",
      "message": "`/networks/{networkId}/siteToSiteVpn` (put) - Param `updateNetworkSiteToSiteVpn` became required",
      "messageHtml": "Param <code>updateNetworkSiteToSiteVpn</code> became required",
      "path": "/networks/{networkId}/siteToSiteVpn",
      "method": "put",
      "param": "updateNetworkSiteToSiteVpn",
      "type": "errors",
      "name": "Updates",
      "group": "Networks",
      "apiDetails": {
        "description": "Update the site-to-site VPN settings of a network. Only valid for MX networks in NAT mode.",
        "operationId": "updateNetworkSiteToSiteVpn",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkSiteToSiteVpn",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "mode": {
                  "type": "string",
                  "enum": [
                    "none",
                    "spoke",
                    "hub"
                  ],
                  "description": "The site-to-site VPN mode. Can be one of 'none', 'spoke' or 'hub'",
                  "required": true
                },
                "hubs": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "hubId": {
                        "type": "string",
                        "description": "The network ID of the hub.",
                        "required": true
                      },
                      "useDefaultRoute": {
                        "type": "boolean",
                        "description": "Only valid in 'spoke' mode. Indicates whether default route traffic should be sent to this hub."
                      }
                    }
                  },
                  "description": "The list of VPN hubs, in order of preference. In spoke mode, at least 1 hub is required."
                },
                "subnets": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "localSubnet": {
                        "type": "string",
                        "description": "The CIDR notation subnet used within the VPN",
                        "required": true
                      },
                      "useVpn": {
                        "type": "boolean",
                        "description": "Indicates the presence of the subnet in the VPN"
                      }
                    }
                  },
                  "description": "The list of subnets and their VPN presence."
                }
              },
              "example": {
                "mode": "spoke",
                "hubs": [
                  {
                    "hubId": "N_4901849",
                    "useDefaultRoute": true
                  },
                  {
                    "hubId": "N_1892489",
                    "useDefaultRoute": false
                  }
                ],
                "subnets": [
                  {
                    "localSubnet": "192.168.1.0/24",
                    "useVpn": true
                  },
                  {
                    "localSubnet": "192.168.128.0/24",
                    "useVpn": true
                  }
                ]
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "mode": "spoke",
                "hubs": [
                  {
                    "hubId": "N_4901849",
                    "useDefaultRoute": true
                  },
                  {
                    "hubId": "N_1892489",
                    "useDefaultRoute": false
                  }
                ],
                "subnets": [
                  {
                    "localSubnet": "192.168.1.0/24",
                    "useVpn": true
                  },
                  {
                    "localSubnet": "192.168.128.0/24",
                    "useVpn": true
                  }
                ]
              }
            }
          }
        },
        "summary": "Update the site-to-site VPN settings of a network. Only valid for MX networks in NAT mode.",
        "tags": [
          "Networks"
        ]
      }
    },
    {
      "ruleId": "edit-object-property-required",
      "message": "`paths//networks/{networkId}/ssids/{number}/put/parameters/updateNetworkSsid/schema/properties/radiusServers/items` - Property `host` became required",
      "messageHtml": "Property <code>host</code> became required",
      "objectPath": "paths//networks/{networkId}/ssids/{number}/put/parameters/updateNetworkSsid/schema/properties/radiusServers/items",
      "path": "/networks/{networkId}/ssids/{number}",
      "method": "put",
      "property": "host",
      "type": "errors",
      "name": "Updates",
      "group": "SSIDs",
      "apiDetails": {
        "description": "Update the attributes of an SSID",
        "operationId": "updateNetworkSsid",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "number",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkSsid",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the SSID"
                },
                "enabled": {
                  "type": "boolean",
                  "description": "Whether or not the SSID is enabled"
                },
                "authMode": {
                  "type": "string",
                  "enum": [
                    "open",
                    "psk",
                    "open-with-radius",
                    "8021x-meraki",
                    "8021x-radius"
                  ],
                  "description": "The association control method for the SSID ('open', 'psk', 'open-with-radius', '8021x-meraki' or '8021x-radius')"
                },
                "enterpriseAdminAccess": {
                  "type": "string",
                  "enum": [
                    "access disabled",
                    "access enabled"
                  ],
                  "description": "Whether or not an SSID is accessible by 'enterprise' administrators ('access disabled' or 'access enabled')"
                },
                "encryptionMode": {
                  "type": "string",
                  "enum": [
                    "wep",
                    "wpa"
                  ],
                  "description": "The psk encryption mode for the SSID ('wep' or 'wpa'). This param is only valid if the authMode is 'psk'"
                },
                "psk": {
                  "type": "string",
                  "description": "The passkey for the SSID. This param is only valid if the authMode is 'psk'"
                },
                "wpaEncryptionMode": {
                  "type": "string",
                  "enum": [
                    "WPA1 and WPA2",
                    "WPA2 only"
                  ],
                  "description": "The types of WPA encryption. ('WPA1 and WPA2' or 'WPA2 only')"
                },
                "splashPage": {
                  "type": "string",
                  "enum": [
                    "None",
                    "Click-through splash page",
                    "Billing",
                    "Password-protected with Meraki RADIUS",
                    "Password-protected with custom RADIUS",
                    "Password-protected with Active Directory",
                    "Password-protected with LDAP",
                    "SMS authentication",
                    "Systems Manager Sentry",
                    "Facebook Wi-Fi",
                    "Google OAuth",
                    "Sponsored guest"
                  ],
                  "description": "The type of splash page for the SSID ('None', 'Click-through splash page', 'Billing', 'Password-protected with Meraki RADIUS', 'Password-protected with custom RADIUS', 'Password-protected with Active Directory', 'Password-protected with LDAP', 'SMS authentication', 'Systems Manager Sentry', 'Facebook Wi-Fi', 'Google OAuth' or 'Sponsored guest'). This attribute is not supported for template children."
                },
                "radiusServers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "host": {
                        "type": "string",
                        "description": "IP address of your RADIUS server",
                        "required": true
                      },
                      "port": {
                        "type": "integer",
                        "description": "UDP port the RADIUS server listens on for Access-requests"
                      },
                      "secret": {
                        "type": "string",
                        "description": "RADIUS client shared secret",
                        "required": true
                      }
                    }
                  },
                  "description": "The RADIUS 802.1x servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius'"
                },
                "radiusCoaEnabled": {
                  "type": "boolean",
                  "description": "If true, Meraki devices will act as a RADIUS Dynamic Authorization Server and will respond to RADIUS Change-of-Authorization and Disconnect messages sent by the RADIUS server."
                },
                "radiusFailoverPolicy": {
                  "type": "string",
                  "enum": [
                    "Deny access",
                    "Allow access"
                  ],
                  "description": "This policy determines how authentication requests should be handled in the event that all of the configured RADIUS servers are unreachable ('Deny access' or 'Allow access')"
                },
                "radiusLoadBalancingPolicy": {
                  "type": "string",
                  "enum": [
                    "Strict priority order",
                    "Round robin"
                  ],
                  "description": "This policy determines which RADIUS server will be contacted first in an authentication attempt and the ordering of any necessary retry attempts ('Strict priority order' or 'Round robin')"
                },
                "radiusAccountingEnabled": {
                  "type": "boolean",
                  "description": "Whether or not RADIUS accounting is enabled. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius'"
                },
                "radiusAccountingServers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "host": {
                        "type": "string",
                        "description": "IP address to which the APs will send RADIUS accounting messages",
                        "required": true
                      },
                      "port": {
                        "type": "integer",
                        "description": "Port on the RADIUS server that is listening for accounting messages"
                      },
                      "secret": {
                        "type": "string",
                        "description": "Shared key used to authenticate messages between the APs and RADIUS server",
                        "required": true
                      }
                    }
                  },
                  "description": "The RADIUS accounting 802.1x servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius' and radiusAccountingEnabled is 'true'"
                },
                "radiusAttributeForGroupPolicies": {
                  "type": "string",
                  "description": "Specify the RADIUS attribute used to look up group policies ('Filter-Id', 'Reply-Message', 'Airespace-ACL-Name' or 'Aruba-User-Role'). Access points must receive this attribute in the RADIUS Access-Accept message"
                },
                "ipAssignmentMode": {
                  "type": "string",
                  "description": "The client IP assignment mode ('NAT mode', 'Bridge mode', 'Layer 3 roaming', 'Layer 3 roaming with a concentrator' or 'VPN')"
                },
                "useVlanTagging": {
                  "type": "boolean",
                  "description": "Whether or not traffic should be directed to use specific VLANs. This param is only valid if the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'"
                },
                "concentratorNetworkId": {
                  "type": "string",
                  "description": "The concentrator to use when the ipAssignmentMode is 'Layer 3 roaming with a concentrator' or 'VPN'."
                },
                "vlanId": {
                  "type": "integer",
                  "description": "The VLAN ID used for VLAN tagging. This param is only valid when the ipAssignmentMode is 'Layer 3 roaming with a concentrator' or 'VPN'"
                },
                "defaultVlanId": {
                  "type": "integer",
                  "description": "The default VLAN ID used for 'all other APs'. This param is only valid when the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'"
                },
                "apTagsAndVlanIds": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "tags": {
                        "type": "string",
                        "description": "Comma-separated list of AP tags"
                      },
                      "vlanId": {
                        "type": "integer",
                        "description": "Numerical identifier that is assigned to the VLAN"
                      }
                    }
                  },
                  "description": "The list of tags and VLAN IDs used for VLAN tagging. This param is only valid when the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'"
                },
                "walledGardenEnabled": {
                  "type": "boolean",
                  "description": "Allow access to a configurable list of IP ranges, which users may access prior to sign-on."
                },
                "walledGardenRanges": {
                  "type": "string",
                  "description": "Specify your walled garden by entering space-separated addresses, ranges using CIDR notation, domain names, and domain wildcards (e.g. 192.168.1.1/24 192.168.37.10/32 www.yahoo.com *.google.com). Meraki's splash page is automatically included in your walled garden."
                },
                "radiusOverride": {
                  "type": "boolean",
                  "description": "If true, the RADIUS response can override VLAN tag. This is not valid when ipAssignmentMode is 'NAT mode'."
                },
                "minBitrate": {
                  "type": "number",
                  "format": "float",
                  "description": "The minimum bitrate in Mbps. ('1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54')"
                },
                "bandSelection": {
                  "type": "string",
                  "description": "The client-serving radio frequencies. ('Dual band operation', '5 GHz band only' or 'Dual band operation with Band Steering')"
                },
                "perClientBandwidthLimitUp": {
                  "type": "integer",
                  "description": "The upload bandwidth limit in Kbps. (0 represents no limit.)"
                },
                "perClientBandwidthLimitDown": {
                  "type": "integer",
                  "description": "The download bandwidth limit in Kbps. (0 represents no limit.)"
                },
                "lanIsolationEnabled": {
                  "type": "boolean",
                  "description": "Boolean indicating whether Layer 2 LAN isolation should be enabled or disabled. Only configurable when ipAssignmentMode is 'Bridge mode'."
                }
              },
              "example": {
                "name": "My SSID",
                "enabled": true
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "number": 0,
                "name": "My SSID",
                "enabled": true,
                "splashPage": "Click-through splash page",
                "ssidAdminAccessible": false,
                "authMode": "8021x-radius",
                "encryptionMode": "wpa-eap",
                "wpaEncryptionMode": "WPA2 only",
                "radiusServers": [
                  {
                    "host": "0.0.0.0",
                    "port": 3000
                  }
                ],
                "radiusAccountingEnabled": false,
                "radiusEnabled": true,
                "radiusAttributeForGroupPolicies": "Filter-Id",
                "radiusFailoverPolicy": "null",
                "radiusLoadBalancingPolicy": "null",
                "ipAssignmentMode": "NAT mode",
                "adminSplashUrl": "http://example.com",
                "splashTimeout": "30 minutes",
                "walledGardenEnabled": true,
                "walledGardenRanges": "example.com",
                "minBitrate": 11,
                "bandSelection": "5 GHz band only",
                "perClientBandwidthLimitUp": 0,
                "perClientBandwidthLimitDown": 0
              }
            }
          }
        },
        "summary": "Update the attributes of an SSID",
        "tags": [
          "SSIDs"
        ]
      }
    },
    {
      "ruleId": "edit-object-property-required",
      "message": "`paths//networks/{networkId}/ssids/{number}/put/parameters/updateNetworkSsid/schema/properties/radiusServers/items` - Property `secret` became required",
      "messageHtml": "Property <code>secret</code> became required",
      "objectPath": "paths//networks/{networkId}/ssids/{number}/put/parameters/updateNetworkSsid/schema/properties/radiusServers/items",
      "path": "/networks/{networkId}/ssids/{number}",
      "method": "put",
      "property": "secret",
      "type": "errors",
      "name": "Updates",
      "group": "SSIDs",
      "apiDetails": {
        "description": "Update the attributes of an SSID",
        "operationId": "updateNetworkSsid",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "number",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkSsid",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the SSID"
                },
                "enabled": {
                  "type": "boolean",
                  "description": "Whether or not the SSID is enabled"
                },
                "authMode": {
                  "type": "string",
                  "enum": [
                    "open",
                    "psk",
                    "open-with-radius",
                    "8021x-meraki",
                    "8021x-radius"
                  ],
                  "description": "The association control method for the SSID ('open', 'psk', 'open-with-radius', '8021x-meraki' or '8021x-radius')"
                },
                "enterpriseAdminAccess": {
                  "type": "string",
                  "enum": [
                    "access disabled",
                    "access enabled"
                  ],
                  "description": "Whether or not an SSID is accessible by 'enterprise' administrators ('access disabled' or 'access enabled')"
                },
                "encryptionMode": {
                  "type": "string",
                  "enum": [
                    "wep",
                    "wpa"
                  ],
                  "description": "The psk encryption mode for the SSID ('wep' or 'wpa'). This param is only valid if the authMode is 'psk'"
                },
                "psk": {
                  "type": "string",
                  "description": "The passkey for the SSID. This param is only valid if the authMode is 'psk'"
                },
                "wpaEncryptionMode": {
                  "type": "string",
                  "enum": [
                    "WPA1 and WPA2",
                    "WPA2 only"
                  ],
                  "description": "The types of WPA encryption. ('WPA1 and WPA2' or 'WPA2 only')"
                },
                "splashPage": {
                  "type": "string",
                  "enum": [
                    "None",
                    "Click-through splash page",
                    "Billing",
                    "Password-protected with Meraki RADIUS",
                    "Password-protected with custom RADIUS",
                    "Password-protected with Active Directory",
                    "Password-protected with LDAP",
                    "SMS authentication",
                    "Systems Manager Sentry",
                    "Facebook Wi-Fi",
                    "Google OAuth",
                    "Sponsored guest"
                  ],
                  "description": "The type of splash page for the SSID ('None', 'Click-through splash page', 'Billing', 'Password-protected with Meraki RADIUS', 'Password-protected with custom RADIUS', 'Password-protected with Active Directory', 'Password-protected with LDAP', 'SMS authentication', 'Systems Manager Sentry', 'Facebook Wi-Fi', 'Google OAuth' or 'Sponsored guest'). This attribute is not supported for template children."
                },
                "radiusServers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "host": {
                        "type": "string",
                        "description": "IP address of your RADIUS server",
                        "required": true
                      },
                      "port": {
                        "type": "integer",
                        "description": "UDP port the RADIUS server listens on for Access-requests"
                      },
                      "secret": {
                        "type": "string",
                        "description": "RADIUS client shared secret",
                        "required": true
                      }
                    }
                  },
                  "description": "The RADIUS 802.1x servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius'"
                },
                "radiusCoaEnabled": {
                  "type": "boolean",
                  "description": "If true, Meraki devices will act as a RADIUS Dynamic Authorization Server and will respond to RADIUS Change-of-Authorization and Disconnect messages sent by the RADIUS server."
                },
                "radiusFailoverPolicy": {
                  "type": "string",
                  "enum": [
                    "Deny access",
                    "Allow access"
                  ],
                  "description": "This policy determines how authentication requests should be handled in the event that all of the configured RADIUS servers are unreachable ('Deny access' or 'Allow access')"
                },
                "radiusLoadBalancingPolicy": {
                  "type": "string",
                  "enum": [
                    "Strict priority order",
                    "Round robin"
                  ],
                  "description": "This policy determines which RADIUS server will be contacted first in an authentication attempt and the ordering of any necessary retry attempts ('Strict priority order' or 'Round robin')"
                },
                "radiusAccountingEnabled": {
                  "type": "boolean",
                  "description": "Whether or not RADIUS accounting is enabled. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius'"
                },
                "radiusAccountingServers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "host": {
                        "type": "string",
                        "description": "IP address to which the APs will send RADIUS accounting messages",
                        "required": true
                      },
                      "port": {
                        "type": "integer",
                        "description": "Port on the RADIUS server that is listening for accounting messages"
                      },
                      "secret": {
                        "type": "string",
                        "description": "Shared key used to authenticate messages between the APs and RADIUS server",
                        "required": true
                      }
                    }
                  },
                  "description": "The RADIUS accounting 802.1x servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius' and radiusAccountingEnabled is 'true'"
                },
                "radiusAttributeForGroupPolicies": {
                  "type": "string",
                  "description": "Specify the RADIUS attribute used to look up group policies ('Filter-Id', 'Reply-Message', 'Airespace-ACL-Name' or 'Aruba-User-Role'). Access points must receive this attribute in the RADIUS Access-Accept message"
                },
                "ipAssignmentMode": {
                  "type": "string",
                  "description": "The client IP assignment mode ('NAT mode', 'Bridge mode', 'Layer 3 roaming', 'Layer 3 roaming with a concentrator' or 'VPN')"
                },
                "useVlanTagging": {
                  "type": "boolean",
                  "description": "Whether or not traffic should be directed to use specific VLANs. This param is only valid if the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'"
                },
                "concentratorNetworkId": {
                  "type": "string",
                  "description": "The concentrator to use when the ipAssignmentMode is 'Layer 3 roaming with a concentrator' or 'VPN'."
                },
                "vlanId": {
                  "type": "integer",
                  "description": "The VLAN ID used for VLAN tagging. This param is only valid when the ipAssignmentMode is 'Layer 3 roaming with a concentrator' or 'VPN'"
                },
                "defaultVlanId": {
                  "type": "integer",
                  "description": "The default VLAN ID used for 'all other APs'. This param is only valid when the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'"
                },
                "apTagsAndVlanIds": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "tags": {
                        "type": "string",
                        "description": "Comma-separated list of AP tags"
                      },
                      "vlanId": {
                        "type": "integer",
                        "description": "Numerical identifier that is assigned to the VLAN"
                      }
                    }
                  },
                  "description": "The list of tags and VLAN IDs used for VLAN tagging. This param is only valid when the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'"
                },
                "walledGardenEnabled": {
                  "type": "boolean",
                  "description": "Allow access to a configurable list of IP ranges, which users may access prior to sign-on."
                },
                "walledGardenRanges": {
                  "type": "string",
                  "description": "Specify your walled garden by entering space-separated addresses, ranges using CIDR notation, domain names, and domain wildcards (e.g. 192.168.1.1/24 192.168.37.10/32 www.yahoo.com *.google.com). Meraki's splash page is automatically included in your walled garden."
                },
                "radiusOverride": {
                  "type": "boolean",
                  "description": "If true, the RADIUS response can override VLAN tag. This is not valid when ipAssignmentMode is 'NAT mode'."
                },
                "minBitrate": {
                  "type": "number",
                  "format": "float",
                  "description": "The minimum bitrate in Mbps. ('1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54')"
                },
                "bandSelection": {
                  "type": "string",
                  "description": "The client-serving radio frequencies. ('Dual band operation', '5 GHz band only' or 'Dual band operation with Band Steering')"
                },
                "perClientBandwidthLimitUp": {
                  "type": "integer",
                  "description": "The upload bandwidth limit in Kbps. (0 represents no limit.)"
                },
                "perClientBandwidthLimitDown": {
                  "type": "integer",
                  "description": "The download bandwidth limit in Kbps. (0 represents no limit.)"
                },
                "lanIsolationEnabled": {
                  "type": "boolean",
                  "description": "Boolean indicating whether Layer 2 LAN isolation should be enabled or disabled. Only configurable when ipAssignmentMode is 'Bridge mode'."
                }
              },
              "example": {
                "name": "My SSID",
                "enabled": true
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "number": 0,
                "name": "My SSID",
                "enabled": true,
                "splashPage": "Click-through splash page",
                "ssidAdminAccessible": false,
                "authMode": "8021x-radius",
                "encryptionMode": "wpa-eap",
                "wpaEncryptionMode": "WPA2 only",
                "radiusServers": [
                  {
                    "host": "0.0.0.0",
                    "port": 3000
                  }
                ],
                "radiusAccountingEnabled": false,
                "radiusEnabled": true,
                "radiusAttributeForGroupPolicies": "Filter-Id",
                "radiusFailoverPolicy": "null",
                "radiusLoadBalancingPolicy": "null",
                "ipAssignmentMode": "NAT mode",
                "adminSplashUrl": "http://example.com",
                "splashTimeout": "30 minutes",
                "walledGardenEnabled": true,
                "walledGardenRanges": "example.com",
                "minBitrate": 11,
                "bandSelection": "5 GHz band only",
                "perClientBandwidthLimitUp": 0,
                "perClientBandwidthLimitDown": 0
              }
            }
          }
        },
        "summary": "Update the attributes of an SSID",
        "tags": [
          "SSIDs"
        ]
      }
    },
    {
      "ruleId": "edit-object-property-required",
      "message": "`paths//networks/{networkId}/ssids/{number}/put/parameters/updateNetworkSsid/schema/properties/radiusAccountingServers/items` - Property `host` became required",
      "messageHtml": "Property <code>host</code> became required",
      "objectPath": "paths//networks/{networkId}/ssids/{number}/put/parameters/updateNetworkSsid/schema/properties/radiusAccountingServers/items",
      "path": "/networks/{networkId}/ssids/{number}",
      "method": "put",
      "property": "host",
      "type": "errors",
      "name": "Updates",
      "group": "SSIDs",
      "apiDetails": {
        "description": "Update the attributes of an SSID",
        "operationId": "updateNetworkSsid",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "number",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkSsid",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the SSID"
                },
                "enabled": {
                  "type": "boolean",
                  "description": "Whether or not the SSID is enabled"
                },
                "authMode": {
                  "type": "string",
                  "enum": [
                    "open",
                    "psk",
                    "open-with-radius",
                    "8021x-meraki",
                    "8021x-radius"
                  ],
                  "description": "The association control method for the SSID ('open', 'psk', 'open-with-radius', '8021x-meraki' or '8021x-radius')"
                },
                "enterpriseAdminAccess": {
                  "type": "string",
                  "enum": [
                    "access disabled",
                    "access enabled"
                  ],
                  "description": "Whether or not an SSID is accessible by 'enterprise' administrators ('access disabled' or 'access enabled')"
                },
                "encryptionMode": {
                  "type": "string",
                  "enum": [
                    "wep",
                    "wpa"
                  ],
                  "description": "The psk encryption mode for the SSID ('wep' or 'wpa'). This param is only valid if the authMode is 'psk'"
                },
                "psk": {
                  "type": "string",
                  "description": "The passkey for the SSID. This param is only valid if the authMode is 'psk'"
                },
                "wpaEncryptionMode": {
                  "type": "string",
                  "enum": [
                    "WPA1 and WPA2",
                    "WPA2 only"
                  ],
                  "description": "The types of WPA encryption. ('WPA1 and WPA2' or 'WPA2 only')"
                },
                "splashPage": {
                  "type": "string",
                  "enum": [
                    "None",
                    "Click-through splash page",
                    "Billing",
                    "Password-protected with Meraki RADIUS",
                    "Password-protected with custom RADIUS",
                    "Password-protected with Active Directory",
                    "Password-protected with LDAP",
                    "SMS authentication",
                    "Systems Manager Sentry",
                    "Facebook Wi-Fi",
                    "Google OAuth",
                    "Sponsored guest"
                  ],
                  "description": "The type of splash page for the SSID ('None', 'Click-through splash page', 'Billing', 'Password-protected with Meraki RADIUS', 'Password-protected with custom RADIUS', 'Password-protected with Active Directory', 'Password-protected with LDAP', 'SMS authentication', 'Systems Manager Sentry', 'Facebook Wi-Fi', 'Google OAuth' or 'Sponsored guest'). This attribute is not supported for template children."
                },
                "radiusServers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "host": {
                        "type": "string",
                        "description": "IP address of your RADIUS server",
                        "required": true
                      },
                      "port": {
                        "type": "integer",
                        "description": "UDP port the RADIUS server listens on for Access-requests"
                      },
                      "secret": {
                        "type": "string",
                        "description": "RADIUS client shared secret",
                        "required": true
                      }
                    }
                  },
                  "description": "The RADIUS 802.1x servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius'"
                },
                "radiusCoaEnabled": {
                  "type": "boolean",
                  "description": "If true, Meraki devices will act as a RADIUS Dynamic Authorization Server and will respond to RADIUS Change-of-Authorization and Disconnect messages sent by the RADIUS server."
                },
                "radiusFailoverPolicy": {
                  "type": "string",
                  "enum": [
                    "Deny access",
                    "Allow access"
                  ],
                  "description": "This policy determines how authentication requests should be handled in the event that all of the configured RADIUS servers are unreachable ('Deny access' or 'Allow access')"
                },
                "radiusLoadBalancingPolicy": {
                  "type": "string",
                  "enum": [
                    "Strict priority order",
                    "Round robin"
                  ],
                  "description": "This policy determines which RADIUS server will be contacted first in an authentication attempt and the ordering of any necessary retry attempts ('Strict priority order' or 'Round robin')"
                },
                "radiusAccountingEnabled": {
                  "type": "boolean",
                  "description": "Whether or not RADIUS accounting is enabled. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius'"
                },
                "radiusAccountingServers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "host": {
                        "type": "string",
                        "description": "IP address to which the APs will send RADIUS accounting messages",
                        "required": true
                      },
                      "port": {
                        "type": "integer",
                        "description": "Port on the RADIUS server that is listening for accounting messages"
                      },
                      "secret": {
                        "type": "string",
                        "description": "Shared key used to authenticate messages between the APs and RADIUS server",
                        "required": true
                      }
                    }
                  },
                  "description": "The RADIUS accounting 802.1x servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius' and radiusAccountingEnabled is 'true'"
                },
                "radiusAttributeForGroupPolicies": {
                  "type": "string",
                  "description": "Specify the RADIUS attribute used to look up group policies ('Filter-Id', 'Reply-Message', 'Airespace-ACL-Name' or 'Aruba-User-Role'). Access points must receive this attribute in the RADIUS Access-Accept message"
                },
                "ipAssignmentMode": {
                  "type": "string",
                  "description": "The client IP assignment mode ('NAT mode', 'Bridge mode', 'Layer 3 roaming', 'Layer 3 roaming with a concentrator' or 'VPN')"
                },
                "useVlanTagging": {
                  "type": "boolean",
                  "description": "Whether or not traffic should be directed to use specific VLANs. This param is only valid if the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'"
                },
                "concentratorNetworkId": {
                  "type": "string",
                  "description": "The concentrator to use when the ipAssignmentMode is 'Layer 3 roaming with a concentrator' or 'VPN'."
                },
                "vlanId": {
                  "type": "integer",
                  "description": "The VLAN ID used for VLAN tagging. This param is only valid when the ipAssignmentMode is 'Layer 3 roaming with a concentrator' or 'VPN'"
                },
                "defaultVlanId": {
                  "type": "integer",
                  "description": "The default VLAN ID used for 'all other APs'. This param is only valid when the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'"
                },
                "apTagsAndVlanIds": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "tags": {
                        "type": "string",
                        "description": "Comma-separated list of AP tags"
                      },
                      "vlanId": {
                        "type": "integer",
                        "description": "Numerical identifier that is assigned to the VLAN"
                      }
                    }
                  },
                  "description": "The list of tags and VLAN IDs used for VLAN tagging. This param is only valid when the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'"
                },
                "walledGardenEnabled": {
                  "type": "boolean",
                  "description": "Allow access to a configurable list of IP ranges, which users may access prior to sign-on."
                },
                "walledGardenRanges": {
                  "type": "string",
                  "description": "Specify your walled garden by entering space-separated addresses, ranges using CIDR notation, domain names, and domain wildcards (e.g. 192.168.1.1/24 192.168.37.10/32 www.yahoo.com *.google.com). Meraki's splash page is automatically included in your walled garden."
                },
                "radiusOverride": {
                  "type": "boolean",
                  "description": "If true, the RADIUS response can override VLAN tag. This is not valid when ipAssignmentMode is 'NAT mode'."
                },
                "minBitrate": {
                  "type": "number",
                  "format": "float",
                  "description": "The minimum bitrate in Mbps. ('1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54')"
                },
                "bandSelection": {
                  "type": "string",
                  "description": "The client-serving radio frequencies. ('Dual band operation', '5 GHz band only' or 'Dual band operation with Band Steering')"
                },
                "perClientBandwidthLimitUp": {
                  "type": "integer",
                  "description": "The upload bandwidth limit in Kbps. (0 represents no limit.)"
                },
                "perClientBandwidthLimitDown": {
                  "type": "integer",
                  "description": "The download bandwidth limit in Kbps. (0 represents no limit.)"
                },
                "lanIsolationEnabled": {
                  "type": "boolean",
                  "description": "Boolean indicating whether Layer 2 LAN isolation should be enabled or disabled. Only configurable when ipAssignmentMode is 'Bridge mode'."
                }
              },
              "example": {
                "name": "My SSID",
                "enabled": true
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "number": 0,
                "name": "My SSID",
                "enabled": true,
                "splashPage": "Click-through splash page",
                "ssidAdminAccessible": false,
                "authMode": "8021x-radius",
                "encryptionMode": "wpa-eap",
                "wpaEncryptionMode": "WPA2 only",
                "radiusServers": [
                  {
                    "host": "0.0.0.0",
                    "port": 3000
                  }
                ],
                "radiusAccountingEnabled": false,
                "radiusEnabled": true,
                "radiusAttributeForGroupPolicies": "Filter-Id",
                "radiusFailoverPolicy": "null",
                "radiusLoadBalancingPolicy": "null",
                "ipAssignmentMode": "NAT mode",
                "adminSplashUrl": "http://example.com",
                "splashTimeout": "30 minutes",
                "walledGardenEnabled": true,
                "walledGardenRanges": "example.com",
                "minBitrate": 11,
                "bandSelection": "5 GHz band only",
                "perClientBandwidthLimitUp": 0,
                "perClientBandwidthLimitDown": 0
              }
            }
          }
        },
        "summary": "Update the attributes of an SSID",
        "tags": [
          "SSIDs"
        ]
      }
    },
    {
      "ruleId": "edit-object-property-required",
      "message": "`paths//networks/{networkId}/ssids/{number}/put/parameters/updateNetworkSsid/schema/properties/radiusAccountingServers/items` - Property `secret` became required",
      "messageHtml": "Property <code>secret</code> became required",
      "objectPath": "paths//networks/{networkId}/ssids/{number}/put/parameters/updateNetworkSsid/schema/properties/radiusAccountingServers/items",
      "path": "/networks/{networkId}/ssids/{number}",
      "method": "put",
      "property": "secret",
      "type": "errors",
      "name": "Updates",
      "group": "SSIDs",
      "apiDetails": {
        "description": "Update the attributes of an SSID",
        "operationId": "updateNetworkSsid",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "number",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkSsid",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the SSID"
                },
                "enabled": {
                  "type": "boolean",
                  "description": "Whether or not the SSID is enabled"
                },
                "authMode": {
                  "type": "string",
                  "enum": [
                    "open",
                    "psk",
                    "open-with-radius",
                    "8021x-meraki",
                    "8021x-radius"
                  ],
                  "description": "The association control method for the SSID ('open', 'psk', 'open-with-radius', '8021x-meraki' or '8021x-radius')"
                },
                "enterpriseAdminAccess": {
                  "type": "string",
                  "enum": [
                    "access disabled",
                    "access enabled"
                  ],
                  "description": "Whether or not an SSID is accessible by 'enterprise' administrators ('access disabled' or 'access enabled')"
                },
                "encryptionMode": {
                  "type": "string",
                  "enum": [
                    "wep",
                    "wpa"
                  ],
                  "description": "The psk encryption mode for the SSID ('wep' or 'wpa'). This param is only valid if the authMode is 'psk'"
                },
                "psk": {
                  "type": "string",
                  "description": "The passkey for the SSID. This param is only valid if the authMode is 'psk'"
                },
                "wpaEncryptionMode": {
                  "type": "string",
                  "enum": [
                    "WPA1 and WPA2",
                    "WPA2 only"
                  ],
                  "description": "The types of WPA encryption. ('WPA1 and WPA2' or 'WPA2 only')"
                },
                "splashPage": {
                  "type": "string",
                  "enum": [
                    "None",
                    "Click-through splash page",
                    "Billing",
                    "Password-protected with Meraki RADIUS",
                    "Password-protected with custom RADIUS",
                    "Password-protected with Active Directory",
                    "Password-protected with LDAP",
                    "SMS authentication",
                    "Systems Manager Sentry",
                    "Facebook Wi-Fi",
                    "Google OAuth",
                    "Sponsored guest"
                  ],
                  "description": "The type of splash page for the SSID ('None', 'Click-through splash page', 'Billing', 'Password-protected with Meraki RADIUS', 'Password-protected with custom RADIUS', 'Password-protected with Active Directory', 'Password-protected with LDAP', 'SMS authentication', 'Systems Manager Sentry', 'Facebook Wi-Fi', 'Google OAuth' or 'Sponsored guest'). This attribute is not supported for template children."
                },
                "radiusServers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "host": {
                        "type": "string",
                        "description": "IP address of your RADIUS server",
                        "required": true
                      },
                      "port": {
                        "type": "integer",
                        "description": "UDP port the RADIUS server listens on for Access-requests"
                      },
                      "secret": {
                        "type": "string",
                        "description": "RADIUS client shared secret",
                        "required": true
                      }
                    }
                  },
                  "description": "The RADIUS 802.1x servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius'"
                },
                "radiusCoaEnabled": {
                  "type": "boolean",
                  "description": "If true, Meraki devices will act as a RADIUS Dynamic Authorization Server and will respond to RADIUS Change-of-Authorization and Disconnect messages sent by the RADIUS server."
                },
                "radiusFailoverPolicy": {
                  "type": "string",
                  "enum": [
                    "Deny access",
                    "Allow access"
                  ],
                  "description": "This policy determines how authentication requests should be handled in the event that all of the configured RADIUS servers are unreachable ('Deny access' or 'Allow access')"
                },
                "radiusLoadBalancingPolicy": {
                  "type": "string",
                  "enum": [
                    "Strict priority order",
                    "Round robin"
                  ],
                  "description": "This policy determines which RADIUS server will be contacted first in an authentication attempt and the ordering of any necessary retry attempts ('Strict priority order' or 'Round robin')"
                },
                "radiusAccountingEnabled": {
                  "type": "boolean",
                  "description": "Whether or not RADIUS accounting is enabled. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius'"
                },
                "radiusAccountingServers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "host": {
                        "type": "string",
                        "description": "IP address to which the APs will send RADIUS accounting messages",
                        "required": true
                      },
                      "port": {
                        "type": "integer",
                        "description": "Port on the RADIUS server that is listening for accounting messages"
                      },
                      "secret": {
                        "type": "string",
                        "description": "Shared key used to authenticate messages between the APs and RADIUS server",
                        "required": true
                      }
                    }
                  },
                  "description": "The RADIUS accounting 802.1x servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius' and radiusAccountingEnabled is 'true'"
                },
                "radiusAttributeForGroupPolicies": {
                  "type": "string",
                  "description": "Specify the RADIUS attribute used to look up group policies ('Filter-Id', 'Reply-Message', 'Airespace-ACL-Name' or 'Aruba-User-Role'). Access points must receive this attribute in the RADIUS Access-Accept message"
                },
                "ipAssignmentMode": {
                  "type": "string",
                  "description": "The client IP assignment mode ('NAT mode', 'Bridge mode', 'Layer 3 roaming', 'Layer 3 roaming with a concentrator' or 'VPN')"
                },
                "useVlanTagging": {
                  "type": "boolean",
                  "description": "Whether or not traffic should be directed to use specific VLANs. This param is only valid if the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'"
                },
                "concentratorNetworkId": {
                  "type": "string",
                  "description": "The concentrator to use when the ipAssignmentMode is 'Layer 3 roaming with a concentrator' or 'VPN'."
                },
                "vlanId": {
                  "type": "integer",
                  "description": "The VLAN ID used for VLAN tagging. This param is only valid when the ipAssignmentMode is 'Layer 3 roaming with a concentrator' or 'VPN'"
                },
                "defaultVlanId": {
                  "type": "integer",
                  "description": "The default VLAN ID used for 'all other APs'. This param is only valid when the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'"
                },
                "apTagsAndVlanIds": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "tags": {
                        "type": "string",
                        "description": "Comma-separated list of AP tags"
                      },
                      "vlanId": {
                        "type": "integer",
                        "description": "Numerical identifier that is assigned to the VLAN"
                      }
                    }
                  },
                  "description": "The list of tags and VLAN IDs used for VLAN tagging. This param is only valid when the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'"
                },
                "walledGardenEnabled": {
                  "type": "boolean",
                  "description": "Allow access to a configurable list of IP ranges, which users may access prior to sign-on."
                },
                "walledGardenRanges": {
                  "type": "string",
                  "description": "Specify your walled garden by entering space-separated addresses, ranges using CIDR notation, domain names, and domain wildcards (e.g. 192.168.1.1/24 192.168.37.10/32 www.yahoo.com *.google.com). Meraki's splash page is automatically included in your walled garden."
                },
                "radiusOverride": {
                  "type": "boolean",
                  "description": "If true, the RADIUS response can override VLAN tag. This is not valid when ipAssignmentMode is 'NAT mode'."
                },
                "minBitrate": {
                  "type": "number",
                  "format": "float",
                  "description": "The minimum bitrate in Mbps. ('1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54')"
                },
                "bandSelection": {
                  "type": "string",
                  "description": "The client-serving radio frequencies. ('Dual band operation', '5 GHz band only' or 'Dual band operation with Band Steering')"
                },
                "perClientBandwidthLimitUp": {
                  "type": "integer",
                  "description": "The upload bandwidth limit in Kbps. (0 represents no limit.)"
                },
                "perClientBandwidthLimitDown": {
                  "type": "integer",
                  "description": "The download bandwidth limit in Kbps. (0 represents no limit.)"
                },
                "lanIsolationEnabled": {
                  "type": "boolean",
                  "description": "Boolean indicating whether Layer 2 LAN isolation should be enabled or disabled. Only configurable when ipAssignmentMode is 'Bridge mode'."
                }
              },
              "example": {
                "name": "My SSID",
                "enabled": true
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "number": 0,
                "name": "My SSID",
                "enabled": true,
                "splashPage": "Click-through splash page",
                "ssidAdminAccessible": false,
                "authMode": "8021x-radius",
                "encryptionMode": "wpa-eap",
                "wpaEncryptionMode": "WPA2 only",
                "radiusServers": [
                  {
                    "host": "0.0.0.0",
                    "port": 3000
                  }
                ],
                "radiusAccountingEnabled": false,
                "radiusEnabled": true,
                "radiusAttributeForGroupPolicies": "Filter-Id",
                "radiusFailoverPolicy": "null",
                "radiusLoadBalancingPolicy": "null",
                "ipAssignmentMode": "NAT mode",
                "adminSplashUrl": "http://example.com",
                "splashTimeout": "30 minutes",
                "walledGardenEnabled": true,
                "walledGardenRanges": "example.com",
                "minBitrate": 11,
                "bandSelection": "5 GHz band only",
                "perClientBandwidthLimitUp": 0,
                "perClientBandwidthLimitDown": 0
              }
            }
          }
        },
        "summary": "Update the attributes of an SSID",
        "tags": [
          "SSIDs"
        ]
      }
    },
    {
      "ruleId": "edit-object-property-type",
      "message": "`paths//networks/{networkId}/wireless/rfProfiles/{rfProfileId}/put/parameters/updateNetworkWirelessRfProfile/schema/properties/twoFourGhzSettings` - Property `minBitrate` type turn from `string` to `number`",
      "messageHtml": "Property <code>minBitrate</code> type turn from <code>string</code> to <code>number</code>",
      "objectPath": "paths//networks/{networkId}/wireless/rfProfiles/{rfProfileId}/put/parameters/updateNetworkWirelessRfProfile/schema/properties/twoFourGhzSettings",
      "path": "/networks/{networkId}/wireless/rfProfiles/{rfProfileId}",
      "method": "put",
      "Property": "minBitrate",
      "previousType": "string",
      "currentType": "number",
      "type": "errors",
      "name": "Updates",
      "group": "Radio settings",
      "apiDetails": {
        "description": "Updates specified RF profile for this network",
        "operationId": "updateNetworkWirelessRfProfile",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "rfProfileId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkWirelessRfProfile",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the new profile. Must be unique."
                },
                "clientBalancingEnabled": {
                  "type": "boolean",
                  "description": "Steers client to best available access point. Can be either true or false."
                },
                "minBitrateType": {
                  "type": "string",
                  "enum": [
                    "band",
                    "ssid"
                  ],
                  "description": "Minimum bitrate can be set to either 'band' or 'ssid'."
                },
                "bandSelectionType": {
                  "type": "string",
                  "enum": [
                    "ssid",
                    "ap"
                  ],
                  "description": "Band selection can be set to either 'ssid' or 'ap'."
                },
                "apBandSettings": {
                  "type": "object",
                  "properties": {
                    "bandOperationMode": {
                      "type": "string",
                      "enum": [
                        "dual",
                        "2.4ghz",
                        "5ghz"
                      ],
                      "description": "Choice between 'dual', '2.4ghz' or '5ghz'."
                    },
                    "bandSteeringEnabled": {
                      "type": "boolean",
                      "description": "Steers client to most open band. Can be either true or false."
                    }
                  },
                  "description": "Settings that will be enabled if selectionType is set to 'ap'."
                },
                "twoFourGhzSettings": {
                  "type": "object",
                  "properties": {
                    "maxPower": {
                      "type": "integer",
                      "description": "Sets max power (dBm) of 2.4Ghz band. Can be integer between 5 and 30."
                    },
                    "minPower": {
                      "type": "integer",
                      "description": "Sets min power (dBm) of 2.4Ghz band. Can be integer between 5 and 30."
                    },
                    "minBitrate": {
                      "type": "number",
                      "format": "float",
                      "description": "Sets min bitrate (Mbps) of 2.4Ghz band. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'."
                    },
                    "validAutoChannels": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      },
                      "description": "Sets valid auto channels for 2.4Ghz band. Can be one of '1', '6' or '11'."
                    },
                    "axEnabled": {
                      "type": "boolean",
                      "description": "Determines whether ax radio on 2.4Ghz band is on or off. Can be either true or false. If false, we highly recommend disabling band steering."
                    },
                    "rxsop": {
                      "type": "integer",
                      "description": "    The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after\n    consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will\n    reset this to the default.\n"
                    }
                  },
                  "description": "Settings related to 2.4Ghz band"
                },
                "fiveGhzSettings": {
                  "type": "object",
                  "properties": {
                    "maxPower": {
                      "type": "integer",
                      "description": "Sets max power (dBm) of 5Ghz band. Can be integer between 8 and 30."
                    },
                    "minPower": {
                      "type": "integer",
                      "description": "Sets min power (dBm) of 5Ghz band. Can be integer between 8 and 30."
                    },
                    "minBitrate": {
                      "type": "integer",
                      "description": "Sets min bitrate (Mbps) of 5Ghz band. Can be one of '6', '9', '12', '18', '24', '36', '48' or '54'."
                    },
                    "validAutoChannels": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      },
                      "description": "Sets valid auto channels for 5Ghz band. Can be one of '36', '40', '44', '48', '52', '56', '60', '64', '100', '104', '108', '112', '116', '120', '124', '128', '132', '136', '140', '144', '149', '153', '157', '161' or '165'."
                    },
                    "channelWidth": {
                      "type": "string",
                      "description": "Sets channel width (MHz) for 5Ghz band. Can be one of 'auto', '20', '40' or '80'."
                    },
                    "rxsop": {
                      "type": "integer",
                      "description": "    The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after\n    consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will\n    reset this to the default.\n"
                    }
                  },
                  "description": "Settings related to 5Ghz band"
                }
              },
              "example": {}
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "1234",
                "networkId": "N_24329156",
                "name": "Some Custom RF Profile",
                "clientBalancingEnabled": true,
                "minBitrateType": "band",
                "bandSelectionType": "ap",
                "apSelectionSettings": {
                  "bandOperationMode": "dual",
                  "bandSteeringEnabled": true
                },
                "twoFourGhzSettings": {
                  "maxPower": 30,
                  "minPower": 5,
                  "minBitrate": 11,
                  "rxsop": null,
                  "validAutoChannels": [
                    1,
                    6,
                    11
                  ],
                  "axEnabled": true
                },
                "fiveGhzSettings": {
                  "maxPower": 30,
                  "minPower": 8,
                  "minBitrate": 12,
                  "rxsop": null,
                  "validAutoChannels": [
                    36,
                    40,
                    44,
                    48,
                    52,
                    56,
                    60,
                    64,
                    100,
                    104,
                    108,
                    112,
                    116,
                    120,
                    124,
                    128,
                    132,
                    136,
                    140,
                    144,
                    149,
                    153,
                    157,
                    161,
                    165
                  ],
                  "channelWidth": "auto"
                }
              }
            }
          }
        },
        "summary": "Updates specified RF profile for this network",
        "tags": [
          "Radio settings"
        ]
      }
    },
    {
      "ruleId": "edit-object-property-type",
      "message": "`paths//networks/{networkId}/wireless/rfProfiles/{rfProfileId}/put/parameters/updateNetworkWirelessRfProfile/schema/properties/fiveGhzSettings` - Property `minBitrate` type turn from `string` to `integer`",
      "messageHtml": "Property <code>minBitrate</code> type turn from <code>string</code> to <code>integer</code>",
      "objectPath": "paths//networks/{networkId}/wireless/rfProfiles/{rfProfileId}/put/parameters/updateNetworkWirelessRfProfile/schema/properties/fiveGhzSettings",
      "path": "/networks/{networkId}/wireless/rfProfiles/{rfProfileId}",
      "method": "put",
      "Property": "minBitrate",
      "previousType": "string",
      "currentType": "integer",
      "type": "errors",
      "name": "Updates",
      "group": "Radio settings",
      "apiDetails": {
        "description": "Updates specified RF profile for this network",
        "operationId": "updateNetworkWirelessRfProfile",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "rfProfileId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkWirelessRfProfile",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the new profile. Must be unique."
                },
                "clientBalancingEnabled": {
                  "type": "boolean",
                  "description": "Steers client to best available access point. Can be either true or false."
                },
                "minBitrateType": {
                  "type": "string",
                  "enum": [
                    "band",
                    "ssid"
                  ],
                  "description": "Minimum bitrate can be set to either 'band' or 'ssid'."
                },
                "bandSelectionType": {
                  "type": "string",
                  "enum": [
                    "ssid",
                    "ap"
                  ],
                  "description": "Band selection can be set to either 'ssid' or 'ap'."
                },
                "apBandSettings": {
                  "type": "object",
                  "properties": {
                    "bandOperationMode": {
                      "type": "string",
                      "enum": [
                        "dual",
                        "2.4ghz",
                        "5ghz"
                      ],
                      "description": "Choice between 'dual', '2.4ghz' or '5ghz'."
                    },
                    "bandSteeringEnabled": {
                      "type": "boolean",
                      "description": "Steers client to most open band. Can be either true or false."
                    }
                  },
                  "description": "Settings that will be enabled if selectionType is set to 'ap'."
                },
                "twoFourGhzSettings": {
                  "type": "object",
                  "properties": {
                    "maxPower": {
                      "type": "integer",
                      "description": "Sets max power (dBm) of 2.4Ghz band. Can be integer between 5 and 30."
                    },
                    "minPower": {
                      "type": "integer",
                      "description": "Sets min power (dBm) of 2.4Ghz band. Can be integer between 5 and 30."
                    },
                    "minBitrate": {
                      "type": "number",
                      "format": "float",
                      "description": "Sets min bitrate (Mbps) of 2.4Ghz band. Can be one of '1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54'."
                    },
                    "validAutoChannels": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      },
                      "description": "Sets valid auto channels for 2.4Ghz band. Can be one of '1', '6' or '11'."
                    },
                    "axEnabled": {
                      "type": "boolean",
                      "description": "Determines whether ax radio on 2.4Ghz band is on or off. Can be either true or false. If false, we highly recommend disabling band steering."
                    },
                    "rxsop": {
                      "type": "integer",
                      "description": "    The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after\n    consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will\n    reset this to the default.\n"
                    }
                  },
                  "description": "Settings related to 2.4Ghz band"
                },
                "fiveGhzSettings": {
                  "type": "object",
                  "properties": {
                    "maxPower": {
                      "type": "integer",
                      "description": "Sets max power (dBm) of 5Ghz band. Can be integer between 8 and 30."
                    },
                    "minPower": {
                      "type": "integer",
                      "description": "Sets min power (dBm) of 5Ghz band. Can be integer between 8 and 30."
                    },
                    "minBitrate": {
                      "type": "integer",
                      "description": "Sets min bitrate (Mbps) of 5Ghz band. Can be one of '6', '9', '12', '18', '24', '36', '48' or '54'."
                    },
                    "validAutoChannels": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      },
                      "description": "Sets valid auto channels for 5Ghz band. Can be one of '36', '40', '44', '48', '52', '56', '60', '64', '100', '104', '108', '112', '116', '120', '124', '128', '132', '136', '140', '144', '149', '153', '157', '161' or '165'."
                    },
                    "channelWidth": {
                      "type": "string",
                      "description": "Sets channel width (MHz) for 5Ghz band. Can be one of 'auto', '20', '40' or '80'."
                    },
                    "rxsop": {
                      "type": "integer",
                      "description": "    The RX-SOP level controls the sensitivity of the radio. It is strongly recommended to use RX-SOP only after\n    consulting a wireless expert. RX-SOP can be configured in the range of -65 to -95 (dBm). A value of null will\n    reset this to the default.\n"
                    }
                  },
                  "description": "Settings related to 5Ghz band"
                }
              },
              "example": {}
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "1234",
                "networkId": "N_24329156",
                "name": "Some Custom RF Profile",
                "clientBalancingEnabled": true,
                "minBitrateType": "band",
                "bandSelectionType": "ap",
                "apSelectionSettings": {
                  "bandOperationMode": "dual",
                  "bandSteeringEnabled": true
                },
                "twoFourGhzSettings": {
                  "maxPower": 30,
                  "minPower": 5,
                  "minBitrate": 11,
                  "rxsop": null,
                  "validAutoChannels": [
                    1,
                    6,
                    11
                  ],
                  "axEnabled": true
                },
                "fiveGhzSettings": {
                  "maxPower": 30,
                  "minPower": 8,
                  "minBitrate": 12,
                  "rxsop": null,
                  "validAutoChannels": [
                    36,
                    40,
                    44,
                    48,
                    52,
                    56,
                    60,
                    64,
                    100,
                    104,
                    108,
                    112,
                    116,
                    120,
                    124,
                    128,
                    132,
                    136,
                    140,
                    144,
                    149,
                    153,
                    157,
                    161,
                    165
                  ],
                  "channelWidth": "auto"
                }
              }
            }
          }
        },
        "summary": "Updates specified RF profile for this network",
        "tags": [
          "Radio settings"
        ]
      }
    },
    {
      "ruleId": "add-response",
      "message": "`/networks/{networkId}` (get) - Response `200` added to (`appliance,switch,wireless`)",
      "messageHtml": "Response property <code>productTypes</code> value added:  \n      <pre><code>       \n        {\n          productTypes: [\"appliance\",\"switch\",\"wireless\"]\n        }\n</code></pre>",
      "path": "/networks/{networkId}",
      "method": "get",
      "responseId": "200",
      "type": "infos",
      "name": "Changes",
      "group": "Networks",
      "apiDetails": {
        "description": "Return a network",
        "operationId": "getNetwork",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "L_123456",
                "organizationId": "2930418",
                "name": "Long Island Office",
                "timeZone": "America/Los_Angeles",
                "tags": " tag1 tag2 ",
                "type": "combined",
                "productTypes": [
                  "appliance",
                  "switch",
                  "wireless"
                ],
                "disableMyMerakiCom": false
              }
            }
          }
        },
        "summary": "Return a network",
        "tags": [
          "Networks"
        ]
      }
    },
    {
      "ruleId": "add-optional-param",
      "message": "`/networks/{networkId}/bluetoothClients` (get) - Optional param `t0` added",
      "messageHtml": "Optional param <code>t0</code> added",
      "path": "/networks/{networkId}/bluetoothClients",
      "method": "get",
      "param": "t0",
      "type": "infos",
      "name": "Changes",
      "group": "Bluetooth clients",
      "apiDetails": {
        "description": "List the Bluetooth clients seen by APs in this network",
        "operationId": "getNetworkBluetoothClients",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 7 days from today."
          },
          {
            "type": "number",
            "format": "float",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 7 days. The default is 1 day."
          },
          {
            "type": "integer",
            "name": "perPage",
            "in": "query",
            "description": "The number of entries per page returned. Acceptable range is 5 - 1000. Default is 10."
          },
          {
            "type": "string",
            "name": "startingAfter",
            "in": "query",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "type": "string",
            "name": "endingBefore",
            "in": "query",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "type": "boolean",
            "name": "includeConnectivityHistory",
            "in": "query",
            "description": "Include the connectivity history for this client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "headers": {
              "Link": {
                "type": "string",
                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": "1284392014819",
                  "mac": "22:33:44:55:66:77",
                  "networkId": "N_24329156",
                  "name": "Miles's phone",
                  "deviceName": "Bose QuietComfort 35",
                  "manufacturer": "Bose",
                  "lastSeen": 1526087474,
                  "seenByDeviceMac": "00:11:22:33:44:55",
                  "inSightAlert": false,
                  "outOfSightAlert": false,
                  "tags": [
                    "tag1",
                    "tag2"
                  ]
                }
              ]
            }
          }
        },
        "summary": "List the Bluetooth clients seen by APs in this network",
        "tags": [
          "Bluetooth clients"
        ]
      }
    },
    {
      "ruleId": "add-response",
      "message": "`/networks/{networkId}/bluetoothClients` (get) - Response `200` added to (`1284392014819`)",
      "messageHtml": "Response property <code>id</code> value added:  \n      <pre><code>       \n        {\n          id: \"1284392014819\"\n        }\n</code></pre>",
      "path": "/networks/{networkId}/bluetoothClients",
      "method": "get",
      "responseId": "200",
      "type": "infos",
      "name": "Changes",
      "group": "Bluetooth clients",
      "apiDetails": {
        "description": "List the Bluetooth clients seen by APs in this network",
        "operationId": "getNetworkBluetoothClients",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 7 days from today."
          },
          {
            "type": "number",
            "format": "float",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 7 days. The default is 1 day."
          },
          {
            "type": "integer",
            "name": "perPage",
            "in": "query",
            "description": "The number of entries per page returned. Acceptable range is 5 - 1000. Default is 10."
          },
          {
            "type": "string",
            "name": "startingAfter",
            "in": "query",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "type": "string",
            "name": "endingBefore",
            "in": "query",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "type": "boolean",
            "name": "includeConnectivityHistory",
            "in": "query",
            "description": "Include the connectivity history for this client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "headers": {
              "Link": {
                "type": "string",
                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": "1284392014819",
                  "mac": "22:33:44:55:66:77",
                  "networkId": "N_24329156",
                  "name": "Miles's phone",
                  "deviceName": "Bose QuietComfort 35",
                  "manufacturer": "Bose",
                  "lastSeen": 1526087474,
                  "seenByDeviceMac": "00:11:22:33:44:55",
                  "inSightAlert": false,
                  "outOfSightAlert": false,
                  "tags": [
                    "tag1",
                    "tag2"
                  ]
                }
              ]
            }
          }
        },
        "summary": "List the Bluetooth clients seen by APs in this network",
        "tags": [
          "Bluetooth clients"
        ]
      }
    },
    {
      "ruleId": "add-response",
      "message": "`/networks/{networkId}/bluetoothClients` (get) - Response `200` added to (`Miles's phone`)",
      "messageHtml": "Response property <code>name</code> value added:  \n      <pre><code>       \n        {\n          name: \"Miles's phone\"\n        }\n</code></pre>",
      "path": "/networks/{networkId}/bluetoothClients",
      "method": "get",
      "responseId": "200",
      "type": "infos",
      "name": "Changes",
      "group": "Bluetooth clients",
      "apiDetails": {
        "description": "List the Bluetooth clients seen by APs in this network",
        "operationId": "getNetworkBluetoothClients",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 7 days from today."
          },
          {
            "type": "number",
            "format": "float",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 7 days. The default is 1 day."
          },
          {
            "type": "integer",
            "name": "perPage",
            "in": "query",
            "description": "The number of entries per page returned. Acceptable range is 5 - 1000. Default is 10."
          },
          {
            "type": "string",
            "name": "startingAfter",
            "in": "query",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "type": "string",
            "name": "endingBefore",
            "in": "query",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "type": "boolean",
            "name": "includeConnectivityHistory",
            "in": "query",
            "description": "Include the connectivity history for this client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "headers": {
              "Link": {
                "type": "string",
                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": "1284392014819",
                  "mac": "22:33:44:55:66:77",
                  "networkId": "N_24329156",
                  "name": "Miles's phone",
                  "deviceName": "Bose QuietComfort 35",
                  "manufacturer": "Bose",
                  "lastSeen": 1526087474,
                  "seenByDeviceMac": "00:11:22:33:44:55",
                  "inSightAlert": false,
                  "outOfSightAlert": false,
                  "tags": [
                    "tag1",
                    "tag2"
                  ]
                }
              ]
            }
          }
        },
        "summary": "List the Bluetooth clients seen by APs in this network",
        "tags": [
          "Bluetooth clients"
        ]
      }
    },
    {
      "ruleId": "add-response",
      "message": "`/networks/{networkId}/bluetoothClients` (get) - Response `200` added to (`Bose QuietComfort 35`)",
      "messageHtml": "Response property <code>deviceName</code> value added:  \n      <pre><code>       \n        {\n          deviceName: \"Bose QuietComfort 35\"\n        }\n</code></pre>",
      "path": "/networks/{networkId}/bluetoothClients",
      "method": "get",
      "responseId": "200",
      "type": "infos",
      "name": "Changes",
      "group": "Bluetooth clients",
      "apiDetails": {
        "description": "List the Bluetooth clients seen by APs in this network",
        "operationId": "getNetworkBluetoothClients",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 7 days from today."
          },
          {
            "type": "number",
            "format": "float",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 7 days. The default is 1 day."
          },
          {
            "type": "integer",
            "name": "perPage",
            "in": "query",
            "description": "The number of entries per page returned. Acceptable range is 5 - 1000. Default is 10."
          },
          {
            "type": "string",
            "name": "startingAfter",
            "in": "query",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "type": "string",
            "name": "endingBefore",
            "in": "query",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "type": "boolean",
            "name": "includeConnectivityHistory",
            "in": "query",
            "description": "Include the connectivity history for this client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "headers": {
              "Link": {
                "type": "string",
                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": "1284392014819",
                  "mac": "22:33:44:55:66:77",
                  "networkId": "N_24329156",
                  "name": "Miles's phone",
                  "deviceName": "Bose QuietComfort 35",
                  "manufacturer": "Bose",
                  "lastSeen": 1526087474,
                  "seenByDeviceMac": "00:11:22:33:44:55",
                  "inSightAlert": false,
                  "outOfSightAlert": false,
                  "tags": [
                    "tag1",
                    "tag2"
                  ]
                }
              ]
            }
          }
        },
        "summary": "List the Bluetooth clients seen by APs in this network",
        "tags": [
          "Bluetooth clients"
        ]
      }
    },
    {
      "ruleId": "add-response",
      "message": "`/networks/{networkId}/bluetoothClients` (get) - Response `200` added to (`Bose`)",
      "messageHtml": "Response property <code>manufacturer</code> value added:  \n      <pre><code>       \n        {\n          manufacturer: \"Bose\"\n        }\n</code></pre>",
      "path": "/networks/{networkId}/bluetoothClients",
      "method": "get",
      "responseId": "200",
      "type": "infos",
      "name": "Changes",
      "group": "Bluetooth clients",
      "apiDetails": {
        "description": "List the Bluetooth clients seen by APs in this network",
        "operationId": "getNetworkBluetoothClients",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 7 days from today."
          },
          {
            "type": "number",
            "format": "float",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 7 days. The default is 1 day."
          },
          {
            "type": "integer",
            "name": "perPage",
            "in": "query",
            "description": "The number of entries per page returned. Acceptable range is 5 - 1000. Default is 10."
          },
          {
            "type": "string",
            "name": "startingAfter",
            "in": "query",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "type": "string",
            "name": "endingBefore",
            "in": "query",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "type": "boolean",
            "name": "includeConnectivityHistory",
            "in": "query",
            "description": "Include the connectivity history for this client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "headers": {
              "Link": {
                "type": "string",
                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": "1284392014819",
                  "mac": "22:33:44:55:66:77",
                  "networkId": "N_24329156",
                  "name": "Miles's phone",
                  "deviceName": "Bose QuietComfort 35",
                  "manufacturer": "Bose",
                  "lastSeen": 1526087474,
                  "seenByDeviceMac": "00:11:22:33:44:55",
                  "inSightAlert": false,
                  "outOfSightAlert": false,
                  "tags": [
                    "tag1",
                    "tag2"
                  ]
                }
              ]
            }
          }
        },
        "summary": "List the Bluetooth clients seen by APs in this network",
        "tags": [
          "Bluetooth clients"
        ]
      }
    },
    {
      "ruleId": "add-response",
      "message": "`/networks/{networkId}/bluetoothClients` (get) - Response `200` added to (`1526087474`)",
      "messageHtml": "Response property <code>lastSeen</code> value added:  \n      <pre><code>       \n        {\n          lastSeen: 1526087474\n        }\n</code></pre>",
      "path": "/networks/{networkId}/bluetoothClients",
      "method": "get",
      "responseId": "200",
      "type": "infos",
      "name": "Changes",
      "group": "Bluetooth clients",
      "apiDetails": {
        "description": "List the Bluetooth clients seen by APs in this network",
        "operationId": "getNetworkBluetoothClients",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 7 days from today."
          },
          {
            "type": "number",
            "format": "float",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 7 days. The default is 1 day."
          },
          {
            "type": "integer",
            "name": "perPage",
            "in": "query",
            "description": "The number of entries per page returned. Acceptable range is 5 - 1000. Default is 10."
          },
          {
            "type": "string",
            "name": "startingAfter",
            "in": "query",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "type": "string",
            "name": "endingBefore",
            "in": "query",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "type": "boolean",
            "name": "includeConnectivityHistory",
            "in": "query",
            "description": "Include the connectivity history for this client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "headers": {
              "Link": {
                "type": "string",
                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": "1284392014819",
                  "mac": "22:33:44:55:66:77",
                  "networkId": "N_24329156",
                  "name": "Miles's phone",
                  "deviceName": "Bose QuietComfort 35",
                  "manufacturer": "Bose",
                  "lastSeen": 1526087474,
                  "seenByDeviceMac": "00:11:22:33:44:55",
                  "inSightAlert": false,
                  "outOfSightAlert": false,
                  "tags": [
                    "tag1",
                    "tag2"
                  ]
                }
              ]
            }
          }
        },
        "summary": "List the Bluetooth clients seen by APs in this network",
        "tags": [
          "Bluetooth clients"
        ]
      }
    },
    {
      "ruleId": "add-response",
      "message": "`/networks/{networkId}/bluetoothClients` (get) - Response `200` added to (`00:11:22:33:44:55`)",
      "messageHtml": "Response property <code>seenByDeviceMac</code> value added:  \n      <pre><code>       \n        {\n          seenByDeviceMac: \"00:11:22:33:44:55\"\n        }\n</code></pre>",
      "path": "/networks/{networkId}/bluetoothClients",
      "method": "get",
      "responseId": "200",
      "type": "infos",
      "name": "Changes",
      "group": "Bluetooth clients",
      "apiDetails": {
        "description": "List the Bluetooth clients seen by APs in this network",
        "operationId": "getNetworkBluetoothClients",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 7 days from today."
          },
          {
            "type": "number",
            "format": "float",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 7 days. The default is 1 day."
          },
          {
            "type": "integer",
            "name": "perPage",
            "in": "query",
            "description": "The number of entries per page returned. Acceptable range is 5 - 1000. Default is 10."
          },
          {
            "type": "string",
            "name": "startingAfter",
            "in": "query",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "type": "string",
            "name": "endingBefore",
            "in": "query",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "type": "boolean",
            "name": "includeConnectivityHistory",
            "in": "query",
            "description": "Include the connectivity history for this client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "headers": {
              "Link": {
                "type": "string",
                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": "1284392014819",
                  "mac": "22:33:44:55:66:77",
                  "networkId": "N_24329156",
                  "name": "Miles's phone",
                  "deviceName": "Bose QuietComfort 35",
                  "manufacturer": "Bose",
                  "lastSeen": 1526087474,
                  "seenByDeviceMac": "00:11:22:33:44:55",
                  "inSightAlert": false,
                  "outOfSightAlert": false,
                  "tags": [
                    "tag1",
                    "tag2"
                  ]
                }
              ]
            }
          }
        },
        "summary": "List the Bluetooth clients seen by APs in this network",
        "tags": [
          "Bluetooth clients"
        ]
      }
    },
    {
      "ruleId": "add-response",
      "message": "`/networks/{networkId}/bluetoothClients` (get) - Response `200` added to (`false`)",
      "messageHtml": "Response property <code>inSightAlert</code> value added:  \n      <pre><code>       \n        {\n          inSightAlert: false\n        }\n</code></pre>",
      "path": "/networks/{networkId}/bluetoothClients",
      "method": "get",
      "responseId": "200",
      "type": "infos",
      "name": "Changes",
      "group": "Bluetooth clients",
      "apiDetails": {
        "description": "List the Bluetooth clients seen by APs in this network",
        "operationId": "getNetworkBluetoothClients",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 7 days from today."
          },
          {
            "type": "number",
            "format": "float",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 7 days. The default is 1 day."
          },
          {
            "type": "integer",
            "name": "perPage",
            "in": "query",
            "description": "The number of entries per page returned. Acceptable range is 5 - 1000. Default is 10."
          },
          {
            "type": "string",
            "name": "startingAfter",
            "in": "query",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "type": "string",
            "name": "endingBefore",
            "in": "query",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "type": "boolean",
            "name": "includeConnectivityHistory",
            "in": "query",
            "description": "Include the connectivity history for this client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "headers": {
              "Link": {
                "type": "string",
                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": "1284392014819",
                  "mac": "22:33:44:55:66:77",
                  "networkId": "N_24329156",
                  "name": "Miles's phone",
                  "deviceName": "Bose QuietComfort 35",
                  "manufacturer": "Bose",
                  "lastSeen": 1526087474,
                  "seenByDeviceMac": "00:11:22:33:44:55",
                  "inSightAlert": false,
                  "outOfSightAlert": false,
                  "tags": [
                    "tag1",
                    "tag2"
                  ]
                }
              ]
            }
          }
        },
        "summary": "List the Bluetooth clients seen by APs in this network",
        "tags": [
          "Bluetooth clients"
        ]
      }
    },
    {
      "ruleId": "add-response",
      "message": "`/networks/{networkId}/bluetoothClients` (get) - Response `200` added to (`false`)",
      "messageHtml": "Response property <code>outOfSightAlert</code> value added:  \n      <pre><code>       \n        {\n          outOfSightAlert: false\n        }\n</code></pre>",
      "path": "/networks/{networkId}/bluetoothClients",
      "method": "get",
      "responseId": "200",
      "type": "infos",
      "name": "Changes",
      "group": "Bluetooth clients",
      "apiDetails": {
        "description": "List the Bluetooth clients seen by APs in this network",
        "operationId": "getNetworkBluetoothClients",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 7 days from today."
          },
          {
            "type": "number",
            "format": "float",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 7 days. The default is 1 day."
          },
          {
            "type": "integer",
            "name": "perPage",
            "in": "query",
            "description": "The number of entries per page returned. Acceptable range is 5 - 1000. Default is 10."
          },
          {
            "type": "string",
            "name": "startingAfter",
            "in": "query",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "type": "string",
            "name": "endingBefore",
            "in": "query",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "type": "boolean",
            "name": "includeConnectivityHistory",
            "in": "query",
            "description": "Include the connectivity history for this client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "headers": {
              "Link": {
                "type": "string",
                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": "1284392014819",
                  "mac": "22:33:44:55:66:77",
                  "networkId": "N_24329156",
                  "name": "Miles's phone",
                  "deviceName": "Bose QuietComfort 35",
                  "manufacturer": "Bose",
                  "lastSeen": 1526087474,
                  "seenByDeviceMac": "00:11:22:33:44:55",
                  "inSightAlert": false,
                  "outOfSightAlert": false,
                  "tags": [
                    "tag1",
                    "tag2"
                  ]
                }
              ]
            }
          }
        },
        "summary": "List the Bluetooth clients seen by APs in this network",
        "tags": [
          "Bluetooth clients"
        ]
      }
    },
    {
      "ruleId": "add-response",
      "message": "`/networks/{networkId}/bluetoothClients` (get) - Response `200` added to (`tag1,tag2`)",
      "messageHtml": "Response property <code>tags</code> value added:  \n      <pre><code>       \n        {\n          tags: [\"tag1\",\"tag2\"]\n        }\n</code></pre>",
      "path": "/networks/{networkId}/bluetoothClients",
      "method": "get",
      "responseId": "200",
      "type": "infos",
      "name": "Changes",
      "group": "Bluetooth clients",
      "apiDetails": {
        "description": "List the Bluetooth clients seen by APs in this network",
        "operationId": "getNetworkBluetoothClients",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 7 days from today."
          },
          {
            "type": "number",
            "format": "float",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 7 days. The default is 1 day."
          },
          {
            "type": "integer",
            "name": "perPage",
            "in": "query",
            "description": "The number of entries per page returned. Acceptable range is 5 - 1000. Default is 10."
          },
          {
            "type": "string",
            "name": "startingAfter",
            "in": "query",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "type": "string",
            "name": "endingBefore",
            "in": "query",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "type": "boolean",
            "name": "includeConnectivityHistory",
            "in": "query",
            "description": "Include the connectivity history for this client"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "headers": {
              "Link": {
                "type": "string",
                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": "1284392014819",
                  "mac": "22:33:44:55:66:77",
                  "networkId": "N_24329156",
                  "name": "Miles's phone",
                  "deviceName": "Bose QuietComfort 35",
                  "manufacturer": "Bose",
                  "lastSeen": 1526087474,
                  "seenByDeviceMac": "00:11:22:33:44:55",
                  "inSightAlert": false,
                  "outOfSightAlert": false,
                  "tags": [
                    "tag1",
                    "tag2"
                  ]
                }
              ]
            }
          }
        },
        "summary": "List the Bluetooth clients seen by APs in this network",
        "tags": [
          "Bluetooth clients"
        ]
      }
    },
    {
      "ruleId": "add-response",
      "message": "`/networks/{networkId}/bluetoothClients/{bluetoothClientId}` (get) - Response `200` added to (`1284392014819`)",
      "messageHtml": "Response property <code>id</code> value added:  \n      <pre><code>       \n        {\n          id: \"1284392014819\"\n        }\n</code></pre>",
      "path": "/networks/{networkId}/bluetoothClients/{bluetoothClientId}",
      "method": "get",
      "responseId": "200",
      "type": "infos",
      "name": "Changes",
      "group": "Bluetooth clients",
      "apiDetails": {
        "description": "Return a Bluetooth client. Bluetooth clients can be identified by their ID or their MAC.",
        "operationId": "getNetworkBluetoothClient",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "bluetoothClientId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "boolean",
            "name": "includeConnectivityHistory",
            "in": "query",
            "description": "Include the connectivity history for this client"
          },
          {
            "type": "integer",
            "name": "connectivityHistoryTimespan",
            "in": "query",
            "description": "The timespan, in seconds, for the connectivityHistory data. By default 1 day, 86400, will be used."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "1284392014819",
                "mac": "22:33:44:55:66:77",
                "networkId": "N_24329156",
                "name": "Miles's phone",
                "deviceName": "Bose QuietComfort 35",
                "manufacturer": "Bose",
                "lastSeen": 1526087474,
                "seenByDeviceMac": "00:11:22:33:44:55",
                "inSightAlert": false,
                "outOfSightAlert": false,
                "tags": [
                  "tag1",
                  "tag2"
                ]
              }
            }
          }
        },
        "summary": "Return a Bluetooth client. Bluetooth clients can be identified by their ID or their MAC.",
        "tags": [
          "Bluetooth clients"
        ]
      }
    },
    {
      "ruleId": "add-response",
      "message": "`/networks/{networkId}/bluetoothClients/{bluetoothClientId}` (get) - Response `200` added to (`Miles's phone`)",
      "messageHtml": "Response property <code>name</code> value added:  \n      <pre><code>       \n        {\n          name: \"Miles's phone\"\n        }\n</code></pre>",
      "path": "/networks/{networkId}/bluetoothClients/{bluetoothClientId}",
      "method": "get",
      "responseId": "200",
      "type": "infos",
      "name": "Changes",
      "group": "Bluetooth clients",
      "apiDetails": {
        "description": "Return a Bluetooth client. Bluetooth clients can be identified by their ID or their MAC.",
        "operationId": "getNetworkBluetoothClient",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "bluetoothClientId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "boolean",
            "name": "includeConnectivityHistory",
            "in": "query",
            "description": "Include the connectivity history for this client"
          },
          {
            "type": "integer",
            "name": "connectivityHistoryTimespan",
            "in": "query",
            "description": "The timespan, in seconds, for the connectivityHistory data. By default 1 day, 86400, will be used."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "1284392014819",
                "mac": "22:33:44:55:66:77",
                "networkId": "N_24329156",
                "name": "Miles's phone",
                "deviceName": "Bose QuietComfort 35",
                "manufacturer": "Bose",
                "lastSeen": 1526087474,
                "seenByDeviceMac": "00:11:22:33:44:55",
                "inSightAlert": false,
                "outOfSightAlert": false,
                "tags": [
                  "tag1",
                  "tag2"
                ]
              }
            }
          }
        },
        "summary": "Return a Bluetooth client. Bluetooth clients can be identified by their ID or their MAC.",
        "tags": [
          "Bluetooth clients"
        ]
      }
    },
    {
      "ruleId": "add-response",
      "message": "`/networks/{networkId}/bluetoothClients/{bluetoothClientId}` (get) - Response `200` added to (`Bose QuietComfort 35`)",
      "messageHtml": "Response property <code>deviceName</code> value added:  \n      <pre><code>       \n        {\n          deviceName: \"Bose QuietComfort 35\"\n        }\n</code></pre>",
      "path": "/networks/{networkId}/bluetoothClients/{bluetoothClientId}",
      "method": "get",
      "responseId": "200",
      "type": "infos",
      "name": "Changes",
      "group": "Bluetooth clients",
      "apiDetails": {
        "description": "Return a Bluetooth client. Bluetooth clients can be identified by their ID or their MAC.",
        "operationId": "getNetworkBluetoothClient",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "bluetoothClientId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "boolean",
            "name": "includeConnectivityHistory",
            "in": "query",
            "description": "Include the connectivity history for this client"
          },
          {
            "type": "integer",
            "name": "connectivityHistoryTimespan",
            "in": "query",
            "description": "The timespan, in seconds, for the connectivityHistory data. By default 1 day, 86400, will be used."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "1284392014819",
                "mac": "22:33:44:55:66:77",
                "networkId": "N_24329156",
                "name": "Miles's phone",
                "deviceName": "Bose QuietComfort 35",
                "manufacturer": "Bose",
                "lastSeen": 1526087474,
                "seenByDeviceMac": "00:11:22:33:44:55",
                "inSightAlert": false,
                "outOfSightAlert": false,
                "tags": [
                  "tag1",
                  "tag2"
                ]
              }
            }
          }
        },
        "summary": "Return a Bluetooth client. Bluetooth clients can be identified by their ID or their MAC.",
        "tags": [
          "Bluetooth clients"
        ]
      }
    },
    {
      "ruleId": "add-response",
      "message": "`/networks/{networkId}/bluetoothClients/{bluetoothClientId}` (get) - Response `200` added to (`Bose`)",
      "messageHtml": "Response property <code>manufacturer</code> value added:  \n      <pre><code>       \n        {\n          manufacturer: \"Bose\"\n        }\n</code></pre>",
      "path": "/networks/{networkId}/bluetoothClients/{bluetoothClientId}",
      "method": "get",
      "responseId": "200",
      "type": "infos",
      "name": "Changes",
      "group": "Bluetooth clients",
      "apiDetails": {
        "description": "Return a Bluetooth client. Bluetooth clients can be identified by their ID or their MAC.",
        "operationId": "getNetworkBluetoothClient",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "bluetoothClientId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "boolean",
            "name": "includeConnectivityHistory",
            "in": "query",
            "description": "Include the connectivity history for this client"
          },
          {
            "type": "integer",
            "name": "connectivityHistoryTimespan",
            "in": "query",
            "description": "The timespan, in seconds, for the connectivityHistory data. By default 1 day, 86400, will be used."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "1284392014819",
                "mac": "22:33:44:55:66:77",
                "networkId": "N_24329156",
                "name": "Miles's phone",
                "deviceName": "Bose QuietComfort 35",
                "manufacturer": "Bose",
                "lastSeen": 1526087474,
                "seenByDeviceMac": "00:11:22:33:44:55",
                "inSightAlert": false,
                "outOfSightAlert": false,
                "tags": [
                  "tag1",
                  "tag2"
                ]
              }
            }
          }
        },
        "summary": "Return a Bluetooth client. Bluetooth clients can be identified by their ID or their MAC.",
        "tags": [
          "Bluetooth clients"
        ]
      }
    },
    {
      "ruleId": "add-response",
      "message": "`/networks/{networkId}/bluetoothClients/{bluetoothClientId}` (get) - Response `200` added to (`1526087474`)",
      "messageHtml": "Response property <code>lastSeen</code> value added:  \n      <pre><code>       \n        {\n          lastSeen: 1526087474\n        }\n</code></pre>",
      "path": "/networks/{networkId}/bluetoothClients/{bluetoothClientId}",
      "method": "get",
      "responseId": "200",
      "type": "infos",
      "name": "Changes",
      "group": "Bluetooth clients",
      "apiDetails": {
        "description": "Return a Bluetooth client. Bluetooth clients can be identified by their ID or their MAC.",
        "operationId": "getNetworkBluetoothClient",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "bluetoothClientId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "boolean",
            "name": "includeConnectivityHistory",
            "in": "query",
            "description": "Include the connectivity history for this client"
          },
          {
            "type": "integer",
            "name": "connectivityHistoryTimespan",
            "in": "query",
            "description": "The timespan, in seconds, for the connectivityHistory data. By default 1 day, 86400, will be used."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "1284392014819",
                "mac": "22:33:44:55:66:77",
                "networkId": "N_24329156",
                "name": "Miles's phone",
                "deviceName": "Bose QuietComfort 35",
                "manufacturer": "Bose",
                "lastSeen": 1526087474,
                "seenByDeviceMac": "00:11:22:33:44:55",
                "inSightAlert": false,
                "outOfSightAlert": false,
                "tags": [
                  "tag1",
                  "tag2"
                ]
              }
            }
          }
        },
        "summary": "Return a Bluetooth client. Bluetooth clients can be identified by their ID or their MAC.",
        "tags": [
          "Bluetooth clients"
        ]
      }
    },
    {
      "ruleId": "add-response",
      "message": "`/networks/{networkId}/bluetoothClients/{bluetoothClientId}` (get) - Response `200` added to (`00:11:22:33:44:55`)",
      "messageHtml": "Response property <code>seenByDeviceMac</code> value added:  \n      <pre><code>       \n        {\n          seenByDeviceMac: \"00:11:22:33:44:55\"\n        }\n</code></pre>",
      "path": "/networks/{networkId}/bluetoothClients/{bluetoothClientId}",
      "method": "get",
      "responseId": "200",
      "type": "infos",
      "name": "Changes",
      "group": "Bluetooth clients",
      "apiDetails": {
        "description": "Return a Bluetooth client. Bluetooth clients can be identified by their ID or their MAC.",
        "operationId": "getNetworkBluetoothClient",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "bluetoothClientId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "boolean",
            "name": "includeConnectivityHistory",
            "in": "query",
            "description": "Include the connectivity history for this client"
          },
          {
            "type": "integer",
            "name": "connectivityHistoryTimespan",
            "in": "query",
            "description": "The timespan, in seconds, for the connectivityHistory data. By default 1 day, 86400, will be used."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "1284392014819",
                "mac": "22:33:44:55:66:77",
                "networkId": "N_24329156",
                "name": "Miles's phone",
                "deviceName": "Bose QuietComfort 35",
                "manufacturer": "Bose",
                "lastSeen": 1526087474,
                "seenByDeviceMac": "00:11:22:33:44:55",
                "inSightAlert": false,
                "outOfSightAlert": false,
                "tags": [
                  "tag1",
                  "tag2"
                ]
              }
            }
          }
        },
        "summary": "Return a Bluetooth client. Bluetooth clients can be identified by their ID or their MAC.",
        "tags": [
          "Bluetooth clients"
        ]
      }
    },
    {
      "ruleId": "add-response",
      "message": "`/networks/{networkId}/bluetoothClients/{bluetoothClientId}` (get) - Response `200` added to (`false`)",
      "messageHtml": "Response property <code>inSightAlert</code> value added:  \n      <pre><code>       \n        {\n          inSightAlert: false\n        }\n</code></pre>",
      "path": "/networks/{networkId}/bluetoothClients/{bluetoothClientId}",
      "method": "get",
      "responseId": "200",
      "type": "infos",
      "name": "Changes",
      "group": "Bluetooth clients",
      "apiDetails": {
        "description": "Return a Bluetooth client. Bluetooth clients can be identified by their ID or their MAC.",
        "operationId": "getNetworkBluetoothClient",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "bluetoothClientId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "boolean",
            "name": "includeConnectivityHistory",
            "in": "query",
            "description": "Include the connectivity history for this client"
          },
          {
            "type": "integer",
            "name": "connectivityHistoryTimespan",
            "in": "query",
            "description": "The timespan, in seconds, for the connectivityHistory data. By default 1 day, 86400, will be used."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "1284392014819",
                "mac": "22:33:44:55:66:77",
                "networkId": "N_24329156",
                "name": "Miles's phone",
                "deviceName": "Bose QuietComfort 35",
                "manufacturer": "Bose",
                "lastSeen": 1526087474,
                "seenByDeviceMac": "00:11:22:33:44:55",
                "inSightAlert": false,
                "outOfSightAlert": false,
                "tags": [
                  "tag1",
                  "tag2"
                ]
              }
            }
          }
        },
        "summary": "Return a Bluetooth client. Bluetooth clients can be identified by their ID or their MAC.",
        "tags": [
          "Bluetooth clients"
        ]
      }
    },
    {
      "ruleId": "add-response",
      "message": "`/networks/{networkId}/bluetoothClients/{bluetoothClientId}` (get) - Response `200` added to (`false`)",
      "messageHtml": "Response property <code>outOfSightAlert</code> value added:  \n      <pre><code>       \n        {\n          outOfSightAlert: false\n        }\n</code></pre>",
      "path": "/networks/{networkId}/bluetoothClients/{bluetoothClientId}",
      "method": "get",
      "responseId": "200",
      "type": "infos",
      "name": "Changes",
      "group": "Bluetooth clients",
      "apiDetails": {
        "description": "Return a Bluetooth client. Bluetooth clients can be identified by their ID or their MAC.",
        "operationId": "getNetworkBluetoothClient",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "bluetoothClientId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "boolean",
            "name": "includeConnectivityHistory",
            "in": "query",
            "description": "Include the connectivity history for this client"
          },
          {
            "type": "integer",
            "name": "connectivityHistoryTimespan",
            "in": "query",
            "description": "The timespan, in seconds, for the connectivityHistory data. By default 1 day, 86400, will be used."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "1284392014819",
                "mac": "22:33:44:55:66:77",
                "networkId": "N_24329156",
                "name": "Miles's phone",
                "deviceName": "Bose QuietComfort 35",
                "manufacturer": "Bose",
                "lastSeen": 1526087474,
                "seenByDeviceMac": "00:11:22:33:44:55",
                "inSightAlert": false,
                "outOfSightAlert": false,
                "tags": [
                  "tag1",
                  "tag2"
                ]
              }
            }
          }
        },
        "summary": "Return a Bluetooth client. Bluetooth clients can be identified by their ID or their MAC.",
        "tags": [
          "Bluetooth clients"
        ]
      }
    },
    {
      "ruleId": "add-response",
      "message": "`/networks/{networkId}/bluetoothClients/{bluetoothClientId}` (get) - Response `200` added to (`tag1,tag2`)",
      "messageHtml": "Response property <code>tags</code> value added:  \n      <pre><code>       \n        {\n          tags: [\"tag1\",\"tag2\"]\n        }\n</code></pre>",
      "path": "/networks/{networkId}/bluetoothClients/{bluetoothClientId}",
      "method": "get",
      "responseId": "200",
      "type": "infos",
      "name": "Changes",
      "group": "Bluetooth clients",
      "apiDetails": {
        "description": "Return a Bluetooth client. Bluetooth clients can be identified by their ID or their MAC.",
        "operationId": "getNetworkBluetoothClient",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "bluetoothClientId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "boolean",
            "name": "includeConnectivityHistory",
            "in": "query",
            "description": "Include the connectivity history for this client"
          },
          {
            "type": "integer",
            "name": "connectivityHistoryTimespan",
            "in": "query",
            "description": "The timespan, in seconds, for the connectivityHistory data. By default 1 day, 86400, will be used."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "1284392014819",
                "mac": "22:33:44:55:66:77",
                "networkId": "N_24329156",
                "name": "Miles's phone",
                "deviceName": "Bose QuietComfort 35",
                "manufacturer": "Bose",
                "lastSeen": 1526087474,
                "seenByDeviceMac": "00:11:22:33:44:55",
                "inSightAlert": false,
                "outOfSightAlert": false,
                "tags": [
                  "tag1",
                  "tag2"
                ]
              }
            }
          }
        },
        "summary": "Return a Bluetooth client. Bluetooth clients can be identified by their ID or their MAC.",
        "tags": [
          "Bluetooth clients"
        ]
      }
    },
    {
      "ruleId": "add-response",
      "message": "`/networks/{networkId}/clients/{clientId}` (get) - Response `200` added to (`Online`)",
      "messageHtml": "Response property <code>status</code> value added:  \n      <pre><code>       \n        {\n          status: \"Online\"\n        }\n</code></pre>",
      "path": "/networks/{networkId}/clients/{clientId}",
      "method": "get",
      "responseId": "200",
      "type": "infos",
      "name": "Changes",
      "group": "Clients",
      "apiDetails": {
        "description": "Return the client associated with the given identifier. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
        "operationId": "getNetworkClient",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "clientId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "k74272e",
                "description": "Miles's phone",
                "mac": "00:11:22:33:44:55",
                "ip": "1.2.3.4",
                "user": "null",
                "vlan": "255",
                "switchport": null,
                "ip6": "",
                "firstSeen": 1518365681,
                "lastSeen": 1526087474,
                "manufacturer": "Apple",
                "os": "iOS",
                "ssid": "My SSID",
                "wirelessCapabilities": "802.11ac - 2.4 and 5 GHz",
                "smInstalled": true,
                "recentDeviceMac": "00:11:22:33:44:55",
                "clientVpnConnections": [
                  {
                    "remoteIp": "1.2.3.4",
                    "connectedAt": 1522613355,
                    "disconnectedAt": 1522613360
                  }
                ],
                "lldp": [
                  [
                    "System name",
                    "Some system name"
                  ],
                  [
                    "System description",
                    "Some system description"
                  ],
                  [
                    "Port ID",
                    "1"
                  ],
                  [
                    "Chassis ID",
                    "00:18:0a:00:00:00"
                  ],
                  [
                    "Port description",
                    "eth0"
                  ],
                  [
                    "System capabilities",
                    "Two-port MAC Relay"
                  ]
                ],
                "cdp": null,
                "status": "Online"
              }
            }
          }
        },
        "summary": "Return the client associated with the given identifier. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
        "tags": [
          "Clients"
        ]
      }
    },
    {
      "ruleId": "edit-summary",
      "message": "`/networks/{networkId}/clients/{clientId}/splashAuthorizationStatus` (get) - Summary turned from `Return the splash authorization for a client, for each SSID they've associated with through splash. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.` to `Return the splash authorization for a client, for each SSID they've associated with through splash. Only enabled SSIDs with Click-through splash enabled will be included. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.`",
      "messageHtml": "Summary changed from <code>Return the splash authorization for a client, for each SSID they've associated with through splash. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.</code> to <code>Return the splash authorization for a client, for each SSID they've associated with through splash. Only enabled SSIDs with Click-through splash enabled will be included. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.</code>",
      "method": "get",
      "path": "/networks/{networkId}/clients/{clientId}/splashAuthorizationStatus",
      "previousSummary": "Return the splash authorization for a client, for each SSID they've associated with through splash. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
      "currentSummary": "Return the splash authorization for a client, for each SSID they've associated with through splash. Only enabled SSIDs with Click-through splash enabled will be included. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
      "type": "infos",
      "name": "Changes",
      "group": "Clients",
      "apiDetails": {
        "description": "Return the splash authorization for a client, for each SSID they've associated with through splash. Only enabled SSIDs with Click-through splash enabled will be included. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
        "operationId": "getNetworkClientSplashAuthorizationStatus",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "clientId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "ssids": {
                  "0": {
                    "isAuthorized": true,
                    "authorizedAt": "2017-07-19 16:24:13 UTC",
                    "expiresAt": "2017-07-20 16:24:13 UTC"
                  },
                  "2": {
                    "isAuthorized": false
                  }
                }
              }
            }
          }
        },
        "summary": "Return the splash authorization for a client, for each SSID they've associated with through splash. Only enabled SSIDs with Click-through splash enabled will be included. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
        "tags": [
          "Clients"
        ]
      }
    },
    {
      "ruleId": "add-response",
      "message": "`/networks/{networkId}/devices` (get) - Response `200` added to (`g_1234567`)",
      "messageHtml": "Response property <code>floorPlanId</code> value added:  \n      <pre><code>       \n        {\n          floorPlanId: \"g_1234567\"\n        }\n</code></pre>",
      "path": "/networks/{networkId}/devices",
      "method": "get",
      "responseId": "200",
      "type": "infos",
      "name": "Changes",
      "group": "Devices",
      "apiDetails": {
        "description": "List the devices in a network",
        "operationId": "getNetworkDevices",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "name": "My AP",
                  "lat": 37.4180951010362,
                  "lng": -122.098531723022,
                  "serial": "Q234-ABCD-5678",
                  "mac": "00:11:22:33:44:55",
                  "model": "MR34",
                  "address": "1600 Pennsylvania Ave",
                  "notes": "My AP's note",
                  "lanIp": "1.2.3.4",
                  "tags": " recently-added ",
                  "networkId": "N_24329156",
                  "beaconIdParams": {
                    "uuid": "00000000-0000-0000-0000-000000000000",
                    "major": 5,
                    "minor": 3
                  },
                  "firmware": "wireless-25-14",
                  "floorPlanId": "g_1234567"
                }
              ]
            }
          }
        },
        "summary": "List the devices in a network",
        "tags": [
          "Devices"
        ]
      }
    },
    {
      "ruleId": "add-response",
      "message": "`/networks/{networkId}/devices/{serial}` (get) - Response `200` added to (`g_1234567`)",
      "messageHtml": "Response property <code>floorPlanId</code> value added:  \n      <pre><code>       \n        {\n          floorPlanId: \"g_1234567\"\n        }\n</code></pre>",
      "path": "/networks/{networkId}/devices/{serial}",
      "method": "get",
      "responseId": "200",
      "type": "infos",
      "name": "Changes",
      "group": "Devices",
      "apiDetails": {
        "description": "Return a single device",
        "operationId": "getNetworkDevice",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "name": "My AP",
                "lat": 37.4180951010362,
                "lng": -122.098531723022,
                "serial": "Q234-ABCD-5678",
                "mac": "00:11:22:33:44:55",
                "model": "MR34",
                "address": "1600 Pennsylvania Ave",
                "notes": "My AP's note",
                "lanIp": "1.2.3.4",
                "tags": " recently-added ",
                "networkId": "N_24329156",
                "beaconIdParams": {
                  "uuid": "00000000-0000-0000-0000-000000000000",
                  "major": 5,
                  "minor": 3
                },
                "firmware": "wireless-25-14",
                "floorPlanId": "g_1234567"
              }
            }
          }
        },
        "summary": "Return a single device",
        "tags": [
          "Devices"
        ]
      }
    },
    {
      "ruleId": "add-optional-object-property",
      "message": "`paths//networks/{networkId}/devices/{serial}/put/parameters/updateNetworkDevice/schema` - Optional property `floorPlanId` Added",
      "messageHtml": "Optional property <code>floorPlanId</code> Added",
      "path": "/networks/{networkId}/devices/{serial}",
      "method": "put",
      "objectPath": "paths//networks/{networkId}/devices/{serial}/put/parameters/updateNetworkDevice/schema",
      "property": "floorPlanId",
      "type": "infos",
      "name": "Changes",
      "group": "Devices",
      "apiDetails": {
        "description": "Update the attributes of a device",
        "operationId": "updateNetworkDevice",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkDevice",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of a device"
                },
                "tags": {
                  "type": "string",
                  "description": "The tags of a device"
                },
                "lat": {
                  "type": "number",
                  "format": "float",
                  "description": "The latitude of a device"
                },
                "lng": {
                  "type": "number",
                  "format": "float",
                  "description": "The longitude of a device"
                },
                "address": {
                  "type": "string",
                  "description": "The address of a device"
                },
                "notes": {
                  "type": "string",
                  "description": "The notes for the device. String. Limited to 255 characters."
                },
                "moveMapMarker": {
                  "type": "boolean",
                  "description": "Whether or not to set the latitude and longitude of a device based on the new address. Only applies when lat and lng are not specified."
                },
                "switchProfileId": {
                  "type": "string",
                  "description": "The ID of a switch profile to bind to the device (for available switch profiles, see the 'Switch Profiles' endpoint). Use null to unbind the switch device from the current profile. For a device to be bindable to a switch profile, it must (1) be a switch, and (2) belong to a network that is bound to a configuration template."
                },
                "floorPlanId": {
                  "type": "string",
                  "description": "The floor plan to associate to this device. null disassociates the device from the floorplan."
                }
              },
              "example": {
                "name": "My AP",
                "lat": 37.4180951010362,
                "lng": -122.098531723022,
                "serial": "Q234-ABCD-5678",
                "mac": "00:11:22:33:44:55",
                "tags": " recently-added "
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "name": "My AP",
                "lat": 37.4180951010362,
                "lng": -122.098531723022,
                "serial": "Q234-ABCD-5678",
                "mac": "00:11:22:33:44:55",
                "model": "MR34",
                "address": "1600 Pennsylvania Ave",
                "notes": "My AP's note",
                "lanIp": "1.2.3.4",
                "tags": " recently-added ",
                "networkId": "N_24329156",
                "beaconIdParams": {
                  "uuid": "00000000-0000-0000-0000-000000000000",
                  "major": 5,
                  "minor": 3
                },
                "firmware": "wireless-25-14",
                "floorPlanId": "g_1234567"
              }
            }
          }
        },
        "summary": "Update the attributes of a device",
        "tags": [
          "Devices"
        ]
      }
    },
    {
      "ruleId": "add-response",
      "message": "`/networks/{networkId}/devices/{serial}/managementInterfaceSettings` (get) - Response `200` added to (`[object Object]`)",
      "messageHtml": "Response property <code>ddnsHostnames</code> value added:  \n      <pre><code>       \n        {\n          ddnsHostnames: {\"activeDdnsHostname\":\"mx1-sample.dynamic-m.com\",\"ddnsHostnameWan1\":\"mx1-sample-1.dynamic-m.com\",\"ddnsHostnameWan2\":\"mx1-sample-2.dynamic-m.com\"}\n        }\n</code></pre>",
      "path": "/networks/{networkId}/devices/{serial}/managementInterfaceSettings",
      "method": "get",
      "responseId": "200",
      "type": "infos",
      "name": "Changes",
      "group": "Management interface settings",
      "apiDetails": {
        "description": "Return the management interface settings for a device",
        "operationId": "getNetworkDeviceManagementInterfaceSettings",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "serial",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "ddnsHostnames": {
                  "activeDdnsHostname": "mx1-sample.dynamic-m.com",
                  "ddnsHostnameWan1": "mx1-sample-1.dynamic-m.com",
                  "ddnsHostnameWan2": "mx1-sample-2.dynamic-m.com"
                },
                "wan1": {
                  "wanEnabled": "not configured",
                  "usingStaticIp": true,
                  "staticIp": "1.2.3.4",
                  "staticSubnetMask": "255.255.255.0",
                  "staticGatewayIp": "1.2.3.1",
                  "staticDns": [
                    "1.2.3.2",
                    "1.2.3.3"
                  ],
                  "vlan": 7
                },
                "wan2": {
                  "wanEnabled": "enabled",
                  "usingStaticIp": false,
                  "vlan": 2
                }
              }
            }
          }
        },
        "summary": "Return the management interface settings for a device",
        "tags": [
          "Management interface settings"
        ]
      }
    },
    {
      "ruleId": "add-optional-param",
      "message": "`/networks/{networkId}/sm/devices` (get) - Optional param `batchSize` added",
      "messageHtml": "Optional param <code>batchSize</code> added",
      "path": "/networks/{networkId}/sm/devices",
      "method": "get",
      "param": "batchSize",
      "type": "infos",
      "name": "Changes",
      "group": "SM",
      "apiDetails": {
        "description": "List the devices enrolled in an SM network with various specified fields and filters",
        "operationId": "getNetworkSmDevices",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "fields",
            "in": "query",
            "description": "Additional fields that will be displayed for each device. Multiple fields can be passed in as comma separated values.\n    The default fields are: id, name, tags, ssid, wifiMac, osName, systemModel, uuid, and serialNumber. The additional fields are: ip,\n    systemType, availableDeviceCapacity, kioskAppName, biosVersion, lastConnected, missingAppsCount, userSuppliedAddress, location, lastUser,\n    ownerEmail, ownerUsername, publicIp, phoneNumber, diskInfoJson, deviceCapacity, isManaged, hadMdm, isSupervised, meid, imei, iccid,\n    simCarrierNetwork, cellularDataUsed, isHotspotEnabled, createdAt, batteryEstCharge, quarantined, avName, avRunning, asName, fwName,\n    isRooted, loginRequired, screenLockEnabled, screenLockDelay, autoLoginDisabled, autoTags, hasMdm, hasDesktopAgent, diskEncryptionEnabled,\n    hardwareEncryptionCaps, passCodeLock, usesHardwareKeystore, and androidSecurityPatchVersion."
          },
          {
            "type": "string",
            "name": "wifiMacs",
            "in": "query",
            "description": "Filter devices by wifi mac(s). Multiple wifi macs can be passed in as comma separated values."
          },
          {
            "type": "string",
            "name": "serials",
            "in": "query",
            "description": "Filter devices by serial(s). Multiple serials can be passed in as comma separated values."
          },
          {
            "type": "string",
            "name": "ids",
            "in": "query",
            "description": "Filter devices by id(s). Multiple ids can be passed in as comma separated values."
          },
          {
            "type": "string",
            "name": "scope",
            "in": "query",
            "description": "Specify a scope (one of all, none, withAny, withAll, withoutAny, or withoutAll) and a set of tags as comma separated values."
          },
          {
            "type": "integer",
            "name": "batchSize",
            "in": "query",
            "description": "Number of devices to return, 1000 is the default as well as the max."
          },
          {
            "type": "string",
            "name": "batchToken",
            "in": "query",
            "description": "If the network has more devices than the batch size, a batch token will be returned\n    as a part of the device list. To see the remainder of the devices, pass in the batchToken as a parameter in the next request.\n    Requests made with the batchToken do not require additional parameters as the batchToken includes the parameters passed in\n    with the original request. Additional parameters passed in with the batchToken will be ignored."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "devices": [
                  {
                    "id": "1284392014819",
                    "name": "Miles's phone",
                    "tags": [
                      "tag1",
                      "tag2"
                    ],
                    "ssid": "My SSID",
                    "wifiMac": "00:11:22:33:44:55",
                    "osName": "iOS 9.3.5",
                    "systemModel": "iPhone",
                    "uuid": "3d990628ede4c628d52",
                    "serialNumber": "F5XKHEBX",
                    "ip": "1.2.3.4"
                  }
                ],
                "batchToken": "MMbCbpHZtG3TKUCr9B9uc5"
              }
            }
          }
        },
        "summary": "List the devices enrolled in an SM network with various specified fields and filters",
        "tags": [
          "SM"
        ]
      }
    },
    {
      "ruleId": "add-optional-object-property",
      "message": "`paths//networks/{networkId}/ssids/{number}/put/parameters/updateNetworkSsid/schema` - Optional property `enterpriseAdminAccess` Added",
      "messageHtml": "Optional property <code>enterpriseAdminAccess</code> Added",
      "path": "/networks/{networkId}/ssids/{number}",
      "method": "put",
      "objectPath": "paths//networks/{networkId}/ssids/{number}/put/parameters/updateNetworkSsid/schema",
      "property": "enterpriseAdminAccess",
      "type": "infos",
      "name": "Changes",
      "group": "SSIDs",
      "apiDetails": {
        "description": "Update the attributes of an SSID",
        "operationId": "updateNetworkSsid",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "number",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkSsid",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the SSID"
                },
                "enabled": {
                  "type": "boolean",
                  "description": "Whether or not the SSID is enabled"
                },
                "authMode": {
                  "type": "string",
                  "enum": [
                    "open",
                    "psk",
                    "open-with-radius",
                    "8021x-meraki",
                    "8021x-radius"
                  ],
                  "description": "The association control method for the SSID ('open', 'psk', 'open-with-radius', '8021x-meraki' or '8021x-radius')"
                },
                "enterpriseAdminAccess": {
                  "type": "string",
                  "enum": [
                    "access disabled",
                    "access enabled"
                  ],
                  "description": "Whether or not an SSID is accessible by 'enterprise' administrators ('access disabled' or 'access enabled')"
                },
                "encryptionMode": {
                  "type": "string",
                  "enum": [
                    "wep",
                    "wpa"
                  ],
                  "description": "The psk encryption mode for the SSID ('wep' or 'wpa'). This param is only valid if the authMode is 'psk'"
                },
                "psk": {
                  "type": "string",
                  "description": "The passkey for the SSID. This param is only valid if the authMode is 'psk'"
                },
                "wpaEncryptionMode": {
                  "type": "string",
                  "enum": [
                    "WPA1 and WPA2",
                    "WPA2 only"
                  ],
                  "description": "The types of WPA encryption. ('WPA1 and WPA2' or 'WPA2 only')"
                },
                "splashPage": {
                  "type": "string",
                  "enum": [
                    "None",
                    "Click-through splash page",
                    "Billing",
                    "Password-protected with Meraki RADIUS",
                    "Password-protected with custom RADIUS",
                    "Password-protected with Active Directory",
                    "Password-protected with LDAP",
                    "SMS authentication",
                    "Systems Manager Sentry",
                    "Facebook Wi-Fi",
                    "Google OAuth",
                    "Sponsored guest"
                  ],
                  "description": "The type of splash page for the SSID ('None', 'Click-through splash page', 'Billing', 'Password-protected with Meraki RADIUS', 'Password-protected with custom RADIUS', 'Password-protected with Active Directory', 'Password-protected with LDAP', 'SMS authentication', 'Systems Manager Sentry', 'Facebook Wi-Fi', 'Google OAuth' or 'Sponsored guest'). This attribute is not supported for template children."
                },
                "radiusServers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "host": {
                        "type": "string",
                        "description": "IP address of your RADIUS server",
                        "required": true
                      },
                      "port": {
                        "type": "integer",
                        "description": "UDP port the RADIUS server listens on for Access-requests"
                      },
                      "secret": {
                        "type": "string",
                        "description": "RADIUS client shared secret",
                        "required": true
                      }
                    }
                  },
                  "description": "The RADIUS 802.1x servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius'"
                },
                "radiusCoaEnabled": {
                  "type": "boolean",
                  "description": "If true, Meraki devices will act as a RADIUS Dynamic Authorization Server and will respond to RADIUS Change-of-Authorization and Disconnect messages sent by the RADIUS server."
                },
                "radiusFailoverPolicy": {
                  "type": "string",
                  "enum": [
                    "Deny access",
                    "Allow access"
                  ],
                  "description": "This policy determines how authentication requests should be handled in the event that all of the configured RADIUS servers are unreachable ('Deny access' or 'Allow access')"
                },
                "radiusLoadBalancingPolicy": {
                  "type": "string",
                  "enum": [
                    "Strict priority order",
                    "Round robin"
                  ],
                  "description": "This policy determines which RADIUS server will be contacted first in an authentication attempt and the ordering of any necessary retry attempts ('Strict priority order' or 'Round robin')"
                },
                "radiusAccountingEnabled": {
                  "type": "boolean",
                  "description": "Whether or not RADIUS accounting is enabled. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius'"
                },
                "radiusAccountingServers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "host": {
                        "type": "string",
                        "description": "IP address to which the APs will send RADIUS accounting messages",
                        "required": true
                      },
                      "port": {
                        "type": "integer",
                        "description": "Port on the RADIUS server that is listening for accounting messages"
                      },
                      "secret": {
                        "type": "string",
                        "description": "Shared key used to authenticate messages between the APs and RADIUS server",
                        "required": true
                      }
                    }
                  },
                  "description": "The RADIUS accounting 802.1x servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius' and radiusAccountingEnabled is 'true'"
                },
                "radiusAttributeForGroupPolicies": {
                  "type": "string",
                  "description": "Specify the RADIUS attribute used to look up group policies ('Filter-Id', 'Reply-Message', 'Airespace-ACL-Name' or 'Aruba-User-Role'). Access points must receive this attribute in the RADIUS Access-Accept message"
                },
                "ipAssignmentMode": {
                  "type": "string",
                  "description": "The client IP assignment mode ('NAT mode', 'Bridge mode', 'Layer 3 roaming', 'Layer 3 roaming with a concentrator' or 'VPN')"
                },
                "useVlanTagging": {
                  "type": "boolean",
                  "description": "Whether or not traffic should be directed to use specific VLANs. This param is only valid if the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'"
                },
                "concentratorNetworkId": {
                  "type": "string",
                  "description": "The concentrator to use when the ipAssignmentMode is 'Layer 3 roaming with a concentrator' or 'VPN'."
                },
                "vlanId": {
                  "type": "integer",
                  "description": "The VLAN ID used for VLAN tagging. This param is only valid when the ipAssignmentMode is 'Layer 3 roaming with a concentrator' or 'VPN'"
                },
                "defaultVlanId": {
                  "type": "integer",
                  "description": "The default VLAN ID used for 'all other APs'. This param is only valid when the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'"
                },
                "apTagsAndVlanIds": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "tags": {
                        "type": "string",
                        "description": "Comma-separated list of AP tags"
                      },
                      "vlanId": {
                        "type": "integer",
                        "description": "Numerical identifier that is assigned to the VLAN"
                      }
                    }
                  },
                  "description": "The list of tags and VLAN IDs used for VLAN tagging. This param is only valid when the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'"
                },
                "walledGardenEnabled": {
                  "type": "boolean",
                  "description": "Allow access to a configurable list of IP ranges, which users may access prior to sign-on."
                },
                "walledGardenRanges": {
                  "type": "string",
                  "description": "Specify your walled garden by entering space-separated addresses, ranges using CIDR notation, domain names, and domain wildcards (e.g. 192.168.1.1/24 192.168.37.10/32 www.yahoo.com *.google.com). Meraki's splash page is automatically included in your walled garden."
                },
                "radiusOverride": {
                  "type": "boolean",
                  "description": "If true, the RADIUS response can override VLAN tag. This is not valid when ipAssignmentMode is 'NAT mode'."
                },
                "minBitrate": {
                  "type": "number",
                  "format": "float",
                  "description": "The minimum bitrate in Mbps. ('1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54')"
                },
                "bandSelection": {
                  "type": "string",
                  "description": "The client-serving radio frequencies. ('Dual band operation', '5 GHz band only' or 'Dual band operation with Band Steering')"
                },
                "perClientBandwidthLimitUp": {
                  "type": "integer",
                  "description": "The upload bandwidth limit in Kbps. (0 represents no limit.)"
                },
                "perClientBandwidthLimitDown": {
                  "type": "integer",
                  "description": "The download bandwidth limit in Kbps. (0 represents no limit.)"
                },
                "lanIsolationEnabled": {
                  "type": "boolean",
                  "description": "Boolean indicating whether Layer 2 LAN isolation should be enabled or disabled. Only configurable when ipAssignmentMode is 'Bridge mode'."
                }
              },
              "example": {
                "name": "My SSID",
                "enabled": true
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "number": 0,
                "name": "My SSID",
                "enabled": true,
                "splashPage": "Click-through splash page",
                "ssidAdminAccessible": false,
                "authMode": "8021x-radius",
                "encryptionMode": "wpa-eap",
                "wpaEncryptionMode": "WPA2 only",
                "radiusServers": [
                  {
                    "host": "0.0.0.0",
                    "port": 3000
                  }
                ],
                "radiusAccountingEnabled": false,
                "radiusEnabled": true,
                "radiusAttributeForGroupPolicies": "Filter-Id",
                "radiusFailoverPolicy": "null",
                "radiusLoadBalancingPolicy": "null",
                "ipAssignmentMode": "NAT mode",
                "adminSplashUrl": "http://example.com",
                "splashTimeout": "30 minutes",
                "walledGardenEnabled": true,
                "walledGardenRanges": "example.com",
                "minBitrate": 11,
                "bandSelection": "5 GHz band only",
                "perClientBandwidthLimitUp": 0,
                "perClientBandwidthLimitDown": 0
              }
            }
          }
        },
        "summary": "Update the attributes of an SSID",
        "tags": [
          "SSIDs"
        ]
      }
    },
    {
      "ruleId": "add-optional-object-property",
      "message": "`paths//networks/{networkId}/ssids/{number}/put/parameters/updateNetworkSsid/schema` - Optional property `radiusAttributeForGroupPolicies` Added",
      "messageHtml": "Optional property <code>radiusAttributeForGroupPolicies</code> Added",
      "path": "/networks/{networkId}/ssids/{number}",
      "method": "put",
      "objectPath": "paths//networks/{networkId}/ssids/{number}/put/parameters/updateNetworkSsid/schema",
      "property": "radiusAttributeForGroupPolicies",
      "type": "infos",
      "name": "Changes",
      "group": "SSIDs",
      "apiDetails": {
        "description": "Update the attributes of an SSID",
        "operationId": "updateNetworkSsid",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "number",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkSsid",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the SSID"
                },
                "enabled": {
                  "type": "boolean",
                  "description": "Whether or not the SSID is enabled"
                },
                "authMode": {
                  "type": "string",
                  "enum": [
                    "open",
                    "psk",
                    "open-with-radius",
                    "8021x-meraki",
                    "8021x-radius"
                  ],
                  "description": "The association control method for the SSID ('open', 'psk', 'open-with-radius', '8021x-meraki' or '8021x-radius')"
                },
                "enterpriseAdminAccess": {
                  "type": "string",
                  "enum": [
                    "access disabled",
                    "access enabled"
                  ],
                  "description": "Whether or not an SSID is accessible by 'enterprise' administrators ('access disabled' or 'access enabled')"
                },
                "encryptionMode": {
                  "type": "string",
                  "enum": [
                    "wep",
                    "wpa"
                  ],
                  "description": "The psk encryption mode for the SSID ('wep' or 'wpa'). This param is only valid if the authMode is 'psk'"
                },
                "psk": {
                  "type": "string",
                  "description": "The passkey for the SSID. This param is only valid if the authMode is 'psk'"
                },
                "wpaEncryptionMode": {
                  "type": "string",
                  "enum": [
                    "WPA1 and WPA2",
                    "WPA2 only"
                  ],
                  "description": "The types of WPA encryption. ('WPA1 and WPA2' or 'WPA2 only')"
                },
                "splashPage": {
                  "type": "string",
                  "enum": [
                    "None",
                    "Click-through splash page",
                    "Billing",
                    "Password-protected with Meraki RADIUS",
                    "Password-protected with custom RADIUS",
                    "Password-protected with Active Directory",
                    "Password-protected with LDAP",
                    "SMS authentication",
                    "Systems Manager Sentry",
                    "Facebook Wi-Fi",
                    "Google OAuth",
                    "Sponsored guest"
                  ],
                  "description": "The type of splash page for the SSID ('None', 'Click-through splash page', 'Billing', 'Password-protected with Meraki RADIUS', 'Password-protected with custom RADIUS', 'Password-protected with Active Directory', 'Password-protected with LDAP', 'SMS authentication', 'Systems Manager Sentry', 'Facebook Wi-Fi', 'Google OAuth' or 'Sponsored guest'). This attribute is not supported for template children."
                },
                "radiusServers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "host": {
                        "type": "string",
                        "description": "IP address of your RADIUS server",
                        "required": true
                      },
                      "port": {
                        "type": "integer",
                        "description": "UDP port the RADIUS server listens on for Access-requests"
                      },
                      "secret": {
                        "type": "string",
                        "description": "RADIUS client shared secret",
                        "required": true
                      }
                    }
                  },
                  "description": "The RADIUS 802.1x servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius'"
                },
                "radiusCoaEnabled": {
                  "type": "boolean",
                  "description": "If true, Meraki devices will act as a RADIUS Dynamic Authorization Server and will respond to RADIUS Change-of-Authorization and Disconnect messages sent by the RADIUS server."
                },
                "radiusFailoverPolicy": {
                  "type": "string",
                  "enum": [
                    "Deny access",
                    "Allow access"
                  ],
                  "description": "This policy determines how authentication requests should be handled in the event that all of the configured RADIUS servers are unreachable ('Deny access' or 'Allow access')"
                },
                "radiusLoadBalancingPolicy": {
                  "type": "string",
                  "enum": [
                    "Strict priority order",
                    "Round robin"
                  ],
                  "description": "This policy determines which RADIUS server will be contacted first in an authentication attempt and the ordering of any necessary retry attempts ('Strict priority order' or 'Round robin')"
                },
                "radiusAccountingEnabled": {
                  "type": "boolean",
                  "description": "Whether or not RADIUS accounting is enabled. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius'"
                },
                "radiusAccountingServers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "host": {
                        "type": "string",
                        "description": "IP address to which the APs will send RADIUS accounting messages",
                        "required": true
                      },
                      "port": {
                        "type": "integer",
                        "description": "Port on the RADIUS server that is listening for accounting messages"
                      },
                      "secret": {
                        "type": "string",
                        "description": "Shared key used to authenticate messages between the APs and RADIUS server",
                        "required": true
                      }
                    }
                  },
                  "description": "The RADIUS accounting 802.1x servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius' and radiusAccountingEnabled is 'true'"
                },
                "radiusAttributeForGroupPolicies": {
                  "type": "string",
                  "description": "Specify the RADIUS attribute used to look up group policies ('Filter-Id', 'Reply-Message', 'Airespace-ACL-Name' or 'Aruba-User-Role'). Access points must receive this attribute in the RADIUS Access-Accept message"
                },
                "ipAssignmentMode": {
                  "type": "string",
                  "description": "The client IP assignment mode ('NAT mode', 'Bridge mode', 'Layer 3 roaming', 'Layer 3 roaming with a concentrator' or 'VPN')"
                },
                "useVlanTagging": {
                  "type": "boolean",
                  "description": "Whether or not traffic should be directed to use specific VLANs. This param is only valid if the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'"
                },
                "concentratorNetworkId": {
                  "type": "string",
                  "description": "The concentrator to use when the ipAssignmentMode is 'Layer 3 roaming with a concentrator' or 'VPN'."
                },
                "vlanId": {
                  "type": "integer",
                  "description": "The VLAN ID used for VLAN tagging. This param is only valid when the ipAssignmentMode is 'Layer 3 roaming with a concentrator' or 'VPN'"
                },
                "defaultVlanId": {
                  "type": "integer",
                  "description": "The default VLAN ID used for 'all other APs'. This param is only valid when the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'"
                },
                "apTagsAndVlanIds": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "tags": {
                        "type": "string",
                        "description": "Comma-separated list of AP tags"
                      },
                      "vlanId": {
                        "type": "integer",
                        "description": "Numerical identifier that is assigned to the VLAN"
                      }
                    }
                  },
                  "description": "The list of tags and VLAN IDs used for VLAN tagging. This param is only valid when the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'"
                },
                "walledGardenEnabled": {
                  "type": "boolean",
                  "description": "Allow access to a configurable list of IP ranges, which users may access prior to sign-on."
                },
                "walledGardenRanges": {
                  "type": "string",
                  "description": "Specify your walled garden by entering space-separated addresses, ranges using CIDR notation, domain names, and domain wildcards (e.g. 192.168.1.1/24 192.168.37.10/32 www.yahoo.com *.google.com). Meraki's splash page is automatically included in your walled garden."
                },
                "radiusOverride": {
                  "type": "boolean",
                  "description": "If true, the RADIUS response can override VLAN tag. This is not valid when ipAssignmentMode is 'NAT mode'."
                },
                "minBitrate": {
                  "type": "number",
                  "format": "float",
                  "description": "The minimum bitrate in Mbps. ('1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54')"
                },
                "bandSelection": {
                  "type": "string",
                  "description": "The client-serving radio frequencies. ('Dual band operation', '5 GHz band only' or 'Dual band operation with Band Steering')"
                },
                "perClientBandwidthLimitUp": {
                  "type": "integer",
                  "description": "The upload bandwidth limit in Kbps. (0 represents no limit.)"
                },
                "perClientBandwidthLimitDown": {
                  "type": "integer",
                  "description": "The download bandwidth limit in Kbps. (0 represents no limit.)"
                },
                "lanIsolationEnabled": {
                  "type": "boolean",
                  "description": "Boolean indicating whether Layer 2 LAN isolation should be enabled or disabled. Only configurable when ipAssignmentMode is 'Bridge mode'."
                }
              },
              "example": {
                "name": "My SSID",
                "enabled": true
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "number": 0,
                "name": "My SSID",
                "enabled": true,
                "splashPage": "Click-through splash page",
                "ssidAdminAccessible": false,
                "authMode": "8021x-radius",
                "encryptionMode": "wpa-eap",
                "wpaEncryptionMode": "WPA2 only",
                "radiusServers": [
                  {
                    "host": "0.0.0.0",
                    "port": 3000
                  }
                ],
                "radiusAccountingEnabled": false,
                "radiusEnabled": true,
                "radiusAttributeForGroupPolicies": "Filter-Id",
                "radiusFailoverPolicy": "null",
                "radiusLoadBalancingPolicy": "null",
                "ipAssignmentMode": "NAT mode",
                "adminSplashUrl": "http://example.com",
                "splashTimeout": "30 minutes",
                "walledGardenEnabled": true,
                "walledGardenRanges": "example.com",
                "minBitrate": 11,
                "bandSelection": "5 GHz band only",
                "perClientBandwidthLimitUp": 0,
                "perClientBandwidthLimitDown": 0
              }
            }
          }
        },
        "summary": "Update the attributes of an SSID",
        "tags": [
          "SSIDs"
        ]
      }
    },
    {
      "ruleId": "add-optional-object-property",
      "message": "`paths//networks/{networkId}/ssids/{number}/put/parameters/updateNetworkSsid/schema` - Optional property `radiusOverride` Added",
      "messageHtml": "Optional property <code>radiusOverride</code> Added",
      "path": "/networks/{networkId}/ssids/{number}",
      "method": "put",
      "objectPath": "paths//networks/{networkId}/ssids/{number}/put/parameters/updateNetworkSsid/schema",
      "property": "radiusOverride",
      "type": "infos",
      "name": "Changes",
      "group": "SSIDs",
      "apiDetails": {
        "description": "Update the attributes of an SSID",
        "operationId": "updateNetworkSsid",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "number",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkSsid",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the SSID"
                },
                "enabled": {
                  "type": "boolean",
                  "description": "Whether or not the SSID is enabled"
                },
                "authMode": {
                  "type": "string",
                  "enum": [
                    "open",
                    "psk",
                    "open-with-radius",
                    "8021x-meraki",
                    "8021x-radius"
                  ],
                  "description": "The association control method for the SSID ('open', 'psk', 'open-with-radius', '8021x-meraki' or '8021x-radius')"
                },
                "enterpriseAdminAccess": {
                  "type": "string",
                  "enum": [
                    "access disabled",
                    "access enabled"
                  ],
                  "description": "Whether or not an SSID is accessible by 'enterprise' administrators ('access disabled' or 'access enabled')"
                },
                "encryptionMode": {
                  "type": "string",
                  "enum": [
                    "wep",
                    "wpa"
                  ],
                  "description": "The psk encryption mode for the SSID ('wep' or 'wpa'). This param is only valid if the authMode is 'psk'"
                },
                "psk": {
                  "type": "string",
                  "description": "The passkey for the SSID. This param is only valid if the authMode is 'psk'"
                },
                "wpaEncryptionMode": {
                  "type": "string",
                  "enum": [
                    "WPA1 and WPA2",
                    "WPA2 only"
                  ],
                  "description": "The types of WPA encryption. ('WPA1 and WPA2' or 'WPA2 only')"
                },
                "splashPage": {
                  "type": "string",
                  "enum": [
                    "None",
                    "Click-through splash page",
                    "Billing",
                    "Password-protected with Meraki RADIUS",
                    "Password-protected with custom RADIUS",
                    "Password-protected with Active Directory",
                    "Password-protected with LDAP",
                    "SMS authentication",
                    "Systems Manager Sentry",
                    "Facebook Wi-Fi",
                    "Google OAuth",
                    "Sponsored guest"
                  ],
                  "description": "The type of splash page for the SSID ('None', 'Click-through splash page', 'Billing', 'Password-protected with Meraki RADIUS', 'Password-protected with custom RADIUS', 'Password-protected with Active Directory', 'Password-protected with LDAP', 'SMS authentication', 'Systems Manager Sentry', 'Facebook Wi-Fi', 'Google OAuth' or 'Sponsored guest'). This attribute is not supported for template children."
                },
                "radiusServers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "host": {
                        "type": "string",
                        "description": "IP address of your RADIUS server",
                        "required": true
                      },
                      "port": {
                        "type": "integer",
                        "description": "UDP port the RADIUS server listens on for Access-requests"
                      },
                      "secret": {
                        "type": "string",
                        "description": "RADIUS client shared secret",
                        "required": true
                      }
                    }
                  },
                  "description": "The RADIUS 802.1x servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius'"
                },
                "radiusCoaEnabled": {
                  "type": "boolean",
                  "description": "If true, Meraki devices will act as a RADIUS Dynamic Authorization Server and will respond to RADIUS Change-of-Authorization and Disconnect messages sent by the RADIUS server."
                },
                "radiusFailoverPolicy": {
                  "type": "string",
                  "enum": [
                    "Deny access",
                    "Allow access"
                  ],
                  "description": "This policy determines how authentication requests should be handled in the event that all of the configured RADIUS servers are unreachable ('Deny access' or 'Allow access')"
                },
                "radiusLoadBalancingPolicy": {
                  "type": "string",
                  "enum": [
                    "Strict priority order",
                    "Round robin"
                  ],
                  "description": "This policy determines which RADIUS server will be contacted first in an authentication attempt and the ordering of any necessary retry attempts ('Strict priority order' or 'Round robin')"
                },
                "radiusAccountingEnabled": {
                  "type": "boolean",
                  "description": "Whether or not RADIUS accounting is enabled. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius'"
                },
                "radiusAccountingServers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "host": {
                        "type": "string",
                        "description": "IP address to which the APs will send RADIUS accounting messages",
                        "required": true
                      },
                      "port": {
                        "type": "integer",
                        "description": "Port on the RADIUS server that is listening for accounting messages"
                      },
                      "secret": {
                        "type": "string",
                        "description": "Shared key used to authenticate messages between the APs and RADIUS server",
                        "required": true
                      }
                    }
                  },
                  "description": "The RADIUS accounting 802.1x servers to be used for authentication. This param is only valid if the authMode is 'open-with-radius' or '8021x-radius' and radiusAccountingEnabled is 'true'"
                },
                "radiusAttributeForGroupPolicies": {
                  "type": "string",
                  "description": "Specify the RADIUS attribute used to look up group policies ('Filter-Id', 'Reply-Message', 'Airespace-ACL-Name' or 'Aruba-User-Role'). Access points must receive this attribute in the RADIUS Access-Accept message"
                },
                "ipAssignmentMode": {
                  "type": "string",
                  "description": "The client IP assignment mode ('NAT mode', 'Bridge mode', 'Layer 3 roaming', 'Layer 3 roaming with a concentrator' or 'VPN')"
                },
                "useVlanTagging": {
                  "type": "boolean",
                  "description": "Whether or not traffic should be directed to use specific VLANs. This param is only valid if the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'"
                },
                "concentratorNetworkId": {
                  "type": "string",
                  "description": "The concentrator to use when the ipAssignmentMode is 'Layer 3 roaming with a concentrator' or 'VPN'."
                },
                "vlanId": {
                  "type": "integer",
                  "description": "The VLAN ID used for VLAN tagging. This param is only valid when the ipAssignmentMode is 'Layer 3 roaming with a concentrator' or 'VPN'"
                },
                "defaultVlanId": {
                  "type": "integer",
                  "description": "The default VLAN ID used for 'all other APs'. This param is only valid when the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'"
                },
                "apTagsAndVlanIds": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "tags": {
                        "type": "string",
                        "description": "Comma-separated list of AP tags"
                      },
                      "vlanId": {
                        "type": "integer",
                        "description": "Numerical identifier that is assigned to the VLAN"
                      }
                    }
                  },
                  "description": "The list of tags and VLAN IDs used for VLAN tagging. This param is only valid when the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'"
                },
                "walledGardenEnabled": {
                  "type": "boolean",
                  "description": "Allow access to a configurable list of IP ranges, which users may access prior to sign-on."
                },
                "walledGardenRanges": {
                  "type": "string",
                  "description": "Specify your walled garden by entering space-separated addresses, ranges using CIDR notation, domain names, and domain wildcards (e.g. 192.168.1.1/24 192.168.37.10/32 www.yahoo.com *.google.com). Meraki's splash page is automatically included in your walled garden."
                },
                "radiusOverride": {
                  "type": "boolean",
                  "description": "If true, the RADIUS response can override VLAN tag. This is not valid when ipAssignmentMode is 'NAT mode'."
                },
                "minBitrate": {
                  "type": "number",
                  "format": "float",
                  "description": "The minimum bitrate in Mbps. ('1', '2', '5.5', '6', '9', '11', '12', '18', '24', '36', '48' or '54')"
                },
                "bandSelection": {
                  "type": "string",
                  "description": "The client-serving radio frequencies. ('Dual band operation', '5 GHz band only' or 'Dual band operation with Band Steering')"
                },
                "perClientBandwidthLimitUp": {
                  "type": "integer",
                  "description": "The upload bandwidth limit in Kbps. (0 represents no limit.)"
                },
                "perClientBandwidthLimitDown": {
                  "type": "integer",
                  "description": "The download bandwidth limit in Kbps. (0 represents no limit.)"
                },
                "lanIsolationEnabled": {
                  "type": "boolean",
                  "description": "Boolean indicating whether Layer 2 LAN isolation should be enabled or disabled. Only configurable when ipAssignmentMode is 'Bridge mode'."
                }
              },
              "example": {
                "name": "My SSID",
                "enabled": true
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "number": 0,
                "name": "My SSID",
                "enabled": true,
                "splashPage": "Click-through splash page",
                "ssidAdminAccessible": false,
                "authMode": "8021x-radius",
                "encryptionMode": "wpa-eap",
                "wpaEncryptionMode": "WPA2 only",
                "radiusServers": [
                  {
                    "host": "0.0.0.0",
                    "port": 3000
                  }
                ],
                "radiusAccountingEnabled": false,
                "radiusEnabled": true,
                "radiusAttributeForGroupPolicies": "Filter-Id",
                "radiusFailoverPolicy": "null",
                "radiusLoadBalancingPolicy": "null",
                "ipAssignmentMode": "NAT mode",
                "adminSplashUrl": "http://example.com",
                "splashTimeout": "30 minutes",
                "walledGardenEnabled": true,
                "walledGardenRanges": "example.com",
                "minBitrate": 11,
                "bandSelection": "5 GHz band only",
                "perClientBandwidthLimitUp": 0,
                "perClientBandwidthLimitDown": 0
              }
            }
          }
        },
        "summary": "Update the attributes of an SSID",
        "tags": [
          "SSIDs"
        ]
      }
    },
    {
      "ruleId": "edit-summary",
      "message": "`/networks/{networkId}/staticRoutes` (get) - Summary turned from `List the static routes for this network` to `List the static routes for an MX or teleworker network`",
      "messageHtml": "Summary changed from <code>List the static routes for this network</code> to <code>List the static routes for an MX or teleworker network</code>",
      "method": "get",
      "path": "/networks/{networkId}/staticRoutes",
      "previousSummary": "List the static routes for this network",
      "currentSummary": "List the static routes for an MX or teleworker network",
      "type": "infos",
      "name": "Changes",
      "group": "MX static routes",
      "apiDetails": {
        "description": "List the static routes for an MX or teleworker network",
        "operationId": "getNetworkStaticRoutes",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "id": "d7fa4948-7921-4dfa-af6b-ae8b16c20c39",
                  "networkId": "N_24329156",
                  "name": "My route",
                  "gatewayIp": "1.2.3.5",
                  "subnet": "192.168.1.0/24",
                  "fixedIpAssignments": "{}",
                  "reservedIpRanges": "[]",
                  "enabled": true
                }
              ]
            }
          }
        },
        "summary": "List the static routes for an MX or teleworker network",
        "tags": [
          "MX static routes"
        ]
      }
    },
    {
      "ruleId": "edit-summary",
      "message": "`/networks/{networkId}/staticRoutes` (post) - Summary turned from `Add a static route` to `Add a static route for an MX or teleworker network`",
      "messageHtml": "Summary changed from <code>Add a static route</code> to <code>Add a static route for an MX or teleworker network</code>",
      "method": "post",
      "path": "/networks/{networkId}/staticRoutes",
      "previousSummary": "Add a static route",
      "currentSummary": "Add a static route for an MX or teleworker network",
      "type": "infos",
      "name": "Changes",
      "group": "MX static routes",
      "apiDetails": {
        "description": "Add a static route for an MX or teleworker network",
        "operationId": "createNetworkStaticRoute",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "createNetworkStaticRoute",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the new static route",
                  "type": "string"
                },
                "subnet": {
                  "description": "The subnet of the static route",
                  "type": "string"
                },
                "gatewayIp": {
                  "description": "The gateway IP (next hop) of the static route",
                  "type": "string"
                }
              },
              "example": {
                "name": "My route",
                "subnet": "192.168.1.0/24",
                "gatewayIp": "1.2.3.5"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "name": "My route",
                "subnet": "192.168.1.0/24",
                "gatewayIp": "1.2.3.5"
              }
            }
          }
        },
        "summary": "Add a static route for an MX or teleworker network",
        "tags": [
          "MX static routes"
        ]
      }
    },
    {
      "ruleId": "edit-summary",
      "message": "`/networks/{networkId}/staticRoutes/{srId}` (get) - Summary turned from `Return a static route` to `Return a static route for an MX or teleworker network`",
      "messageHtml": "Summary changed from <code>Return a static route</code> to <code>Return a static route for an MX or teleworker network</code>",
      "method": "get",
      "path": "/networks/{networkId}/staticRoutes/{srId}",
      "previousSummary": "Return a static route",
      "currentSummary": "Return a static route for an MX or teleworker network",
      "type": "infos",
      "name": "Changes",
      "group": "MX static routes",
      "apiDetails": {
        "description": "Return a static route for an MX or teleworker network",
        "operationId": "getNetworkStaticRoute",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "srId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "d7fa4948-7921-4dfa-af6b-ae8b16c20c39",
                "networkId": "N_24329156",
                "name": "My route",
                "gatewayIp": "1.2.3.5",
                "subnet": "192.168.1.0/24",
                "fixedIpAssignments": "{}",
                "reservedIpRanges": "[]",
                "enabled": true
              }
            }
          }
        },
        "summary": "Return a static route for an MX or teleworker network",
        "tags": [
          "MX static routes"
        ]
      }
    },
    {
      "ruleId": "edit-summary",
      "message": "`/networks/{networkId}/staticRoutes/{srId}` (put) - Summary turned from `Update a static route` to `Update a static route for an MX or teleworker network`",
      "messageHtml": "Summary changed from <code>Update a static route</code> to <code>Update a static route for an MX or teleworker network</code>",
      "method": "put",
      "path": "/networks/{networkId}/staticRoutes/{srId}",
      "previousSummary": "Update a static route",
      "currentSummary": "Update a static route for an MX or teleworker network",
      "type": "infos",
      "name": "Changes",
      "group": "MX static routes",
      "apiDetails": {
        "description": "Update a static route for an MX or teleworker network",
        "operationId": "updateNetworkStaticRoute",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "srId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkStaticRoute",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the static route",
                  "type": "string"
                },
                "subnet": {
                  "description": "The subnet of the static route",
                  "type": "string"
                },
                "gatewayIp": {
                  "description": "The gateway IP (next hop) of the static route",
                  "type": "string"
                },
                "enabled": {
                  "description": "The enabled state of the static route",
                  "type": "string"
                },
                "fixedIpAssignments": {
                  "description": "The DHCP fixed IP assignments on the static route",
                  "type": "string"
                },
                "reservedIpRanges": {
                  "description": "The DHCP reserved IP ranges on the static route",
                  "type": "string"
                }
              },
              "example": {
                "name": "My route",
                "subnet": "192.168.1.0/24",
                "fixedIpAssignments": "{}",
                "reservedIpRanges": "[]"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "d7fa4948-7921-4dfa-af6b-ae8b16c20c39",
                "networkId": "N_24329156",
                "name": "My route",
                "gatewayIp": "1.2.3.5",
                "subnet": "192.168.1.0/24",
                "fixedIpAssignments": "{}",
                "reservedIpRanges": "[]",
                "enabled": true
              }
            }
          }
        },
        "summary": "Update a static route for an MX or teleworker network",
        "tags": [
          "MX static routes"
        ]
      }
    },
    {
      "ruleId": "edit-summary",
      "message": "`/networks/{networkId}/staticRoutes/{srId}` (delete) - Summary turned from `Delete a static route from a network` to `Delete a static route from an MX or teleworker network`",
      "messageHtml": "Summary changed from <code>Delete a static route from a network</code> to <code>Delete a static route from an MX or teleworker network</code>",
      "method": "delete",
      "path": "/networks/{networkId}/staticRoutes/{srId}",
      "previousSummary": "Delete a static route from a network",
      "currentSummary": "Delete a static route from an MX or teleworker network",
      "type": "infos",
      "name": "Changes",
      "group": "MX static routes",
      "apiDetails": {
        "description": "Delete a static route from an MX or teleworker network",
        "operationId": "deleteNetworkStaticRoute",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "srId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Successful operation"
          }
        },
        "summary": "Delete a static route from an MX or teleworker network",
        "tags": [
          "MX static routes"
        ]
      }
    },
    {
      "ruleId": "add-response",
      "message": "`/networks/{networkId}/switch/settings` (get) - Response `200` added to (`100`)",
      "messageHtml": "Response property <code>vlan</code> value added:  \n      <pre><code>       \n        {\n          vlan: 100\n        }\n</code></pre>",
      "path": "/networks/{networkId}/switch/settings",
      "method": "get",
      "responseId": "200",
      "type": "infos",
      "name": "Changes",
      "group": "Switch settings",
      "apiDetails": {
        "description": "Returns the switch network settings",
        "operationId": "getNetworkSwitchSettings",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "vlan": 100,
                "useCombinedPower": false,
                "powerExceptions": [
                  {
                    "serial": "Q234-ABCD-0001",
                    "powerType": "redundant"
                  },
                  {
                    "serial": "Q234-ABCD-0002",
                    "powerType": "combined"
                  },
                  {
                    "serial": "Q234-ABCD-0003",
                    "powerType": "redundant"
                  },
                  {
                    "serial": "Q234-ABCD-0004",
                    "powerType": "useNetworkSetting"
                  }
                ]
              }
            }
          }
        },
        "summary": "Returns the switch network settings",
        "tags": [
          "Switch settings"
        ]
      }
    },
    {
      "ruleId": "add-optional-object-property",
      "message": "`paths//networks/{networkId}/switch/settings/put/parameters/updateNetworkSwitchSettings/schema` - Optional property `vlan` Added",
      "messageHtml": "Optional property <code>vlan</code> Added",
      "path": "/networks/{networkId}/switch/settings",
      "method": "put",
      "objectPath": "paths//networks/{networkId}/switch/settings/put/parameters/updateNetworkSwitchSettings/schema",
      "property": "vlan",
      "type": "infos",
      "name": "Changes",
      "group": "Switch settings",
      "apiDetails": {
        "description": "Update switch network settings",
        "operationId": "updateNetworkSwitchSettings",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkSwitchSettings",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "vlan": {
                  "type": "integer",
                  "description": "Management VLAN"
                },
                "useCombinedPower": {
                  "type": "boolean",
                  "description": "The use Combined Power as the default behavior of secondary power supplies on supported devices."
                },
                "powerExceptions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "serial": {
                        "type": "string",
                        "description": "Serial number of the switch",
                        "required": true
                      },
                      "powerType": {
                        "type": "string",
                        "enum": [
                          "combined",
                          "redundant",
                          "useNetworkSetting"
                        ],
                        "description": "Per switch exception (combined, redundant, useNetworkSetting)",
                        "required": true
                      }
                    }
                  },
                  "description": "Exceptions on a per switch basis to \"useCombinedPower\""
                }
              },
              "example": {
                "vlan": 100,
                "useCombinedPower": false,
                "powerExceptions": [
                  {
                    "serial": "Q234-ABCD-0001",
                    "powerType": "redundant"
                  },
                  {
                    "serial": "Q234-ABCD-0002",
                    "powerType": "combined"
                  },
                  {
                    "serial": "Q234-ABCD-0003",
                    "powerType": "redundant"
                  },
                  {
                    "serial": "Q234-ABCD-0004",
                    "powerType": "useNetworkSetting"
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "vlan": 100,
                "useCombinedPower": false,
                "powerExceptions": [
                  {
                    "serial": "Q234-ABCD-0001",
                    "powerType": "redundant"
                  },
                  {
                    "serial": "Q234-ABCD-0002",
                    "powerType": "combined"
                  },
                  {
                    "serial": "Q234-ABCD-0003",
                    "powerType": "redundant"
                  },
                  {
                    "serial": "Q234-ABCD-0004",
                    "powerType": "useNetworkSetting"
                  }
                ]
              }
            }
          }
        },
        "summary": "Update switch network settings",
        "tags": [
          "Switch settings"
        ]
      }
    },
    {
      "ruleId": "add-optional-param",
      "message": "`/networks/{networkId}/traffic` (get) - Optional param `t0` added",
      "messageHtml": "Optional param <code>t0</code> added",
      "path": "/networks/{networkId}/traffic",
      "method": "get",
      "param": "t0",
      "type": "infos",
      "name": "Changes",
      "group": "Networks",
      "apiDetails": {
        "description": "    The traffic analysis data for this network.\n    <a href=\"https://documentation.meraki.com/MR/Monitoring_and_Reporting/Hostname_Visibility\">Traffic Analysis with Hostname Visibility</a> must be enabled on the network.\n",
        "operationId": "getNetworkTraffic",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 30 days from today."
          },
          {
            "type": "number",
            "format": "float",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 30 days.",
            "x-example": 604800
          },
          {
            "type": "string",
            "name": "deviceType",
            "in": "query",
            "description": "    Filter the data by device type: combined (default), wireless, switch, appliance.\n    When using combined, for each rule the data will come from the device type with the most usage.\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "application": "Gmail",
                  "destination": null,
                  "protocol": "TCP",
                  "port": 443,
                  "sent": 138,
                  "recv": 61,
                  "numClients": 7,
                  "activeTime": 77000,
                  "flows": 300
                }
              ]
            }
          }
        },
        "summary": "    The traffic analysis data for this network.\n    <a href=\"https://documentation.meraki.com/MR/Monitoring_and_Reporting/Hostname_Visibility\">Traffic Analysis with Hostname Visibility</a> must be enabled on the network.\n",
        "tags": [
          "Networks"
        ]
      }
    },
    {
      "ruleId": "edit-summary",
      "message": "`/networks/{networkId}/traffic` (get) - Summary turned from `The traffic analysis data for this network.\n<a href=\"https://documentation.meraki.com/MR/Monitoring_and_Reporting/Hostname_Visibility\">Traffic Analysis with Hostname Visibility</a> must be enabled on the network.\n` to `    The traffic analysis data for this network.\n    <a href=\"https://documentation.meraki.com/MR/Monitoring_and_Reporting/Hostname_Visibility\">Traffic Analysis with Hostname Visibility</a> must be enabled on the network.\n`",
      "messageHtml": "Summary changed from <code>The traffic analysis data for this network.\n<a href=\"https://documentation.meraki.com/MR/Monitoring_and_Reporting/Hostname_Visibility\">Traffic Analysis with Hostname Visibility</a> must be enabled on the network.\n</code> to <code>    The traffic analysis data for this network.\n    <a href=\"https://documentation.meraki.com/MR/Monitoring_and_Reporting/Hostname_Visibility\">Traffic Analysis with Hostname Visibility</a> must be enabled on the network.\n</code>",
      "method": "get",
      "path": "/networks/{networkId}/traffic",
      "previousSummary": "The traffic analysis data for this network.\n<a href=\"https://documentation.meraki.com/MR/Monitoring_and_Reporting/Hostname_Visibility\">Traffic Analysis with Hostname Visibility</a> must be enabled on the network.\n",
      "currentSummary": "    The traffic analysis data for this network.\n    <a href=\"https://documentation.meraki.com/MR/Monitoring_and_Reporting/Hostname_Visibility\">Traffic Analysis with Hostname Visibility</a> must be enabled on the network.\n",
      "type": "infos",
      "name": "Changes",
      "group": "Networks",
      "apiDetails": {
        "description": "    The traffic analysis data for this network.\n    <a href=\"https://documentation.meraki.com/MR/Monitoring_and_Reporting/Hostname_Visibility\">Traffic Analysis with Hostname Visibility</a> must be enabled on the network.\n",
        "operationId": "getNetworkTraffic",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "t0",
            "in": "query",
            "description": "The beginning of the timespan for the data. The maximum lookback period is 30 days from today."
          },
          {
            "type": "number",
            "format": "float",
            "name": "timespan",
            "in": "query",
            "description": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 30 days.",
            "x-example": 604800
          },
          {
            "type": "string",
            "name": "deviceType",
            "in": "query",
            "description": "    Filter the data by device type: combined (default), wireless, switch, appliance.\n    When using combined, for each rule the data will come from the device type with the most usage.\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "application": "Gmail",
                  "destination": null,
                  "protocol": "TCP",
                  "port": 443,
                  "sent": 138,
                  "recv": 61,
                  "numClients": 7,
                  "activeTime": 77000,
                  "flows": 300
                }
              ]
            }
          }
        },
        "summary": "    The traffic analysis data for this network.\n    <a href=\"https://documentation.meraki.com/MR/Monitoring_and_Reporting/Hostname_Visibility\">Traffic Analysis with Hostname Visibility</a> must be enabled on the network.\n",
        "tags": [
          "Networks"
        ]
      }
    },
    {
      "ruleId": "delete-object-property",
      "message": "`paths//networks/{networkId}/uplinkSettings/put/parameters/updateNetworkUplinkSettings/schema/properties/bandwidthLimits` - Property `limitUp` Deleted",
      "messageHtml": "Property <code>limitUp</code> Deleted",
      "path": "/networks/{networkId}/uplinkSettings",
      "method": "put",
      "objectPath": "paths//networks/{networkId}/uplinkSettings/put/parameters/updateNetworkUplinkSettings/schema/properties/bandwidthLimits",
      "property": "limitUp",
      "type": "infos",
      "name": "Changes",
      "group": "Uplink settings",
      "apiDetails": {
        "description": "Updates the uplink settings for your MX network.",
        "operationId": "updateNetworkUplinkSettings",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkUplinkSettings",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "bandwidthLimits": {
                  "type": "object",
                  "properties": {
                    "wan1": {
                      "type": "object",
                      "properties": {
                        "limitUp": {
                          "type": "integer",
                          "description": "The maximum upload limit (integer, in Kbps). null indicates no limit"
                        },
                        "limitDown": {
                          "type": "integer",
                          "description": "The maximum download limit (integer, in Kbps). null indicates no limit"
                        }
                      },
                      "description": "The bandwidth settings for the 'wan1' uplink"
                    },
                    "wan2": {
                      "type": "object",
                      "properties": {
                        "limitUp": {
                          "type": "integer",
                          "description": "The maximum upload limit (integer, in Kbps). null indicates no limit"
                        },
                        "limitDown": {
                          "type": "integer",
                          "description": "The maximum download limit (integer, in Kbps). null indicates no limit"
                        }
                      },
                      "description": "The bandwidth settings for the 'wan2' uplink"
                    },
                    "cellular": {
                      "type": "object",
                      "properties": {
                        "limitUp": {
                          "type": "integer",
                          "description": "The maximum upload limit (integer, in Kbps). null indicates no limit"
                        },
                        "limitDown": {
                          "type": "integer",
                          "description": "The maximum download limit (integer, in Kbps). null indicates no limit"
                        }
                      },
                      "description": "The bandwidth settings for the 'cellular' uplink"
                    }
                  },
                  "description": "A mapping of uplinks to their bandwidth settings (be sure to check which uplinks are supported for your network)"
                }
              },
              "example": {
                "bandwidthLimits": {
                  "wan1": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  },
                  "wan2": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  },
                  "cellular": {
                    "limitUp": 51200,
                    "limitDown": 51200
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "bandwidthLimits": {
                  "wan1": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  },
                  "wan2": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  },
                  "cellular": {
                    "limitUp": 51200,
                    "limitDown": 51200
                  }
                }
              }
            }
          }
        },
        "summary": "Updates the uplink settings for your MX network.",
        "tags": [
          "Uplink settings"
        ]
      }
    },
    {
      "ruleId": "delete-object-property",
      "message": "`paths//networks/{networkId}/uplinkSettings/put/parameters/updateNetworkUplinkSettings/schema/properties/bandwidthLimits` - Property `limitDown` Deleted",
      "messageHtml": "Property <code>limitDown</code> Deleted",
      "path": "/networks/{networkId}/uplinkSettings",
      "method": "put",
      "objectPath": "paths//networks/{networkId}/uplinkSettings/put/parameters/updateNetworkUplinkSettings/schema/properties/bandwidthLimits",
      "property": "limitDown",
      "type": "infos",
      "name": "Changes",
      "group": "Uplink settings",
      "apiDetails": {
        "description": "Updates the uplink settings for your MX network.",
        "operationId": "updateNetworkUplinkSettings",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkUplinkSettings",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "bandwidthLimits": {
                  "type": "object",
                  "properties": {
                    "wan1": {
                      "type": "object",
                      "properties": {
                        "limitUp": {
                          "type": "integer",
                          "description": "The maximum upload limit (integer, in Kbps). null indicates no limit"
                        },
                        "limitDown": {
                          "type": "integer",
                          "description": "The maximum download limit (integer, in Kbps). null indicates no limit"
                        }
                      },
                      "description": "The bandwidth settings for the 'wan1' uplink"
                    },
                    "wan2": {
                      "type": "object",
                      "properties": {
                        "limitUp": {
                          "type": "integer",
                          "description": "The maximum upload limit (integer, in Kbps). null indicates no limit"
                        },
                        "limitDown": {
                          "type": "integer",
                          "description": "The maximum download limit (integer, in Kbps). null indicates no limit"
                        }
                      },
                      "description": "The bandwidth settings for the 'wan2' uplink"
                    },
                    "cellular": {
                      "type": "object",
                      "properties": {
                        "limitUp": {
                          "type": "integer",
                          "description": "The maximum upload limit (integer, in Kbps). null indicates no limit"
                        },
                        "limitDown": {
                          "type": "integer",
                          "description": "The maximum download limit (integer, in Kbps). null indicates no limit"
                        }
                      },
                      "description": "The bandwidth settings for the 'cellular' uplink"
                    }
                  },
                  "description": "A mapping of uplinks to their bandwidth settings (be sure to check which uplinks are supported for your network)"
                }
              },
              "example": {
                "bandwidthLimits": {
                  "wan1": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  },
                  "wan2": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  },
                  "cellular": {
                    "limitUp": 51200,
                    "limitDown": 51200
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "bandwidthLimits": {
                  "wan1": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  },
                  "wan2": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  },
                  "cellular": {
                    "limitUp": 51200,
                    "limitDown": 51200
                  }
                }
              }
            }
          }
        },
        "summary": "Updates the uplink settings for your MX network.",
        "tags": [
          "Uplink settings"
        ]
      }
    },
    {
      "ruleId": "add-optional-object-property",
      "message": "`paths//networks/{networkId}/uplinkSettings/put/parameters/updateNetworkUplinkSettings/schema/properties/bandwidthLimits` - Optional property `wan1` Added",
      "messageHtml": "Optional property <code>wan1</code> Added",
      "path": "/networks/{networkId}/uplinkSettings",
      "method": "put",
      "objectPath": "paths//networks/{networkId}/uplinkSettings/put/parameters/updateNetworkUplinkSettings/schema/properties/bandwidthLimits",
      "property": "wan1",
      "type": "infos",
      "name": "Changes",
      "group": "Uplink settings",
      "apiDetails": {
        "description": "Updates the uplink settings for your MX network.",
        "operationId": "updateNetworkUplinkSettings",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkUplinkSettings",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "bandwidthLimits": {
                  "type": "object",
                  "properties": {
                    "wan1": {
                      "type": "object",
                      "properties": {
                        "limitUp": {
                          "type": "integer",
                          "description": "The maximum upload limit (integer, in Kbps). null indicates no limit"
                        },
                        "limitDown": {
                          "type": "integer",
                          "description": "The maximum download limit (integer, in Kbps). null indicates no limit"
                        }
                      },
                      "description": "The bandwidth settings for the 'wan1' uplink"
                    },
                    "wan2": {
                      "type": "object",
                      "properties": {
                        "limitUp": {
                          "type": "integer",
                          "description": "The maximum upload limit (integer, in Kbps). null indicates no limit"
                        },
                        "limitDown": {
                          "type": "integer",
                          "description": "The maximum download limit (integer, in Kbps). null indicates no limit"
                        }
                      },
                      "description": "The bandwidth settings for the 'wan2' uplink"
                    },
                    "cellular": {
                      "type": "object",
                      "properties": {
                        "limitUp": {
                          "type": "integer",
                          "description": "The maximum upload limit (integer, in Kbps). null indicates no limit"
                        },
                        "limitDown": {
                          "type": "integer",
                          "description": "The maximum download limit (integer, in Kbps). null indicates no limit"
                        }
                      },
                      "description": "The bandwidth settings for the 'cellular' uplink"
                    }
                  },
                  "description": "A mapping of uplinks to their bandwidth settings (be sure to check which uplinks are supported for your network)"
                }
              },
              "example": {
                "bandwidthLimits": {
                  "wan1": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  },
                  "wan2": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  },
                  "cellular": {
                    "limitUp": 51200,
                    "limitDown": 51200
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "bandwidthLimits": {
                  "wan1": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  },
                  "wan2": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  },
                  "cellular": {
                    "limitUp": 51200,
                    "limitDown": 51200
                  }
                }
              }
            }
          }
        },
        "summary": "Updates the uplink settings for your MX network.",
        "tags": [
          "Uplink settings"
        ]
      }
    },
    {
      "ruleId": "add-optional-object-property",
      "message": "`paths//networks/{networkId}/uplinkSettings/put/parameters/updateNetworkUplinkSettings/schema/properties/bandwidthLimits` - Optional property `wan2` Added",
      "messageHtml": "Optional property <code>wan2</code> Added",
      "path": "/networks/{networkId}/uplinkSettings",
      "method": "put",
      "objectPath": "paths//networks/{networkId}/uplinkSettings/put/parameters/updateNetworkUplinkSettings/schema/properties/bandwidthLimits",
      "property": "wan2",
      "type": "infos",
      "name": "Changes",
      "group": "Uplink settings",
      "apiDetails": {
        "description": "Updates the uplink settings for your MX network.",
        "operationId": "updateNetworkUplinkSettings",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkUplinkSettings",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "bandwidthLimits": {
                  "type": "object",
                  "properties": {
                    "wan1": {
                      "type": "object",
                      "properties": {
                        "limitUp": {
                          "type": "integer",
                          "description": "The maximum upload limit (integer, in Kbps). null indicates no limit"
                        },
                        "limitDown": {
                          "type": "integer",
                          "description": "The maximum download limit (integer, in Kbps). null indicates no limit"
                        }
                      },
                      "description": "The bandwidth settings for the 'wan1' uplink"
                    },
                    "wan2": {
                      "type": "object",
                      "properties": {
                        "limitUp": {
                          "type": "integer",
                          "description": "The maximum upload limit (integer, in Kbps). null indicates no limit"
                        },
                        "limitDown": {
                          "type": "integer",
                          "description": "The maximum download limit (integer, in Kbps). null indicates no limit"
                        }
                      },
                      "description": "The bandwidth settings for the 'wan2' uplink"
                    },
                    "cellular": {
                      "type": "object",
                      "properties": {
                        "limitUp": {
                          "type": "integer",
                          "description": "The maximum upload limit (integer, in Kbps). null indicates no limit"
                        },
                        "limitDown": {
                          "type": "integer",
                          "description": "The maximum download limit (integer, in Kbps). null indicates no limit"
                        }
                      },
                      "description": "The bandwidth settings for the 'cellular' uplink"
                    }
                  },
                  "description": "A mapping of uplinks to their bandwidth settings (be sure to check which uplinks are supported for your network)"
                }
              },
              "example": {
                "bandwidthLimits": {
                  "wan1": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  },
                  "wan2": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  },
                  "cellular": {
                    "limitUp": 51200,
                    "limitDown": 51200
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "bandwidthLimits": {
                  "wan1": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  },
                  "wan2": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  },
                  "cellular": {
                    "limitUp": 51200,
                    "limitDown": 51200
                  }
                }
              }
            }
          }
        },
        "summary": "Updates the uplink settings for your MX network.",
        "tags": [
          "Uplink settings"
        ]
      }
    },
    {
      "ruleId": "add-optional-object-property",
      "message": "`paths//networks/{networkId}/uplinkSettings/put/parameters/updateNetworkUplinkSettings/schema/properties/bandwidthLimits` - Optional property `cellular` Added",
      "messageHtml": "Optional property <code>cellular</code> Added",
      "path": "/networks/{networkId}/uplinkSettings",
      "method": "put",
      "objectPath": "paths//networks/{networkId}/uplinkSettings/put/parameters/updateNetworkUplinkSettings/schema/properties/bandwidthLimits",
      "property": "cellular",
      "type": "infos",
      "name": "Changes",
      "group": "Uplink settings",
      "apiDetails": {
        "description": "Updates the uplink settings for your MX network.",
        "operationId": "updateNetworkUplinkSettings",
        "parameters": [
          {
            "name": "networkId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateNetworkUplinkSettings",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "bandwidthLimits": {
                  "type": "object",
                  "properties": {
                    "wan1": {
                      "type": "object",
                      "properties": {
                        "limitUp": {
                          "type": "integer",
                          "description": "The maximum upload limit (integer, in Kbps). null indicates no limit"
                        },
                        "limitDown": {
                          "type": "integer",
                          "description": "The maximum download limit (integer, in Kbps). null indicates no limit"
                        }
                      },
                      "description": "The bandwidth settings for the 'wan1' uplink"
                    },
                    "wan2": {
                      "type": "object",
                      "properties": {
                        "limitUp": {
                          "type": "integer",
                          "description": "The maximum upload limit (integer, in Kbps). null indicates no limit"
                        },
                        "limitDown": {
                          "type": "integer",
                          "description": "The maximum download limit (integer, in Kbps). null indicates no limit"
                        }
                      },
                      "description": "The bandwidth settings for the 'wan2' uplink"
                    },
                    "cellular": {
                      "type": "object",
                      "properties": {
                        "limitUp": {
                          "type": "integer",
                          "description": "The maximum upload limit (integer, in Kbps). null indicates no limit"
                        },
                        "limitDown": {
                          "type": "integer",
                          "description": "The maximum download limit (integer, in Kbps). null indicates no limit"
                        }
                      },
                      "description": "The bandwidth settings for the 'cellular' uplink"
                    }
                  },
                  "description": "A mapping of uplinks to their bandwidth settings (be sure to check which uplinks are supported for your network)"
                }
              },
              "example": {
                "bandwidthLimits": {
                  "wan1": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  },
                  "wan2": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  },
                  "cellular": {
                    "limitUp": 51200,
                    "limitDown": 51200
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "bandwidthLimits": {
                  "wan1": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  },
                  "wan2": {
                    "limitUp": 1000000,
                    "limitDown": 1000000
                  },
                  "cellular": {
                    "limitUp": 51200,
                    "limitDown": 51200
                  }
                }
              }
            }
          }
        },
        "summary": "Updates the uplink settings for your MX network.",
        "tags": [
          "Uplink settings"
        ]
      }
    },
    {
      "ruleId": "add-response",
      "message": "`/organizations` (get) - Response `200` added to (`https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview`)",
      "messageHtml": "Response property <code>url</code> value added:  \n      <pre><code>       \n        {\n          url: \"https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview\"\n        }\n</code></pre>",
      "path": "/organizations",
      "method": "get",
      "responseId": "200",
      "type": "infos",
      "name": "Changes",
      "group": "Organizations",
      "apiDetails": {
        "description": "List the organizations that the user has privileges on",
        "operationId": "getOrganizations",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "id": "2930418",
                  "name": "My organization",
                  "url": "https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview"
                }
              ]
            }
          }
        },
        "summary": "List the organizations that the user has privileges on",
        "tags": [
          "Organizations"
        ]
      }
    },
    {
      "ruleId": "add-response",
      "message": "`/organizations/{organizationId}` (get) - Response `200` added to (`https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview`)",
      "messageHtml": "Response property <code>url</code> value added:  \n      <pre><code>       \n        {\n          url: \"https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview\"\n        }\n</code></pre>",
      "path": "/organizations/{organizationId}",
      "method": "get",
      "responseId": "200",
      "type": "infos",
      "name": "Changes",
      "group": "Organizations",
      "apiDetails": {
        "description": "Return an organization",
        "operationId": "getOrganization",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "2930418",
                "name": "My organization",
                "url": "https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview"
              }
            }
          }
        },
        "summary": "Return an organization",
        "tags": [
          "Organizations"
        ]
      }
    },
    {
      "ruleId": "delete-object-property",
      "message": "`paths//organizations/{organizationId}/admins/{id}/put/parameters/updateOrganizationAdmin/schema` - Property `email` Deleted",
      "messageHtml": "Property <code>email</code> Deleted",
      "path": "/organizations/{organizationId}/admins/{id}",
      "method": "put",
      "objectPath": "paths//organizations/{organizationId}/admins/{id}/put/parameters/updateOrganizationAdmin/schema",
      "property": "email",
      "type": "infos",
      "name": "Changes",
      "group": "Admins",
      "apiDetails": {
        "description": "Update an administrator",
        "operationId": "updateOrganizationAdmin",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "updateOrganizationAdmin",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the dashboard administrator"
                },
                "orgAccess": {
                  "type": "string",
                  "enum": [
                    "full",
                    "read-only",
                    "enterprise",
                    "none"
                  ],
                  "description": "The privilege of the dashboard administrator on the organization. Can be one of 'full', 'read-only', 'enterprise' or 'none'"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "tag": {
                        "type": "string",
                        "description": "The name of the tag",
                        "required": true
                      },
                      "access": {
                        "type": "string",
                        "description": "The privilege of the dashboard administrator on the tag",
                        "required": true
                      }
                    }
                  },
                  "description": "The list of tags that the dashboard administrator has privileges on"
                },
                "networks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The network ID",
                        "required": true
                      },
                      "access": {
                        "type": "string",
                        "description": "The privilege of the dashboard administrator on the network",
                        "required": true
                      }
                    }
                  },
                  "description": "The list of networks that the dashboard administrator has privileges on"
                }
              },
              "example": {
                "name": "Miles Meraki",
                "email": "miles@meraki.com",
                "orgAccess": "none",
                "tags": [
                  {
                    "tag": "west",
                    "access": "read-only"
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": {
                "id": "212406",
                "name": "Miles Meraki",
                "email": "miles@meraki.com",
                "orgAccess": "none",
                "accountStatus": "ok",
                "twoFactorAuthEnabled": false,
                "hasApiKey": true,
                "lastActive": "2019-01-28 14:58:56 -0800",
                "tags": [
                  {
                    "tag": "west",
                    "access": "read-only"
                  }
                ],
                "networks": [
                  {
                    "id": "N_24329156",
                    "access": "full"
                  }
                ]
              }
            }
          }
        },
        "summary": "Update an administrator",
        "tags": [
          "Admins"
        ]
      }
    },
    {
      "ruleId": "add-response",
      "message": "`/organizations/{organizationId}/devices` (get) - Response `200` added to (`wireless-25-14`)",
      "messageHtml": "Response property <code>firmware</code> value added:  \n      <pre><code>       \n        {\n          firmware: \"wireless-25-14\"\n        }\n</code></pre>",
      "path": "/organizations/{organizationId}/devices",
      "method": "get",
      "responseId": "200",
      "type": "infos",
      "name": "Changes",
      "group": "Devices",
      "apiDetails": {
        "description": "List the devices in an organization",
        "operationId": "getOrganizationDevices",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "integer",
            "name": "perPage",
            "in": "query",
            "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000."
          },
          {
            "type": "string",
            "name": "startingAfter",
            "in": "query",
            "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          },
          {
            "type": "string",
            "name": "endingBefore",
            "in": "query",
            "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "headers": {
              "Link": {
                "type": "string",
                "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
              }
            },
            "examples": {
              "application/json": {
                "name": "My AP",
                "lat": 37.4180951010362,
                "lng": -122.098531723022,
                "address": "1600 Pennsylvania Ave",
                "notes": "My AP's note",
                "tags": " recently-added ",
                "networkId": "N_24329156",
                "serial": "Q234-ABCD-5678",
                "model": "MR34",
                "mac": "00:11:22:33:44:55",
                "lanIp": "1.2.3.4",
                "firmware": "wireless-25-14"
              }
            }
          }
        },
        "summary": "List the devices in an organization",
        "tags": [
          "Devices"
        ]
      }
    },
    {
      "ruleId": "add-response",
      "message": "`/organizations/{organizationId}/networks` (get) - Response `200` added to (`appliance,switch,wireless`)",
      "messageHtml": "Response property <code>productTypes</code> value added:  \n      <pre><code>       \n        {\n          productTypes: [\"appliance\",\"switch\",\"wireless\"]\n        }\n</code></pre>",
      "path": "/organizations/{organizationId}/networks",
      "method": "get",
      "responseId": "200",
      "type": "infos",
      "name": "Changes",
      "group": "Networks",
      "apiDetails": {
        "description": "List the networks in an organization",
        "operationId": "getOrganizationNetworks",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "type": "string",
            "name": "configTemplateId",
            "in": "query",
            "description": "An optional parameter that is the ID of a config template. Will return all networks bound to that template."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "object",
              "x-is-dynamic": true
            },
            "examples": {
              "application/json": [
                {
                  "id": "L_123456",
                  "organizationId": "2930418",
                  "name": "Long Island Office",
                  "timeZone": "America/Los_Angeles",
                  "tags": " tag1 tag2 ",
                  "type": "combined",
                  "productTypes": [
                    "appliance",
                    "switch",
                    "wireless"
                  ],
                  "disableMyMerakiCom": false
                }
              ]
            }
          }
        },
        "summary": "List the networks in an organization",
        "tags": [
          "Networks"
        ]
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/networks/{networkId}/connectivityMonitoringDestinations` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge get\">GET</div> \n      <i>getNetworkConnectivityMonitoringDestinations</i>\n      <br>\n      <b>Return the connectivity testing destinations for an MX network</b>\n      \n      <pre><code>{\n    &quot;destinations&quot;: [\n        {\n            &quot;ip&quot;: &quot;8.8.8.8&quot;,\n            &quot;description&quot;: &quot;Google&quot;,\n            &quot;default&quot;: false\n        },\n        {\n            &quot;ip&quot;: &quot;1.23.45.67&quot;,\n            &quot;description&quot;: &quot;test description&quot;,\n            &quot;default&quot;: true\n        },\n        {\n            &quot;ip&quot;: &quot;9.8.7.6&quot;,\n            &quot;description&quot;: null,\n            &quot;default&quot;: false\n        }\n    ]\n}</code></pre>\n      \n      <br>\n      <div class=\"mr-4 badge put\">PUT</div> \n      <i>updateNetworkConnectivityMonitoringDestinations</i>\n      <br>\n      <b>Update the connectivity testing destinations for an MX network</b>\n      \n      <pre><code>{\n    &quot;destinations&quot;: [\n        {\n            &quot;ip&quot;: &quot;8.8.8.8&quot;,\n            &quot;description&quot;: &quot;Google&quot;,\n            &quot;default&quot;: false\n        },\n        {\n            &quot;ip&quot;: &quot;1.23.45.67&quot;,\n            &quot;description&quot;: &quot;test description&quot;,\n            &quot;default&quot;: true\n        },\n        {\n            &quot;ip&quot;: &quot;9.8.7.6&quot;,\n            &quot;description&quot;: null,\n            &quot;default&quot;: false\n        }\n    ]\n}</code></pre>\n      ",
      "path": "/networks/{networkId}/connectivityMonitoringDestinations",
      "type": "infos",
      "name": "Changes",
      "group": "Connectivity monitoring destinations",
      "apiDetails": {
        "get": {
          "description": "Return the connectivity testing destinations for an MX network",
          "operationId": "getNetworkConnectivityMonitoringDestinations",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "destinations": [
                    {
                      "ip": "8.8.8.8",
                      "description": "Google",
                      "default": false
                    },
                    {
                      "ip": "1.23.45.67",
                      "description": "test description",
                      "default": true
                    },
                    {
                      "ip": "9.8.7.6",
                      "description": null,
                      "default": false
                    }
                  ]
                }
              }
            }
          },
          "summary": "Return the connectivity testing destinations for an MX network",
          "tags": [
            "Connectivity monitoring destinations"
          ]
        },
        "put": {
          "description": "Update the connectivity testing destinations for an MX network",
          "operationId": "updateNetworkConnectivityMonitoringDestinations",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "updateNetworkConnectivityMonitoringDestinations",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "destinations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "ip": {
                          "type": "string",
                          "description": "The IP address to test connectivity with",
                          "required": true
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of the testing destination. Optional, defaults to null"
                        },
                        "default": {
                          "type": "boolean",
                          "description": "Boolean indicating whether this is the default testing destination (true) or not (false). Defaults to false. Only one default is allowed"
                        }
                      }
                    },
                    "description": "The list of connectivity monitoring destinations"
                  }
                },
                "example": {
                  "destinations": [
                    {
                      "ip": "8.8.8.8",
                      "description": "Google",
                      "default": false
                    },
                    {
                      "ip": "1.23.45.67",
                      "description": "test description",
                      "default": true
                    },
                    {
                      "ip": "9.8.7.6"
                    }
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "destinations": [
                    {
                      "ip": "8.8.8.8",
                      "description": "Google",
                      "default": false
                    },
                    {
                      "ip": "1.23.45.67",
                      "description": "test description",
                      "default": true
                    },
                    {
                      "ip": "9.8.7.6",
                      "description": null,
                      "default": false
                    }
                  ]
                }
              }
            }
          },
          "summary": "Update the connectivity testing destinations for an MX network",
          "tags": [
            "Connectivity monitoring destinations"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/networks/{networkId}/events` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge get\">GET</div> \n      <i>getNetworkEvents</i>\n      <br>\n      <b>List the events for the network</b>\n      \n      <pre><code>{\n    &quot;message&quot;: null,\n    &quot;pageStartAt&quot;: &quot;2018-02-11T00:00:00.090210Z&quot;,\n    &quot;pageEndAt&quot;: &quot;2018-02-11T00:00:00.090210Z&quot;,\n    &quot;events&quot;: [\n        {\n            &quot;occurredAt&quot;: &quot;2018-02-11T00:00:00.090210Z&quot;,\n            &quot;networkId&quot;: &quot;N_24329156&quot;,\n            &quot;type&quot;: &quot;association&quot;,\n            &quot;description&quot;: &quot;802.11 association&quot;,\n            &quot;clientId&quot;: &quot;k74272e&quot;,\n            &quot;clientDescription&quot;: &quot;Miles's phone&quot;,\n            &quot;deviceSerial&quot;: &quot;Q234-ABCD-5678&quot;,\n            &quot;deviceName&quot;: &quot;My AP&quot;,\n            &quot;ssidNumber&quot;: 1,\n            &quot;ssidName&quot;: &quot;My SSID&quot;,\n            &quot;eventData&quot;: {\n                &quot;radio&quot;: &quot;1&quot;,\n                &quot;vap&quot;: &quot;1&quot;,\n                &quot;client_mac&quot;: &quot;22:33:44:55:66:77&quot;,\n                &quot;client_ip&quot;: &quot;1.2.3.4&quot;,\n                &quot;channel&quot;: &quot;36&quot;,\n                &quot;rssi&quot;: &quot;12&quot;,\n                &quot;aid&quot;: &quot;2104009183&quot;\n            }\n        }\n    ]\n}</code></pre>\n      ",
      "path": "/networks/{networkId}/events",
      "type": "infos",
      "name": "Changes",
      "group": "Events",
      "apiDetails": {
        "get": {
          "description": "List the events for the network",
          "operationId": "getNetworkEvents",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "type": "string",
              "name": "productType",
              "in": "query",
              "description": "The product type to fetch events for. This parameter is required for networks with multiple device types. Valid types are wireless, appliance, switch, systemsManager, and camera"
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "includedEventTypes",
              "in": "query",
              "description": "A list of event types. The returned events will be filtered to only include events with these types."
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              },
              "name": "excludedEventTypes",
              "in": "query",
              "description": "A list of event types. The returned events will be filtered to exclude events with these types."
            },
            {
              "type": "string",
              "name": "deviceMac",
              "in": "query",
              "description": "The MAC address of the Meraki device which the list of events will be filtered with"
            },
            {
              "type": "string",
              "name": "deviceSerial",
              "in": "query",
              "description": "The serial of the Meraki device which the list of events will be filtered with"
            },
            {
              "type": "string",
              "name": "deviceName",
              "in": "query",
              "description": "The name of the Meraki device which the list of events will be filtered with"
            },
            {
              "type": "string",
              "name": "clientIp",
              "in": "query",
              "description": "The IP of the client which the list of events will be filtered with. Only supported for track-by-IP networks."
            },
            {
              "type": "string",
              "name": "clientMac",
              "in": "query",
              "description": "The MAC address of the client which the list of events will be filtered with. Only supported for track-by-MAC networks."
            },
            {
              "type": "string",
              "name": "clientName",
              "in": "query",
              "description": "The name, or partial name, of the client which the list of events will be filtered with"
            },
            {
              "type": "string",
              "name": "smDeviceMac",
              "in": "query",
              "description": "The MAC address of the Systems Manager device which the list of events will be filtered with"
            },
            {
              "type": "string",
              "name": "smDeviceName",
              "in": "query",
              "description": "The name of the Systems Manager device which the list of events will be filtered with"
            },
            {
              "type": "integer",
              "name": "perPage",
              "in": "query",
              "description": "The number of entries per page returned. Acceptable range is 3 - 1000. Default is 10."
            },
            {
              "type": "string",
              "name": "startingAfter",
              "in": "query",
              "description": "A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
            },
            {
              "type": "string",
              "name": "endingBefore",
              "in": "query",
              "description": "A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it."
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "headers": {
                "Link": {
                  "type": "string",
                  "description": "A comma-separated list of first, last, prev, and next relative links used for subsequent paginated requests."
                }
              },
              "examples": {
                "application/json": {
                  "message": null,
                  "pageStartAt": "2018-02-11T00:00:00.090210Z",
                  "pageEndAt": "2018-02-11T00:00:00.090210Z",
                  "events": [
                    {
                      "occurredAt": "2018-02-11T00:00:00.090210Z",
                      "networkId": "N_24329156",
                      "type": "association",
                      "description": "802.11 association",
                      "clientId": "k74272e",
                      "clientDescription": "Miles's phone",
                      "deviceSerial": "Q234-ABCD-5678",
                      "deviceName": "My AP",
                      "ssidNumber": 1,
                      "ssidName": "My SSID",
                      "eventData": {
                        "radio": "1",
                        "vap": "1",
                        "client_mac": "22:33:44:55:66:77",
                        "client_ip": "1.2.3.4",
                        "channel": "36",
                        "rssi": "12",
                        "aid": "2104009183"
                      }
                    }
                  ]
                }
              }
            }
          },
          "summary": "List the events for the network",
          "tags": [
            "Events"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/networks/{networkId}/events/eventTypes` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge get\">GET</div> \n      <i>getNetworkEventsEventTypes</i>\n      <br>\n      <b>List the event type to human-readable description</b>\n      \n      <pre><code>[\n    {\n        &quot;category&quot;: &quot;802.11&quot;,\n        &quot;type&quot;: &quot;association&quot;,\n        &quot;description&quot;: &quot;802.11 association&quot;\n    }\n]</code></pre>\n      ",
      "path": "/networks/{networkId}/events/eventTypes",
      "type": "infos",
      "name": "Changes",
      "group": "Events",
      "apiDetails": {
        "get": {
          "description": "List the event type to human-readable description",
          "operationId": "getNetworkEventsEventTypes",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": [
                  {
                    "category": "802.11",
                    "type": "association",
                    "description": "802.11 association"
                  }
                ]
              }
            }
          },
          "summary": "List the event type to human-readable description",
          "tags": [
            "Events"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/networks/{networkId}/floorPlans` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge get\">GET</div> \n      <i>getNetworkFloorPlans</i>\n      <br>\n      <b>List the floor plans that belong to your network</b>\n      \n      <pre><code>[\n    {\n        &quot;floorPlanId&quot;: &quot;g_1234567&quot;,\n        &quot;imageUrl&quot;: &quot;https://meraki-na.s3.amazonaws.com/assets/...&quot;,\n        &quot;imageUrlExpiresAt&quot;: &quot;2019-06-11 16:04:54 +00:00&quot;,\n        &quot;imageExtension&quot;: &quot;png&quot;,\n        &quot;imageMd5&quot;: &quot;2a9edd3f4ffd80130c647d13eacb59f3&quot;,\n        &quot;name&quot;: &quot;HQ Floor Plan&quot;,\n        &quot;devices&quot;: [\n            {\n                &quot;name&quot;: &quot;My AP&quot;,\n                &quot;lat&quot;: 37.4180951010362,\n                &quot;lng&quot;: -122.098531723022,\n                &quot;serial&quot;: &quot;Q234-ABCD-5678&quot;,\n                &quot;mac&quot;: &quot;00:11:22:33:44:55&quot;,\n                &quot;model&quot;: &quot;MR34&quot;,\n                &quot;address&quot;: &quot;1600 Pennsylvania Ave&quot;,\n                &quot;notes&quot;: &quot;My AP's note&quot;,\n                &quot;lanIp&quot;: &quot;1.2.3.4&quot;,\n                &quot;tags&quot;: &quot; recently-added &quot;,\n                &quot;networkId&quot;: &quot;N_24329156&quot;,\n                &quot;beaconIdParams&quot;: {\n                    &quot;uuid&quot;: &quot;00000000-0000-0000-0000-000000000000&quot;,\n                    &quot;major&quot;: 5,\n                    &quot;minor&quot;: 3\n                },\n                &quot;firmware&quot;: &quot;wireless-25-14&quot;,\n                &quot;floorPlanId&quot;: &quot;g_1234567&quot;\n            }\n        ],\n        &quot;width&quot;: 100,\n        &quot;height&quot;: 150,\n        &quot;center&quot;: {\n            &quot;lat&quot;: 37.770040510499996,\n            &quot;lng&quot;: -122.38714009525\n        },\n        &quot;bottomLeftCorner&quot;: {\n            &quot;lat&quot;: 37.7696461495,\n            &quot;lng&quot;: -122.3880815506\n        },\n        &quot;bottomRightCorner&quot;: {\n            &quot;lat&quot;: 37.771524649766654,\n            &quot;lng&quot;: -122.38795275055205\n        },\n        &quot;topLeftCorner&quot;: {\n            &quot;lat&quot;: 37.769700101836364,\n            &quot;lng&quot;: -122.3888684251381\n        },\n        &quot;topRightCorner&quot;: {\n            &quot;lat&quot;: 37.77157860210302,\n            &quot;lng&quot;: -122.38873962509012\n        }\n    }\n]</code></pre>\n      \n      <br>\n      <div class=\"mr-4 badge post\">POST</div> \n      <i>createNetworkFloorPlan</i>\n      <br>\n      <b>Upload a floor plan</b>\n      \n      <pre><code>{\n    &quot;floorPlanId&quot;: &quot;g_1234567&quot;,\n    &quot;imageUrl&quot;: &quot;https://meraki-na.s3.amazonaws.com/assets/...&quot;,\n    &quot;imageUrlExpiresAt&quot;: &quot;2019-06-11 16:04:54 +00:00&quot;,\n    &quot;imageExtension&quot;: &quot;png&quot;,\n    &quot;imageMd5&quot;: &quot;2a9edd3f4ffd80130c647d13eacb59f3&quot;,\n    &quot;name&quot;: &quot;HQ Floor Plan&quot;,\n    &quot;devices&quot;: [\n        {\n            &quot;name&quot;: &quot;My AP&quot;,\n            &quot;lat&quot;: 37.4180951010362,\n            &quot;lng&quot;: -122.098531723022,\n            &quot;serial&quot;: &quot;Q234-ABCD-5678&quot;,\n            &quot;mac&quot;: &quot;00:11:22:33:44:55&quot;,\n            &quot;model&quot;: &quot;MR34&quot;,\n            &quot;address&quot;: &quot;1600 Pennsylvania Ave&quot;,\n            &quot;notes&quot;: &quot;My AP's note&quot;,\n            &quot;lanIp&quot;: &quot;1.2.3.4&quot;,\n            &quot;tags&quot;: &quot; recently-added &quot;,\n            &quot;networkId&quot;: &quot;N_24329156&quot;,\n            &quot;beaconIdParams&quot;: {\n                &quot;uuid&quot;: &quot;00000000-0000-0000-0000-000000000000&quot;,\n                &quot;major&quot;: 5,\n                &quot;minor&quot;: 3\n            },\n            &quot;firmware&quot;: &quot;wireless-25-14&quot;,\n            &quot;floorPlanId&quot;: &quot;g_1234567&quot;\n        }\n    ],\n    &quot;width&quot;: 100,\n    &quot;height&quot;: 150,\n    &quot;center&quot;: {\n        &quot;lat&quot;: 37.770040510499996,\n        &quot;lng&quot;: -122.38714009525\n    },\n    &quot;bottomLeftCorner&quot;: {\n        &quot;lat&quot;: 37.7696461495,\n        &quot;lng&quot;: -122.3880815506\n    },\n    &quot;bottomRightCorner&quot;: {\n        &quot;lat&quot;: 37.771524649766654,\n        &quot;lng&quot;: -122.38795275055205\n    },\n    &quot;topLeftCorner&quot;: {\n        &quot;lat&quot;: 37.769700101836364,\n        &quot;lng&quot;: -122.3888684251381\n    },\n    &quot;topRightCorner&quot;: {\n        &quot;lat&quot;: 37.77157860210302,\n        &quot;lng&quot;: -122.38873962509012\n    }\n}</code></pre>\n      ",
      "path": "/networks/{networkId}/floorPlans",
      "type": "infos",
      "name": "Changes",
      "group": "Floorplans",
      "apiDetails": {
        "get": {
          "description": "List the floor plans that belong to your network",
          "operationId": "getNetworkFloorPlans",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": [
                  {
                    "floorPlanId": "g_1234567",
                    "imageUrl": "https://meraki-na.s3.amazonaws.com/assets/...",
                    "imageUrlExpiresAt": "2019-06-11 16:04:54 +00:00",
                    "imageExtension": "png",
                    "imageMd5": "2a9edd3f4ffd80130c647d13eacb59f3",
                    "name": "HQ Floor Plan",
                    "devices": [
                      {
                        "name": "My AP",
                        "lat": 37.4180951010362,
                        "lng": -122.098531723022,
                        "serial": "Q234-ABCD-5678",
                        "mac": "00:11:22:33:44:55",
                        "model": "MR34",
                        "address": "1600 Pennsylvania Ave",
                        "notes": "My AP's note",
                        "lanIp": "1.2.3.4",
                        "tags": " recently-added ",
                        "networkId": "N_24329156",
                        "beaconIdParams": {
                          "uuid": "00000000-0000-0000-0000-000000000000",
                          "major": 5,
                          "minor": 3
                        },
                        "firmware": "wireless-25-14",
                        "floorPlanId": "g_1234567"
                      }
                    ],
                    "width": 100,
                    "height": 150,
                    "center": {
                      "lat": 37.770040510499996,
                      "lng": -122.38714009525
                    },
                    "bottomLeftCorner": {
                      "lat": 37.7696461495,
                      "lng": -122.3880815506
                    },
                    "bottomRightCorner": {
                      "lat": 37.771524649766654,
                      "lng": -122.38795275055205
                    },
                    "topLeftCorner": {
                      "lat": 37.769700101836364,
                      "lng": -122.3888684251381
                    },
                    "topRightCorner": {
                      "lat": 37.77157860210302,
                      "lng": -122.38873962509012
                    }
                  }
                ]
              }
            }
          },
          "summary": "List the floor plans that belong to your network",
          "tags": [
            "Floorplans"
          ]
        },
        "post": {
          "description": "Upload a floor plan",
          "operationId": "createNetworkFloorPlan",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "createNetworkFloorPlan",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of your floor plan.",
                    "required": true
                  },
                  "center": {
                    "type": "object",
                    "properties": {
                      "lat": {
                        "type": "number",
                        "format": "float",
                        "description": "Latitude"
                      },
                      "lng": {
                        "type": "number",
                        "format": "float",
                        "description": "Longitude"
                      }
                    },
                    "description": "The longitude and latitude of the center of your floor plan. The 'center' or two adjacent corners (e.g. 'topLeftCorner' and 'bottomLeftCorner') must be specified. If 'center' is specified, the floor plan is placed over that point with no rotation. If two adjacent corners are specified, the floor plan is rotated to line up with the two specified points. The aspect ratio of the floor plan's image is preserved regardless of which corners/center are specified. (This means if that more than two corners are specified, only two corners may be used to preserve the floor plan's aspect ratio.). No two points can have the same latitude, longitude pair."
                  },
                  "bottomLeftCorner": {
                    "type": "object",
                    "properties": {
                      "lat": {
                        "type": "number",
                        "format": "float",
                        "description": "Latitude"
                      },
                      "lng": {
                        "type": "number",
                        "format": "float",
                        "description": "Longitude"
                      }
                    },
                    "description": "The longitude and latitude of the bottom left corner of your floor plan."
                  },
                  "bottomRightCorner": {
                    "type": "object",
                    "properties": {
                      "lat": {
                        "type": "number",
                        "format": "float",
                        "description": "Latitude"
                      },
                      "lng": {
                        "type": "number",
                        "format": "float",
                        "description": "Longitude"
                      }
                    },
                    "description": "The longitude and latitude of the bottom right corner of your floor plan."
                  },
                  "topLeftCorner": {
                    "type": "object",
                    "properties": {
                      "lat": {
                        "type": "number",
                        "format": "float",
                        "description": "Latitude"
                      },
                      "lng": {
                        "type": "number",
                        "format": "float",
                        "description": "Longitude"
                      }
                    },
                    "description": "The longitude and latitude of the top left corner of your floor plan."
                  },
                  "topRightCorner": {
                    "type": "object",
                    "properties": {
                      "lat": {
                        "type": "number",
                        "format": "float",
                        "description": "Latitude"
                      },
                      "lng": {
                        "type": "number",
                        "format": "float",
                        "description": "Longitude"
                      }
                    },
                    "description": "The longitude and latitude of the top right corner of your floor plan."
                  },
                  "imageContents": {
                    "type": "string",
                    "format": "byte",
                    "description": "The file contents (a base 64 encoded string) of your image. Supported formats are PNG, GIF, and JPG. Note that all images are saved as PNG files, regardless of the format they are uploaded in.",
                    "required": true
                  }
                },
                "example": {}
              },
              "required": true
            }
          ],
          "responses": {
            "201": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "floorPlanId": "g_1234567",
                  "imageUrl": "https://meraki-na.s3.amazonaws.com/assets/...",
                  "imageUrlExpiresAt": "2019-06-11 16:04:54 +00:00",
                  "imageExtension": "png",
                  "imageMd5": "2a9edd3f4ffd80130c647d13eacb59f3",
                  "name": "HQ Floor Plan",
                  "devices": [
                    {
                      "name": "My AP",
                      "lat": 37.4180951010362,
                      "lng": -122.098531723022,
                      "serial": "Q234-ABCD-5678",
                      "mac": "00:11:22:33:44:55",
                      "model": "MR34",
                      "address": "1600 Pennsylvania Ave",
                      "notes": "My AP's note",
                      "lanIp": "1.2.3.4",
                      "tags": " recently-added ",
                      "networkId": "N_24329156",
                      "beaconIdParams": {
                        "uuid": "00000000-0000-0000-0000-000000000000",
                        "major": 5,
                        "minor": 3
                      },
                      "firmware": "wireless-25-14",
                      "floorPlanId": "g_1234567"
                    }
                  ],
                  "width": 100,
                  "height": 150,
                  "center": {
                    "lat": 37.770040510499996,
                    "lng": -122.38714009525
                  },
                  "bottomLeftCorner": {
                    "lat": 37.7696461495,
                    "lng": -122.3880815506
                  },
                  "bottomRightCorner": {
                    "lat": 37.771524649766654,
                    "lng": -122.38795275055205
                  },
                  "topLeftCorner": {
                    "lat": 37.769700101836364,
                    "lng": -122.3888684251381
                  },
                  "topRightCorner": {
                    "lat": 37.77157860210302,
                    "lng": -122.38873962509012
                  }
                }
              }
            }
          },
          "summary": "Upload a floor plan",
          "tags": [
            "Floorplans"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/networks/{networkId}/floorPlans/{floorPlanId}` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge get\">GET</div> \n      <i>getNetworkFloorPlan</i>\n      <br>\n      <b>Find a floor plan by ID</b>\n      \n      <pre><code>{\n    &quot;floorPlanId&quot;: &quot;g_1234567&quot;,\n    &quot;imageUrl&quot;: &quot;https://meraki-na.s3.amazonaws.com/assets/...&quot;,\n    &quot;imageUrlExpiresAt&quot;: &quot;2019-06-11 16:04:54 +00:00&quot;,\n    &quot;imageExtension&quot;: &quot;png&quot;,\n    &quot;imageMd5&quot;: &quot;2a9edd3f4ffd80130c647d13eacb59f3&quot;,\n    &quot;name&quot;: &quot;HQ Floor Plan&quot;,\n    &quot;devices&quot;: [\n        {\n            &quot;name&quot;: &quot;My AP&quot;,\n            &quot;lat&quot;: 37.4180951010362,\n            &quot;lng&quot;: -122.098531723022,\n            &quot;serial&quot;: &quot;Q234-ABCD-5678&quot;,\n            &quot;mac&quot;: &quot;00:11:22:33:44:55&quot;,\n            &quot;model&quot;: &quot;MR34&quot;,\n            &quot;address&quot;: &quot;1600 Pennsylvania Ave&quot;,\n            &quot;notes&quot;: &quot;My AP's note&quot;,\n            &quot;lanIp&quot;: &quot;1.2.3.4&quot;,\n            &quot;tags&quot;: &quot; recently-added &quot;,\n            &quot;networkId&quot;: &quot;N_24329156&quot;,\n            &quot;beaconIdParams&quot;: {\n                &quot;uuid&quot;: &quot;00000000-0000-0000-0000-000000000000&quot;,\n                &quot;major&quot;: 5,\n                &quot;minor&quot;: 3\n            },\n            &quot;firmware&quot;: &quot;wireless-25-14&quot;,\n            &quot;floorPlanId&quot;: &quot;g_1234567&quot;\n        }\n    ],\n    &quot;width&quot;: 100,\n    &quot;height&quot;: 150,\n    &quot;center&quot;: {\n        &quot;lat&quot;: 37.770040510499996,\n        &quot;lng&quot;: -122.38714009525\n    },\n    &quot;bottomLeftCorner&quot;: {\n        &quot;lat&quot;: 37.7696461495,\n        &quot;lng&quot;: -122.3880815506\n    },\n    &quot;bottomRightCorner&quot;: {\n        &quot;lat&quot;: 37.771524649766654,\n        &quot;lng&quot;: -122.38795275055205\n    },\n    &quot;topLeftCorner&quot;: {\n        &quot;lat&quot;: 37.769700101836364,\n        &quot;lng&quot;: -122.3888684251381\n    },\n    &quot;topRightCorner&quot;: {\n        &quot;lat&quot;: 37.77157860210302,\n        &quot;lng&quot;: -122.38873962509012\n    }\n}</code></pre>\n      \n      <br>\n      <div class=\"mr-4 badge put\">PUT</div> \n      <i>updateNetworkFloorPlan</i>\n      <br>\n      <b>Update a floor plan's geolocation and other meta data</b>\n      \n      <pre><code>{\n    &quot;floorPlanId&quot;: &quot;g_1234567&quot;,\n    &quot;imageUrl&quot;: &quot;https://meraki-na.s3.amazonaws.com/assets/...&quot;,\n    &quot;imageUrlExpiresAt&quot;: &quot;2019-06-11 16:04:54 +00:00&quot;,\n    &quot;imageExtension&quot;: &quot;png&quot;,\n    &quot;imageMd5&quot;: &quot;2a9edd3f4ffd80130c647d13eacb59f3&quot;,\n    &quot;name&quot;: &quot;HQ Floor Plan&quot;,\n    &quot;devices&quot;: [\n        {\n            &quot;name&quot;: &quot;My AP&quot;,\n            &quot;lat&quot;: 37.4180951010362,\n            &quot;lng&quot;: -122.098531723022,\n            &quot;serial&quot;: &quot;Q234-ABCD-5678&quot;,\n            &quot;mac&quot;: &quot;00:11:22:33:44:55&quot;,\n            &quot;model&quot;: &quot;MR34&quot;,\n            &quot;address&quot;: &quot;1600 Pennsylvania Ave&quot;,\n            &quot;notes&quot;: &quot;My AP's note&quot;,\n            &quot;lanIp&quot;: &quot;1.2.3.4&quot;,\n            &quot;tags&quot;: &quot; recently-added &quot;,\n            &quot;networkId&quot;: &quot;N_24329156&quot;,\n            &quot;beaconIdParams&quot;: {\n                &quot;uuid&quot;: &quot;00000000-0000-0000-0000-000000000000&quot;,\n                &quot;major&quot;: 5,\n                &quot;minor&quot;: 3\n            },\n            &quot;firmware&quot;: &quot;wireless-25-14&quot;,\n            &quot;floorPlanId&quot;: &quot;g_1234567&quot;\n        }\n    ],\n    &quot;width&quot;: 100,\n    &quot;height&quot;: 150,\n    &quot;center&quot;: {\n        &quot;lat&quot;: 37.770040510499996,\n        &quot;lng&quot;: -122.38714009525\n    },\n    &quot;bottomLeftCorner&quot;: {\n        &quot;lat&quot;: 37.7696461495,\n        &quot;lng&quot;: -122.3880815506\n    },\n    &quot;bottomRightCorner&quot;: {\n        &quot;lat&quot;: 37.771524649766654,\n        &quot;lng&quot;: -122.38795275055205\n    },\n    &quot;topLeftCorner&quot;: {\n        &quot;lat&quot;: 37.769700101836364,\n        &quot;lng&quot;: -122.3888684251381\n    },\n    &quot;topRightCorner&quot;: {\n        &quot;lat&quot;: 37.77157860210302,\n        &quot;lng&quot;: -122.38873962509012\n    }\n}</code></pre>\n      \n      <br>\n      <div class=\"mr-4 badge delete\">DELETE</div> \n      <i>deleteNetworkFloorPlan</i>\n      <br>\n      <b>Destroy a floor plan</b>\n      \n      <pre><code></code></pre>\n      ",
      "path": "/networks/{networkId}/floorPlans/{floorPlanId}",
      "type": "infos",
      "name": "Changes",
      "group": "Floorplans",
      "apiDetails": {
        "get": {
          "description": "Find a floor plan by ID",
          "operationId": "getNetworkFloorPlan",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "floorPlanId",
              "in": "path",
              "type": "string",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "floorPlanId": "g_1234567",
                  "imageUrl": "https://meraki-na.s3.amazonaws.com/assets/...",
                  "imageUrlExpiresAt": "2019-06-11 16:04:54 +00:00",
                  "imageExtension": "png",
                  "imageMd5": "2a9edd3f4ffd80130c647d13eacb59f3",
                  "name": "HQ Floor Plan",
                  "devices": [
                    {
                      "name": "My AP",
                      "lat": 37.4180951010362,
                      "lng": -122.098531723022,
                      "serial": "Q234-ABCD-5678",
                      "mac": "00:11:22:33:44:55",
                      "model": "MR34",
                      "address": "1600 Pennsylvania Ave",
                      "notes": "My AP's note",
                      "lanIp": "1.2.3.4",
                      "tags": " recently-added ",
                      "networkId": "N_24329156",
                      "beaconIdParams": {
                        "uuid": "00000000-0000-0000-0000-000000000000",
                        "major": 5,
                        "minor": 3
                      },
                      "firmware": "wireless-25-14",
                      "floorPlanId": "g_1234567"
                    }
                  ],
                  "width": 100,
                  "height": 150,
                  "center": {
                    "lat": 37.770040510499996,
                    "lng": -122.38714009525
                  },
                  "bottomLeftCorner": {
                    "lat": 37.7696461495,
                    "lng": -122.3880815506
                  },
                  "bottomRightCorner": {
                    "lat": 37.771524649766654,
                    "lng": -122.38795275055205
                  },
                  "topLeftCorner": {
                    "lat": 37.769700101836364,
                    "lng": -122.3888684251381
                  },
                  "topRightCorner": {
                    "lat": 37.77157860210302,
                    "lng": -122.38873962509012
                  }
                }
              }
            }
          },
          "summary": "Find a floor plan by ID",
          "tags": [
            "Floorplans"
          ]
        },
        "put": {
          "description": "Update a floor plan's geolocation and other meta data",
          "operationId": "updateNetworkFloorPlan",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "floorPlanId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "updateNetworkFloorPlan",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of your floor plan."
                  },
                  "center": {
                    "type": "object",
                    "properties": {
                      "lat": {
                        "type": "number",
                        "format": "float",
                        "description": "Latitude"
                      },
                      "lng": {
                        "type": "number",
                        "format": "float",
                        "description": "Longitude"
                      }
                    },
                    "description": "The longitude and latitude of the center of your floor plan. If you want to change the geolocation data of your floor plan, either the 'center' or two adjacent corners (e.g. 'topLeftCorner' and 'bottomLeftCorner') must be specified. If 'center' is specified, the floor plan is placed over that point with no rotation. If two adjacent corners are specified, the floor plan is rotated to line up with the two specified points. The aspect ratio of the floor plan's image is preserved regardless of which corners/center are specified. (This means if that more than two corners are specified, only two corners may be used to preserve the floor plan's aspect ratio.). No two points can have the same latitude, longitude pair."
                  },
                  "bottomLeftCorner": {
                    "type": "object",
                    "properties": {
                      "lat": {
                        "type": "number",
                        "format": "float",
                        "description": "Latitude"
                      },
                      "lng": {
                        "type": "number",
                        "format": "float",
                        "description": "Longitude"
                      }
                    },
                    "description": "The longitude and latitude of the bottom left corner of your floor plan."
                  },
                  "bottomRightCorner": {
                    "type": "object",
                    "properties": {
                      "lat": {
                        "type": "number",
                        "format": "float",
                        "description": "Latitude"
                      },
                      "lng": {
                        "type": "number",
                        "format": "float",
                        "description": "Longitude"
                      }
                    },
                    "description": "The longitude and latitude of the bottom right corner of your floor plan."
                  },
                  "topLeftCorner": {
                    "type": "object",
                    "properties": {
                      "lat": {
                        "type": "number",
                        "format": "float",
                        "description": "Latitude"
                      },
                      "lng": {
                        "type": "number",
                        "format": "float",
                        "description": "Longitude"
                      }
                    },
                    "description": "The longitude and latitude of the top left corner of your floor plan."
                  },
                  "topRightCorner": {
                    "type": "object",
                    "properties": {
                      "lat": {
                        "type": "number",
                        "format": "float",
                        "description": "Latitude"
                      },
                      "lng": {
                        "type": "number",
                        "format": "float",
                        "description": "Longitude"
                      }
                    },
                    "description": "The longitude and latitude of the top right corner of your floor plan."
                  },
                  "imageContents": {
                    "type": "string",
                    "format": "byte",
                    "description": "The file contents (a base 64 encoded string) of your new image. Supported formats are PNG, GIF, and JPG. Note that all images are saved as PNG files, regardless of the format they are uploaded in. If you upload a new image, and you do NOT specify any new geolocation fields ('center, 'topLeftCorner', etc), the floor plan will be recentered with no rotation in order to maintain the aspect ratio of your new image."
                  }
                },
                "example": {}
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "floorPlanId": "g_1234567",
                  "imageUrl": "https://meraki-na.s3.amazonaws.com/assets/...",
                  "imageUrlExpiresAt": "2019-06-11 16:04:54 +00:00",
                  "imageExtension": "png",
                  "imageMd5": "2a9edd3f4ffd80130c647d13eacb59f3",
                  "name": "HQ Floor Plan",
                  "devices": [
                    {
                      "name": "My AP",
                      "lat": 37.4180951010362,
                      "lng": -122.098531723022,
                      "serial": "Q234-ABCD-5678",
                      "mac": "00:11:22:33:44:55",
                      "model": "MR34",
                      "address": "1600 Pennsylvania Ave",
                      "notes": "My AP's note",
                      "lanIp": "1.2.3.4",
                      "tags": " recently-added ",
                      "networkId": "N_24329156",
                      "beaconIdParams": {
                        "uuid": "00000000-0000-0000-0000-000000000000",
                        "major": 5,
                        "minor": 3
                      },
                      "firmware": "wireless-25-14",
                      "floorPlanId": "g_1234567"
                    }
                  ],
                  "width": 100,
                  "height": 150,
                  "center": {
                    "lat": 37.770040510499996,
                    "lng": -122.38714009525
                  },
                  "bottomLeftCorner": {
                    "lat": 37.7696461495,
                    "lng": -122.3880815506
                  },
                  "bottomRightCorner": {
                    "lat": 37.771524649766654,
                    "lng": -122.38795275055205
                  },
                  "topLeftCorner": {
                    "lat": 37.769700101836364,
                    "lng": -122.3888684251381
                  },
                  "topRightCorner": {
                    "lat": 37.77157860210302,
                    "lng": -122.38873962509012
                  }
                }
              }
            }
          },
          "summary": "Update a floor plan's geolocation and other meta data",
          "tags": [
            "Floorplans"
          ]
        },
        "delete": {
          "description": "Destroy a floor plan",
          "operationId": "deleteNetworkFloorPlan",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "floorPlanId",
              "in": "path",
              "type": "string",
              "required": true
            }
          ],
          "responses": {
            "204": {
              "description": "Successful operation"
            }
          },
          "summary": "Destroy a floor plan",
          "tags": [
            "Floorplans"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/networks/{networkId}/sm/device/{deviceId}/refreshDetails` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge post\">POST</div> \n      <i>refreshNetworkSmDeviceDetails</i>\n      <br>\n      <b>Refresh the details of a device</b>\n      \n      <pre><code></code></pre>\n      ",
      "path": "/networks/{networkId}/sm/device/{deviceId}/refreshDetails",
      "type": "infos",
      "name": "Changes",
      "group": "SM",
      "apiDetails": {
        "post": {
          "description": "Refresh the details of a device",
          "operationId": "refreshNetworkSmDeviceDetails",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "deviceId",
              "in": "path",
              "type": "string",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation"
            }
          },
          "summary": "Refresh the details of a device",
          "tags": [
            "SM"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/networks/{networkId}/switch/settings/mtu` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge get\">GET</div> \n      <i>getNetworkSwitchSettingsMtu</i>\n      <br>\n      <b>Return the MTU configuration</b>\n      \n      <pre><code>{\n    &quot;defaultMtuSize&quot;: 9578,\n    &quot;overrides&quot;: [\n        {\n            &quot;switches&quot;: [\n                &quot;Q234-ABCD-0001&quot;,\n                &quot;Q234-ABCD-0002&quot;,\n                &quot;Q234-ABCD-0003&quot;\n            ],\n            &quot;mtuSize&quot;: 1500\n        },\n        {\n            &quot;switchProfiles&quot;: [\n                &quot;1284392014819&quot;,\n                &quot;2983092129865&quot;\n            ],\n            &quot;mtuSize&quot;: 1600\n        }\n    ]\n}</code></pre>\n      \n      <br>\n      <div class=\"mr-4 badge put\">PUT</div> \n      <i>updateNetworkSwitchSettingsMtu</i>\n      <br>\n      <b>Update the MTU configuration</b>\n      \n      <pre><code>{\n    &quot;defaultMtuSize&quot;: 9578,\n    &quot;overrides&quot;: [\n        {\n            &quot;switches&quot;: [\n                &quot;Q234-ABCD-0001&quot;,\n                &quot;Q234-ABCD-0002&quot;,\n                &quot;Q234-ABCD-0003&quot;\n            ],\n            &quot;mtuSize&quot;: 1500\n        },\n        {\n            &quot;switchProfiles&quot;: [\n                &quot;1284392014819&quot;,\n                &quot;2983092129865&quot;\n            ],\n            &quot;mtuSize&quot;: 1600\n        }\n    ]\n}</code></pre>\n      ",
      "path": "/networks/{networkId}/switch/settings/mtu",
      "type": "infos",
      "name": "Changes",
      "group": "Switch settings",
      "apiDetails": {
        "get": {
          "description": "Return the MTU configuration",
          "operationId": "getNetworkSwitchSettingsMtu",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "defaultMtuSize": 9578,
                  "overrides": [
                    {
                      "switches": [
                        "Q234-ABCD-0001",
                        "Q234-ABCD-0002",
                        "Q234-ABCD-0003"
                      ],
                      "mtuSize": 1500
                    },
                    {
                      "switchProfiles": [
                        "1284392014819",
                        "2983092129865"
                      ],
                      "mtuSize": 1600
                    }
                  ]
                }
              }
            }
          },
          "summary": "Return the MTU configuration",
          "tags": [
            "Switch settings"
          ]
        },
        "put": {
          "description": "Update the MTU configuration",
          "operationId": "updateNetworkSwitchSettingsMtu",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "updateNetworkSwitchSettingsMtu",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "defaultMtuSize": {
                    "type": "integer",
                    "description": "MTU size for the entire network. Default value is 9578."
                  },
                  "overrides": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "switches": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of switch serials. Applicable only for switch network."
                        },
                        "switchProfiles": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of switch profile IDs. Applicable only for template network."
                        },
                        "mtuSize": {
                          "type": "integer",
                          "description": "MTU size for the switches or switch profiles.",
                          "required": true
                        }
                      }
                    },
                    "description": "Override MTU size for individual switches or switch profiles. An empty array will clear overrides."
                  }
                },
                "example": {
                  "defaultMtuSize": 9578,
                  "overrides": [
                    {
                      "switches": [
                        "Q234-ABCD-0001",
                        "Q234-ABCD-0002",
                        "Q234-ABCD-0003"
                      ],
                      "mtuSize": 1500
                    },
                    {
                      "switchProfiles": [
                        "1284392014819",
                        "2983092129865"
                      ],
                      "mtuSize": 1600
                    }
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "defaultMtuSize": 9578,
                  "overrides": [
                    {
                      "switches": [
                        "Q234-ABCD-0001",
                        "Q234-ABCD-0002",
                        "Q234-ABCD-0003"
                      ],
                      "mtuSize": 1500
                    },
                    {
                      "switchProfiles": [
                        "1284392014819",
                        "2983092129865"
                      ],
                      "mtuSize": 1600
                    }
                  ]
                }
              }
            }
          },
          "summary": "Update the MTU configuration",
          "tags": [
            "Switch settings"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/networks/{networkId}/switch/settings/qosRules` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge get\">GET</div> \n      <i>getNetworkSwitchSettingsQosRules</i>\n      <br>\n      <b>List quality of service rules</b>\n      \n      <pre><code>[\n    {\n        &quot;id&quot;: &quot;1284392014819&quot;,\n        &quot;vlan&quot;: 100,\n        &quot;protocol&quot;: &quot;TCP&quot;,\n        &quot;srcPort&quot;: 2000,\n        &quot;srcPortRange&quot;: null,\n        &quot;dstPort&quot;: null,\n        &quot;dstPortRange&quot;: &quot;3000-3100&quot;,\n        &quot;dscp&quot;: 0\n    }\n]</code></pre>\n      \n      <br>\n      <div class=\"mr-4 badge post\">POST</div> \n      <i>createNetworkSwitchSettingsQosRule</i>\n      <br>\n      <b>Add a quality of service rule</b>\n      \n      <pre><code>{\n    &quot;id&quot;: &quot;1284392014819&quot;,\n    &quot;vlan&quot;: 100,\n    &quot;protocol&quot;: &quot;TCP&quot;,\n    &quot;srcPort&quot;: 2000,\n    &quot;srcPortRange&quot;: null,\n    &quot;dstPort&quot;: null,\n    &quot;dstPortRange&quot;: &quot;3000-3100&quot;,\n    &quot;dscp&quot;: 0\n}</code></pre>\n      ",
      "path": "/networks/{networkId}/switch/settings/qosRules",
      "type": "infos",
      "name": "Changes",
      "group": "Switch settings",
      "apiDetails": {
        "get": {
          "description": "List quality of service rules",
          "operationId": "getNetworkSwitchSettingsQosRules",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": [
                  {
                    "id": "1284392014819",
                    "vlan": 100,
                    "protocol": "TCP",
                    "srcPort": 2000,
                    "srcPortRange": null,
                    "dstPort": null,
                    "dstPortRange": "3000-3100",
                    "dscp": 0
                  }
                ]
              }
            }
          },
          "summary": "List quality of service rules",
          "tags": [
            "Switch settings"
          ]
        },
        "post": {
          "description": "Add a quality of service rule",
          "operationId": "createNetworkSwitchSettingsQosRule",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "createNetworkSwitchSettingsQosRule",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "vlan": {
                    "type": "integer",
                    "description": "The VLAN of the incoming packet. A null value will match any VLAN.",
                    "required": true
                  },
                  "protocol": {
                    "type": "string",
                    "enum": [
                      "ANY",
                      "TCP",
                      "UDP"
                    ],
                    "description": "The protocol of the incoming packet. Can be one of \"ANY\", \"TCP\" or \"UDP\". Default value is \"ANY\""
                  },
                  "srcPort": {
                    "type": "integer",
                    "description": "The source port of the incoming packet. Applicable only if protocol is TCP or UDP."
                  },
                  "srcPortRange": {
                    "type": "string",
                    "description": "The source port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80"
                  },
                  "dstPort": {
                    "type": "integer",
                    "description": "The destination port of the incoming packet. Applicable only if protocol is TCP or UDP."
                  },
                  "dstPortRange": {
                    "type": "string",
                    "description": "The destination port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80"
                  },
                  "dscp": {
                    "type": "integer",
                    "description": "DSCP tag. Set this to -1 to trust incoming DSCP. Default value is 0"
                  }
                },
                "example": {
                  "vlan": 100,
                  "protocol": "TCP",
                  "srcPort": 2000,
                  "srcPortRange": null,
                  "dstPort": null,
                  "dstPortRange": "3000-3100",
                  "dscp": 0
                }
              },
              "required": true
            }
          ],
          "responses": {
            "201": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "id": "1284392014819",
                  "vlan": 100,
                  "protocol": "TCP",
                  "srcPort": 2000,
                  "srcPortRange": null,
                  "dstPort": null,
                  "dstPortRange": "3000-3100",
                  "dscp": 0
                }
              }
            }
          },
          "summary": "Add a quality of service rule",
          "tags": [
            "Switch settings"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/networks/{networkId}/switch/settings/qosRules/order` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge get\">GET</div> \n      <i>getNetworkSwitchSettingsQosRulesOrder</i>\n      <br>\n      <b>Return the quality of service rule IDs by order in which they will be processed by the switch</b>\n      \n      <pre><code>{\n    &quot;ruleIds&quot;: [\n        &quot;1284392014819&quot;,\n        &quot;2983092129865&quot;\n    ]\n}</code></pre>\n      \n      <br>\n      <div class=\"mr-4 badge put\">PUT</div> \n      <i>updateNetworkSwitchSettingsQosRulesOrder</i>\n      <br>\n      <b>Update the order in which the rules should be processed by the switch</b>\n      \n      <pre><code>{\n    &quot;ruleIds&quot;: [\n        &quot;1284392014819&quot;,\n        &quot;2983092129865&quot;\n    ]\n}</code></pre>\n      ",
      "path": "/networks/{networkId}/switch/settings/qosRules/order",
      "type": "infos",
      "name": "Changes",
      "group": "Switch settings",
      "apiDetails": {
        "get": {
          "description": "Return the quality of service rule IDs by order in which they will be processed by the switch",
          "operationId": "getNetworkSwitchSettingsQosRulesOrder",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "ruleIds": [
                    "1284392014819",
                    "2983092129865"
                  ]
                }
              }
            }
          },
          "summary": "Return the quality of service rule IDs by order in which they will be processed by the switch",
          "tags": [
            "Switch settings"
          ]
        },
        "put": {
          "description": "Update the order in which the rules should be processed by the switch",
          "operationId": "updateNetworkSwitchSettingsQosRulesOrder",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "updateNetworkSwitchSettingsQosRulesOrder",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "ruleIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "A list of quality of service rule IDs arranged in order in which they should be processed by the switch.",
                    "required": true
                  }
                },
                "example": {
                  "ruleIds": [
                    "1284392014819",
                    "2983092129865"
                  ]
                }
              },
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "ruleIds": [
                    "1284392014819",
                    "2983092129865"
                  ]
                }
              }
            }
          },
          "summary": "Update the order in which the rules should be processed by the switch",
          "tags": [
            "Switch settings"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/networks/{networkId}/switch/settings/qosRules/{qosRuleId}` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge get\">GET</div> \n      <i>getNetworkSwitchSettingsQosRule</i>\n      <br>\n      <b>Return a quality of service rule</b>\n      \n      <pre><code>{\n    &quot;id&quot;: &quot;1284392014819&quot;,\n    &quot;vlan&quot;: 100,\n    &quot;protocol&quot;: &quot;TCP&quot;,\n    &quot;srcPort&quot;: 2000,\n    &quot;srcPortRange&quot;: null,\n    &quot;dstPort&quot;: null,\n    &quot;dstPortRange&quot;: &quot;3000-3100&quot;,\n    &quot;dscp&quot;: 0\n}</code></pre>\n      \n      <br>\n      <div class=\"mr-4 badge put\">PUT</div> \n      <i>updateNetworkSwitchSettingsQosRule</i>\n      <br>\n      <b>Update a quality of service rule</b>\n      \n      <pre><code>{\n    &quot;id&quot;: &quot;1284392014819&quot;,\n    &quot;vlan&quot;: 100,\n    &quot;protocol&quot;: &quot;TCP&quot;,\n    &quot;srcPort&quot;: 2000,\n    &quot;srcPortRange&quot;: null,\n    &quot;dstPort&quot;: null,\n    &quot;dstPortRange&quot;: &quot;3000-3100&quot;,\n    &quot;dscp&quot;: 0\n}</code></pre>\n      \n      <br>\n      <div class=\"mr-4 badge delete\">DELETE</div> \n      <i>deleteNetworkSwitchSettingsQosRule</i>\n      <br>\n      <b>Delete a quality of service rule</b>\n      \n      <pre><code></code></pre>\n      ",
      "path": "/networks/{networkId}/switch/settings/qosRules/{qosRuleId}",
      "type": "infos",
      "name": "Changes",
      "group": "Switch settings",
      "apiDetails": {
        "get": {
          "description": "Return a quality of service rule",
          "operationId": "getNetworkSwitchSettingsQosRule",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "qosRuleId",
              "in": "path",
              "type": "string",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "id": "1284392014819",
                  "vlan": 100,
                  "protocol": "TCP",
                  "srcPort": 2000,
                  "srcPortRange": null,
                  "dstPort": null,
                  "dstPortRange": "3000-3100",
                  "dscp": 0
                }
              }
            }
          },
          "summary": "Return a quality of service rule",
          "tags": [
            "Switch settings"
          ]
        },
        "delete": {
          "description": "Delete a quality of service rule",
          "operationId": "deleteNetworkSwitchSettingsQosRule",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "qosRuleId",
              "in": "path",
              "type": "string",
              "required": true
            }
          ],
          "responses": {
            "204": {
              "description": "Successful operation"
            }
          },
          "summary": "Delete a quality of service rule",
          "tags": [
            "Switch settings"
          ]
        },
        "put": {
          "description": "Update a quality of service rule",
          "operationId": "updateNetworkSwitchSettingsQosRule",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "qosRuleId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "updateNetworkSwitchSettingsQosRule",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "vlan": {
                    "type": "integer",
                    "description": "The VLAN of the incoming packet. A null value will match any VLAN."
                  },
                  "protocol": {
                    "type": "string",
                    "enum": [
                      "ANY",
                      "TCP",
                      "UDP"
                    ],
                    "description": "The protocol of the incoming packet. Can be one of \"ANY\", \"TCP\" or \"UDP\". Default value is \"ANY\"."
                  },
                  "srcPort": {
                    "type": "integer",
                    "description": "The source port of the incoming packet. Applicable only if protocol is TCP or UDP."
                  },
                  "srcPortRange": {
                    "type": "string",
                    "description": "The source port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80"
                  },
                  "dstPort": {
                    "type": "integer",
                    "description": "The destination port of the incoming packet. Applicable only if protocol is TCP or UDP."
                  },
                  "dstPortRange": {
                    "type": "string",
                    "description": "The destination port range of the incoming packet. Applicable only if protocol is set to TCP or UDP. Example: 70-80"
                  },
                  "dscp": {
                    "type": "integer",
                    "description": "DSCP tag that should be assigned to incoming packet. Set this to -1 to trust incoming DSCP. Default value is 0."
                  }
                },
                "example": {
                  "vlan": 100,
                  "protocol": "TCP",
                  "srcPort": 2000,
                  "srcPortRange": null,
                  "dstPort": null,
                  "dstPortRange": "3000-3100",
                  "dscp": 0
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "id": "1284392014819",
                  "vlan": 100,
                  "protocol": "TCP",
                  "srcPort": 2000,
                  "srcPortRange": null,
                  "dstPort": null,
                  "dstPortRange": "3000-3100",
                  "dscp": 0
                }
              }
            }
          },
          "summary": "Update a quality of service rule",
          "tags": [
            "Switch settings"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/networks/{networkId}/switch/settings/stormControl` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge get\">GET</div> \n      <i>getNetworkSwitchSettingsStormControl</i>\n      <br>\n      <b>Return the global enhanced storm control configuration</b>\n      \n      <pre><code>{\n    &quot;broadcastThreshold&quot;: 30,\n    &quot;multicastThreshold&quot;: 30,\n    &quot;unknownUnicastThreshold&quot;: 30\n}</code></pre>\n      \n      <br>\n      <div class=\"mr-4 badge put\">PUT</div> \n      <i>updateNetworkSwitchSettingsStormControl</i>\n      <br>\n      <b>Update the global enhanced storm control configuration</b>\n      \n      <pre><code>{\n    &quot;broadcastThreshold&quot;: 30,\n    &quot;multicastThreshold&quot;: 30,\n    &quot;unknownUnicastThreshold&quot;: 30\n}</code></pre>\n      ",
      "path": "/networks/{networkId}/switch/settings/stormControl",
      "type": "infos",
      "name": "Changes",
      "group": "Switch settings",
      "apiDetails": {
        "get": {
          "description": "Return the global enhanced storm control configuration",
          "operationId": "getNetworkSwitchSettingsStormControl",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "broadcastThreshold": 30,
                  "multicastThreshold": 30,
                  "unknownUnicastThreshold": 30
                }
              }
            }
          },
          "summary": "Return the global enhanced storm control configuration",
          "tags": [
            "Switch settings"
          ]
        },
        "put": {
          "description": "Update the global enhanced storm control configuration",
          "operationId": "updateNetworkSwitchSettingsStormControl",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "updateNetworkSwitchSettingsStormControl",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "broadcastThreshold": {
                    "type": "integer",
                    "description": "Percentage (1 to 99) of total available port bandwidth for broadcast traffic type. Default value 100 percent rate is to clear the configuration."
                  },
                  "multicastThreshold": {
                    "type": "integer",
                    "description": "Percentage (1 to 99) of total available port bandwidth for multicast traffic type. Default value 100 percent rate is to clear the configuration."
                  },
                  "unknownUnicastThreshold": {
                    "type": "integer",
                    "description": "Percentage (1 to 99) of total available port bandwidth for unknown unicast (dlf-destination lookup failure) traffic type. Default value 100 percent rate is to clear the configuration."
                  }
                },
                "example": {
                  "broadcastThreshold": 30,
                  "multicastThreshold": 30,
                  "unknownUnicastThreshold": 30
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "broadcastThreshold": 30,
                  "multicastThreshold": 30,
                  "unknownUnicastThreshold": 30
                }
              }
            }
          },
          "summary": "Update the global enhanced storm control configuration",
          "tags": [
            "Switch settings"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/networks/{networkId}/switch/settings/stp` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge get\">GET</div> \n      <i>getNetworkSwitchSettingsStp</i>\n      <br>\n      <b>Returns STP settings</b>\n      \n      <pre><code>{\n    &quot;rstpEnabled&quot;: true,\n    &quot;stpBridgePriority&quot;: [\n        {\n            &quot;switches&quot;: [\n                &quot;Q234-ABCD-0001&quot;,\n                &quot;Q234-ABCD-0002&quot;,\n                &quot;Q234-ABCD-0003&quot;\n            ],\n            &quot;stpPriority&quot;: 4096\n        },\n        {\n            &quot;stacks&quot;: [\n                &quot;789102&quot;,\n                &quot;123456&quot;,\n                &quot;129102&quot;\n            ],\n            &quot;stpPriority&quot;: 28672\n        }\n    ]\n}</code></pre>\n      \n      <br>\n      <div class=\"mr-4 badge put\">PUT</div> \n      <i>updateNetworkSwitchSettingsStp</i>\n      <br>\n      <b>Updates STP settings</b>\n      \n      <pre><code>{\n    &quot;rstpEnabled&quot;: true,\n    &quot;stpBridgePriority&quot;: [\n        {\n            &quot;switches&quot;: [\n                &quot;Q234-ABCD-0001&quot;,\n                &quot;Q234-ABCD-0002&quot;,\n                &quot;Q234-ABCD-0003&quot;\n            ],\n            &quot;stpPriority&quot;: 4096\n        },\n        {\n            &quot;stacks&quot;: [\n                &quot;789102&quot;,\n                &quot;123456&quot;,\n                &quot;129102&quot;\n            ],\n            &quot;stpPriority&quot;: 28672\n        }\n    ]\n}</code></pre>\n      ",
      "path": "/networks/{networkId}/switch/settings/stp",
      "type": "infos",
      "name": "Changes",
      "group": "Switch settings",
      "apiDetails": {
        "get": {
          "description": "Returns STP settings",
          "operationId": "getNetworkSwitchSettingsStp",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "rstpEnabled": true,
                  "stpBridgePriority": [
                    {
                      "switches": [
                        "Q234-ABCD-0001",
                        "Q234-ABCD-0002",
                        "Q234-ABCD-0003"
                      ],
                      "stpPriority": 4096
                    },
                    {
                      "stacks": [
                        "789102",
                        "123456",
                        "129102"
                      ],
                      "stpPriority": 28672
                    }
                  ]
                }
              }
            }
          },
          "summary": "Returns STP settings",
          "tags": [
            "Switch settings"
          ]
        },
        "put": {
          "description": "Updates STP settings",
          "operationId": "updateNetworkSwitchSettingsStp",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "updateNetworkSwitchSettingsStp",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "rstpEnabled": {
                    "type": "boolean",
                    "description": "The spanning tree protocol status in network"
                  },
                  "stpBridgePriority": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "switchProfiles": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of switch profile IDs"
                        },
                        "switches": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of switch serial numbers"
                        },
                        "stacks": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of stack IDs"
                        },
                        "stpPriority": {
                          "type": "integer",
                          "description": "STP priority for switch, stacks, or switch profiles",
                          "required": true
                        }
                      }
                    },
                    "description": "STP bridge priority for switches/stacks or switch profiles. An empty array will clear the STP bridge priority settings."
                  }
                },
                "example": {
                  "rstpEnabled": true,
                  "stpBridgePriority": [
                    {
                      "switches": [
                        "Q234-ABCD-0001",
                        "Q234-ABCD-0002",
                        "Q234-ABCD-0003"
                      ],
                      "stpPriority": 4096
                    },
                    {
                      "stacks": [
                        "789102",
                        "123456",
                        "129102"
                      ],
                      "stpPriority": 28672
                    }
                  ]
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "rstpEnabled": true,
                  "stpBridgePriority": [
                    {
                      "switches": [
                        "Q234-ABCD-0001",
                        "Q234-ABCD-0002",
                        "Q234-ABCD-0003"
                      ],
                      "stpPriority": 4096
                    },
                    {
                      "stacks": [
                        "789102",
                        "123456",
                        "129102"
                      ],
                      "stpPriority": 28672
                    }
                  ]
                }
              }
            }
          },
          "summary": "Updates STP settings",
          "tags": [
            "Switch settings"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/networks/{networkId}/wireless/settings` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge get\">GET</div> \n      <i>getNetworkWirelessSettings</i>\n      <br>\n      <b>Return the wireless settings for a network</b>\n      \n      <pre><code>{\n    &quot;meshingEnabled&quot;: true,\n    &quot;ipv6BridgeEnabled&quot;: false,\n    &quot;locationAnalyticsEnabled&quot;: false\n}</code></pre>\n      \n      <br>\n      <div class=\"mr-4 badge put\">PUT</div> \n      <i>updateNetworkWirelessSettings</i>\n      <br>\n      <b>Update the wireless settings for a network</b>\n      \n      <pre><code>{\n    &quot;meshingEnabled&quot;: true,\n    &quot;ipv6BridgeEnabled&quot;: false,\n    &quot;locationAnalyticsEnabled&quot;: false\n}</code></pre>\n      ",
      "path": "/networks/{networkId}/wireless/settings",
      "type": "infos",
      "name": "Changes",
      "group": "Wireless settings",
      "apiDetails": {
        "get": {
          "description": "Return the wireless settings for a network",
          "operationId": "getNetworkWirelessSettings",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "meshingEnabled": true,
                  "ipv6BridgeEnabled": false,
                  "locationAnalyticsEnabled": false
                }
              }
            }
          },
          "summary": "Return the wireless settings for a network",
          "tags": [
            "Wireless settings"
          ]
        },
        "put": {
          "description": "Update the wireless settings for a network",
          "operationId": "updateNetworkWirelessSettings",
          "parameters": [
            {
              "name": "networkId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "updateNetworkWirelessSettings",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "meshingEnabled": {
                    "type": "boolean",
                    "description": "Toggle for enabling or disabling meshing in a network"
                  },
                  "ipv6BridgeEnabled": {
                    "type": "boolean",
                    "description": "Toggle for enabling or disabling IPv6 bridging in a network (Note: if enabled, SSIDs must also be configured to use bridge mode)"
                  },
                  "locationAnalyticsEnabled": {
                    "type": "boolean",
                    "description": "Toggle for enabling or disabling location analytics for your network"
                  }
                },
                "example": {
                  "meshingEnabled": true,
                  "ipv6BridgeEnabled": false,
                  "locationAnalyticsEnabled": false
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "meshingEnabled": true,
                  "ipv6BridgeEnabled": false,
                  "locationAnalyticsEnabled": false
                }
              }
            }
          },
          "summary": "Update the wireless settings for a network",
          "tags": [
            "Wireless settings"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/organizations/{organizationId}/brandingPolicies` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge get\">GET</div> \n      <i>getOrganizationBrandingPolicies</i>\n      <br>\n      <b>List the branding policies of an organization</b>\n      \n      <pre><code>[\n    {\n        &quot;brandingPolicyId&quot;: &quot;456&quot;,\n        &quot;name&quot;: &quot;My Branding Policy&quot;,\n        &quot;enabled&quot;: true,\n        &quot;adminSettings&quot;: {\n            &quot;appliesTo&quot;: &quot;All admins of networks...&quot;,\n            &quot;values&quot;: [\n                &quot;N_1234&quot;,\n                &quot;L_5678&quot;\n            ]\n        },\n        &quot;helpSettings&quot;: {\n            &quot;helpTab&quot;: &quot;show&quot;,\n            &quot;getHelpSubtab&quot;: &quot;default or inherit&quot;,\n            &quot;communitySubtab&quot;: &quot;show&quot;,\n            &quot;casesSubtab&quot;: &quot;hide&quot;,\n            &quot;dataProtectionRequestsSubtab&quot;: &quot;default or inherit&quot;,\n            &quot;getHelpSubtabKnowledgeBaseSearch&quot;: &quot;&lt;h1&gt;Some custom HTML content&lt;/h1&gt;&quot;,\n            &quot;universalSearchKnowledgeBaseSearch&quot;: &quot;hide&quot;,\n            &quot;ciscoMerakiProductDocumentation&quot;: &quot;show&quot;,\n            &quot;supportContactInfo&quot;: &quot;show&quot;,\n            &quot;newFeaturesSubtab&quot;: &quot;show&quot;,\n            &quot;firewallInfoSubtab&quot;: &quot;hide&quot;,\n            &quot;apiDocsSubtab&quot;: &quot;default or inherit&quot;,\n            &quot;hardwareReplacementsSubtab&quot;: &quot;hide&quot;,\n            &quot;smForums&quot;: &quot;hide&quot;\n        }\n    }\n]</code></pre>\n      \n      <br>\n      <div class=\"mr-4 badge post\">POST</div> \n      <i>createOrganizationBrandingPolicy</i>\n      <br>\n      <b>Add a new branding policy to an organization</b>\n      \n      <pre><code>{\n    &quot;brandingPolicyId&quot;: &quot;456&quot;,\n    &quot;name&quot;: &quot;My Branding Policy&quot;,\n    &quot;enabled&quot;: true,\n    &quot;adminSettings&quot;: {\n        &quot;appliesTo&quot;: &quot;All admins of networks...&quot;,\n        &quot;values&quot;: [\n            &quot;N_1234&quot;,\n            &quot;L_5678&quot;\n        ]\n    },\n    &quot;helpSettings&quot;: {\n        &quot;helpTab&quot;: &quot;show&quot;,\n        &quot;getHelpSubtab&quot;: &quot;default or inherit&quot;,\n        &quot;communitySubtab&quot;: &quot;show&quot;,\n        &quot;casesSubtab&quot;: &quot;hide&quot;,\n        &quot;dataProtectionRequestsSubtab&quot;: &quot;default or inherit&quot;,\n        &quot;getHelpSubtabKnowledgeBaseSearch&quot;: &quot;&lt;h1&gt;Some custom HTML content&lt;/h1&gt;&quot;,\n        &quot;universalSearchKnowledgeBaseSearch&quot;: &quot;hide&quot;,\n        &quot;ciscoMerakiProductDocumentation&quot;: &quot;show&quot;,\n        &quot;supportContactInfo&quot;: &quot;show&quot;,\n        &quot;newFeaturesSubtab&quot;: &quot;show&quot;,\n        &quot;firewallInfoSubtab&quot;: &quot;hide&quot;,\n        &quot;apiDocsSubtab&quot;: &quot;default or inherit&quot;,\n        &quot;hardwareReplacementsSubtab&quot;: &quot;hide&quot;,\n        &quot;smForums&quot;: &quot;hide&quot;\n    }\n}</code></pre>\n      ",
      "path": "/organizations/{organizationId}/brandingPolicies",
      "type": "infos",
      "name": "Changes",
      "group": "Dashboard branding policies",
      "apiDetails": {
        "get": {
          "description": "List the branding policies of an organization",
          "operationId": "getOrganizationBrandingPolicies",
          "parameters": [
            {
              "name": "organizationId",
              "in": "path",
              "type": "string",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": [
                  {
                    "brandingPolicyId": "456",
                    "name": "My Branding Policy",
                    "enabled": true,
                    "adminSettings": {
                      "appliesTo": "All admins of networks...",
                      "values": [
                        "N_1234",
                        "L_5678"
                      ]
                    },
                    "helpSettings": {
                      "helpTab": "show",
                      "getHelpSubtab": "default or inherit",
                      "communitySubtab": "show",
                      "casesSubtab": "hide",
                      "dataProtectionRequestsSubtab": "default or inherit",
                      "getHelpSubtabKnowledgeBaseSearch": "<h1>Some custom HTML content</h1>",
                      "universalSearchKnowledgeBaseSearch": "hide",
                      "ciscoMerakiProductDocumentation": "show",
                      "supportContactInfo": "show",
                      "newFeaturesSubtab": "show",
                      "firewallInfoSubtab": "hide",
                      "apiDocsSubtab": "default or inherit",
                      "hardwareReplacementsSubtab": "hide",
                      "smForums": "hide"
                    }
                  }
                ]
              }
            }
          },
          "summary": "List the branding policies of an organization",
          "tags": [
            "Dashboard branding policies"
          ]
        },
        "post": {
          "description": "Add a new branding policy to an organization",
          "operationId": "createOrganizationBrandingPolicy",
          "parameters": [
            {
              "name": "organizationId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "createOrganizationBrandingPolicy",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the Dashboard branding policy.",
                    "required": true
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Boolean indicating whether this policy is enabled.",
                    "required": true
                  },
                  "adminSettings": {
                    "type": "object",
                    "properties": {
                      "appliesTo": {
                        "type": "string",
                        "enum": [
                          "All organization admins",
                          "All enterprise admins",
                          "All network admins",
                          "All admins of networks...",
                          "All admins of networks tagged...",
                          "Specific admins...",
                          "All admins",
                          "All SAML admins"
                        ],
                        "description": "Which kinds of admins this policy applies to. Can be one of 'All organization admins', 'All enterprise admins', 'All network admins', 'All admins of networks...', 'All admins of networks tagged...', 'Specific admins...', 'All admins' or 'All SAML admins'."
                      },
                      "values": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "    If 'appliesTo' is set to one of 'Specific admins...', 'All admins of networks...' or 'All admins of networks tagged...', then you must specify this 'values' property to provide the set of\n    entities to apply the branding policy to. For 'Specific admins...', specify an array of admin IDs. For 'All admins of\n    networks...', specify an array of network IDs and/or configuration template IDs. For 'All admins of networks tagged...',\n    specify an array of tag names.\n"
                      }
                    },
                    "description": "Settings for describing which kinds of admins this policy applies to.",
                    "required": true
                  },
                  "helpSettings": {
                    "type": "object",
                    "properties": {
                      "helpTab": {
                        "type": "string",
                        "enum": [
                          "default or inherit",
                          "hide",
                          "show"
                        ],
                        "description": "    The Help tab, under which all support information resides. If this tab is hidden, no other 'Help' branding\n    customizations will be visible. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                      },
                      "getHelpSubtab": {
                        "type": "string",
                        "enum": [
                          "default or inherit",
                          "hide",
                          "show"
                        ],
                        "description": "    The 'Help -> Get Help' subtab on which Cisco Meraki KB, Product Manuals, and Support/Case Information are displayed. Note\n    that if this subtab is hidden, branding customizations for the KB on 'Get help', Cisco Meraki product documentation,\n    and support contact info will not be visible. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                      },
                      "communitySubtab": {
                        "type": "string",
                        "enum": [
                          "default or inherit",
                          "hide",
                          "show"
                        ],
                        "description": "    The 'Help -> Community' subtab which provides a link to Meraki Community. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                      },
                      "casesSubtab": {
                        "type": "string",
                        "enum": [
                          "default or inherit",
                          "hide",
                          "show"
                        ],
                        "description": "    The 'Help -> Cases' Dashboard subtab on which Cisco Meraki support cases for this organization can be managed. Can be one\n    of 'default or inherit', 'hide' or 'show'.\n"
                      },
                      "dataProtectionRequestsSubtab": {
                        "type": "string",
                        "enum": [
                          "default or inherit",
                          "hide",
                          "show"
                        ],
                        "description": "    The 'Help -> Data protection requests' Dashboard subtab on which requests to delete, restrict, or export end-user data can\n    be audited. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                      },
                      "getHelpSubtabKnowledgeBaseSearch": {
                        "type": "string",
                        "description": "    The KB search box which appears on the Help page. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.\n"
                      },
                      "universalSearchKnowledgeBaseSearch": {
                        "type": "string",
                        "enum": [
                          "default or inherit",
                          "hide",
                          "show"
                        ],
                        "description": "    The universal search box always visible on Dashboard will, by default, present results from the Meraki KB. This configures\n    whether these Meraki KB results should be returned. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                      },
                      "ciscoMerakiProductDocumentation": {
                        "type": "string",
                        "description": "    The 'Product Manuals' section of the 'Help -> Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.\n"
                      },
                      "supportContactInfo": {
                        "type": "string",
                        "description": "    The 'Contact Meraki Support' section of the 'Help -> Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.\n"
                      },
                      "newFeaturesSubtab": {
                        "type": "string",
                        "enum": [
                          "default or inherit",
                          "hide",
                          "show"
                        ],
                        "description": "    The 'Help -> New features' subtab where new Dashboard features are detailed. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                      },
                      "firewallInfoSubtab": {
                        "type": "string",
                        "enum": [
                          "default or inherit",
                          "hide",
                          "show"
                        ],
                        "description": "    The 'Help -> Firewall info' subtab where necessary upstream firewall rules for communication to the Cisco Meraki cloud are\n    listed. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                      },
                      "apiDocsSubtab": {
                        "type": "string",
                        "enum": [
                          "default or inherit",
                          "hide",
                          "show"
                        ],
                        "description": "    The 'Help -> API docs' subtab where a detailed description of the Dashboard API is listed. Can be one of\n    'default or inherit', 'hide' or 'show'.\n"
                      },
                      "hardwareReplacementsSubtab": {
                        "type": "string",
                        "enum": [
                          "default or inherit",
                          "hide",
                          "show"
                        ],
                        "description": "    The 'Help -> Replacement info' subtab where important information regarding device replacements is detailed. Can be one of\n    'default or inherit', 'hide' or 'show'.\n"
                      },
                      "smForums": {
                        "type": "string",
                        "enum": [
                          "default or inherit",
                          "hide",
                          "show"
                        ],
                        "description": "    The 'SM Forums' subtab which links to community-based support for Cisco Meraki Systems Manager. Only configurable for\n    organizations that contain Systems Manager networks. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                      }
                    },
                    "description": "    Settings for describing the modifications to various Help page features. Each property in this object accepts one of\n    'default or inherit' (do not modify functionality), 'hide' (remove the section from Dashboard), or 'show' (always show\n    the section on Dashboard). Some properties in this object also accept custom HTML used to replace the section on\n    Dashboard; see the documentation for each property to see the allowed values.\n Each property defaults to 'default or inherit' when not provided."
                  }
                },
                "example": {
                  "brandingPolicyId": "456",
                  "name": "My Branding Policy",
                  "enabled": true,
                  "adminSettings": {
                    "appliesTo": "All admins of networks...",
                    "values": [
                      "N_1234",
                      "L_5678"
                    ]
                  },
                  "helpSettings": {
                    "helpTab": "show",
                    "getHelpSubtab": "default or inherit",
                    "communitySubtab": "show",
                    "casesSubtab": "hide",
                    "dataProtectionRequestsSubtab": "default or inherit",
                    "getHelpSubtabKnowledgeBaseSearch": "<h1>Some custom HTML content</h1>",
                    "universalSearchKnowledgeBaseSearch": "hide",
                    "ciscoMerakiProductDocumentation": "show",
                    "supportContactInfo": "show",
                    "newFeaturesSubtab": "show",
                    "firewallInfoSubtab": "hide",
                    "apiDocsSubtab": "default or inherit",
                    "hardwareReplacementsSubtab": "hide",
                    "smForums": "hide"
                  }
                }
              },
              "required": true
            }
          ],
          "responses": {
            "201": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "brandingPolicyId": "456",
                  "name": "My Branding Policy",
                  "enabled": true,
                  "adminSettings": {
                    "appliesTo": "All admins of networks...",
                    "values": [
                      "N_1234",
                      "L_5678"
                    ]
                  },
                  "helpSettings": {
                    "helpTab": "show",
                    "getHelpSubtab": "default or inherit",
                    "communitySubtab": "show",
                    "casesSubtab": "hide",
                    "dataProtectionRequestsSubtab": "default or inherit",
                    "getHelpSubtabKnowledgeBaseSearch": "<h1>Some custom HTML content</h1>",
                    "universalSearchKnowledgeBaseSearch": "hide",
                    "ciscoMerakiProductDocumentation": "show",
                    "supportContactInfo": "show",
                    "newFeaturesSubtab": "show",
                    "firewallInfoSubtab": "hide",
                    "apiDocsSubtab": "default or inherit",
                    "hardwareReplacementsSubtab": "hide",
                    "smForums": "hide"
                  }
                }
              }
            }
          },
          "summary": "Add a new branding policy to an organization",
          "tags": [
            "Dashboard branding policies"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/organizations/{organizationId}/brandingPolicies/priorities` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge get\">GET</div> \n      <i>getOrganizationBrandingPoliciesPriorities</i>\n      <br>\n      <b>Return the branding policy IDs of an organization in priority order. IDs are ordered in ascending order of priority (IDs later in the array have higher priority).</b>\n      \n      <pre><code>{\n    &quot;brandingPolicyIds&quot;: [\n        &quot;123&quot;,\n        &quot;456&quot;,\n        &quot;789&quot;\n    ]\n}</code></pre>\n      \n      <br>\n      <div class=\"mr-4 badge put\">PUT</div> \n      <i>updateOrganizationBrandingPoliciesPriorities</i>\n      <br>\n      <b>Update the priority ordering of an organization's branding policies.</b>\n      \n      <pre><code>{\n    &quot;brandingPolicyIds&quot;: [\n        &quot;123&quot;,\n        &quot;456&quot;,\n        &quot;789&quot;\n    ]\n}</code></pre>\n      ",
      "path": "/organizations/{organizationId}/brandingPolicies/priorities",
      "type": "infos",
      "name": "Changes",
      "group": "Dashboard branding policies",
      "apiDetails": {
        "get": {
          "description": "Return the branding policy IDs of an organization in priority order. IDs are ordered in ascending order of priority (IDs later in the array have higher priority).",
          "operationId": "getOrganizationBrandingPoliciesPriorities",
          "parameters": [
            {
              "name": "organizationId",
              "in": "path",
              "type": "string",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "brandingPolicyIds": [
                    "123",
                    "456",
                    "789"
                  ]
                }
              }
            }
          },
          "summary": "Return the branding policy IDs of an organization in priority order. IDs are ordered in ascending order of priority (IDs later in the array have higher priority).",
          "tags": [
            "Dashboard branding policies"
          ]
        },
        "put": {
          "description": "Update the priority ordering of an organization's branding policies.",
          "operationId": "updateOrganizationBrandingPoliciesPriorities",
          "parameters": [
            {
              "name": "organizationId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "updateOrganizationBrandingPoliciesPriorities",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "brandingPolicyIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "A list of branding policy IDs arranged in ascending priority order (IDs later in the array have higher priority).",
                    "required": true
                  }
                },
                "example": {
                  "brandingPolicyIds": [
                    "123",
                    "456",
                    "789"
                  ]
                }
              },
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "brandingPolicyIds": [
                    "123",
                    "456",
                    "789"
                  ]
                }
              }
            }
          },
          "summary": "Update the priority ordering of an organization's branding policies.",
          "tags": [
            "Dashboard branding policies"
          ]
        }
      }
    },
    {
      "ruleId": "add-path",
      "message": "`/organizations/{organizationId}/brandingPolicies/{brandingPolicyId}` - Added",
      "messageHtml": "Path added\n      <br>\n      <div class=\"mr-4 badge get\">GET</div> \n      <i>getOrganizationBrandingPolicy</i>\n      <br>\n      <b>Return a branding policy</b>\n      \n      <pre><code>{\n    &quot;brandingPolicyId&quot;: &quot;456&quot;,\n    &quot;name&quot;: &quot;My Branding Policy&quot;,\n    &quot;enabled&quot;: true,\n    &quot;adminSettings&quot;: {\n        &quot;appliesTo&quot;: &quot;All admins of networks...&quot;,\n        &quot;values&quot;: [\n            &quot;N_1234&quot;,\n            &quot;L_5678&quot;\n        ]\n    },\n    &quot;helpSettings&quot;: {\n        &quot;helpTab&quot;: &quot;show&quot;,\n        &quot;getHelpSubtab&quot;: &quot;default or inherit&quot;,\n        &quot;communitySubtab&quot;: &quot;show&quot;,\n        &quot;casesSubtab&quot;: &quot;hide&quot;,\n        &quot;dataProtectionRequestsSubtab&quot;: &quot;default or inherit&quot;,\n        &quot;getHelpSubtabKnowledgeBaseSearch&quot;: &quot;&lt;h1&gt;Some custom HTML content&lt;/h1&gt;&quot;,\n        &quot;universalSearchKnowledgeBaseSearch&quot;: &quot;hide&quot;,\n        &quot;ciscoMerakiProductDocumentation&quot;: &quot;show&quot;,\n        &quot;supportContactInfo&quot;: &quot;show&quot;,\n        &quot;newFeaturesSubtab&quot;: &quot;show&quot;,\n        &quot;firewallInfoSubtab&quot;: &quot;hide&quot;,\n        &quot;apiDocsSubtab&quot;: &quot;default or inherit&quot;,\n        &quot;hardwareReplacementsSubtab&quot;: &quot;hide&quot;,\n        &quot;smForums&quot;: &quot;hide&quot;\n    }\n}</code></pre>\n      \n      <br>\n      <div class=\"mr-4 badge put\">PUT</div> \n      <i>updateOrganizationBrandingPolicy</i>\n      <br>\n      <b>Update a branding policy</b>\n      \n      <pre><code>{\n    &quot;brandingPolicyId&quot;: &quot;456&quot;,\n    &quot;name&quot;: &quot;My Branding Policy&quot;,\n    &quot;enabled&quot;: true,\n    &quot;adminSettings&quot;: {\n        &quot;appliesTo&quot;: &quot;All admins of networks...&quot;,\n        &quot;values&quot;: [\n            &quot;N_1234&quot;,\n            &quot;L_5678&quot;\n        ]\n    },\n    &quot;helpSettings&quot;: {\n        &quot;helpTab&quot;: &quot;show&quot;,\n        &quot;getHelpSubtab&quot;: &quot;default or inherit&quot;,\n        &quot;communitySubtab&quot;: &quot;show&quot;,\n        &quot;casesSubtab&quot;: &quot;hide&quot;,\n        &quot;dataProtectionRequestsSubtab&quot;: &quot;default or inherit&quot;,\n        &quot;getHelpSubtabKnowledgeBaseSearch&quot;: &quot;&lt;h1&gt;Some custom HTML content&lt;/h1&gt;&quot;,\n        &quot;universalSearchKnowledgeBaseSearch&quot;: &quot;hide&quot;,\n        &quot;ciscoMerakiProductDocumentation&quot;: &quot;show&quot;,\n        &quot;supportContactInfo&quot;: &quot;show&quot;,\n        &quot;newFeaturesSubtab&quot;: &quot;show&quot;,\n        &quot;firewallInfoSubtab&quot;: &quot;hide&quot;,\n        &quot;apiDocsSubtab&quot;: &quot;default or inherit&quot;,\n        &quot;hardwareReplacementsSubtab&quot;: &quot;hide&quot;,\n        &quot;smForums&quot;: &quot;hide&quot;\n    }\n}</code></pre>\n      \n      <br>\n      <div class=\"mr-4 badge delete\">DELETE</div> \n      <i>deleteOrganizationBrandingPolicy</i>\n      <br>\n      <b>Delete a branding policy</b>\n      \n      <pre><code></code></pre>\n      ",
      "path": "/organizations/{organizationId}/brandingPolicies/{brandingPolicyId}",
      "type": "infos",
      "name": "Changes",
      "group": "Dashboard branding policies",
      "apiDetails": {
        "get": {
          "description": "Return a branding policy",
          "operationId": "getOrganizationBrandingPolicy",
          "parameters": [
            {
              "name": "organizationId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "brandingPolicyId",
              "in": "path",
              "type": "string",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "brandingPolicyId": "456",
                  "name": "My Branding Policy",
                  "enabled": true,
                  "adminSettings": {
                    "appliesTo": "All admins of networks...",
                    "values": [
                      "N_1234",
                      "L_5678"
                    ]
                  },
                  "helpSettings": {
                    "helpTab": "show",
                    "getHelpSubtab": "default or inherit",
                    "communitySubtab": "show",
                    "casesSubtab": "hide",
                    "dataProtectionRequestsSubtab": "default or inherit",
                    "getHelpSubtabKnowledgeBaseSearch": "<h1>Some custom HTML content</h1>",
                    "universalSearchKnowledgeBaseSearch": "hide",
                    "ciscoMerakiProductDocumentation": "show",
                    "supportContactInfo": "show",
                    "newFeaturesSubtab": "show",
                    "firewallInfoSubtab": "hide",
                    "apiDocsSubtab": "default or inherit",
                    "hardwareReplacementsSubtab": "hide",
                    "smForums": "hide"
                  }
                }
              }
            }
          },
          "summary": "Return a branding policy",
          "tags": [
            "Dashboard branding policies"
          ]
        },
        "put": {
          "description": "Update a branding policy",
          "operationId": "updateOrganizationBrandingPolicy",
          "parameters": [
            {
              "name": "organizationId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "brandingPolicyId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "updateOrganizationBrandingPolicy",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the Dashboard branding policy."
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Boolean indicating whether this policy is enabled."
                  },
                  "adminSettings": {
                    "type": "object",
                    "properties": {
                      "appliesTo": {
                        "type": "string",
                        "enum": [
                          "All organization admins",
                          "All enterprise admins",
                          "All network admins",
                          "All admins of networks...",
                          "All admins of networks tagged...",
                          "Specific admins...",
                          "All admins",
                          "All SAML admins"
                        ],
                        "description": "Which kinds of admins this policy applies to. Can be one of 'All organization admins', 'All enterprise admins', 'All network admins', 'All admins of networks...', 'All admins of networks tagged...', 'Specific admins...', 'All admins' or 'All SAML admins'."
                      },
                      "values": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "    If 'appliesTo' is set to one of 'Specific admins...', 'All admins of networks...' or 'All admins of networks tagged...', then you must specify this 'values' property to provide the set of\n    entities to apply the branding policy to. For 'Specific admins...', specify an array of admin IDs. For 'All admins of\n    networks...', specify an array of network IDs and/or configuration template IDs. For 'All admins of networks tagged...',\n    specify an array of tag names.\n"
                      }
                    },
                    "description": "Settings for describing which kinds of admins this policy applies to."
                  },
                  "helpSettings": {
                    "type": "object",
                    "properties": {
                      "helpTab": {
                        "type": "string",
                        "enum": [
                          "default or inherit",
                          "hide",
                          "show"
                        ],
                        "description": "    The Help tab, under which all support information resides. If this tab is hidden, no other 'Help' branding\n    customizations will be visible. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                      },
                      "getHelpSubtab": {
                        "type": "string",
                        "enum": [
                          "default or inherit",
                          "hide",
                          "show"
                        ],
                        "description": "    The 'Help -> Get Help' subtab on which Cisco Meraki KB, Product Manuals, and Support/Case Information are displayed. Note\n    that if this subtab is hidden, branding customizations for the KB on 'Get help', Cisco Meraki product documentation,\n    and support contact info will not be visible. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                      },
                      "communitySubtab": {
                        "type": "string",
                        "enum": [
                          "default or inherit",
                          "hide",
                          "show"
                        ],
                        "description": "    The 'Help -> Community' subtab which provides a link to Meraki Community. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                      },
                      "casesSubtab": {
                        "type": "string",
                        "enum": [
                          "default or inherit",
                          "hide",
                          "show"
                        ],
                        "description": "    The 'Help -> Cases' Dashboard subtab on which Cisco Meraki support cases for this organization can be managed. Can be one\n    of 'default or inherit', 'hide' or 'show'.\n"
                      },
                      "dataProtectionRequestsSubtab": {
                        "type": "string",
                        "enum": [
                          "default or inherit",
                          "hide",
                          "show"
                        ],
                        "description": "    The 'Help -> Data protection requests' Dashboard subtab on which requests to delete, restrict, or export end-user data can\n    be audited. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                      },
                      "getHelpSubtabKnowledgeBaseSearch": {
                        "type": "string",
                        "description": "    The KB search box which appears on the Help page. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.\n"
                      },
                      "universalSearchKnowledgeBaseSearch": {
                        "type": "string",
                        "enum": [
                          "default or inherit",
                          "hide",
                          "show"
                        ],
                        "description": "    The universal search box always visible on Dashboard will, by default, present results from the Meraki KB. This configures\n    whether these Meraki KB results should be returned. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                      },
                      "ciscoMerakiProductDocumentation": {
                        "type": "string",
                        "description": "    The 'Product Manuals' section of the 'Help -> Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.\n"
                      },
                      "supportContactInfo": {
                        "type": "string",
                        "description": "    The 'Contact Meraki Support' section of the 'Help -> Get Help' subtab. Can be one of 'default or inherit', 'hide', 'show', or a replacement custom HTML string.\n"
                      },
                      "newFeaturesSubtab": {
                        "type": "string",
                        "enum": [
                          "default or inherit",
                          "hide",
                          "show"
                        ],
                        "description": "    The 'Help -> New features' subtab where new Dashboard features are detailed. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                      },
                      "firewallInfoSubtab": {
                        "type": "string",
                        "enum": [
                          "default or inherit",
                          "hide",
                          "show"
                        ],
                        "description": "    The 'Help -> Firewall info' subtab where necessary upstream firewall rules for communication to the Cisco Meraki cloud are\n    listed. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                      },
                      "apiDocsSubtab": {
                        "type": "string",
                        "enum": [
                          "default or inherit",
                          "hide",
                          "show"
                        ],
                        "description": "    The 'Help -> API docs' subtab where a detailed description of the Dashboard API is listed. Can be one of\n    'default or inherit', 'hide' or 'show'.\n"
                      },
                      "hardwareReplacementsSubtab": {
                        "type": "string",
                        "enum": [
                          "default or inherit",
                          "hide",
                          "show"
                        ],
                        "description": "    The 'Help -> Replacement info' subtab where important information regarding device replacements is detailed. Can be one of\n    'default or inherit', 'hide' or 'show'.\n"
                      },
                      "smForums": {
                        "type": "string",
                        "enum": [
                          "default or inherit",
                          "hide",
                          "show"
                        ],
                        "description": "    The 'SM Forums' subtab which links to community-based support for Cisco Meraki Systems Manager. Only configurable for\n    organizations that contain Systems Manager networks. Can be one of 'default or inherit', 'hide' or 'show'.\n"
                      }
                    },
                    "description": "    Settings for describing the modifications to various Help page features. Each property in this object accepts one of\n    'default or inherit' (do not modify functionality), 'hide' (remove the section from Dashboard), or 'show' (always show\n    the section on Dashboard). Some properties in this object also accept custom HTML used to replace the section on\n    Dashboard; see the documentation for each property to see the allowed values.\n"
                  }
                },
                "example": {
                  "brandingPolicyId": "456",
                  "name": "My Branding Policy",
                  "enabled": true,
                  "adminSettings": {
                    "appliesTo": "All admins of networks...",
                    "values": [
                      "N_1234",
                      "L_5678"
                    ]
                  },
                  "helpSettings": {
                    "helpTab": "show",
                    "getHelpSubtab": "default or inherit",
                    "communitySubtab": "show",
                    "casesSubtab": "hide",
                    "dataProtectionRequestsSubtab": "default or inherit",
                    "getHelpSubtabKnowledgeBaseSearch": "<h1>Some custom HTML content</h1>",
                    "universalSearchKnowledgeBaseSearch": "hide",
                    "ciscoMerakiProductDocumentation": "show",
                    "supportContactInfo": "show",
                    "newFeaturesSubtab": "show",
                    "firewallInfoSubtab": "hide",
                    "apiDocsSubtab": "default or inherit",
                    "hardwareReplacementsSubtab": "hide",
                    "smForums": "hide"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "examples": {
                "application/json": {
                  "brandingPolicyId": "456",
                  "name": "My Branding Policy",
                  "enabled": true,
                  "adminSettings": {
                    "appliesTo": "All admins of networks...",
                    "values": [
                      "N_1234",
                      "L_5678"
                    ]
                  },
                  "helpSettings": {
                    "helpTab": "show",
                    "getHelpSubtab": "default or inherit",
                    "communitySubtab": "show",
                    "casesSubtab": "hide",
                    "dataProtectionRequestsSubtab": "default or inherit",
                    "getHelpSubtabKnowledgeBaseSearch": "<h1>Some custom HTML content</h1>",
                    "universalSearchKnowledgeBaseSearch": "hide",
                    "ciscoMerakiProductDocumentation": "show",
                    "supportContactInfo": "show",
                    "newFeaturesSubtab": "show",
                    "firewallInfoSubtab": "hide",
                    "apiDocsSubtab": "default or inherit",
                    "hardwareReplacementsSubtab": "hide",
                    "smForums": "hide"
                  }
                }
              }
            }
          },
          "summary": "Update a branding policy",
          "tags": [
            "Dashboard branding policies"
          ]
        },
        "delete": {
          "description": "Delete a branding policy",
          "operationId": "deleteOrganizationBrandingPolicy",
          "parameters": [
            {
              "name": "organizationId",
              "in": "path",
              "type": "string",
              "required": true
            },
            {
              "name": "brandingPolicyId",
              "in": "path",
              "type": "string",
              "required": true
            }
          ],
          "responses": {
            "204": {
              "description": "Successful operation"
            }
          },
          "summary": "Delete a branding policy",
          "tags": [
            "Dashboard branding policies"
          ]
        }
      }
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/devices/{serial}/camera/analytics/overview",
        "get",
        "parameters",
        "timespan",
        "type"
      ],
      "lhs": "integer",
      "rhs": "number",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/devices/{serial}/camera/analytics/overview",
        "get",
        "parameters",
        "timespan",
        "format"
      ],
      "rhs": "float",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/devices/{serial}/camera/analytics/zones/{zoneId}/history",
        "get",
        "parameters",
        "timespan",
        "type"
      ],
      "lhs": "integer",
      "rhs": "number",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/devices/{serial}/camera/analytics/zones/{zoneId}/history",
        "get",
        "parameters",
        "timespan",
        "format"
      ],
      "rhs": "float",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/devices/{serial}/clients",
        "get",
        "parameters",
        "timespan",
        "type"
      ],
      "lhs": "integer",
      "rhs": "number",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/devices/{serial}/clients",
        "get",
        "parameters",
        "timespan",
        "format"
      ],
      "rhs": "float",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/devices/{serial}/switchPorts",
        "get",
        "responses",
        "200",
        "examples",
        "application/json",
        0,
        "macWhitelist"
      ],
      "lhs": [
        "34:56:fe:ce:8e:b0",
        "34:56:fe:ce:8e:b1"
      ],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/devices/{serial}/switchPorts/{number}",
        "get",
        "responses",
        "200",
        "examples",
        "application/json",
        "macWhitelist"
      ],
      "lhs": [
        "34:56:fe:ce:8e:b0",
        "34:56:fe:ce:8e:b1"
      ],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/devices/{serial}/switchPorts/{number}",
        "put",
        "parameters",
        "updateDeviceSwitchPort",
        "schema",
        "properties",
        "macWhitelist",
        "description"
      ],
      "lhs": "Only devices with MAC addresses specified in this list will have access to this port.  Up to 20 MAC addresses can be defined.",
      "rhs": "Only devices with MAC addresses specified in this list will have access to this port. Up to 20 MAC addresses can be defined. To disable MAC whitelist, set accessPolicyNumber to null.",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/devices/{serial}/switchPorts/{number}",
        "put",
        "parameters",
        "updateDeviceSwitchPort",
        "schema",
        "properties",
        "stickyMacWhitelist",
        "description"
      ],
      "lhs": "The initial list of MAC addresses for sticky Mac whitelist.",
      "rhs": "The initial list of MAC addresses for sticky Mac whitelist. To reset Sticky MAC whitelist, set accessPolicyNumber to null.",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/devices/{serial}/switchPorts/{number}",
        "put",
        "parameters",
        "updateDeviceSwitchPort",
        "schema",
        "example",
        "name"
      ],
      "rhs": "My switch port",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/devices/{serial}/switchPorts/{number}",
        "put",
        "parameters",
        "updateDeviceSwitchPort",
        "schema",
        "example",
        "tags"
      ],
      "rhs": "tag1 tag2",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/devices/{serial}/switchPorts/{number}",
        "put",
        "parameters",
        "updateDeviceSwitchPort",
        "schema",
        "example",
        "enabled"
      ],
      "rhs": true,
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/devices/{serial}/switchPorts/{number}",
        "put",
        "parameters",
        "updateDeviceSwitchPort",
        "schema",
        "example",
        "poeEnabled"
      ],
      "rhs": true,
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/devices/{serial}/switchPorts/{number}",
        "put",
        "parameters",
        "updateDeviceSwitchPort",
        "schema",
        "example",
        "type"
      ],
      "rhs": "access",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/devices/{serial}/switchPorts/{number}",
        "put",
        "parameters",
        "updateDeviceSwitchPort",
        "schema",
        "example",
        "vlan"
      ],
      "rhs": 10,
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/devices/{serial}/switchPorts/{number}",
        "put",
        "parameters",
        "updateDeviceSwitchPort",
        "schema",
        "example",
        "voiceVlan"
      ],
      "rhs": 20,
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/devices/{serial}/switchPorts/{number}",
        "put",
        "parameters",
        "updateDeviceSwitchPort",
        "schema",
        "example",
        "isolationEnabled"
      ],
      "rhs": false,
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/devices/{serial}/switchPorts/{number}",
        "put",
        "parameters",
        "updateDeviceSwitchPort",
        "schema",
        "example",
        "rstpEnabled"
      ],
      "rhs": true,
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/devices/{serial}/switchPorts/{number}",
        "put",
        "parameters",
        "updateDeviceSwitchPort",
        "schema",
        "example",
        "stpGuard"
      ],
      "rhs": "disabled",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/devices/{serial}/switchPorts/{number}",
        "put",
        "parameters",
        "updateDeviceSwitchPort",
        "schema",
        "example",
        "accessPolicyNumber"
      ],
      "rhs": "1234",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/devices/{serial}/switchPorts/{number}",
        "put",
        "parameters",
        "updateDeviceSwitchPort",
        "schema",
        "example",
        "linkNegotiation"
      ],
      "rhs": "Auto negotiate",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/devices/{serial}/switchPorts/{number}",
        "put",
        "parameters",
        "updateDeviceSwitchPort",
        "schema",
        "example",
        "portScheduleId"
      ],
      "rhs": "1234",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/devices/{serial}/switchPorts/{number}",
        "put",
        "parameters",
        "updateDeviceSwitchPort",
        "schema",
        "example",
        "udld"
      ],
      "rhs": "Alert only",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/devices/{serial}/switchPorts/{number}",
        "put",
        "parameters",
        "updateDeviceSwitchPort",
        "schema",
        "example",
        "stickyMacWhitelist"
      ],
      "rhs": [
        "34:56:fe:ce:8e:b0",
        "34:56:fe:ce:8e:b1"
      ],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/devices/{serial}/switchPorts/{number}",
        "put",
        "parameters",
        "updateDeviceSwitchPort",
        "schema",
        "example",
        "stickyMacWhitelistLimit"
      ],
      "rhs": 5,
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/devices/{serial}/switchPorts/{number}",
        "put",
        "responses",
        "200",
        "examples",
        "application/json",
        "macWhitelist"
      ],
      "lhs": [
        "34:56:fe:ce:8e:b0",
        "34:56:fe:ce:8e:b1"
      ],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}",
        "put",
        "parameters",
        "updateNetwork",
        "schema",
        "properties",
        "name",
        "description"
      ],
      "lhs": "The name of the new network",
      "rhs": "The name of the network",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}",
        "put",
        "responses",
        "200",
        "examples",
        "application/json",
        "productTypes"
      ],
      "rhs": [
        "appliance",
        "switch",
        "wireless"
      ],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/airMarshal",
        "get",
        "parameters",
        "timespan",
        "type"
      ],
      "lhs": "integer",
      "rhs": "number",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/airMarshal",
        "get",
        "parameters",
        "timespan",
        "format"
      ],
      "rhs": "float",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/bluetoothClients",
        "get",
        "parameters",
        "timespan",
        "type"
      ],
      "lhs": "integer",
      "rhs": "number",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/bluetoothClients",
        "get",
        "parameters",
        "timespan",
        "description"
      ],
      "lhs": "The timespan, in seconds, used to look back from now for bluetooth clients",
      "rhs": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 7 days. The default is 1 day.",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/bluetoothClients",
        "get",
        "parameters",
        "timespan",
        "format"
      ],
      "rhs": "float",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/bluetoothClients",
        "get",
        "responses",
        "200",
        "examples",
        "application/json",
        0,
        "mac"
      ],
      "lhs": "00:11:22:33:44:55",
      "rhs": "22:33:44:55:66:77",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/bluetoothClients/{bluetoothClientId}",
        "get",
        "responses",
        "200",
        "examples",
        "application/json",
        "mac"
      ],
      "lhs": "00:11:22:33:44:55",
      "rhs": "22:33:44:55:66:77",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/bluetoothSettings",
        "put",
        "parameters",
        "updateNetworkBluetoothSettings",
        "schema",
        "properties",
        "majorMinorAssignmentMode",
        "enum"
      ],
      "rhs": [
        "Unique",
        "Non-unique"
      ],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/cellularFirewallRules",
        "put",
        "parameters",
        "updateNetworkCellularFirewallRules",
        "schema",
        "properties",
        "rules",
        "items",
        "properties",
        "policy",
        "enum"
      ],
      "rhs": [
        "allow",
        "deny"
      ],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/cellularFirewallRules",
        "put",
        "parameters",
        "updateNetworkCellularFirewallRules",
        "schema",
        "properties",
        "rules",
        "items",
        "properties",
        "protocol",
        "enum"
      ],
      "rhs": [
        "tcp",
        "udp",
        "icmp",
        "any"
      ],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/clients",
        "get",
        "parameters",
        "timespan",
        "type"
      ],
      "lhs": "integer",
      "rhs": "number",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/clients",
        "get",
        "parameters",
        "timespan",
        "format"
      ],
      "rhs": "float",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/clients/connectionStats",
        "get",
        "parameters",
        "timespan",
        "type"
      ],
      "lhs": "integer",
      "rhs": "number",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/clients/connectionStats",
        "get",
        "parameters",
        "timespan",
        "format"
      ],
      "rhs": "float",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/clients/latencyStats",
        "get",
        "parameters",
        "timespan",
        "type"
      ],
      "lhs": "integer",
      "rhs": "number",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/clients/latencyStats",
        "get",
        "parameters",
        "timespan",
        "format"
      ],
      "rhs": "float",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/clients/{clientId}/connectionStats",
        "get",
        "parameters",
        "timespan",
        "type"
      ],
      "lhs": "integer",
      "rhs": "number",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/clients/{clientId}/connectionStats",
        "get",
        "parameters",
        "timespan",
        "format"
      ],
      "rhs": "float",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/clients/{clientId}/latencyHistory",
        "get",
        "parameters",
        "timespan",
        "type"
      ],
      "lhs": "integer",
      "rhs": "number",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/clients/{clientId}/latencyHistory",
        "get",
        "parameters",
        "timespan",
        "format"
      ],
      "rhs": "float",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/clients/{clientId}/latencyStats",
        "get",
        "parameters",
        "timespan",
        "type"
      ],
      "lhs": "integer",
      "rhs": "number",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/clients/{clientId}/latencyStats",
        "get",
        "parameters",
        "timespan",
        "format"
      ],
      "rhs": "float",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/clients/{clientId}/securityEvents",
        "get",
        "parameters",
        "timespan",
        "type"
      ],
      "lhs": "integer",
      "rhs": "number",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/clients/{clientId}/securityEvents",
        "get",
        "parameters",
        "timespan",
        "format"
      ],
      "rhs": "float",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/clients/{clientId}/splashAuthorizationStatus",
        "get",
        "description"
      ],
      "lhs": "Return the splash authorization for a client, for each SSID they've associated with through splash. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
      "rhs": "Return the splash authorization for a client, for each SSID they've associated with through splash. Only enabled SSIDs with Click-through splash enabled will be included. Clients can be identified by a client key or either the MAC or IP depending on whether the network uses Track-by-IP.",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/clients/{clientId}/splashAuthorizationStatus",
        "put",
        "parameters",
        "updateNetworkClientSplashAuthorizationStatus",
        "schema",
        "properties",
        "ssids",
        "description"
      ],
      "lhs": "The target SSIDs. For each SSID where isAuthorized is true, the expiration time will automatically be set according to the SSID's splash frequency.",
      "rhs": "The target SSIDs. Each SSID must be enabled and must have Click-through splash enabled. For each SSID where isAuthorized is true, the expiration time will automatically be set according to the SSID's splash frequency.",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/connectionStats",
        "get",
        "parameters",
        "timespan",
        "type"
      ],
      "lhs": "integer",
      "rhs": "number",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/connectionStats",
        "get",
        "parameters",
        "timespan",
        "format"
      ],
      "rhs": "float",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/devices/connectionStats",
        "get",
        "parameters",
        "timespan",
        "type"
      ],
      "lhs": "integer",
      "rhs": "number",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/devices/connectionStats",
        "get",
        "parameters",
        "timespan",
        "format"
      ],
      "rhs": "float",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/devices/latencyStats",
        "get",
        "parameters",
        "timespan",
        "type"
      ],
      "lhs": "integer",
      "rhs": "number",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/devices/latencyStats",
        "get",
        "parameters",
        "timespan",
        "format"
      ],
      "rhs": "float",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/devices/{serial}",
        "put",
        "responses",
        "200",
        "examples",
        "application/json",
        "floorPlanId"
      ],
      "rhs": "g_1234567",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/devices/{serial}/connectionStats",
        "get",
        "parameters",
        "timespan",
        "type"
      ],
      "lhs": "integer",
      "rhs": "number",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/devices/{serial}/connectionStats",
        "get",
        "parameters",
        "timespan",
        "format"
      ],
      "rhs": "float",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/devices/{serial}/latencyStats",
        "get",
        "parameters",
        "timespan",
        "type"
      ],
      "lhs": "integer",
      "rhs": "number",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/devices/{serial}/latencyStats",
        "get",
        "parameters",
        "timespan",
        "format"
      ],
      "rhs": "float",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/devices/{serial}/lossAndLatencyHistory",
        "get",
        "parameters",
        "timespan",
        "type"
      ],
      "lhs": "integer",
      "rhs": "number",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/devices/{serial}/lossAndLatencyHistory",
        "get",
        "parameters",
        "timespan",
        "format"
      ],
      "rhs": "float",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/devices/{serial}/lossAndLatencyHistory",
        "get",
        "parameters",
        "uplink",
        "enum"
      ],
      "rhs": [
        "wan1",
        "wan2",
        "cellular"
      ],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/devices/{serial}/wireless/radioSettings",
        "put",
        "parameters",
        "updateNetworkDeviceWirelessRadioSettings",
        "schema",
        "properties",
        "rfProfileId",
        "description"
      ],
      "lhs": "The ID of an RF profile to assign to the device. If the value of this parameter is null, the appropriate basic RF profile\n(indoor or outdoor) will be assigned to the device. Assigning an RF profile will clear ALL manually configured overrides\non the device (channel width, channel, power).\n",
      "rhs": "    The ID of an RF profile to assign to the device. If the value of this parameter is null, the appropriate basic RF profile\n    (indoor or outdoor) will be assigned to the device. Assigning an RF profile will clear ALL manually configured overrides\n    on the device (channel width, channel, power).\n",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/failedConnections",
        "get",
        "parameters",
        "timespan",
        "type"
      ],
      "lhs": "integer",
      "rhs": "number",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/failedConnections",
        "get",
        "parameters",
        "timespan",
        "format"
      ],
      "rhs": "float",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/firewalledServices",
        "get",
        "responses",
        "200",
        "examples",
        "application/json"
      ],
      "lhs": {
        "service": "web",
        "access": "restricted",
        "allowedIps": [
          "123.123.123.1"
        ]
      },
      "rhs": [
        {
          "service": "web",
          "access": "restricted",
          "allowedIps": [
            "123.123.123.1"
          ]
        }
      ],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/l3FirewallRules",
        "put",
        "parameters",
        "updateNetworkL3FirewallRules",
        "schema",
        "properties",
        "rules",
        "items",
        "properties",
        "policy",
        "enum"
      ],
      "rhs": [
        "allow",
        "deny"
      ],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/l3FirewallRules",
        "put",
        "parameters",
        "updateNetworkL3FirewallRules",
        "schema",
        "properties",
        "rules",
        "items",
        "properties",
        "protocol",
        "enum"
      ],
      "rhs": [
        "tcp",
        "udp",
        "icmp",
        "any"
      ],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/latencyStats",
        "get",
        "parameters",
        "timespan",
        "type"
      ],
      "lhs": "integer",
      "rhs": "number",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/latencyStats",
        "get",
        "parameters",
        "timespan",
        "format"
      ],
      "rhs": "float",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/securityEvents",
        "get",
        "parameters",
        "timespan",
        "type"
      ],
      "lhs": "integer",
      "rhs": "number",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/securityEvents",
        "get",
        "parameters",
        "timespan",
        "format"
      ],
      "rhs": "float",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/siteToSiteVpn",
        "put",
        "parameters",
        "updateNetworkSiteToSiteVpn",
        "schema",
        "properties",
        "mode",
        "description"
      ],
      "lhs": "The site-to-site VPN mode: hub, spoke, or none",
      "rhs": "The site-to-site VPN mode. Can be one of 'none', 'spoke' or 'hub'",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/siteToSiteVpn",
        "put",
        "parameters",
        "updateNetworkSiteToSiteVpn",
        "schema",
        "properties",
        "mode",
        "enum"
      ],
      "rhs": [
        "none",
        "spoke",
        "hub"
      ],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/sm/devices",
        "get",
        "parameters",
        "batchToken",
        "description"
      ],
      "lhs": "On networks with more than 1000 devices, the device list will be limited to 1000 devices per query.\n    If there are more devices to be seen, a batch token will be returned as a part of the device list. To see the remainder of\n    the devices, pass in the batchToken as a parameter in the next request. Requests made with the batchToken do not require\n    additional parameters as the batchToken includes the parameters passed in with the original request. Additional parameters\n    passed in with the batchToken will be ignored.",
      "rhs": "If the network has more devices than the batch size, a batch token will be returned\n    as a part of the device list. To see the remainder of the devices, pass in the batchToken as a parameter in the next request.\n    Requests made with the batchToken do not require additional parameters as the batchToken includes the parameters passed in\n    with the original request. Additional parameters passed in with the batchToken will be ignored.",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/split",
        "post",
        "responses",
        "200",
        "examples",
        "application/json",
        "resultingNetworks",
        0,
        "productTypes"
      ],
      "rhs": [
        "switch"
      ],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/split",
        "post",
        "responses",
        "200",
        "examples",
        "application/json",
        "resultingNetworks",
        1,
        "productTypes"
      ],
      "rhs": [
        "wireless"
      ],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/ssids/{number}",
        "put",
        "parameters",
        "updateNetworkSsid",
        "schema",
        "properties",
        "name",
        "description"
      ],
      "lhs": "The name of an SSID",
      "rhs": "The name of the SSID",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/ssids/{number}",
        "put",
        "parameters",
        "updateNetworkSsid",
        "schema",
        "properties",
        "enabled",
        "description"
      ],
      "lhs": "Whether or not an SSID is enabled",
      "rhs": "Whether or not the SSID is enabled",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/ssids/{number}",
        "put",
        "parameters",
        "updateNetworkSsid",
        "schema",
        "properties",
        "encryptionMode",
        "enum",
        0
      ],
      "lhs": "wpa",
      "rhs": "wep",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/ssids/{number}",
        "put",
        "parameters",
        "updateNetworkSsid",
        "schema",
        "properties",
        "encryptionMode",
        "enum",
        1
      ],
      "lhs": "wep",
      "rhs": "wpa",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "A",
      "path": [
        "paths",
        "/networks/{networkId}/ssids/{number}",
        "put",
        "parameters",
        "updateNetworkSsid",
        "schema",
        "properties",
        "encryptionMode",
        "enum"
      ],
      "index": 2,
      "item": {
        "kind": "D",
        "lhs": "wpa-eap"
      },
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/ssids/{number}",
        "put",
        "parameters",
        "updateNetworkSsid",
        "schema",
        "properties",
        "encryptionMode",
        "description"
      ],
      "lhs": "The psk encryption mode for the SSID ('wpa', 'wep' or 'wpa-eap')",
      "rhs": "The psk encryption mode for the SSID ('wep' or 'wpa'). This param is only valid if the authMode is 'psk'",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/ssids/{number}",
        "put",
        "parameters",
        "updateNetworkSsid",
        "schema",
        "properties",
        "ipAssignmentMode",
        "enum"
      ],
      "lhs": [
        "NAT mode",
        "Bridge mode",
        "Layer 3 roaming",
        "Layer 3 roaming with a concentrator",
        "VPN"
      ],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/ssids/{number}",
        "put",
        "parameters",
        "updateNetworkSsid",
        "schema",
        "properties",
        "useVlanTagging",
        "description"
      ],
      "lhs": "Direct trafic to use specific VLANs. This param is only valid with 'Bridge mode' and 'Layer 3 roaming'",
      "rhs": "Whether or not traffic should be directed to use specific VLANs. This param is only valid if the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/ssids/{number}",
        "put",
        "parameters",
        "updateNetworkSsid",
        "schema",
        "properties",
        "concentratorNetworkId",
        "description"
      ],
      "lhs": "The concentrator to use for 'Layer 3 roaming with a concentrator' or 'VPN'.",
      "rhs": "The concentrator to use when the ipAssignmentMode is 'Layer 3 roaming with a concentrator' or 'VPN'.",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/ssids/{number}",
        "put",
        "parameters",
        "updateNetworkSsid",
        "schema",
        "properties",
        "vlanId",
        "description"
      ],
      "lhs": "The VLAN ID used for VLAN tagging. This param is only valid with 'Layer 3 roaming with a concentrator' and 'VPN'",
      "rhs": "The VLAN ID used for VLAN tagging. This param is only valid when the ipAssignmentMode is 'Layer 3 roaming with a concentrator' or 'VPN'",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/ssids/{number}",
        "put",
        "parameters",
        "updateNetworkSsid",
        "schema",
        "properties",
        "defaultVlanId",
        "description"
      ],
      "lhs": "The default VLAN ID used for 'all other APs'. This param is only valid with 'Bridge mode' and 'Layer 3 roaming'",
      "rhs": "The default VLAN ID used for 'all other APs'. This param is only valid when the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/ssids/{number}",
        "put",
        "parameters",
        "updateNetworkSsid",
        "schema",
        "properties",
        "apTagsAndVlanIds",
        "description"
      ],
      "lhs": "The list of tags and VLAN IDs used for VLAN tagging. This param is only valid with 'Bridge mode', 'Layer 3 roaming'",
      "rhs": "The list of tags and VLAN IDs used for VLAN tagging. This param is only valid when the ipAssignmentMode is 'Bridge mode' or 'Layer 3 roaming'",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/ssids/{number}",
        "put",
        "parameters",
        "updateNetworkSsid",
        "schema",
        "properties",
        "bandSelection",
        "enum"
      ],
      "lhs": [
        "Dual band operation",
        "5 GHz band only",
        "Dual band operation with Band Steering"
      ],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/ssids/{number}",
        "put",
        "parameters",
        "updateNetworkSsid",
        "schema",
        "properties",
        "lanIsolationEnabled",
        "description"
      ],
      "lhs": "Boolean indicating whether Layer 2 LAN isolation should be enabled or disabled. Only configurable on SSIDs in bridge mode.",
      "rhs": "Boolean indicating whether Layer 2 LAN isolation should be enabled or disabled. Only configurable when ipAssignmentMode is 'Bridge mode'.",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/ssids/{number}/l3FirewallRules",
        "put",
        "parameters",
        "updateNetworkSsidL3FirewallRules",
        "schema",
        "properties",
        "rules",
        "items",
        "properties",
        "policy",
        "enum"
      ],
      "rhs": [
        "allow",
        "deny"
      ],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/ssids/{number}/l3FirewallRules",
        "put",
        "parameters",
        "updateNetworkSsidL3FirewallRules",
        "schema",
        "properties",
        "rules",
        "items",
        "properties",
        "protocol",
        "enum"
      ],
      "rhs": [
        "tcp",
        "udp",
        "icmp",
        "any"
      ],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/staticRoutes",
        "get",
        "description"
      ],
      "lhs": "List the static routes for this network",
      "rhs": "List the static routes for an MX or teleworker network",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/staticRoutes",
        "get",
        "tags",
        0
      ],
      "lhs": "Static routes",
      "rhs": "MX static routes",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/staticRoutes",
        "post",
        "description"
      ],
      "lhs": "Add a static route",
      "rhs": "Add a static route for an MX or teleworker network",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/staticRoutes",
        "post",
        "tags",
        0
      ],
      "lhs": "Static routes",
      "rhs": "MX static routes",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/staticRoutes/{srId}",
        "get",
        "description"
      ],
      "lhs": "Return a static route",
      "rhs": "Return a static route for an MX or teleworker network",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/staticRoutes/{srId}",
        "get",
        "tags",
        0
      ],
      "lhs": "Static routes",
      "rhs": "MX static routes",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/staticRoutes/{srId}",
        "put",
        "description"
      ],
      "lhs": "Update a static route",
      "rhs": "Update a static route for an MX or teleworker network",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/staticRoutes/{srId}",
        "put",
        "tags",
        0
      ],
      "lhs": "Static routes",
      "rhs": "MX static routes",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/staticRoutes/{srId}",
        "delete",
        "description"
      ],
      "lhs": "Delete a static route from a network",
      "rhs": "Delete a static route from an MX or teleworker network",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/staticRoutes/{srId}",
        "delete",
        "tags",
        0
      ],
      "lhs": "Static routes",
      "rhs": "MX static routes",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/switch/settings",
        "put",
        "parameters",
        "updateNetworkSwitchSettings",
        "schema",
        "example",
        "vlan"
      ],
      "rhs": 100,
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/switch/settings",
        "put",
        "responses",
        "200",
        "examples",
        "application/json",
        "vlan"
      ],
      "rhs": 100,
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/traffic",
        "get",
        "description"
      ],
      "lhs": "The traffic analysis data for this network.\n<a href=\"https://documentation.meraki.com/MR/Monitoring_and_Reporting/Hostname_Visibility\">Traffic Analysis with Hostname Visibility</a> must be enabled on the network.\n",
      "rhs": "    The traffic analysis data for this network.\n    <a href=\"https://documentation.meraki.com/MR/Monitoring_and_Reporting/Hostname_Visibility\">Traffic Analysis with Hostname Visibility</a> must be enabled on the network.\n",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/traffic",
        "get",
        "parameters",
        "timespan",
        "type"
      ],
      "lhs": "string",
      "rhs": "number",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/networks/{networkId}/traffic",
        "get",
        "parameters",
        "timespan",
        "required"
      ],
      "lhs": true,
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/traffic",
        "get",
        "parameters",
        "timespan",
        "description"
      ],
      "lhs": "The timespan for the data. Must be an integer representing a duration in seconds between two hours and one month. (Mandatory.)",
      "rhs": "The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 30 days.",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/traffic",
        "get",
        "parameters",
        "timespan",
        "format"
      ],
      "rhs": "float",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/traffic",
        "get",
        "parameters",
        "timespan",
        "x-example"
      ],
      "rhs": 604800,
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/traffic",
        "get",
        "parameters",
        "deviceType",
        "description"
      ],
      "lhs": "Filter the data by device type: combined (default), wireless, switch, appliance. When using combined, for each rule the data will come from the device type with the most usage.",
      "rhs": "    Filter the data by device type: combined (default), wireless, switch, appliance.\n    When using combined, for each rule the data will come from the device type with the most usage.\n",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/uplinkSettings",
        "put",
        "parameters",
        "updateNetworkUplinkSettings",
        "schema",
        "properties",
        "bandwidthLimits",
        "description"
      ],
      "lhs": "A mapping of uplinks ('wan1', 'wan2' or 'cellular') to their bandwidth settings (be sure to check which uplinks are supported for your network). Bandwidth setting objects have the following structure",
      "rhs": "A mapping of uplinks to their bandwidth settings (be sure to check which uplinks are supported for your network)",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/vlans/{vlanId}",
        "put",
        "parameters",
        "updateNetworkVlan",
        "schema",
        "properties",
        "dhcpHandling",
        "description"
      ],
      "lhs": "The appliance's handling of DHCP requests on this VLAN. One of: \"Run a DHCP server\", \"Relay DHCP to another server\", or \"Do not respond to DHCP requests\"",
      "rhs": "The appliance's handling of DHCP requests on this VLAN. One of: 'Run a DHCP server', 'Relay DHCP to another server' or 'Do not respond to DHCP requests'",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/vlans/{vlanId}",
        "put",
        "parameters",
        "updateNetworkVlan",
        "schema",
        "properties",
        "dhcpHandling",
        "enum"
      ],
      "rhs": [
        "Run a DHCP server",
        "Relay DHCP to another server",
        "Do not respond to DHCP requests"
      ],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/vlans/{vlanId}",
        "put",
        "parameters",
        "updateNetworkVlan",
        "schema",
        "properties",
        "dhcpLeaseTime",
        "description"
      ],
      "lhs": "The term of DHCP leases if the appliance is running a DHCP server on this VLAN. One of: \"30 minutes\", \"1 hour\", \"4 hours\", \"12 hours\", \"1 day\", \"1 week\".",
      "rhs": "The term of DHCP leases if the appliance is running a DHCP server on this VLAN. One of: '30 minutes', '1 hour', '4 hours', '12 hours', '1 day' or '1 week'",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/vlans/{vlanId}",
        "put",
        "parameters",
        "updateNetworkVlan",
        "schema",
        "properties",
        "dhcpLeaseTime",
        "enum"
      ],
      "rhs": [
        "30 minutes",
        "1 hour",
        "4 hours",
        "12 hours",
        "1 day",
        "1 week"
      ],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/vlans/{vlanId}",
        "put",
        "parameters",
        "updateNetworkVlan",
        "schema",
        "properties",
        "dhcpOptions",
        "items",
        "properties",
        "type",
        "description"
      ],
      "lhs": "The type for the DHCP option. One of: \"text\", \"ip\", \"hex\", or \"integer\".",
      "rhs": "The type for the DHCP option. One of: 'text', 'ip', 'hex' or 'integer'",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/vlans/{vlanId}",
        "put",
        "parameters",
        "updateNetworkVlan",
        "schema",
        "properties",
        "dhcpOptions",
        "items",
        "properties",
        "type",
        "enum"
      ],
      "rhs": [
        "text",
        "ip",
        "hex",
        "integer"
      ],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/networks/{networkId}/wireless/rfProfiles",
        "get",
        "parameters",
        "includeTemplateProfiles",
        "description"
      ],
      "lhs": "      If the network is bound to a template, this parameter controls whether or not the non-basic RF profiles defined on the template\n      should be included in the response alongside the non-basic profiles defined on the bound network. Defaults to false.\n",
      "rhs": "    If the network is bound to a template, this parameter controls whether or not the non-basic RF profiles defined on the template\n    should be included in the response alongside the non-basic profiles defined on the bound network. Defaults to false.\n",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/networks/{networkId}/wireless/rfProfiles/{rfProfileId}",
        "put",
        "parameters",
        "updateNetworkWirelessRfProfile",
        "schema",
        "properties",
        "twoFourGhzSettings",
        "properties",
        "minBitrate",
        "format"
      ],
      "rhs": "float",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations",
        "post",
        "responses",
        "201",
        "examples",
        "application/json",
        "url"
      ],
      "rhs": "https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}",
        "put",
        "responses",
        "200",
        "examples",
        "application/json",
        "url"
      ],
      "rhs": "https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/organizations/{organizationId}/admins",
        "post",
        "parameters",
        "createOrganizationAdmin",
        "schema",
        "properties",
        "orgAccess",
        "description"
      ],
      "lhs": "The privilege of the dashboard administrator on the organization (full, read-only, none)",
      "rhs": "The privilege of the dashboard administrator on the organization. Can be one of 'full', 'read-only', 'enterprise' or 'none'",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/admins",
        "post",
        "parameters",
        "createOrganizationAdmin",
        "schema",
        "properties",
        "orgAccess",
        "enum"
      ],
      "rhs": [
        "full",
        "read-only",
        "enterprise",
        "none"
      ],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/organizations/{organizationId}/admins/{id}",
        "put",
        "parameters",
        "updateOrganizationAdmin",
        "schema",
        "properties",
        "orgAccess",
        "description"
      ],
      "lhs": "The privilege of the dashboard administrator on the organization (full, read-only, none)",
      "rhs": "The privilege of the dashboard administrator on the organization. Can be one of 'full', 'read-only', 'enterprise' or 'none'",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/admins/{id}",
        "put",
        "parameters",
        "updateOrganizationAdmin",
        "schema",
        "properties",
        "orgAccess",
        "enum"
      ],
      "rhs": [
        "full",
        "read-only",
        "enterprise",
        "none"
      ],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/organizations/{organizationId}/apiRequests",
        "get",
        "parameters",
        "timespan",
        "type"
      ],
      "lhs": "integer",
      "rhs": "number",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/apiRequests",
        "get",
        "parameters",
        "timespan",
        "format"
      ],
      "rhs": "float",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "D",
      "path": [
        "paths",
        "/organizations/{organizationId}/claim",
        "post",
        "parameters",
        "claimOrganization",
        "schema",
        "properties",
        "licenses",
        "items",
        "properties",
        "mode",
        "required"
      ],
      "lhs": true,
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/clone",
        "post",
        "responses",
        "201",
        "examples",
        "application/json",
        "url"
      ],
      "rhs": "https://dashboard.meraki.com/o/VjjsAd/manage/organization/overview",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/networks",
        "post",
        "responses",
        "201",
        "examples",
        "application/json",
        "productTypes"
      ],
      "rhs": [
        "appliance",
        "switch",
        "wireless"
      ],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/networks/combine",
        "post",
        "responses",
        "200",
        "examples",
        "application/json",
        "resultingNetwork",
        "productTypes"
      ],
      "rhs": [
        "appliance",
        "switch",
        "wireless"
      ],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/organizations/{organizationId}/securityEvents",
        "get",
        "parameters",
        "timespan",
        "type"
      ],
      "lhs": "integer",
      "rhs": "number",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/securityEvents",
        "get",
        "parameters",
        "timespan",
        "format"
      ],
      "rhs": "float",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/organizations/{organizationId}/uplinksLossAndLatency",
        "get",
        "parameters",
        "timespan",
        "type"
      ],
      "lhs": "integer",
      "rhs": "number",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/uplinksLossAndLatency",
        "get",
        "parameters",
        "timespan",
        "format"
      ],
      "rhs": "float",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/uplinksLossAndLatency",
        "get",
        "parameters",
        "uplink",
        "enum"
      ],
      "rhs": [
        "wan1",
        "wan2",
        "cellular"
      ],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/vpnFirewallRules",
        "put",
        "parameters",
        "updateOrganizationVpnFirewallRules",
        "schema",
        "properties",
        "rules",
        "items",
        "properties",
        "policy",
        "enum"
      ],
      "rhs": [
        "allow",
        "deny"
      ],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/vpnFirewallRules",
        "put",
        "parameters",
        "updateOrganizationVpnFirewallRules",
        "schema",
        "properties",
        "rules",
        "items",
        "properties",
        "protocol",
        "enum"
      ],
      "rhs": [
        "tcp",
        "udp",
        "icmp",
        "any"
      ],
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "paths",
        "/organizations/{organizationId}/webhookLogs",
        "get",
        "parameters",
        "timespan",
        "type"
      ],
      "lhs": "integer",
      "rhs": "number",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "N",
      "path": [
        "paths",
        "/organizations/{organizationId}/webhookLogs",
        "get",
        "parameters",
        "timespan",
        "format"
      ],
      "rhs": "float",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        8,
        "name"
      ],
      "lhs": "Content filtering categories",
      "rhs": "Connectivity monitoring destinations",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        9,
        "name"
      ],
      "lhs": "Content filtering rules",
      "rhs": "Content filtering categories",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        10,
        "name"
      ],
      "lhs": "Devices",
      "rhs": "Content filtering rules",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        11,
        "name"
      ],
      "lhs": "Firewalled services",
      "rhs": "Dashboard branding policies",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        12,
        "name"
      ],
      "lhs": "Group policies",
      "rhs": "Devices",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        13,
        "name"
      ],
      "lhs": "HTTP servers",
      "rhs": "Events",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        14,
        "name"
      ],
      "lhs": "Intrusion settings",
      "rhs": "Firewalled services",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        15,
        "name"
      ],
      "lhs": "MR L3 firewall",
      "rhs": "Floorplans",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        16,
        "name"
      ],
      "lhs": "MV Sense",
      "rhs": "Group policies",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        17,
        "name"
      ],
      "lhs": "MX 1:1 NAT rules",
      "rhs": "HTTP servers",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        18,
        "name"
      ],
      "lhs": "MX 1:Many NAT rules",
      "rhs": "Intrusion settings",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        19,
        "name"
      ],
      "lhs": "MX L3 firewall",
      "rhs": "MR L3 firewall",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        20,
        "name"
      ],
      "lhs": "MX L7 application categories",
      "rhs": "MV Sense",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        21,
        "name"
      ],
      "lhs": "MX L7 firewall",
      "rhs": "MX 1:1 NAT rules",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        22,
        "name"
      ],
      "lhs": "MX VLAN ports",
      "rhs": "MX 1:Many NAT rules",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        23,
        "name"
      ],
      "lhs": "MX VPN firewall",
      "rhs": "MX L3 firewall",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        24,
        "name"
      ],
      "lhs": "MX cellular firewall",
      "rhs": "MX L7 application categories",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        25,
        "name"
      ],
      "lhs": "MX port forwarding rules",
      "rhs": "MX L7 firewall",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        26,
        "name"
      ],
      "lhs": "MX warm spare settings",
      "rhs": "MX VLAN ports",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        27,
        "name"
      ],
      "lhs": "Malware settings",
      "rhs": "MX VPN firewall",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        28,
        "name"
      ],
      "lhs": "Management interface settings",
      "rhs": "MX cellular firewall",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        29,
        "name"
      ],
      "lhs": "Meraki auth users",
      "rhs": "MX port forwarding rules",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        30,
        "name"
      ],
      "lhs": "Named tag scope",
      "rhs": "MX static routes",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        31,
        "name"
      ],
      "lhs": "NetFlow settings",
      "rhs": "MX warm spare settings",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        32,
        "name"
      ],
      "lhs": "Networks",
      "rhs": "Malware settings",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        33,
        "name"
      ],
      "lhs": "OpenAPI Spec",
      "rhs": "Management interface settings",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        34,
        "name"
      ],
      "lhs": "Organizations",
      "rhs": "Meraki auth users",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        35,
        "name"
      ],
      "lhs": "PII",
      "rhs": "Named tag scope",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        36,
        "name"
      ],
      "lhs": "Radio settings",
      "rhs": "NetFlow settings",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        37,
        "name"
      ],
      "lhs": "SAML roles",
      "rhs": "Networks",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        38,
        "name"
      ],
      "lhs": "SM",
      "rhs": "OpenAPI Spec",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        39,
        "name"
      ],
      "lhs": "SNMP settings",
      "rhs": "Organizations",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        40,
        "name"
      ],
      "lhs": "SSIDs",
      "rhs": "PII",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        41,
        "name"
      ],
      "lhs": "Security events",
      "rhs": "Radio settings",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        42,
        "name"
      ],
      "lhs": "Splash login attempts",
      "rhs": "SAML roles",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        43,
        "name"
      ],
      "lhs": "Splash settings",
      "rhs": "SM",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        44,
        "name"
      ],
      "lhs": "Static routes",
      "rhs": "SNMP settings",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        45,
        "name"
      ],
      "lhs": "Switch port schedules",
      "rhs": "SSIDs",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        46,
        "name"
      ],
      "lhs": "Switch ports",
      "rhs": "Security events",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        47,
        "name"
      ],
      "lhs": "Switch profiles",
      "rhs": "Splash login attempts",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        48,
        "name"
      ],
      "lhs": "Switch settings",
      "rhs": "Splash settings",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        49,
        "name"
      ],
      "lhs": "Switch stacks",
      "rhs": "Switch port schedules",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        50,
        "name"
      ],
      "lhs": "Syslog servers",
      "rhs": "Switch ports",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        51,
        "name"
      ],
      "lhs": "Traffic analysis settings",
      "rhs": "Switch profiles",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        52,
        "name"
      ],
      "lhs": "Traffic shaping",
      "rhs": "Switch settings",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        53,
        "name"
      ],
      "lhs": "Uplink settings",
      "rhs": "Switch stacks",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        54,
        "name"
      ],
      "lhs": "VLANs",
      "rhs": "Syslog servers",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        55,
        "name"
      ],
      "lhs": "Webhook logs",
      "rhs": "Traffic analysis settings",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "E",
      "path": [
        "tags",
        56,
        "name"
      ],
      "lhs": "Wireless health",
      "rhs": "Traffic shaping",
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "A",
      "path": [
        "tags"
      ],
      "index": 57,
      "item": {
        "kind": "N",
        "rhs": {
          "name": "Uplink settings"
        }
      },
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "A",
      "path": [
        "tags"
      ],
      "index": 58,
      "item": {
        "kind": "N",
        "rhs": {
          "name": "VLANs"
        }
      },
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "A",
      "path": [
        "tags"
      ],
      "index": 59,
      "item": {
        "kind": "N",
        "rhs": {
          "name": "Webhook logs"
        }
      },
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "A",
      "path": [
        "tags"
      ],
      "index": 60,
      "item": {
        "kind": "N",
        "rhs": {
          "name": "Wireless health"
        }
      },
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "kind": "A",
      "path": [
        "tags"
      ],
      "index": 61,
      "item": {
        "kind": "N",
        "rhs": {
          "name": "Wireless settings"
        }
      },
      "type": "unmatchDiffs",
      "name": "UnmatchDiffs"
    },
    {
      "ruleId": "rename-path",
      "message": "Path ``/networks/{networkID}/switchStacks/{switchStackId}/remove`` renamed to `/networks/{networkId}/switchStacks/{switchStackId}/remove`",
      "messageHtml": "Path <code>`/networks/{networkID}/switchStacks/{switchStackId}/remove`</code> renamed to <code>/networks/{networkId}/switchStacks/{switchStackId}/remove</code>",
      "path": "`/networks/{networkID}/switchStacks/{switchStackId}/remove`",
      "newPath": "/networks/{networkId}/switchStacks/{switchStackId}/remove",
      "type": "renamed",
      "name": "Renamed"
    }
  ]
}